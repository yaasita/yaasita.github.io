<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2014 on # cd ~yaasita</title>
    <link>https://yaasita.github.io/archives/2014/</link>
    <description>Recent content in 2014 on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 21 Dec 2014 04:50:00 +0900</lastBuildDate>
    
	<atom:link href="https://yaasita.github.io/archives/2014/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vim-adventures</title>
      <link>https://yaasita.github.io/2014/12/21/vim-adventures/</link>
      <pubDate>Sun, 21 Dec 2014 04:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/12/21/vim-adventures/</guid>
      <description>vim-adventures 攻略情報 level1  海のところはカーソルを右端に置いてjで下に行けば越えられる  j,k移動は現在行の位置と同じ縦位置に移動しようとするということがわかればOKそう    level2  w,bとかとって適当に宝箱取る 30秒以内に島を渡ってxキーとる スタート地点付近の宝箱をBキーで取る  level3  なんか間違った英文をxキーを使って削除して鍵GET その後スタート地点付近にある宝箱取って終わり  https://github.com/yaasita/bpsvim/wiki/vim-adventures
http://vim-adventures.com/</description>
    </item>
    
    <item>
      <title>ユニコード文字の顔文字一覧</title>
      <link>https://yaasita.github.io/2014/12/20/kaomoji/</link>
      <pubDate>Sat, 20 Dec 2014 14:47:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/12/20/kaomoji/</guid>
      <description>http://matome.naver.jp/odai/2139210846915545101</description>
    </item>
    
    <item>
      <title>picasaウェブアルバム </title>
      <link>https://yaasita.github.io/2014/11/15/picasa-web/</link>
      <pubDate>Sat, 15 Nov 2014 23:57:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/11/15/picasa-web/</guid>
      <description>こっから入れる
https://picasaweb.google.com/home?hl=ja</description>
    </item>
    
    <item>
      <title>chromeのキャッシュから画像引っ張って保存する</title>
      <link>https://yaasita.github.io/2014/11/15/chrome-chache-jpg/</link>
      <pubDate>Sat, 15 Nov 2014 22:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/11/15/chrome-chache-jpg/</guid>
      <description>キャッシュはC:\Users\hogeuser\AppData\Local\Google\Chrome\User Data\Default\Cacheに保存されている
そっから引っ張ってきてLinuxとかで以下のコマンドで変換する
file f_000* | grep JPEG | perl -F: -nlae &#39;print $F[0]&#39; | xargs -i mv {} {}.jpg  Twitterの画像引っ張って来るためにやった
本当はキャッシュを削除して該当のページだけを見てから保存する方法がいいのかも</description>
    </item>
    
    <item>
      <title>Onenoteでオートコレクトの設定</title>
      <link>https://yaasita.github.io/2014/10/30/onenote-autocorrect/</link>
      <pubDate>Thu, 30 Oct 2014 00:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/30/onenote-autocorrect/</guid>
      <description>ファイル⇒オプション開いて
文章校正⇒オートコレクトのオプション
https://yaasita.tumblr.com/post/101260507767  https://yaasita.tumblr.com/post/101260507767</description>
    </item>
    
    <item>
      <title>フリーのPDF編集ソフト</title>
      <link>https://yaasita.github.io/2014/10/26/master-pdf-editor/</link>
      <pubDate>Sun, 26 Oct 2014 05:49:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/26/master-pdf-editor/</guid>
      <description>Master PDF Editor
http://code-industry.net/get.pdfeditor.php
Linux版もあっていい感じ</description>
    </item>
    
    <item>
      <title>MySQL Workbench入りのDockerイメージ</title>
      <link>https://yaasita.github.io/2014/10/22/mysql-workbench/</link>
      <pubDate>Wed, 22 Oct 2014 23:56:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/22/mysql-workbench/</guid>
      <description>https://registry.hub.docker.com/u/yaasita/docker-mysql/
使い方
docker run -d -p 22 -v /tmp:/tmp mysql /usr/bin/supervisord ssh localhost -p49153 export DISPLAY=192.168.0.2:0 mysql-workbench  </description>
    </item>
    
    <item>
      <title>jQuery File Uploadをリバースプロキシ下で使う</title>
      <link>https://yaasita.github.io/2014/10/21/jquery-file-upload-patch/</link>
      <pubDate>Tue, 21 Oct 2014 01:08:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/21/jquery-file-upload-patch/</guid>
      <description>デフォルトだとHTTP_X_FORWARDED_HOST等のヘッダは解釈してくれないので、
以下のような設定にしてHOSTヘッダも化かす(apacheの場合)
ProxyPreserveHost On ProxyPass / http://hoge.example.com/ ProxyPassReverse / http://hoge.example.com/  HTTP_X_FORWARDED_HOSTも解釈して欲しかったら以下のようなパッチを当てる
 パッチの当て方
patch -p0 &amp;lt; rproxy.patch  </description>
    </item>
    
    <item>
      <title>ワークツリー付きのgit共有リポジトリ</title>
      <link>https://yaasita.github.io/2014/10/20/work-tree-git/</link>
      <pubDate>Mon, 20 Oct 2014 01:21:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/20/work-tree-git/</guid>
      <description>作ったリポジトリを横断的に検索したいときbareリポジトリだと
検索しにくいので、Work Tree付きの共有リポジトリ作った
ついでに、bitbucketのリポジトリもローカルに持ってきたときのメモ
 関連
gitでbareじゃない共有リポジトリを作る</description>
    </item>
    
    <item>
      <title>dockerでpukiwiki</title>
      <link>https://yaasita.github.io/2014/10/14/docker-pukiwiki/</link>
      <pubDate>Tue, 14 Oct 2014 00:25:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/14/docker-pukiwiki/</guid>
      <description>dockerでpukiwiki
https://registry.hub.docker.com/u/yaasita/docker-pukiwiki/</description>
    </item>
    
    <item>
      <title>CGI(perl)でメール送る</title>
      <link>https://yaasita.github.io/2014/10/13/mail-cgi/</link>
      <pubDate>Mon, 13 Oct 2014 22:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/13/mail-cgi/</guid>
      <description>CGIでメール送るときの例
POSTされる文字コードがよくわからない場合は
nkf通してヨロシクやってもらう
CSRF対策は前の画面でセッション作っておけば良いです
 </description>
    </item>
    
    <item>
      <title>Dockerでrep2を動かす</title>
      <link>https://yaasita.github.io/2014/10/13/docker_rep2/</link>
      <pubDate>Mon, 13 Oct 2014 22:08:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/13/docker_rep2/</guid>
      <description>https://registry.hub.docker.com/u/yaasita/docker-rep2/</description>
    </item>
    
    <item>
      <title>itunesで購入済みアプリを見る</title>
      <link>https://yaasita.github.io/2014/10/05/itunes-purchase/</link>
      <pubDate>Sun, 05 Oct 2014 03:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/05/itunes-purchase/</guid>
      <description>itunes開いてiTunes Storeからナビリンクの購入済み
https://yaasita.tumblr.com/post/99156026702

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>マウスでなぞってASCIIアート書ける</title>
      <link>https://yaasita.github.io/2014/09/28/asciiflow/</link>
      <pubDate>Sun, 28 Sep 2014 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/28/asciiflow/</guid>
      <description>アスキーフローというらしい
http://asciiflow.com/</description>
    </item>
    
    <item>
      <title>modern.ieのVMファイルの解凍</title>
      <link>https://yaasita.github.io/2014/09/23/modern-ie/</link>
      <pubDate>Tue, 23 Sep 2014 22:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/23/modern-ie/</guid>
      <description>モダンIEというIEテスト用のVM配ってるサイト
sfxの解凍はunrarでできた
unrar e IE11.Win7.ForLinuxVirtualBox.part1.sfx  https://www.modern.ie/ja-jp
Windows7の日本語化について
 WindowsUpdateでオプション選択してLanguage Pack入れる コントロールパネルの Clock, Language, and Regionを選択 TimeZone変更  http://qiita.com/hnakamur/items/5f2f9e817dd0de60abb2</description>
    </item>
    
    <item>
      <title>squirrelmailっていうWebメールクライアント</title>
      <link>https://yaasita.github.io/2014/09/21/squirrelmail/</link>
      <pubDate>Sun, 21 Sep 2014 01:56:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/21/squirrelmail/</guid>
      <description>いわゆるweb mailソフト
IMAPしか対応してないけど、localhost以外のメールも読める
Dockerイメージにしてみた
https://registry.hub.docker.com/u/yaasita/docker-squirrelmail/
sshで入って以下のコマンドで設定できる
/etc/squirrelmail/conf.pl  設定箇所  IMAPの接続情報 IMAPのTLS接続の有無  2. Server Settings =&amp;gt; A. Update IMAP Settings   言語  10. Languages  1. Default Language =&amp;gt; ja_JP 2. Default Charset =&amp;gt; iso-2022-jp      参考リンク  http://centossrv.com/squirrelmail.shtml  </description>
    </item>
    
    <item>
      <title>闇SIer</title>
      <link>https://yaasita.github.io/2014/09/11/yami_sier/</link>
      <pubDate>Thu, 11 Sep 2014 02:53:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/11/yami_sier/</guid>
      <description> 闇SIer 元ファイル  </description>
    </item>
    
    <item>
      <title>自分の声を遅れて聞こえさせて話し難くなる</title>
      <link>https://yaasita.github.io/2014/08/31/speech-jammer/</link>
      <pubDate>Sun, 31 Aug 2014 02:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/31/speech-jammer/</guid>
      <description>SpeechJammerLiteというらしい
https://sites.google.com/site/qurihara/home/speechjammer/lt</description>
    </item>
    
    <item>
      <title>3Dのパズルゲーム？</title>
      <link>https://yaasita.github.io/2014/08/31/blueprint3d/</link>
      <pubDate>Sun, 31 Aug 2014 00:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/31/blueprint3d/</guid>
      <description>3Dのパーツを重ねて絵にするゲーム
Blueprint3D
http://armorgames.com/play/12557/blueprint3d</description>
    </item>
    
    <item>
      <title>簡易Radiko録音スクリプトらしい</title>
      <link>https://yaasita.github.io/2014/08/27/radiko-recording/</link>
      <pubDate>Wed, 27 Aug 2014 00:49:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/27/radiko-recording/</guid>
      <description>らしい
https://gist.github.com/matchy2/3956266</description>
    </item>
    
    <item>
      <title>MACアドレスのベンダーを調べる</title>
      <link>https://yaasita.github.io/2014/08/25/mac-address-search/</link>
      <pubDate>Mon, 25 Aug 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/25/mac-address-search/</guid>
      <description>http://standards.ieee.org/develop/regauth/oui/public.html
MACアドレスの上位3バイトを検索窓に入れる
例) 00-22-68</description>
    </item>
    
    <item>
      <title>teraterm越しに特殊キーを送る</title>
      <link>https://yaasita.github.io/2014/08/24/teraterm-keycode/</link>
      <pubDate>Sun, 24 Aug 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/24/teraterm-keycode/</guid>
      <description>キーをどこで奪われてるのかまず探す
teratem -&amp;gt; bash -&amp;gt; app  teratemでキーを取られているならKEYBOARD.CNFの末尾に以下のように追記する
User(連番)で追記する書式についてはteratemのヘルプ参照
User3=1037,0,$1E User4=1040,0,$11  この例だとUser3でvimの副ファイル切り替え(:h ctrl-^)を出来るようにしている
User4ではDockerのデタッチに使うCtrl-qを通している
Ctrl-qについてはbash側でも取られるのでそっちも変更する
# キー設定を参照 # stopに割り当てられてるのが分かる stty -a # startをundefにする(ついでにstopも) stty start undef stty stop undef  </description>
    </item>
    
    <item>
      <title>HDDの故障が疑われるときにやったこと</title>
      <link>https://yaasita.github.io/2014/08/16/hdd-fail/</link>
      <pubDate>Sat, 16 Aug 2014 19:10:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/16/hdd-fail/</guid>
      <description>なんかrsyncでバックアップしようとすると以下のエラーが出るようになった
rsync: read errors mapping &amp;quot;/home/yamasita/Desktop/hogehoge.dat&amp;quot;: Input/output error (5) ERROR: /home/yamasita/Desktop/hogehoge.dat failed verification -- update discarded.  まずbadblocksで調べてみる
badblocks /home/yamasita/Desktop/hogehoge.dat  ダメそう
とりあえず、fsckをかけてみる
/のパーティションなのでfsckの間隔を調整
dumpe2fs -h /dev/sda1 | egrep -i &#39;check|mount count&#39; tune2fs -i 30d /dev/sda1  これでとりあえず不良セクタ退避させた
過去記事
HDDが故障したときにやったこと
参考リンク
http://nfolamp.wordpress.com/2010/10/25/dumpe2fstune2fs-manipulating-the-ext-fs-auto-check-parameters/</description>
    </item>
    
    <item>
      <title>検証環境の作り方</title>
      <link>https://yaasita.github.io/2014/08/13/kensyou/</link>
      <pubDate>Wed, 13 Aug 2014 02:53:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/13/kensyou/</guid>
      <description> 検証環境の作り方 元ファイル  </description>
    </item>
    
    <item>
      <title>youtubeとかダウンロードできるClipGrab</title>
      <link>https://yaasita.github.io/2014/08/11/clipgrab/</link>
      <pubDate>Mon, 11 Aug 2014 06:30:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/clipgrab/</guid>
      <description>動画ファイルダウンロードソフト
動画保存に便利
今までyoutubeとかダウンロードするときはDownloadHelper使ってたんですが、
こっちのほうが良いことが分かった
以下のリンクにLinuxで開けばバイナリがダウンロードできる
http://clipgrab.de/ja
apt-get install libqtwebkit4  しておけば多分動く
サポートしているサイト一覧
http://clipgrab.org/faqs/supported-sites</description>
    </item>
    
    <item>
      <title>vimでキータイプ音を鳴らす</title>
      <link>https://yaasita.github.io/2014/08/11/vim-sound/</link>
      <pubDate>Mon, 11 Aug 2014 06:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/vim-sound/</guid>
      <description>.gvimrc
autocmd! TextChangedI * silent! execute &amp;quot;!aplay /tmp/wav/seq1_key1.wav &amp;amp;&amp;quot;  参考
http://tekkoc.tumblr.com/post/63418217996/vim
効果音あるところ
http://www.skipmore.com/sound/index_04.html</description>
    </item>
    
    <item>
      <title>書くことに集中できるエディタOmmWriter</title>
      <link>https://yaasita.github.io/2014/08/11/ommwriter/</link>
      <pubDate>Mon, 11 Aug 2014 05:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/ommwriter/</guid>
      <description>書いているときに音楽がなったり、キーボード操作音とかなったりする
公式
今は有料版しかなかったので$5ほど支払ってみた
なんかキーボードの操作音は音が小さいので調整したほうがいいかもしれない
調整方法はC:\Program Files (x86)\HerraizSoto\OmmWriter\Resources\Soundにあるwavを増幅させるとよい
audacityならwavを開いてエフェクト⇒増幅でできる
https://yaasita.tumblr.com/post/94368458857

LinuxだとFocusWriterってのが近そう
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>paizaのオンラインハッカソン</title>
      <link>https://yaasita.github.io/2014/08/02/paiza-kirishima/</link>
      <pubDate>Sat, 02 Aug 2014 14:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/02/paiza-kirishima/</guid>
      <description>https://paiza.jp/poh/kirishima
 結果
http://paiza.jp/poh/kirishima/result/aa7b9f29d7942c7e5646bd10d758c434</description>
    </item>
    
    <item>
      <title>vimのunite-webcolorname使ってみた</title>
      <link>https://yaasita.github.io/2014/07/20/webcolorname-vim/</link>
      <pubDate>Sun, 20 Jul 2014 03:35:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/webcolorname-vim/</guid>
      <description>設定
NeoBundle &#39;Shougo/unite.vim&#39; NeoBundle &#39;pasela/unite-webcolorname&#39;  使い方
 </description>
    </item>
    
    <item>
      <title>vim-startifyを使ってみる</title>
      <link>https://yaasita.github.io/2014/07/20/vim-startify/</link>
      <pubDate>Sun, 20 Jul 2014 03:11:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/vim-startify/</guid>
      <description>https://github.com/mhinz/vim-startify

設定
NeoBundle &#39;mhinz/vim-startify&#39; let g:startify_list_order = [&#39;files&#39;, &#39;bookmarks&#39;, &#39;dir&#39;] let g:startify_files_number = 20 let g:startify_custom_header = \ map([&#39;( ^ o ^ ) / &amp;lt; vim &#39;.v:version]+split(system(&#39;date&#39;), &#39;\n&#39;),&#39;&amp;quot; &amp;quot;.v:val&#39;) + [&#39;&#39;,&#39;&#39;] let g:startify_bookmarks = split(system(&#39;awk &amp;quot;{print \$2}&amp;quot; ~/.NERDTreeBookmarks&#39;),&#39;\n&#39;)   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>lightline.vimを使ってみた</title>
      <link>https://yaasita.github.io/2014/07/20/lightline/</link>
      <pubDate>Sun, 20 Jul 2014 00:12:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/lightline/</guid>
      <description>https://github.com/itchyny/lightline.vim
こんな感じになる
https://yaasita.tumblr.com/post/92242385452

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;lightline&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;lightline&#34;).src = photos[0].original_size.url; }   設定
NeoBundle &#39;itchyny/lightline.vim&#39; let g:lightline = { \ &#39;active&#39;: { \ &#39;left&#39;: [ [ &#39;mode&#39;, &#39;paste&#39; ], \ [ &#39;readonly&#39;, &#39;filename&#39;, &#39;modified&#39; ], \ [ &#39;fugitive&#39; ] \ ], \ &#39;right&#39;: [ [ &#39;lineinfo&#39; ], \ [ &#39;percent&#39; ], \ [ &#39;filetype&#39;, &#39;fileencoding&#39;, &#39;fileformat&#39; ] ] \ }, \ &#39;component&#39;: { \ &#39;fugitive&#39;: &#39;%{exists(&amp;quot;*fugitive#statusline()&amp;quot;)?</description>
    </item>
    
    <item>
      <title>vimの書き込みと同時に別ファイルに書き出す</title>
      <link>https://yaasita.github.io/2014/07/19/vim-backup-write/</link>
      <pubDate>Sat, 19 Jul 2014 22:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/19/vim-backup-write/</guid>
      <description>vimrcを書いたら別のファイルにも書き出す例
 </description>
    </item>
    
    <item>
      <title>HTMLファイルをパースするコマンド</title>
      <link>https://yaasita.github.io/2014/07/18/html-xml-utils/</link>
      <pubDate>Fri, 18 Jul 2014 01:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/18/html-xml-utils/</guid>
      <description>apt-get install html-xml-utils curl http://www.yahoo.co.jp/ &amp;gt; /tmp/yahoo hxselect -c html &amp;lt; /tmp/yahoo  参考リンク
 http://blog.ueda.asia/?p=2417 http://unix.stackexchange.com/questions/6389/parse-html-on-linux  </description>
    </item>
    
    <item>
      <title>CookieClicker</title>
      <link>https://yaasita.github.io/2014/07/13/cookie-clicker/</link>
      <pubDate>Sun, 13 Jul 2014 14:30:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/13/cookie-clicker/</guid>
      <description>クッキークリッカーのセーブデータ
 </description>
    </item>
    
    <item>
      <title>dockerでatom</title>
      <link>https://yaasita.github.io/2014/07/13/docker-atom/</link>
      <pubDate>Sun, 13 Jul 2014 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/13/docker-atom/</guid>
      <description>Dockerfile
 でsshで入る
cd /usr/bin ln -s nodejs node git clone --depth 1 https://github.com/atom/atom cd atom ./script/build ./script/grunt install  参考リンク
https://github.com/atom/atom/blob/master/docs/build-instructions/linux.md</description>
    </item>
    
    <item>
      <title>itunes入れるとDVDドライブが認識しない</title>
      <link>https://yaasita.github.io/2014/07/12/itunes-dvd-device/</link>
      <pubDate>Sat, 12 Jul 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/12/itunes-dvd-device/</guid>
      <description>レジストリの以下のキーを消すとうまくいった
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E965-E325-11CE-BFC1-08002BE10318}  http://michisugara.jp/archives/2013/op_drive_failure.html</description>
    </item>
    
    <item>
      <title>ネットワーク監視コマンド18</title>
      <link>https://yaasita.github.io/2014/07/12/network-monitor/</link>
      <pubDate>Sat, 12 Jul 2014 23:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/12/network-monitor/</guid>
      <description> Nload iftop iptraf nethogs bmon slurm tcptrack Vnstat bwm-ng cbm - Color Bandwidth Meter speedometer Pktstat Netwatch Trafshow Netload ifstat dstat collectl  参考リンク  http://www.binarytides.com/linux-commands-monitor-network/  </description>
    </item>
    
    <item>
      <title>Asciinemaで端末操作を共有する</title>
      <link>https://yaasita.github.io/2014/07/11/asciinema/</link>
      <pubDate>Fri, 11 Jul 2014 00:55:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/11/asciinema/</guid>
      <description> 端末操作を共有できる  https://asciinema.org/   任意の画面を選択してすぐGIFにする  https://gyazo.com/ja    </description>
    </item>
    
    <item>
      <title>tumblrでタグトラッキング</title>
      <link>https://yaasita.github.io/2014/07/06/tumblr-tagg-search/</link>
      <pubDate>Sun, 06 Jul 2014 05:14:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/06/tumblr-tagg-search/</guid>
      <description>ダッシュボード右上の検索ボックスは
http://www.tumblr.com/search/hoge  に飛ばされてしまうので
http://www.tumblr.com/tagged/hoge  で検索する</description>
    </item>
    
    <item>
      <title>gvfsのオートマウントを止める</title>
      <link>https://yaasita.github.io/2014/07/05/gvfs-mount/</link>
      <pubDate>Sat, 05 Jul 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/05/gvfs-mount/</guid>
      <description>/home/user/.gvfsになんか自動でマウントされるのを止める
rm -rf ~/.local/share/gvfs*  面倒だったので以下で対処した
rm -rf ~/.local  多分、gnome関連パッケージのせい</description>
    </item>
    
    <item>
      <title>AWSの導入ガイド</title>
      <link>https://yaasita.github.io/2014/07/05/aws-guide/</link>
      <pubDate>Sat, 05 Jul 2014 22:43:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/05/aws-guide/</guid>
      <description> APNパートナー様により『エンタープライズAWS導入ガイド』が公開されました！  伊藤忠テクノソリューションズ株式会社    </description>
    </item>
    
    <item>
      <title>Debianで自動アップデート設定</title>
      <link>https://yaasita.github.io/2014/07/03/unattended-upgrades/</link>
      <pubDate>Thu, 03 Jul 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/03/unattended-upgrades/</guid>
      <description>apt-get install unattended-upgrades  /etc/apt/apt.conf.d/50unattended-upgrades
Unattended-Upgrade::Origins-Pattern { &amp;quot;o=Debian,n=jessie&amp;quot;; &amp;quot;o=Debian,n=jessie-updates&amp;quot;; &amp;quot;o=Debian,n=jessie-proposed-updates&amp;quot;; &amp;quot;o=Debian,n=jessie,l=Debian-Security&amp;quot;; &amp;quot;origin=Debian,archive=${distro_codename},label=Debian-Security&amp;quot;; }; Unattended-Upgrade::Package-Blacklist { };  /etc/apt/apt.conf.d/10periodicにAPT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;;を追加
APT::Periodic::Update-Package-Lists &amp;quot;1&amp;quot;; APT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;; APT::Periodic::Download-Upgradeable-Packages &amp;quot;0&amp;quot;; APT::Periodic::AutocleanInterval &amp;quot;0&amp;quot;; APT::Periodic::RandomSleep &amp;quot;0&amp;quot;;  再起動をしなきゃいけないアップデートは以下を有効にするらしい
再起動が必要なら/var/run/reboot-requiredが作られるのか
// Automatically reboot *WITHOUT CONFIRMATION* if // the file /var/run/reboot-required is found after the upgrade //Unattended-Upgrade::Automatic-Reboot &amp;quot;false&amp;quot;;  参考リンク
 http://orangain.hatenablog.com/entry/unattended-upgrades  </description>
    </item>
    
    <item>
      <title>emailアドレスの存在チェックプログラム</title>
      <link>https://yaasita.github.io/2014/07/02/email-exists-check/</link>
      <pubDate>Wed, 02 Jul 2014 12:14:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/02/email-exists-check/</guid>
      <description>RCPT TO送ってOKなら閉じる
 DNSだけ調べる
 参考リンク
 https://gist.github.com/mikedamage/5564196  </description>
    </item>
    
    <item>
      <title>irfanviewでGIFアニメをバラす</title>
      <link>https://yaasita.github.io/2014/07/01/irfanview-gif-split/</link>
      <pubDate>Tue, 01 Jul 2014 23:43:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/01/irfanview-gif-split/</guid>
      <description>IrfanviewでGIFアニメを単一画像にする方法
 GIFアニメを開く Options -&amp;gt; Extract all frames  </description>
    </item>
    
    <item>
      <title>初めての暗号化メール</title>
      <link>https://yaasita.github.io/2014/07/01/thunderbird-pgp/</link>
      <pubDate>Tue, 01 Jul 2014 23:36:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/01/thunderbird-pgp/</guid>
      <description> はじめての暗号化メール (Thunderbird編)  </description>
    </item>
    
    <item>
      <title>percolにmigemo検索追加</title>
      <link>https://yaasita.github.io/2014/06/30/migemo-percol/</link>
      <pubDate>Mon, 30 Jun 2014 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/30/migemo-percol/</guid>
      <description>percolでもmigemo検索できるらしい
Debian Jessieでやってみる
apt-get install libpython3.4-dev libpython2.7-dev libmigemo-dev curl -O http://www.atzm.org/etc/files/pymigemo/pymigemo-0.4.tar.gz paco -lp pymigemo-0.4 pip install pymigemo-0.4.tar.gz /usr/sbin/update-cmigemo-dict  ~/.percol.d/rc.pyに以下追加
 参考リンク
 https://gist.github.com/mitukiii/4234173  </description>
    </item>
    
    <item>
      <title>Gitの仕組み解説サイト</title>
      <link>https://yaasita.github.io/2014/06/29/git-inside/</link>
      <pubDate>Sun, 29 Jun 2014 23:04:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/git-inside/</guid>
      <description>すごくわかりやすい
 Git の仕組み  </description>
    </item>
    
    <item>
      <title>dockerでsublime text 3を動かす</title>
      <link>https://yaasita.github.io/2014/06/29/docker_sublime/</link>
      <pubDate>Sun, 29 Jun 2014 03:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/docker_sublime/</guid>
      <description>必要パッケージのインストール apt-get install libglib2.0-0 x11-apps x11-xserver-utils apt-get install conky-all apt-get install libgtk2.0-0  ホストのIPを特定して、Xサーバ指定 netstat -nr | grep &#39;^0\.0\.0\.0&#39; | awk &#39;{print $2}&#39; export DISPLAY=172.17.42.1:0  実行 subl  </description>
    </item>
    
    <item>
      <title>Googleサジェストでvim補完するやつ</title>
      <link>https://yaasita.github.io/2014/06/29/google_complete/</link>
      <pubDate>Sun, 29 Jun 2014 02:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/google_complete/</guid>
      <description>要curl
使い方は適当な単語入力してCtrl-x,Ctrl-u
 </description>
    </item>
    
    <item>
      <title>最近のvim</title>
      <link>https://yaasita.github.io/2014/06/29/recently_vim/</link>
      <pubDate>Sun, 29 Jun 2014 00:07:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/recently_vim/</guid>
      <description>最近話題になったり個人的に発見したりしたやつ
折り畳みについて  折り畳み嫌いの男が一夜でFolding freakにまでなった話  FoldCCnaviという関数がすばらしい   折り畳み嫌いの男が一夜でFolding freakにまでなった話2  Vim Pluginランキング  VimAwesome  なんかGithubに上がってるドットファイルに書いてあるプラグインとか集計しているらしい    vim7.4.338新機能  breakindentが追加された  Googleサジェストから補完候補   Googleサジェストから補完候補を作るVimスクリプト書いた
 NeoBundle &#39;mattn/webapi-vim&#39; NeoBundle &#39;mattn/googlesuggest-complete-vim&#39; set completefunc=googlesuggest#Complete &amp;quot;usage takasu&amp;lt;c-x&amp;gt;&amp;lt;c-u&amp;gt;    </description>
    </item>
    
    <item>
      <title>cgroupでcpuリミットをあてる</title>
      <link>https://yaasita.github.io/2014/06/22/cgroup-cpu-limit/</link>
      <pubDate>Sun, 22 Jun 2014 15:57:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/22/cgroup-cpu-limit/</guid>
      <description>microインスタンスはstealの関係でCPUリミットを設定するとよいらしい
microインスタンスはlimitかけると大きくパフォーマンスが向上する
なのでやってみました
環境はt1.micro (ubuntu 14.04)
cgcreate -g cpu:ruby cgexec -g cpu:ruby ./install_ruby.sh cgset -r cpu.cfs_quota_us=250000 ruby cgset -r cpu.cfs_period_us=1000000 ruby # 確認 cd /sys/fs/cgroup ls cpu/ruby cat cpu/ruby/tasks cgget -r cpu.cfs_quota_us -r cpu.cfs_period_us ruby  参考リンク
 cgroup について理解する cgroup でメモリと走行時間に制限を加える  </description>
    </item>
    
    <item>
      <title>Windows8.1の完全シャットダウン方法</title>
      <link>https://yaasita.github.io/2014/06/18/windows8_1_shutdown/</link>
      <pubDate>Wed, 18 Jun 2014 00:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/18/windows8_1_shutdown/</guid>
      <description>Win+cで設定ボタン⇒PC設定の変更⇒保守と管理⇒回復⇒今すぐ再起動する⇒PCの電源を切る  https://www2.mouse-jp.co.jp/ssl/user_support2/sc_faq_documents.asp?FaqID=13460</description>
    </item>
    
    <item>
      <title>非推奨になったネットワークコマンド</title>
      <link>https://yaasita.github.io/2014/06/17/deprecated_network_cmd/</link>
      <pubDate>Tue, 17 Jun 2014 01:13:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/17/deprecated_network_cmd/</guid>
      <description>Deprecated command Replacement command(s)     arp ip n (ip neighbor)   ifconfig ip a (ip addr), ip link, ip -s (ip -stats)   iptunnel ip tunnel   iwconfig iw   nameif ip link, ifrename   netstat ss, ip route (for netstat-r), ip -s link (for netstat -i), ip maddr (for netstat-g)   route ip r (ip route)     http://understeer.</description>
    </item>
    
    <item>
      <title>tumblrにpostするコマンド作った</title>
      <link>https://yaasita.github.io/2014/06/15/tumblr_post_nodejs/</link>
      <pubDate>Sun, 15 Jun 2014 12:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/15/tumblr_post_nodejs/</guid>
      <description>gistコマンドみたいにtumblrにポストできたら便利なので作った
tumblrwksの使い方はtumblrwks/testに大体書いてある
npm install -g tumblrwks   参考リンク  tumblrwks gem tumblr_clientを使ってみた tumblrのAPI回り  </description>
    </item>
    
    <item>
      <title>unite.vimみたいなpercol</title>
      <link>https://yaasita.github.io/2014/06/12/percol/</link>
      <pubDate>Thu, 12 Jun 2014 23:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/12/percol/</guid>
      <description>これ使うとシェルでもuniteみたいなインターフェイスで検索できる
公式サイト
インストール apt-get install python-pip pip install percol  設定 ~/.bashrc
 ~/.percol.d/rc.pyはREADMEのコピペ
参考リンク
 bashでもpercolをイイ感じに使う方法  </description>
    </item>
    
    <item>
      <title>gem tumblr_clientを使ってみた</title>
      <link>https://yaasita.github.io/2014/06/08/tumblr_client/</link>
      <pubDate>Sun, 08 Jun 2014 23:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/08/tumblr_client/</guid>
      <description>使い方 アプリ登録をしておいて以下のコマンドでアクセストークン取得
gem install tumblr_client tumblr  うまくいけば~/.tumblrに設定が作られる
参考リンク  tumblr_clientを使ってTumblr APIを利用する  </description>
    </item>
    
    <item>
      <title>tumblrのAPI回り</title>
      <link>https://yaasita.github.io/2014/06/08/tumblr_api/</link>
      <pubDate>Sun, 08 Jun 2014 23:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/08/tumblr_api/</guid>
      <description>手順   アプリを登録
OAuth Consumer KeyとSecret Keyを作る
  アクセストークンリクエスト
 #!/usr/bin/env ruby require &#39;oauth&#39; require &#39;oauth/consumer&#39; @consumer=OAuth::Consumer.new( &amp;quot;consumer key&amp;quot;,&amp;quot;secret key&amp;quot;, { :site =&amp;gt; &#39;http://www.tumblr.com&#39;, :request_token_path =&amp;gt; &#39;/oauth/request_token&#39;, :authorize_path =&amp;gt; &#39;/oauth/authorize&#39;, :access_token_path =&amp;gt; &#39;/oauth/access_token&#39;, :http_method =&amp;gt; :get } ) @request_token=@consumer.get_request_token put @request_token.authorize_url    リクエストトークンを踏む
  コールバックされる
  verifirerをメモる
 @access_token = @request_token.get_access_token(:oauth_verifier =&amp;gt; verifier ) puts @access_token.token puts @access_token.secret    APIによってはOauthリクエスト署名いらいないやつもある
(api_keyのみでOK)
curl http://api.</description>
    </item>
    
    <item>
      <title>vimのマークダウン関連まとめ</title>
      <link>https://yaasita.github.io/2014/06/07/vim_markdown/</link>
      <pubDate>Sat, 07 Jun 2014 15:41:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/07/vim_markdown/</guid>
      <description>vimでmarkdown関連まとめ
昔使ってたやつ  kannokanno/previm  javascriptでmarkdown描画してる 大きめのmarkdownだと処理が追いつかない場合がある htmlを人に渡す時にひと手間必要   suan/vim-instant-markdown  node.js必須 たまにバグる   rcmdnk/vim-markdown  参考リンク参照 vimアップデートによりエラーになる   plasticboy/vim-markdown   いいけどfile typeがmkdだったりちょっと癖あり
  以下の設定で使ってた
 NeoBundle &#39;plasticboy/vim-markdown&#39; let g:vim_markdown_folding_disabled=1     tpope/vim-markdown  なんかリスト中にあるコードがハイライトされなかった    今使ってるやつ  yaasita/ore_markdown  syntaxとmarkdownプレビュー同梱 ruby,bundler必須 単一のHTMLファイルを生成するので人に渡しやすい windows対応 syntaxはplasticboy/vim-markdownを使用 cssはbootstrapとgithub    参考リンク
 VimでのMarkdown環境を整える  </description>
    </item>
    
    <item>
      <title>ディレクトリ間の差分を取ってくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/03/dir_diff/</link>
      <pubDate>Tue, 03 Jun 2014 18:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/03/dir_diff/</guid>
      <description>apt-get install meld  参考リンク
http://baker-street.jugem.jp/?eid=164</description>
    </item>
    
    <item>
      <title>キーボード操作を表示してくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/01/key_display/</link>
      <pubDate>Sun, 01 Jun 2014 02:37:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/01/key_display/</guid>
      <description>windows用のキーボード操作表示ソフト
osdHotkey

参考リンク
 押したキーを表示してくれるソフトのまとめ   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>firefoxのバージョンチェックを無効化する拡張</title>
      <link>https://yaasita.github.io/2014/05/30/firefox_version_check/</link>
      <pubDate>Fri, 30 May 2014 23:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/30/firefox_version_check/</guid>
      <description>iceweaselでvimfxとか使うときにはこれ使う
 Disable Add-on Compatibility Checks  </description>
    </item>
    
    <item>
      <title>githubのレポート作ってくれるサイト</title>
      <link>https://yaasita.github.io/2014/05/28/github_report/</link>
      <pubDate>Wed, 28 May 2014 13:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/28/github_report/</guid>
      <description>githubの活動履歴からレポートを作ってくれるサイト
どんな言語が好きかとかそういうの
http://osrc.dfm.io/yaasita/</description>
    </item>
    
    <item>
      <title>mlocateについて</title>
      <link>https://yaasita.github.io/2014/05/27/mlocate/</link>
      <pubDate>Tue, 27 May 2014 00:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/27/mlocate/</guid>
      <description>mlocateはlocateの改良版
mlocateはupdatedbコマンドにより定期的に全ファイルを調べる
Debianは以下のcronで定期実行しているようだ
/etc/cron.daily/mlocate
ファイル数が多くなってなかなか終わらなくなったら
/etc/updatedb.confを編集して無視するファイルを追加するとよい
PRUNE_BIND_MOUNTS=&amp;quot;yes&amp;quot; PRUNENAMES=&amp;quot;.git .bzr .hg .svn&amp;quot; PRUNEPATHS=&amp;quot;/tmp /var/spool /media /mnt /raid/backup&amp;quot; PRUNEFS=&amp;quot;NFS nfs nfs4 rpc_pipefs afs binfmt_misc proc smbfs autofs iso9660 ncpfs coda devpts ftpfs devfs mfs shfs sysfs cifs lustre_lite tmpfs usbfs udf fuse.glusterfs fuse.sshfs curlftpfs&amp;quot;  </description>
    </item>
    
    <item>
      <title>itunes経由でBook同期</title>
      <link>https://yaasita.github.io/2014/05/26/itunes_books/</link>
      <pubDate>Mon, 26 May 2014 01:46:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/26/itunes_books/</guid>
      <description>手元のPDFをipadに転送したくていろいろ探したら
下記画像みたいなブックという項目を出さないとダメみたい

iTunesStoreでブック押したりなんかいろいろしたら出るようになった
あとPDFを追加するときは以下のフォルダに置くと良いみたい（入れると自動的に消える）
C:\Users\hogeuser\Music\iTunes\iTunes Media\iTunes に自動的に追加   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>middlemanのbuildを自動化する</title>
      <link>https://yaasita.github.io/2014/05/25/middleman_build/</link>
      <pubDate>Sun, 25 May 2014 23:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/middleman_build/</guid>
      <description>こんな感じのスクリプトをcronで回せばOK
 </description>
    </item>
    
    <item>
      <title>hardware checkコマンド</title>
      <link>https://yaasita.github.io/2014/05/25/hardware_check/</link>
      <pubDate>Sun, 25 May 2014 15:20:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/hardware_check/</guid>
      <description>lshwだけじゃない
PC構成を把握するコマンド
ハードウェアチェックコマンド  hwinfo --short hdparm -i /dev/sda inxi -Fx lsscsi  lsscsiがいい感じ
参考リンク  http://www.binarytides.com/linux-commands-hardware-info/  </description>
    </item>
    
    <item>
      <title>Linuxで一定時間操作しなかったらpm-suspend</title>
      <link>https://yaasita.github.io/2014/05/25/auto_suspend/</link>
      <pubDate>Sun, 25 May 2014 02:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/auto_suspend/</guid>
      <description>dwm使ってるからこういうのも自分で作らなきゃならない
5,10,15分にマウスの位置が変わらなかったらサスペンドする
~/.xsessionrc とかにこんな感じで追記
/sbin/start-stop-daemon --start -v -b -m -p $PIDFILE -x ~/.dwm/auto_suspend.sh  必要なツールも事前にインストールしておく
apt-get install xdotool pm-utils   </description>
    </item>
    
    <item>
      <title>middlemanについて</title>
      <link>https://yaasita.github.io/2014/05/25/middleman/</link>
      <pubDate>Sun, 25 May 2014 00:26:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/middleman/</guid>
      <description>middleman blog gem &amp;quot;middleman-blog&amp;quot; middleman init middleman --template=blog  config.ru # 上のほうにあるUTC消す Time.zone = &amp;quot;Tokyo&amp;quot; # 一番最後に以下追加 set :markdown, :tables =&amp;gt; true, :autolink =&amp;gt; true, :fenced_code_blocks =&amp;gt; true, :with_toc_data =&amp;gt; true, :hard_wrap =&amp;gt; true, :strikethrough =&amp;gt; true set :markdown_engine, :redcarpet # sass compass_config do |config| config.output_style = :expanded end   http://qiita.com/yterajima/items/d7deec7cc0caaf95982e  新規投稿 be middleman article yamasita_test  パーマリンク修正 blog.permalink = &amp;quot;{year}/{month}/{title}.html&amp;quot;  アーカイブページ config.ruに以下のように書く
#blog.calendar_template = &amp;quot;calendar.html&amp;quot; blog.year_template = &amp;quot;calendar.</description>
    </item>
    
    <item>
      <title>octopressについて</title>
      <link>https://yaasita.github.io/2014/05/25/octopress/</link>
      <pubDate>Sun, 25 May 2014 00:23:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/octopress/</guid>
      <description>使い方 git clone git://github.com/imathis/octopress.git octopress cd octopress bundle install rake install  投稿 bundle exec rake new_post[&amp;quot;1st_post&amp;quot;] bundle exec rake generate  編集 ↓を編集する source/_posts/2014-02-09-1st-post.markdown bundle exec rake generate bundle exec rake watch #これで自動的にgenerate  Liquid # 以下みたいにすると変数とれる {{ page.title }}  サイドバーにアーカイブ表示 &amp;amp; カテゴリーリスト  作ったgist 月別アーカイブ  参考リンク  GitHubPage liquid  </description>
    </item>
    
    <item>
      <title>jekyllについて</title>
      <link>https://yaasita.github.io/2014/05/25/jekyll/</link>
      <pubDate>Sun, 25 May 2014 00:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/jekyll/</guid>
      <description>使い方 # 作成 jekyll build # jekyllサーバ 更新監視 jekyll server -w  _config.ymlにこう書く
GFM対応
name: Your New Jekyll Site markdown: redcarpet pygments: true redcarpet: extensions: [&amp;quot;no_intra_emphasis&amp;quot;, &amp;quot;fenced_code_blocks&amp;quot;, &amp;quot;autolink&amp;quot;, &amp;quot;tables&amp;quot;, &amp;quot;with_toc_data&amp;quot;, &amp;quot;strikethrough&amp;quot;]  bloggerからの移行  import bloggerからの移行スクリプト?  参考リンク  ずぼらな人のための Jekyll 入門 Jekyllいつやるの？ジキやルの？今でしょ！ 最初にインストールした Jekyll プラグイン  </description>
    </item>
    
    <item>
      <title>脆弱性報告ツール Debsecan</title>
      <link>https://yaasita.github.io/2014/05/18/debsecan/</link>
      <pubDate>Sun, 18 May 2014 21:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/18/debsecan/</guid>
      <description>パッケージの説明 debsecan は特に Debian のインストールに影響を及ぼす脆弱性リストを生成する ためのツールです。
debsecan は検査対象マシン上で起動し、インターネット経由で
脆弱性情報をダウンロードします。
新しい脆弱性が発見されたり、セキュリティ更新 が利用可能になると、指定したパーティーにメールを送信できます。
apt-get install debsecan  日本語だと以下の情報もおすすめ
 JVN脆弱情報データベース深刻度順 JPドメイン　Web改竄速報  </description>
    </item>
    
    <item>
      <title>bloggerからmiddlemanに移行した</title>
      <link>https://yaasita.github.io/2014/05/17/blogger2middleman/</link>
      <pubDate>Sat, 17 May 2014 00:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/17/blogger2middleman/</guid>
      <description>bloggerからmiddleman(というかこのページ)に移行したときのやり方メモ
  bloggerからデータをエクスポートする
 管理画面から　設定　⇒　その他　⇒　ブログをエクスポート    XMLファイルが一行が長いので整形
 &amp;gt;&amp;lt;を&amp;gt;\n&amp;lt;に変換    以下のようなスクリプトentry事に分解
   整形
   こんな感じでできたファイルをbuildすればOK
$ bundle exec middleman build  </description>
    </item>
    
    <item>
      <title>DNS関連のためになるPDF</title>
      <link>https://yaasita.github.io/2014/05/14/dns/</link>
      <pubDate>Wed, 14 May 2014 01:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/14/dns/</guid>
      <description> DNSサーバーの引っ越し - JPRS DNS 浸透の都市伝説を斬る  </description>
    </item>
    
    <item>
      <title>システムバックアップをISOにしてくれるやつ</title>
      <link>https://yaasita.github.io/2014/05/04/mondo_rescue/</link>
      <pubDate>Sun, 04 May 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/04/mondo_rescue/</guid>
      <description> Mondo Rescue  </description>
    </item>
    
    <item>
      <title>tmuxでbashの履歴を即座に書き出す設定</title>
      <link>https://yaasita.github.io/2014/04/29/tmux_bash/</link>
      <pubDate>Tue, 29 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/29/tmux_bash/</guid>
      <description>function share_history { history -a history -c history -r } PROMPT_COMMAND=&#39;share_history&#39; shopt -u histappend  </description>
    </item>
    
    <item>
      <title>50%の確率でジョブを走らせる</title>
      <link>https://yaasita.github.io/2014/04/06/43/</link>
      <pubDate>Sun, 06 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/06/43/</guid>
      <description> #50%の確率で当ジョブを走らせる
num=`expr $RANDOM % 10`
if [ $num -le 4 ]
then
logger &#34;job Start...50%&#34;
else
logger &#34;Job Cancel...50%&#34;
exit 0
fi
 </description>
    </item>
    
    <item>
      <title>neosnippetの説明</title>
      <link>https://yaasita.github.io/2014/04/05/63/</link>
      <pubDate>Sat, 05 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/05/63/</guid>
      <description> snippetファイルの作り方
https://github.com/yonchu/dotfiles/blob/master/.vim/snippets/snippet.snip </description>
    </item>
    
    <item>
      <title>dovecotで特定のユーザのみ接続許可する</title>
      <link>https://yaasita.github.io/2014/03/22/104/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/104/</guid>
      <description> /etc/pam.d/dovecot
をいじってこんな感じにするといい
#%PAM-1.0
@include common-auth
account required pam_succeed_if.so user = hogeuser
@include common-account
@include common-session

参考リンク
http://wiki2.dovecot.org/Authentication/RestrictAccess </description>
    </item>
    
    <item>
      <title>uim-mozcの設定</title>
      <link>https://yaasita.github.io/2014/03/22/83/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/83/</guid>
      <description> 以下のパッケージをインストール
uim-qt
uim-xim

起動
uim-xim &amp;amp;

設定
uim-pref-qt4
 </description>
    </item>
    
    <item>
      <title>画像を入れるとイメージCSSを作ってくれるサイト</title>
      <link>https://yaasita.github.io/2014/03/16/css_image/</link>
      <pubDate>Sun, 16 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/16/css_image/</guid>
      <description>Lavish</description>
    </item>
    
    <item>
      <title>無線LANとサスペンド機能の有効化</title>
      <link>https://yaasita.github.io/2014/03/09/145/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/09/145/</guid>
      <description> 以下のパッケージとかを入れる
firmware-linux-nonfree
firmware-realtek
lspci
とか使ってハードウェアを調べること </description>
    </item>
    
    <item>
      <title>軽量なLinux用PDFビューワ</title>
      <link>https://yaasita.github.io/2014/02/02/166/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/02/02/166/</guid>
      <description> mupdf
apt-get install mupdf

viライクなキーバインド </description>
    </item>
    
    <item>
      <title>X11の画面設定はarandrが便利</title>
      <link>https://yaasita.github.io/2014/01/19/187/</link>
      <pubDate>Sun, 19 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/19/187/</guid>
      <description> apt-get install arandr
でインストールできる
公式サイト
http://christian.amsuess.com/tools/arandr/ </description>
    </item>
    
    <item>
      <title>wget画像収集</title>
      <link>https://yaasita.github.io/2014/01/18/206/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/18/206/</guid>
      <description> こんな感じのコマンドかな？
wget -erobots=off -H -N -r -nd -nH -l 1 -k -A jpg,png -R html url </description>
    </item>
    
    <item>
      <title>xrandrの使い方</title>
      <link>https://yaasita.github.io/2014/01/13/226/</link>
      <pubDate>Mon, 13 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/13/226/</guid>
      <description> wikipedia分かりやすい
モニターと可能な設定の表示
xrandr
全てのモニターを最高解像度で、同じ画面を表示する。
xrandr --auto
内蔵モニターの右側に外部モニターを表示。モニターの名前は、上の xrandr で調べられる。ここでは 内部モニター：LVDS、外部モニター：VGA とする。
xrandr --output VGA --right-of LVDS
内蔵モニターの上側に外部モニターを表示。
xrandr --output VGA --above LVDS
マルチモニターを使用する場合、X11の設定ファイル：通常 /etc/X11/xorg.conf で、仮想スクリーンの範囲を大きく取っておく。 例：
Virtual 2048 2048
参考リンク
http://ja.wikipedia.org/wiki/XRandR
関連記事
X11で縦表示とか画面の回転設定 </description>
    </item>
    
    <item>
      <title>Debianで無線LAN接続</title>
      <link>https://yaasita.github.io/2014/01/11/247/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/247/</guid>
      <description>今回はwicdを使う
無線デバイス確認
# lspci | grep -i wire
03:00.0 Network controller: Intel Corporation PRO/Wireless 3945ABG [Golan] Network Connection (rev 02)

ファームインストール
apt-get install firmware-iwlwifi

あとはこんな感じで設定
Networkmanagerのアンインストール
apt-get remove network-manager

# apt-getinstall install wicd
# apt-getinstall wicd-curses

Xなくてもつかえるwicd-cursesが便利だった
あとnetdevグループに属してないとwicd使えない
参考リンク
https://wiki.debian.org/WiFi/HowToUse#Wicd
https://wiki.debian.org/iwlwifi</description>
    </item>
    
    <item>
      <title>let&#39;s noteにacpid入れてバックライト調整</title>
      <link>https://yaasita.github.io/2014/01/11/268/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/268/</guid>
      <description> debian jessieでやってみた
使用したPCはLet&#39;s Note CF-W5
acpi-supportインストール
apt-get install acpi-support

Enabling backlight controlを参考にする
/etc/acpi/bright.sh
#!/bin/sh
bl_dev=/sys/class/backlight/panasonic/brightness
step=1
case $1 in
-)
echo $( expr `cat $bl_dev` - $step )  $bl_dev
;;
+)
echo $( expr `cat $bl_dev` + $step )  $bl_dev
;;
esac

/etc/acpi/events/bright_d
event=video/brightnessdown
action=https://yaasita.github.io/etc/acpi/bright.sh -

/etc/acpi/events/bright_u
event=video/brightnessup
action=https://yaasita.github.io/etc/acpi/bright.sh +

参考リンク
https://wiki.archlinux.org/index.php/acpid </description>
    </item>
    
    <item>
      <title>Debian wheezyで日本語環境設定</title>
      <link>https://yaasita.github.io/2014/01/02/287/</link>
      <pubDate>Thu, 02 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/02/287/</guid>
      <description> こんな感じ
apt-get install manpages-ja
dpkg-reconfigure locales
dpkg-reconfigure tzdata
 </description>
    </item>
    
  </channel>
</rss>