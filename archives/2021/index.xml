<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2021 on # cd ~yaasita</title>
    <link>https://yaasita.github.io/archives/2021/</link>
    <description>Recent content in 2021 on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 06 Sep 2021 02:00:02 +0900</lastBuildDate><atom:link href="https://yaasita.github.io/archives/2021/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bashでディレクトリのbookmark</title>
      <link>https://yaasita.github.io/2021/09/06/bash-bookmarks/</link>
      <pubDate>Mon, 06 Sep 2021 02:00:02 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/09/06/bash-bookmarks/</guid>
      <description>これすごい便利だった
https://threkk.medium.com/how-to-use-bookmarks-in-bash-zsh-6b8074e40774
CDPATHを使うとこんな便利なことができるのね
ただ以下の方が指摘されているようにbashだと補完が効かないので, compgenで補完候補を作る方が良さそう
https://mobile.twitter.com/mattn_jp/status/1434205359573405696
自分の場合は、gotoっていうコマンドよりcdで通常通り使えた方が良いので
こんな感じの設定を追加しておいた
cdコマンドを上書きして、@で始まってたら cd -P でsymlinkを辿るようにして、他は通常通り
(これなら補完候補も足さなくてOK)
export CDPATH=&amp;quot;.:$HOME/.bookmarks&amp;quot; function cd { if [[ ${1} =~ ^@ ]];then cd -P $1 || return 1 return fi builtin cd &amp;quot;$@&amp;quot; || return 1 }  あと、bookmarkへの追加もコマンドにしておく
bookmarkしたいディレクトリに移動してbookmarkコマンドでsymlink作るようにしておく
function bookmark { local dirname=$(basename $(pwd)) local linkto=$(pwd) echo $dirname cd ~/.bookmarks/ ln -s $linkto @$dirname cd - }  </description>
    </item>
    
    <item>
      <title>debian bullseyeのmlocateで引っかからないファイル</title>
      <link>https://yaasita.github.io/2021/08/16/mlocate/</link>
      <pubDate>Mon, 16 Aug 2021 02:15:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/08/16/mlocate/</guid>
      <description>debian 11でlocateしても引っかからないファイル多いなと思って調べたら
systemctl cat mlocate.service  こいうのが追加されてる
[Service] PrivateTmp=true PrivateDevices=true PrivateNetwork=true ProtectSystem=true  debian 10 (buster) 時代はcronだったから気にしなかったけど、多分これ、ProtectSystemの所為で/usrとか見れてないぽい
今までのように全検索したかったら以下のコマンドで上書きしたほうが良いかと
systemctl edit mlocate.service  </description>
    </item>
    
    <item>
      <title>nodejsのreadline</title>
      <link>https://yaasita.github.io/2021/07/29/nodejs-readline/</link>
      <pubDate>Thu, 29 Jul 2021 00:55:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/07/29/nodejs-readline/</guid>
      <description>readlineの書き方
https://nodejs.org/api/readline.html
こうやって書くより
 const rl = readline.createInterface({ // ... }); for await (const line of rl) { // Each line in the readline input will be successively available here as // `line`. } こっちの方がメモリ効率が良さそう
 await new Promise((resolv, reject) =&amp;gt; { rl.on(&amp;quot;line&amp;quot;, (line) =&amp;gt; { // 処理 }); rl.on(&amp;quot;close&amp;quot;, () =&amp;gt; { resolv(); }); }); 詳しくは調べてないけど、巨大ファイルだと
FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory `` が頻発する </description>
    </item>
    
    <item>
      <title>AtCoder Beginner Contest 202のD問題</title>
      <link>https://yaasita.github.io/2021/06/06/atcoder-d/</link>
      <pubDate>Sun, 06 Jun 2021 01:49:45 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/06/06/atcoder-d/</guid>
      <description>問題
https://atcoder.jp/contests/abc202/tasks
解説
https://www.youtube.com/watch?v=iNSp33TT3tc
ポイントは use bigint; を指定しないと溢れて浮動小数点になってしまう
 </description>
    </item>
    
    <item>
      <title>tumblrのテキスト情報を取得</title>
      <link>https://yaasita.github.io/2021/05/25/tumblr-metadata/</link>
      <pubDate>Tue, 25 May 2021 00:53:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/05/25/tumblr-metadata/</guid>
      <description>tumblrの検索だと、上手く引っかからない事が多いので
テキストデータはローカルに保存することにした
最初の投稿から何番目を指定することで、ディレクトリの年別ディレクトリに保存します
実行例
./get-tumblr-text.pl --tumblr_id yaasita --save_dir /tmp/ 1234   こんな感じで適度にsleep入れて取得してます
#!/bin/bash set -eux save_file=/tmp/save_num already_get_number=$(cat $save_file) for ((i=$already_get_number; i &amp;lt; $already_get_number + 100; i++));do ./get-tumblr-text.pl --tumblr_id yaasita --save_dir /tmp/ $i sleep 1 done echo $i &amp;gt; $save_file  </description>
    </item>
    
    <item>
      <title>スマホ変えた</title>
      <link>https://yaasita.github.io/2021/04/17/sumaho/</link>
      <pubDate>Sat, 17 Apr 2021 22:56:59 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/04/17/sumaho/</guid>
      <description>SH-M12S AQUOS sense3
ってやつに変えました
https://jp.sharp/products/shm12/
おサイフケータイ対応なので、モバイルPASMOにもしました
androidは10まで上がりました</description>
    </item>
    
    <item>
      <title>skypeログをエクスポート出来るようになってた</title>
      <link>https://yaasita.github.io/2021/04/04/skype-log-2021/</link>
      <pubDate>Sun, 04 Apr 2021 05:08:25 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/04/04/skype-log-2021/</guid>
      <description>これは便利
こちらの手順に従えば、アップロードファイルと、メッセージのjsonが手に入る
https://support.skype.com/ja/faq/FA34894/skype-huairutochiyatsutolu-li-woekusupotosurufang-fa
よく見ると、結構昔の奴も入ってるので昔からサーバー側でログを取ってたみたいね</description>
    </item>
    
    <item>
      <title>mpdとncmpc</title>
      <link>https://yaasita.github.io/2021/03/20/mpd-ncmpc/</link>
      <pubDate>Sat, 20 Mar 2021 14:39:05 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/03/20/mpd-ncmpc/</guid>
      <description>mpd と ncmpc の設定メモ
インストール apt install mpd ncmpc  セットアップ /etc/mpd.confの設定
http経由で聞くのでoutputはhttpにします
 ~/.config/ncmpc/config
タグで管理してないのでファイル名だけ表示します
host = &amp;quot;127.0.0.1&amp;quot; port = 6600 list-format = &amp;quot;%file%&amp;quot; status-format = &amp;quot;%file%&amp;quot; text-editor = vim  /var/lib/mpd/music/ に音楽ファイルを入れる(symlinkでも可)
ncmpcで起動 Ctrl-UでDBのアップデート
歌詞表示 歌詞表示するなら ncmpcpp の方が楽ですが、最初からvimキーバインドなncmpcが好きなのでこちらを使っています
方法は以下の記事通り歌詞検索用のスクリプトを配置するだけ
https://www.use-strict.de/using-ncmpc-to-fetch-and-read-lyrics.html
debianのパッケージは以下のオプションでビルドされてるので
-Dlyrics_plugin_dir=&amp;quot;/usr/lib/ncmpc/lyrics/&amp;quot;  /usr/lib/ncmpc/lyrics/01-test.sh
みたいなファイルをおきます
これが歌詞検索の際に実行されます
こんなファイルを置いて
#!/bin/bash echo &amp;quot;$@&amp;quot; echo &amp;quot;あいうおえ&amp;quot;  artist, titleを設定
eyeD3 -a backnumber hoge.mp3 eyeD3 -t 高嶺の花子さん takane.mp3  すると第一引数にartist, 第二引数にtitleが入ります

この画面で、Sを押すと歌詞を~/.cache/ncmpc/lyrics/保存できたりもします</description>
    </item>
    
    <item>
      <title>GKEでGCSバックエンドと併用する時</title>
      <link>https://yaasita.github.io/2021/02/25/gke-neg/</link>
      <pubDate>Thu, 25 Feb 2021 02:26:18 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/02/25/gke-neg/</guid>
      <description>よくあるこんな構成
staticなHTML/CSSはGCSから、API部分はGKEからみたいな構成
 +---&amp;gt; GCS | ---&amp;gt; GCLB ---+ | +---&amp;gt; k8s(GKE)  これ、GCLB部分をingressにするのが良いんだけど、現状バックエンドサービスにGCSを登録できない
1.19ならできるぽいがなんか上手く行かなかったので
とりあえず、今の機能でやるなら、
NEGを作って、そこをGCLBのバックエンドサービスに登録する
https://cloud.google.com/kubernetes-engine/docs/how-to/standalone-neg
厳密な事を言うと、nodeportもバックエンドサービスに登録できるが、こっちはノードの増減によりエンドポイントが変わってしまうので不適
公式ドキュメント通りだけどこんな感じで作る
 あとはGCSにWebサイトの設定と、GCLBの設定すればOK</description>
    </item>
    
    <item>
      <title>apacheのmod-auth-openidcについて</title>
      <link>https://yaasita.github.io/2021/01/01/mod-auth-openidc/</link>
      <pubDate>Fri, 01 Jan 2021 22:37:48 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2021/01/01/mod-auth-openidc/</guid>
      <description>BASIC認証かけるみたいに簡単にGoogle認証を追加できた
公式サイト
https://www.mod-auth-openidc.org/
インストール
apt install libapache2-mod-auth-openidc  設定 /etc/apache2/mods-enabled/auth_openidc.conf
OIDCRedirectURI https://hoge.example.jp/oidc/redirect_uri OIDCCryptoPassphrase hogehoge-foobar OIDCProviderMetadataURL https://accounts.google.com/.well-known/openid-configuration OIDCScope &amp;quot;openid email&amp;quot; OIDCClientID xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com OIDCClientSecret XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  リバースプロキシ的に使う例
/adminかつ、プライベートIP以外の場合はGoogle認証で hogehoge@gmail.com のみ許可
&amp;lt;VirtualHost *:443&amp;gt; ServerName hoge.example.jp &amp;lt;Location /&amp;gt; Require all granted &amp;lt;/Location&amp;gt; &amp;lt;Location /oidc/&amp;gt; AuthType openid-connect Require valid-user &amp;lt;/Location&amp;gt; &amp;lt;Location /admin&amp;gt; AuthType openid-connect Require claim email:hogehoge@gmail.com Require ip 192.168.0.0/24 &amp;lt;/Location&amp;gt; ProxyRequests Off ProxyPreserveHost On ProxyPass / http://127.0.0.1:8080/ keepalive=On RequestHeader set X-Forwarded-Proto &amp;quot;https&amp;quot; RequestHeader unset X-Forwarded-For RequestHeader unset X-Forwarded-Server RequestHeader unset X-Forwarded-Host # SSL設定等が続く .</description>
    </item>
    
  </channel>
</rss>
