<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2025 on # cd ~yaasita</title>
    <link>https://yaasita.github.io/archives/2025/</link>
    <description>Recent content in 2025 on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 01 Jan 2025 15:59:47 +0900</lastBuildDate><atom:link href="https://yaasita.github.io/archives/2025/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cody使ってみる</title>
      <link>https://yaasita.github.io/2025/01/01/cody/</link>
      <pubDate>Wed, 01 Jan 2025 15:59:47 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2025/01/01/cody/</guid>
      <description>cody が良いという評判を聞いたので使ってみる
コーディングAI課金するならCodyが断トツ良い話
https://zenn.dev/sanami/articles/7c24ce973b7e7c
vimには codeium と github copilot を設定しているので補完AIはもう要らない
CLIを設定してみる
マニュアル
https://sourcegraph.com/docs/cody/clients/install-cli
ここからアクセストークンを発行
https://sourcegraph.com/users/gitlab-etjbc/settings/tokens
環境変数に設定
export SRC_ACCESS_TOKEN=sgp_xxxxxxxxxxxxxxxxxxxxxx インストール
npm install -g @sourcegraph/cody cody auth whoami こんな感じで使える
cody chat -m &#39;Explain React hooks&#39; git diff | cody chat --stdin -m &#39;Write a commit message for this diff&#39; cody chat --context-file src/controller.ts -m &#39;Are there code smells in this file?&#39; ターミナルから使えて良いかもしれない</description>
    </item>
    
  </channel>
</rss>
