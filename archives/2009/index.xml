<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2009 on # cd ~yaasita</title>
    <link>https://yaasita.github.io/archives/2009/</link>
    <description>Recent content in 2009 on # cd ~yaasita</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 26 Dec 2009 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://yaasita.github.io/archives/2009/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最近、Mercurial について勉強しているのでメモ</title>
      <link>https://yaasita.github.io/2009/12/26/7511/</link>
      <pubDate>Sat, 26 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/26/7511/</guid>
      <description> リンクメモ&#xA;日本語チュートリアル&#xA;GUIツールのTortoiseHg&#xA;TortoiseHgの日本語Wiki&#xA;オラ本のPDFを配布してるとこ </description>
    </item>
    <item>
      <title>Bingで萌えキャンペーン</title>
      <link>https://yaasita.github.io/2009/12/24/7551/</link>
      <pubDate>Thu, 24 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/24/7551/</guid>
      <description> http://campaign.live.jp/bing/&#xA;検索しまくるとなんか壁紙とかもらえるらしい </description>
    </item>
    <item>
      <title>Debian でIPアドレスを固定にする</title>
      <link>https://yaasita.github.io/2009/12/24/7531/</link>
      <pubDate>Thu, 24 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/24/7531/</guid>
      <description> /etc/network/interfacesを編集する&#xA;下みたいになっているのを&#xA;# The loopback network interface&#xA;auto lo&#xA;iface lo inet loopback&#xA;# The primary network interface&#xA;allow-hotplug eth0&#xA;iface eth0 inet dhcp&#xA;↓の様に直す（192.168.0.11）にする場合&#xA;# The loopback network interface&#xA;auto lo&#xA;iface lo inet loopback&#xA;# The primary network interface&#xA;allow-hotplug eth0&#xA;iface eth0 inet static&#xA;address 192.168.0.11&#xA;netmask 255.255.255.0&#xA;gateway 192.168.0.1&#xA;直したら&#xA;#ifdown eth0&#xA;#ifup eth0&#xA;でおｋ&#xA;# /etc/init.d/networking restart&#xA;でもいけるがその場合は↓を書いておくこと(ifup -aの対象となる)&#xA;auto eth0&#xA;※VirtualPCではallow-hotplugはコメントアウトしておいた方がよさげ&#xA;参考リンク&#xA;http://asaasa.tk/wiki/?Debian%2FSettings%2FStaticIP </description>
    </item>
    <item>
      <title>mp3のエンコードが出来るプレイヤーみたいなソフトって？？</title>
      <link>https://yaasita.github.io/2009/12/23/7572/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/23/7572/</guid>
      <description> SCMPXです </description>
    </item>
    <item>
      <title>screenで開始するときの初期画面を表示しない</title>
      <link>https://yaasita.github.io/2009/12/23/7592/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/23/7592/</guid>
      <description> 免責事項とかCopyrightとかを表示しないようにするには&#xA;~/.screenrcに&#xA;startup_message offと書いておく </description>
    </item>
    <item>
      <title>bashで端末ロック機能を解除する</title>
      <link>https://yaasita.github.io/2009/12/20/7613/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/20/7613/</guid>
      <description> Ctrl+Sを押すと端末がロックしてしまうのが不便だと感じたら&#xA;↓を.bashrcなどに書いておく&#xA;stty stop undef&#xA;参考リンク&#xA;http://www.mazn.net/blog/2007/12/17/42.html </description>
    </item>
    <item>
      <title>Debian LennyをVirtualPC2007へインストール</title>
      <link>https://yaasita.github.io/2009/12/20/7654/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/20/7654/</guid>
      <description> 試した環境は以下の通り&#xA;VirtualPC 6.0.156.0&#xA;Debian Lenny 最小のCDイメージ　バージョンは5.0.3&#xA;↓のサイトとかを参考にするとどうやらインストール時にパラメータを追加しないといけないらしいので&#xA;http://hiro-system.blog.ocn.ne.jp/blog/2009/03/debian_lennyvir_5b2e.html&#xA;インストール時にquit を取ってから&#34;noreplace-paravirt vga=791 clock=pit&#34;を追加する&#xA;（インストール時はまだ日本語配列ではないので=イコールのタイプには注意する）&#xA;参考リンクには/boot/grub/menu.lstを編集、update-grubするようなことが書いてあるけどなんかインストール時に指定したパラメータが有効になって既にmenu.lstに反映されていたので省く。あとGUIも使わないのでそこら辺も無視した。&#xA;参考リンク&#xA;Debian Wiki </description>
    </item>
    <item>
      <title>rep2の過去ログをtmpreaperを使って整理</title>
      <link>https://yaasita.github.io/2009/12/20/7633/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/20/7633/</guid>
      <description>OpenJaneとかにはDAT落ちしたものを整理（削除）する機能があるけどrep2にはないのでtmpreaperで実装する&#xA;やり方はrep2/data直下にあるファイルはお気に入りとかなんで削除しない&#xA;それ以外は削除するっていう方法で行う&#xA;↓みたいなのをcronとかに保存しておけばいいんじゃないかな&#xA;#!/usr/bin/perl&#xA;use strict;&#xA;use warnings;&#xA;#### Initial Setting ###############&#xA;our $DAT_DIR=&#34;/var/www/rep2/data&#34;;&#xA;####################################&#xA;chdir ($DAT_DIR) or die $!;&#xA;unless ($DAT_DIR=~/\/$/){&#xA;$DAT_DIR.=&#34;/&#34;; #最後が/で終わってなかったら付け足す&#xA;}&#xA;opendir (DIR,$DAT_DIR) or die $!;&#xA;my @dir=readdir DIR;&#xA;my @fdir;&#xA;for (@dir){&#xA;push (@fdir,$_) if -f $_;&#xA;}&#xA;closedir DIR;&#xA;my $command;&#xA;$command = &amp;amp;lt;&amp;amp;lt; &#39;PRE&#39;;&#xA;nice -n10 tmpreaper --delay=30 --mtime-dir --symlinks 7d \&#xA;--showdeleted \&#xA;--mtime \&#xA;PRE&#xA;for (@fdir){&#xA;$command.=&#34;--protect &#39;$DAT_DIR&#34;.$_.&#34;&#39; \\\n&#34;</description>
    </item>
    <item>
      <title>Thunderbird3も出たことなのでコレクションを作っておく</title>
      <link>https://yaasita.github.io/2009/12/13/7696/</link>
      <pubDate>Sun, 13 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/13/7696/</guid>
      <description> Thunderbirdの方のコレクション&#xA;俺のアドオン（雷鳥）&#xA;Firefoxの方のコレクション&#xA;俺のアドオン（火狐） </description>
    </item>
    <item>
      <title>天気予報をical形式で配信してるところ</title>
      <link>https://yaasita.github.io/2009/12/13/7676/</link>
      <pubDate>Sun, 13 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/13/7676/</guid>
      <description> iCal天気&#xA;通常のicsの他にGoogle用とMac用も配ってる </description>
    </item>
    <item>
      <title>携帯でrep2見てるときに外部リンクを通勤ブラウザ以外に設定する</title>
      <link>https://yaasita.github.io/2009/12/12/7717/</link>
      <pubDate>Sat, 12 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/12/7717/</guid>
      <description>通勤ブラウザは重いしイマイチ使い勝手が良くなかったのでGoogleのGWT(Google Wireless Transcoder)を使う&#xA;rep2/lib/ShowThreadK.php を編集すればおｋ&#xA;650行目あたりの&#xA;// 通勤ブラウザ&#xA;if ($_conf[&#39;k_use_tsukin&#39;]) {&#xA;$tsukin_url = &#39;http://www.sjk.co.jp/c/w.exe?y=&#39; . urlencode($url);&#xA;if ($_conf[&#39;through_ime&#39;]) {&#xA;$tsukin_url = P2Util::throughIme($tsukin_url);&#xA;}&#xA;$ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; . hs($tsukin_url) . &#39;&#34;&amp;amp;gt;通&amp;amp;lt;/a&amp;amp;gt;&#39;;&#xA;}&#xA;↑を↓の様に変更&#xA;// 通勤ブラウザ&#xA;if ($_conf[&#39;k_use_tsukin&#39;]) {&#xA;// $tsukin_url = &#39;http://www.sjk.co.jp/c/w.exe?y=&#39; . urlencode($url);&#xA;$tsukin_url = &#39;http://www.google.co.jp/gwt/x?u=&#39; . urlencode($url);&#xA;if ($_conf[&#39;through_ime&#39;]) {&#xA;$tsukin_url = P2Util::throughIme($tsukin_url);&#xA;}&#xA;// $ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; . hs($tsukin_url) . &#39;&#34;&amp;amp;gt;通&amp;amp;lt;/a&amp;amp;gt;&#39;;&#xA;$ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; .</description>
    </item>
    <item>
      <title>DovecotのTrashフォルダはどこにあるのか？</title>
      <link>https://yaasita.github.io/2009/12/06/7759/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/06/7759/</guid>
      <description> それぞれ~/Maildirの中のドットファイルでしたls -aしたら見つかります&#xA;/Maildir/.Sent&#xA;/Maildir/.Trash&#xA;/Maildir/.Drafts&#xA;/Maildir/.Junk </description>
    </item>
    <item>
      <title>perlモジュールを作るための雛形を作る h2xs コマンド</title>
      <link>https://yaasita.github.io/2009/12/06/7820/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/06/7820/</guid>
      <description>↓みたいな感じで雛形を作る&#xA;h2xs -X -A HogeModule&#xA;参考リンク&#xA;http://torus.jp/memo/x200311/PerlModule.rd.html&#xA;モジュールの最後にPODも追加してくれて便利&#xA;__END__&#xA;# Below is stub documentation for your module. You&#39;d better edit it!&#xA;=head1 NAME&#xA;HogeModule - Perl extension for blah blah blah&#xA;=head1 SYNOPSIS&#xA;use HogeModule;&#xA;blah blah blah&#xA;=head1 DESCRIPTION&#xA;Stub documentation for Okyama, created by h2xs. It looks like the&#xA;author of the extension was negligent enough to leave the stub&#xA;unedited.&#xA;Blah blah blah.&#xA;=head2 EXPORT&#xA;None by default.</description>
    </item>
    <item>
      <title>Windowsのコマンドプロンプト(DOS窓)でディレクトリコピー</title>
      <link>https://yaasita.github.io/2009/12/06/7800/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/06/7800/</guid>
      <description> フォルダの再帰的なコピーには&#xA;xcopyを使いましょう&#xA;xcopy /?で詳しくみれます&#xA;例）E:ppmというディレクトリを再帰的に全部コピー&#xA;xcopy /E /I /Y E:\ppm D:\ppm_backup\ppm2&#xA;参考リンク&#xA;http://www5.ocn.ne.jp/~m-shin/windows/windows-bat-xcopy.html </description>
    </item>
    <item>
      <title>Windowsのコマンドプロンプト(DOS窓)でディレクトリ削除</title>
      <link>https://yaasita.github.io/2009/12/06/7780/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/06/7780/</guid>
      <description> ディレクトリごと再帰的に削除するには&#xA;rmdirコマンドを使います&#xA;UNIXでいうところのrm -rみたいな&#xA;rmdir /S /Q hogedir&#xA;参考リンク&#xA;http://sonic64.com/2006-04-05.html </description>
    </item>
    <item>
      <title>メールをCUIで読むソフト mutt</title>
      <link>https://yaasita.github.io/2009/12/06/7738/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/06/7738/</guid>
      <description>インストールはDebian Lennyならaptitudeで簡単に入る&#xA;そんで使い方&#xA;基本的な使い方とかはこことか見れば大体分かる&#xA;Maildirを指定して&#xA;mutt -f ~/Maildir これでとりあえず見れる&#xA;メールボックスとかは一々指定するのは面倒なので~/.muttrcを作成して&#xA;set folder=&amp;quot;~/Maildir&amp;quot; set spoolfile=&amp;quot;~/Maildir&amp;quot; set keep_flagged=yes set mbox=&amp;quot;&amp;quot; set postponed=&amp;quot;/tmp/postponed&amp;quot; set sort=&amp;quot;reverse-date-received&amp;quot; ↑みたいなのを書いておく意味はここら辺を見るとわかるかも&#xA;設定ファイルを書けば以降はmuttのみで起動できる&#xA;mutt操作方法&#xA;PageUpとPageDownで次とか後のメールを選択（vim風にjkでもできるけど削除が選択できない）&#xA;?でヘルプ&#xA;mで新規メール作成&#xA;参考リンク&#xA;http://www.emaillab.org/mutt/whatis.html</description>
    </item>
    <item>
      <title>postfixでOP25B対策</title>
      <link>https://yaasita.github.io/2009/12/05/7861/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/05/7861/</guid>
      <description>OP25Bを実施しているISPの場合、25番ポートへの出力が制限されているからリレーしてもらうように設定する&#xA;/etc/postfix/main.cfを編集 (hoge.ne.jpがSMPTサーバーだとする）&#xA;ispauthはユーザー名とパスワードを書くファイル名前はなんでもOK&#xA;relayhost = [hoge.ne.jp]:587&#xA;smtp_sasl_auth_enable = yes&#xA;smtp_sasl_password_maps = hash:/etc/postfix/ispauth&#xA;smtp_sasl_security_options = noanonymous&#xA;smtp_sasl_mechanism_filter = cram-md5,login,plain&#xA;ispauthには以下のようなものを書く&#xA;[プロバイダのSMTPサーバー]:587 プロバイダのユーザーID:プロバイダのパスワード&#xA;サーバーがhoge.ne.jp、ログインIDがfoobar、パスワードがbuzzだった場合は以下のように書く&#xA;[hoge.ne.jp]:587 foobar:buzz&#xA;そんで以下のコマンド投入&#xA;chmod 640 /etc/postfix/ispauth&#xA;postmap /etc/postfix/ispauth&#xA;/etc/rc.d/init.d/postfix restart&#xA;参考リンク&#xA;http://centos.server-manual.com/postfix_op25b.html&#xA;smtp_sasl_mechanism_filterはそのSMPTサーバーが使っているものにあわせるのでそれを確認する&#xA;telnet hoge.ne.jp 587&#xA;EHLO hoge.ne.jp&#xA;↓みたいなのが出たら↑の設定でOK&#xA;250-AUTH CRAM-MD5 PLAIN LOGIN&#xA;参考リンク&#xA;http://www.aconus.com/~oyaji/mail2/op25b.htm&#xA;※注意 SMTP認証を使う場合はlibsasl2-modulesがインストールされていることを確認してください&#xA;どうしても出来なかったら↓みたいな感じでパケットキャプチャー→Wiresharkで見て考える感じで&#xA;tcpdump -s 1500 ip host ?.?.?.? -w out.cap</description>
    </item>
    <item>
      <title>定期的に/tmpを掃除してくれるソフトtmpreaper</title>
      <link>https://yaasita.github.io/2009/12/05/7840/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/05/7840/</guid>
      <description>Debian Lennyで試した。&#xA;Red hat系だとtmpwatchとかあるみたいだけど無いのでこれを使う&#xA;まずはaptitudeでインストール&#xA;インストールすると/etc/cron.daily/tmpreaperが作成される&#xA;これによって毎日cronで実行される&#xA;設定はこれをいじってもできるが基本的には&#xA;/etc/tmpreaper.confをいじる&#xA;まずはワーニングが出るので13行目あたりにあるSHOWWARNINGをコメント化する&#xA;#SHOWWARNING=true&#xA;次にオプションを設定する各オプションの意味は以下の通り&#xA;TMPREAPER_TIME・・・どのくらいアクセスがないファイルを削除するか？設定値はデフォルトで7dつまり7d以上アクセスがないと削除&#xA;TMPREAPER_PROTECT_EXTRA・・・削除しては駄目な名前を指定&#xA;TMPREAPER_DIRS・・・削除の対象とするディレクトリ　デフォルトは/tmpのみ 複数指定するときはスペースで区切る　例）TMPREAPER_DIRS=&#39;/tmp/. /var/tmp/.&#39;&#xA;TMPREAPER_DELAY・・・実行するまで待つ時間　デフォルトは256秒&#xA;TMPREAPER_ADDITIONALOPTIONS・・・他に指定したいオプションがある場合はこここに入れる他のオプションはmanを参照&#xA;あと/etc/cron.daily/tmpreaper見れば分かるけど&#xA;デフォルトで&#xA;以下のオプションが設定されている。ヤバイファイルは消えないようにしているようだ&#xA;--protect &#39;/tmp/.X*-{lock,unix,unix/*}&#39; \&#xA;--protect &#39;/tmp/.ICE-{unix,unix/*}&#39; \&#xA;--protect &#39;/tmp/.iroha_{unix,unix/*}&#39; \&#xA;--protect &#39;/tmp/.ki2-{unix,unix/*}&#39; \&#xA;--protect &#39;/tmp/lost+found&#39; \&#xA;--protect &#39;/tmp/journal.dat&#39; \&#xA;--protect &#39;/tmp/quota.{user,group}&#39; \&#xA;※注意&#xA;デフォルトのシェルだと--ctimeが設定されています↓みたいに&#xA;nice -n10 tmpreaper --delay=$TMPREAPER_DELAY --mtime-dir --symlinks $TMPREAPER_TIME \&#xA;$TMPREAPER_ADDITIONALOPTIONS \&#xA;--ctime \&#xA;これだとcronでlocateのDBを作っているので、アクセスタイムが更新され&#xA;いつまで経っても削除されません。（ctimeオプションはatime+ctimeのチェックをします）&#xA;用途によってはここを--mtimeに変更してもいいと思います</description>
    </item>
    <item>
      <title>dovecotでQuota設定</title>
      <link>https://yaasita.github.io/2009/12/01/7882/</link>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/12/01/7882/</guid>
      <description>メールの容量を制限する（クォータの設定）するには？&#xA;Plugin settingsの部分に以下を追記&#xA;↓がグローバルなクォータ設定（ユーザー個別に設定すればそちらが優先される）&#xA;参考リンク→ http://wiki.dovecot.org/Quota/1.0&#xA;plugin { quota = maildir:storage=10240:messages=1000 } 上記の設定後&#xA;protocol imapに次の文を追記&#xA;protocol imap { mail_plugins = quota imap_quota } Thunderbirdで試すとクォータが有効なら↓のようなメッセージが出る&#xA;で、クォータ当てただけじゃ不便だから古いメッセージから自動で削除してくれるように設定するには Trashプラグイン を使う&#xA;protocol imap { mail_plugins = quota imap_quota trash } plugin { quota = maildir:storage=10240:messages=1000 trash = trash = /etc/dovecot/dovecot-trash.conf } さっき指定したdovecot-trash.conf　(無ければ作る）　を編集する&#xA;↓はTrashだけ削除の対象とする例&#xA;1 Trash ↑のファイルを1行つくればOK</description>
    </item>
    <item>
      <title>Windowsのソースコードのステップ数（目安）</title>
      <link>https://yaasita.github.io/2009/11/30/7904/</link>
      <pubDate>Mon, 30 Nov 2009 00:00:00 +0900</pubDate>
      <guid>https://yaasita.github.io/2009/11/30/7904/</guid>
      <description> こんな感じらしい&#xA;Windows NT⇒400万行&#xA;Windows 95⇒1,500万行&#xA;Windows XP⇒3,500万行&#xA;Windows Vista⇒5,000万行http://blog.development-network.net/ung/2006/10/post_54.html </description>
    </item>
  </channel>
</rss>
