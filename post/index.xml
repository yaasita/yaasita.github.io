<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title># cd ~yaasita</title>
    <link>https://yaasita.github.io/post/index.xml</link>
    <description>Recent content on # cd ~yaasita</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 14 Feb 2017 01:05:25 +0900</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>relをtumblrテーマに加える</title>
      <link>https://yaasita.github.io/2017/02/14/add-rel-to-tumblr</link>
      <pubDate>Tue, 14 Feb 2017 01:05:25 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/14/add-rel-to-tumblr</guid>
      <description>tumblrのテーマをDefaultにしてみた
一点気になったのは
リンクがこんな感じでrel属性が指定されてない
&amp;lt;a href=&amp;quot;{PreviousPage}&amp;quot; class=&amp;quot;left&amp;quot;&amp;gt; &amp;lt;a rel=&amp;quot;next&amp;quot; href=&amp;quot;{NextPage}&amp;quot; class=&amp;quot;right&amp;quot;&amp;gt;  これだとvimiumの[[, ]]コマンドで辿れないのでそこだけ修正した
 修正後のテーマ
 https://gist.github.com/yaasita/40831000ea20c85f20eeccaa7de5c9c3
  参考リンク
 rel=”next”とrel=”prev” の使い方
   </description>
    </item>
    
    <item>
      <title>閉じるボタンとVue.js</title>
      <link>https://yaasita.github.io/2017/02/07/close-button-with-vuejs</link>
      <pubDate>Tue, 07 Feb 2017 23:59:54 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/07/close-button-with-vuejs</guid>
      <description>box並べて閉じるボタンつけて、押されたらDOM消して何かするみたいなよくあるインターフェイス
Vue.js使って書いてみた
すごい便利
 https://github.com/yaasita/vuejs-close-button</description>
    </item>
    
    <item>
      <title>FreenomのドメインはWebサイトないと消えちゃう</title>
      <link>https://yaasita.github.io/2017/02/03/freenom-deletes-freely</link>
      <pubDate>Fri, 03 Feb 2017 02:46:27 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/03/freenom-deletes-freely</guid>
      <description>だそうです
Dear yamasita yamasita, The Freenom Review Team has visited your website today. Unfortunately we have to say that today we cancelled your domain YAASITA.ML. The reason for the cancellation is that the website address you used for your free domain name was not accessible or did not follow the guidelines set in our terms and conditions. At this stage, anyone, including yourself, is able to (re)register the cancelled domain YAASITA.</description>
    </item>
    
    <item>
      <title>hostとdigコマンドの挙動が違う時</title>
      <link>https://yaasita.github.io/2017/01/27/host_and_dig_commands_are_different</link>
      <pubDate>Fri, 27 Jan 2017 01:52:29 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/27/host_and_dig_commands_are_different</guid>
      <description>名前を引くときにhostコマンドでは返ってくるがdigだとおかしくなるときがある
こんな感じにすれば同じになる
host example.net. dig +nodnssec +noedns +noadflag example.net. a  WN-G300GRはadビット立ててると応答すらしないらしい</description>
    </item>
    
    <item>
      <title>GMOのConoha VPS使ってみた</title>
      <link>https://yaasita.github.io/2017/01/22/conoha-vps</link>
      <pubDate>Sun, 22 Jan 2017 23:51:14 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/22/conoha-vps</guid>
      <description>非常に良い
さくらVPSより良いかもしれない
 DNSサーバ無料
 OP25B無し
 SSD 20GB
 初期費用なし
 転送量無制限
 時間課金方式と月額方式のハイブリット
  今はコンテナ技術でサクッと移動できちゃうので、
安いクラウドサービス渡り歩くのも良いと思った</description>
    </item>
    
    <item>
      <title>BCCヘッダを落とすのは誰か</title>
      <link>https://yaasita.github.io/2017/01/22/who_drops_bccheader</link>
      <pubDate>Sun, 22 Jan 2017 00:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/22/who_drops_bccheader</guid>
      <description>BCCヘッダは転送しないで、MTA側で消されるというのは有名な話だけど
実際どんな感じなのか
まずメーラーでBCCを指定して送ったとする
この時BCCヘッダはどのタイミングで消えるか？という問題
MUA(thunderbird等) -&amp;gt; 送信側MTA(postfix等) -&amp;gt; 受信側MTA(postfix等)  thunderbird まずthunderbirdからBCCで送信した場合はそもそもBccヘッダはつけない(Icedove/45.6.0で検証)
envelope toには存在するがそもそもBccヘッダなんてものを書かない
postfix postfixもデフォルトではBccヘッダは落とすようになっている
しかしこの設定を変更すればBccヘッダを落とさないでそのまま配送される
message_drop_headers = bcc, content-length, resent-bcc, return-path   参考
 http://www.postfix.org/postconf.5.html#message_drop_headers
   まとめ 本来見られちゃいけないヘッダをMTAに渡して、多分消してくれるだろうと期待するのはあまりよくないと思う
具体的にはBccヘッダまで綺麗に書いて sendmail -t で送るよりはちゃんとenvelope to を指定して送った方が安全度高い
要するにthunderbirdみたいに送るべき</description>
    </item>
    
    <item>
      <title>新旧リダイレクト</title>
      <link>https://yaasita.github.io/2017/01/16/redirect-githubpage</link>
      <pubDate>Mon, 16 Jan 2017 23:36:18 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/16/redirect-githubpage</guid>
      <description> middlemanからの移行に際してリンクが壊れまくった
GoogleのSearch Console
https://yaasita.tumblr.com/post/155945715637 
とりあえずJavaScriptで新URL案内すればいいか
 こんな感じ
https://yaasita.tumblr.com/post/155945774152 
旧ページ  記事ページ
 https://yaasita.github.io/2010/08/30/5917.html
  タグページ
 https://yaasita.github.io/tags/soft.html
  年ページ
 https://yaasita.github.io/2008.html
   </description>
    </item>
    
    <item>
      <title>ore_markdownを画像埋め込みに対応させた</title>
      <link>https://yaasita.github.io/2017/01/15/ore_markdown_update2</link>
      <pubDate>Sun, 15 Jan 2017 02:47:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/15/ore_markdown_update2</guid>
      <description>またore_markdown-goの修正
こんな感じに画像データをBase64にして埋め込めばHTMLファイル一枚で完結しそうだったので修正した
&amp;lt;img src=&amp;quot;data:image/png;base64,(base64文字列)&amp;quot; alt=&amp;quot;img1&amp;quot;&amp;gt;  修正内容
吐き出されたHTMLの例
https://gist.githubusercontent.com/yaasita/d9b55cff5e52197adf4840cf702e5bd6/raw/c6a3c2f96f4360ad3fa526c6c5ae5302acd26769/preview.html
保存してHTMLを表示させれば画像がみれるはず</description>
    </item>
    
    <item>
      <title>MacBook買ったのでサポートお願いした</title>
      <link>https://yaasita.github.io/2017/01/09/mac-personal-setup</link>
      <pubDate>Mon, 09 Jan 2017 16:27:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/09/mac-personal-setup</guid>
      <description>13インチ MacBook Air 1.6GHzデュアルコアIntel Core i5 整備済製品 (\84,000)で買ったのでパーソナルセットアップをお願いしてみた
時間は30分だったけど、電話でいろいろ質問できて良い
http://www.apple.com/jp/retail/personalsetup/</description>
    </item>
    
    <item>
      <title>ansibleで作ったロール</title>
      <link>https://yaasita.github.io/2017/01/09/my-ansible-role</link>
      <pubDate>Mon, 09 Jan 2017 16:24:41 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/09/my-ansible-role</guid>
      <description>成果物  ec2でスワップファイル置くとかするやつ
 https://github.com/yaasita/ansible_role_amazon-ec2
  aptのproxy設定
 https://github.com/yaasita/ansible_role_apt-proxy
  ブラックホールメールサーバ作るときの設定
 https://github.com/yaasita/ansible_role_blackhole-postfix
  adminユーザ作るとき
 https://github.com/yaasita/ansible_role_admin-server
  centosでよくやる設定
 https://github.com/yaasita/ansible_role_common_centos
  Ubuntuでよくやる設定
 https://github.com/yaasita/ansible_role_common_ubuntu
  Dockerコンテナにするときによくやる設定
 https://github.com/yaasita/ansible_role_docker-care
  munin-node入れるとき
 https://github.com/yaasita/ansible_role_munin
  mysql
 https://github.com/yaasita/ansible_role_mysql
  nagios nrpe
 https://github.com/yaasita/ansible_role_nagios-nrpe
  ネットワーク設定
 https://github.com/yaasita/ansible_role_network
  proxy設定(主にaptの)
 https://github.com/yaasita/ansible_role_proxy
  railsの初期設定
 https://github.com/yaasita/ansible_role_rails
  rbenv</description>
    </item>
    
    <item>
      <title>ore_markdownをGo言語で書き直した</title>
      <link>https://yaasita.github.io/2017/01/06/ore_markdown_to_golang</link>
      <pubDate>Fri, 06 Jan 2017 15:44:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/06/ore_markdown_to_golang</guid>
      <description> 久々に ore_markdownを書き直した
感想とか  Ruby(Gem: github-markdown)→Go(russross/blackfriday)で書き直し
 スタティックファイルもgo-bindataでバイナリに閉じ込めた
 OS間の違いを意識するのがめんどくさいのでVimでの判定は全部やめてGo側に寄せた
 早くて良い
  成果物とかライブラリ  作ったもの
 https://github.com/yaasita/ore_markdown
 https://github.com/yaasita/ore_markdown-go
  blackfriday
 https://github.com/russross/blackfriday
 https://godoc.org/github.com/russross/blackfriday
  go-bindata
 https://github.com/jteeuwen/go-bindata
   </description>
    </item>
    
    <item>
      <title>blogをmiddlemanからhugoに移行した</title>
      <link>https://yaasita.github.io/2017/01/05/middleman2hugo</link>
      <pubDate>Thu, 05 Jan 2017 04:50:10 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/05/middleman2hugo</guid>
      <description> 使ってみた感想  ビルドはmiddlemanで10分かかってたけど1秒になった
 themeはgeppakuというのを使用 シンプルで良い
 Tumblrリンクのプルリクエストも快くマージしてくれた感謝m(_ _)m
  pagination 周りの部分はちょっとページ数が多いとカラム落ちしたり苦しかったので書き直した
 taxonomiesを追加して、年別のアーカイブページを作成
 アーカイブページを逆順にする対応はなぜかうまくいかなかったので後で調査する
 とりあえずJavaScriptで逆順にした &amp;gt; gist
  hugo serverのライブリロードがとっても良い(ブラウザも自動更新)
 ただしpagination周りで変な書き方するとサーバごと落ちる
  DISQUS周りはちょっとカスタマイズした
 なぜかデフォルトだと読み込まなかったので
  markdown周りはほぼ設定ファイルで完結
 今回の設定はこんな感じ
  middleman時代のリンクを維持するためにUglyURLs設定したけどcategoriesとかリンク切れが面倒だったので中止
 参考: http://wdkk.co.jp/note/2015/0824-hugo-public/
  Highlight.js今回無効にした過去分のcodeブロックが微妙になったので
  総評
Static Site Generatorはとても良い
移行するにも、更新するにもメンテがすごく楽
移行スクリプト 基本的にはファイル名にある時間のデータをTOMLに直して終わり
/home/yamasitaにhugo,middlemanのディレクトリがある前提
 参考リンク  middleman
 hugo
  </description>
    </item>
    
    <item>
      <title>GCPの Cloud DNSでグルーレコード</title>
      <link>https://yaasita.github.io/2016/12/03/google-cloud-dns</link>
      <pubDate>Sat, 03 Dec 2016 23:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/12/03/google-cloud-dns</guid>
      <description>Google Cloud Platform のDNSでグルーレコード作るときは
こんな感じでNS指定したあとに、Aレコード追加すればグルーレコード(Glue Record)に追加してくれるようだ
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.9.5-9+deb8u8-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; +norec @ns-cloud-d1.googledomains.com. name.yaasita.xyz. a ; (2 servers found) ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 39015 ;; flags: qr; QUERY: 1, ANSWER: 0, AUTHORITY: 2, ADDITIONAL: 3 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;name.yaasita.xyz. IN A ;; AUTHORITY SECTION: name.yaasita.xyz. 300 IN NS ns1.name.yaasita.xyz. name.yaasita.xyz. 300 IN NS ns2.</description>
    </item>
    
    <item>
      <title>VALUE-DOMAINでグルーレコード追加</title>
      <link>https://yaasita.github.io/2016/11/25/value-domain</link>
      <pubDate>Fri, 25 Nov 2016 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/11/25/value-domain</guid>
      <description>VALUE-DOMAIN バリュードメインの権威DNSサーバを使いつつ
レコードにグルーレコードを追加する方法
BINDみたくこんな感じにやる
ns cloud cloud.example.net. a cloud.example.net. 123.123.123.123  上位の権威サーバにグルーレコードを設定する場合は
下記参照
https://www.value-domain.com/userguide/manual/othermodns/</description>
    </item>
    
    <item>
      <title>AWSへVMイメージごと移動する手順</title>
      <link>https://yaasita.github.io/2016/11/20/aws-vm-import</link>
      <pubDate>Sun, 20 Nov 2016 20:45:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/11/20/aws-vm-import</guid>
      <description> 手順 img作る前に以下を確認しておく
 DHCPを有効にしている
 iptablesを無効に
 rawでイメージを作っておく
  次に以下のコマンドでインポート
# hoge-importってバケット作ったとする # 最初にimgをS3に上げておく aws s3 cp hoge.img s3://hoge-import/hoge.img # IAM周りを準備 aws iam create-role --role-name vmimport --assume-role-policy-document file://trust-policy.json aws iam put-role-policy --role-name vmimport --policy-name vmimport --policy-document file://role-policy.json # インポートタスク開始 aws ec2 import-image --description &amp;quot;hoge server&amp;quot; --disk-containers file://containers.json # 進捗見る aws ec2 describe-import-image-tasks  使ったjsonファイル
 参考リンク  http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/VMImportPrerequisites.html#vmimport-image-formats
 http://docs.aws.amazon.com/cli/latest/reference/ec2/import-image.html
  </description>
    </item>
    
    <item>
      <title>フレッツのDNS挙動</title>
      <link>https://yaasita.github.io/2016/10/31/flets-dns</link>
      <pubDate>Mon, 31 Oct 2016 00:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/10/31/flets-dns</guid>
      <description>NSレコードに指定したホスト名にCNAMEを持たせてはいけない
という話は有名だがどのように挙動が変わるか見てみる
準備 yaasita.ml. の権威サーバは ns1.aws.yaasita.net. にしておく
NSで指定されてるサーバは CNAMEとして aws.yaasita.net. に設定しておく
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.9.5-9+deb8u7-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; +norec @aws.yaasita.net. ns1.aws.yaasita.net. a ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 31880 ;; flags: qr aa; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 4096 ;; QUESTION SECTION: ;ns1.aws.yaasita.net. IN A ;; ANSWER SECTION: ns1.</description>
    </item>
    
    <item>
      <title>最近買ったスマホ</title>
      <link>https://yaasita.github.io/2016/10/22/smart-phone</link>
      <pubDate>Sat, 22 Oct 2016 22:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/10/22/smart-phone</guid>
      <description>エイスース SIMフリースマートフォン
ZenFone 2 Laser（Qualcomm Snapdragon 410/メモリ 2GB）
16GB ブラック ZE500KL-BK16
18,672円だった
Androidは6.0.1まで上がった</description>
    </item>
    
    <item>
      <title>更新通知のbashrc</title>
      <link>https://yaasita.github.io/2016/09/10/update-notify</link>
      <pubDate>Sat, 10 Sep 2016 12:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/09/10/update-notify</guid>
      <description>こんな感じで、更新を促す
 </description>
    </item>
    
    <item>
      <title>超次元アクション ネプテューヌU</title>
      <link>https://yaasita.github.io/2016/09/04/nepu</link>
      <pubDate>Sun, 04 Sep 2016 03:13:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/09/04/nepu</guid>
      <description>Vita版のやつ
ギョウ界チ武道会 クリアしたキャラ
 ネプチューヌ
 ノワール
 ブラン
 ベール
 ネプギア
 ユニ
 ロム
 ラム
 デンゲキコ
 パープルハート
 ブラックハート
 ホワイトハート
 グリーンハート
 パープルシスター
 ブラックシスター
 ホワイトシスター(左)
 ホワイトシスター(右)
 ファミ通
  -&amp;gt; 取得したアイテムで審議判定できる
http://catmiimi.com/nepu_military
参考リンク http://catmiimi.com/nepu</description>
    </item>
    
    <item>
      <title>smplayerでリピート再生</title>
      <link>https://yaasita.github.io/2016/08/27/smplayer</link>
      <pubDate>Sat, 27 Aug 2016 14:33:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/08/27/smplayer</guid>
      <description>ずっとループして再生
 再生(P) → A-Bセクション(A) → 繰り返し&amp;reg;
  </description>
    </item>
    
  </channel>
</rss>
