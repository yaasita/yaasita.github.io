<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on # cd ~yaasita</title>
    <link>https://yaasita.github.io/post/</link>
    <description>Recent content in Posts on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 09 May 2020 04:42:51 +0900</lastBuildDate>
    
	<atom:link href="https://yaasita.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BigQueryのカラムタイプ変更</title>
      <link>https://yaasita.github.io/2020/05/09/bigquery-type-change/</link>
      <pubDate>Sat, 09 May 2020 04:42:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/05/09/bigquery-type-change/</guid>
      <description>BigQueryのカラム変更はREQUIREDをNULLABLEにする以外は出来ません
テーブル スキーマの手動変更
作り直すしかないんですが、分割テーブルだともう一手間必要ですよという話
例えば以下のように分割テーブルを作るとします
bq mk --dataset test bq mk --table \ --time_partitioning_type DAY \ test.first  データを投入
echo -e &amp;quot;1\thoge&amp;quot; &amp;gt; /tmp/data.tsv echo -e &amp;quot;2\thuga&amp;quot; &amp;gt;&amp;gt; /tmp/data.tsv echo -e &amp;quot;3\tabcd&amp;quot; &amp;gt;&amp;gt; /tmp/data.tsv bq load --source_format=CSV --field_delimiter=&amp;quot;\t&amp;quot; \ &#39;test.first$20200501&#39; /tmp/data.tsv id:NUMERIC,description:STRING bq load --source_format=CSV --field_delimiter=&amp;quot;\t&amp;quot; \ &#39;test.first$20200502&#39; /tmp/data.tsv id:NUMERIC,description:STRING  取り込み時間別に分割されているのが分かります
echo &amp;quot;#standardSQL&amp;quot; &amp;gt; /tmp/query.sql echo &#39;select _PARTITIONTIME as pt, count(*) as count from test.first group by _PARTITIONTIME order by pt;&#39; &amp;gt;&amp;gt; /tmp/query.</description>
    </item>
    
    <item>
      <title>express.jsでpostのrawBodyを取得</title>
      <link>https://yaasita.github.io/2020/04/28/rawpostdata/</link>
      <pubDate>Tue, 28 Apr 2020 01:00:16 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/04/28/rawpostdata/</guid>
      <description>multipart/form-dataでPOSTされた奴を、処理するCloud functionsを書いてて必要になったので
 呼び出し側はこんな感じでやってる
 </description>
    </item>
    
    <item>
      <title>microk8sとskaffold</title>
      <link>https://yaasita.github.io/2020/03/29/microk8s_and_skaffold/</link>
      <pubDate>Sun, 29 Mar 2020 03:24:06 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/03/29/microk8s_and_skaffold/</guid>
      <description>microk8sとskaffoldをこんな感じで使う

インストール
snap install microk8s --class microk8s.kubectl config view --raw &amp;gt; ~/.kube/config  必要サービスの起動
microk8s.enable dns registry storage skaffold dev --no-prune=false --cache-artifacts=false --default-repo localhost:32000 -f skaffold.yaml  こんな感じにやると、リポジトリ部分を読み替えてくれるので便利
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>GKEでCloud SQL Proxyをsocketで使う</title>
      <link>https://yaasita.github.io/2020/02/28/k8s-cloudsql-proxy-with-socket/</link>
      <pubDate>Fri, 28 Feb 2020 04:08:58 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/02/28/k8s-cloudsql-proxy-with-socket/</guid>
      <description>GKEでもGAEみたいにCloud SQLに繋げたい場合の話
公式ドキュメントのサンプルだとこんな感じにport接続にしてる
https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/master/cloudsql/mysql_wordpress_deployment.yaml
socket接続の場合はこんな感じ
 参考
k8s サイドカーコンテナについて</description>
    </item>
    
    <item>
      <title>続 chromebookでbackslashを入力</title>
      <link>https://yaasita.github.io/2020/01/17/backslash-with-vim/</link>
      <pubDate>Fri, 17 Jan 2020 17:22:02 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/01/17/backslash-with-vim/</guid>
      <description>前回 の続き
以下をvimrcに追記して事なきを得た
inoremapって非ASCII文字でも行けるみたい
inoremap ¥ \ cnoremap ¥ \  </description>
    </item>
    
    <item>
      <title>chromebookでbackslashを入力</title>
      <link>https://yaasita.github.io/2020/01/11/chromebook-backslash/</link>
      <pubDate>Sat, 11 Jan 2020 15:47:07 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/01/11/chromebook-backslash/</guid>
      <description>今持ってるchromebookだとバックスラッシュ(0x5C)が入らない
半角モードにして￥キーを押すとU+00A5が入力されてしまう
入力には全角モードにして、￥キー押した後に変換して、バックスラッシュを選択する必要がある
もしくは、Linux内なら、fcitx経由で入力すれば半角￥キーでバックスラッシュになった
WindowsとかMacなら一発だけど、これは不便かも・・・プログラミングの時にも困るし・・・

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>Github Pagesになってるリポジトリをチェック</title>
      <link>https://yaasita.github.io/2020/01/07/check-github-pages/</link>
      <pubDate>Tue, 07 Jan 2020 18:55:03 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/01/07/check-github-pages/</guid>
      <description>どのリポジトリがGithub Pagesの設定がされているか？
調べたくなったので・・・
Github pagesの設定されてるリポジトリ一覧を簡単に確認できればいいのに・・・
 </description>
    </item>
    
    <item>
      <title>GCPの外部IPアドレスが有料になる件</title>
      <link>https://yaasita.github.io/2020/01/06/gcp-ex-ip/</link>
      <pubDate>Mon, 06 Jan 2020 23:06:41 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/01/06/gcp-ex-ip/</guid>
      <description>外部IPが有料になりそうだからどうしようかという話
一部では無料範囲内なら課金されないみたいな書き方もされてるけど、今月の請求には不穏な項目がある
Credit External IPs will not be charged until April 1, 2020.  
んで、外部IPを無しにして、gcloud compute ssh で繋げるのは良いんだけど、外部IPが無いと外と通信できないからapt installもできない。。。。
あと、上記コマンドはsshポートを解放してないと駄目ぽい（正確にはIAPからのアクセスを許可すれば良いだけぽいが）
とりあえず課金されてから考えるか・・・
参考リンク  外部IPを持たないGCEインスタンスでweb開発 GCP/GCE の固定グローバルIPアドレス、2020年より有料化   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>chromebookの日本語入力</title>
      <link>https://yaasita.github.io/2020/01/01/chromebook-japanese/</link>
      <pubDate>Wed, 01 Jan 2020 13:27:50 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2020/01/01/chromebook-japanese/</guid>
      <description>明けましておめでとうございます。
chromebookで日本語入力する場合はローカルの場合はfcitx-mozcを使って入力
リモートに接続する場合は、一旦踏み台サーバーを経由して、X転送したqterminalを使っている
ssh humidai-server -XC export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx fcitx qterminal  自分の環境では-Cオプションを付けない場合は800kbpsくらい通信するが、つけると100kbpsになるので外でやる時にはつけた方が良さそう
回線が細いテザリング環境では ttyd を立てて、ポートフォワーディングでつないだ方が良いかも
Ctrl-wがchromeのタブ閉じになってしまうので微妙かなと思ったんだけど、「その他のツール(L)」 =&amp;gt; 「ショートカットを作成」からアプリとして作れば、Ctrl-wも使えた
こっちなら日本語入力も出来るのでこっちの方が良いかもしれない
通信量も1kbps位だし</description>
    </item>
    
    <item>
      <title>再度hugoアップデート</title>
      <link>https://yaasita.github.io/2019/12/24/hugo-update2/</link>
      <pubDate>Tue, 24 Dec 2019 17:58:35 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/24/hugo-update2/</guid>
      <description>前回からまたアップデート
hugoのバージョンを 0.56.3 =&amp;gt; v0.62.0 まで上げた
注意点としては, v0.58.0 から .Pagesの挙動が変わっているので
以下の通り、.Site.RegularPages に変更する必要がある
Building sites … WARN 2019/12/23 17:34:34 In the next Hugo version (0.58.0) we will change how $home.Pages behaves. If you want to list all regular pages, replace .Pages or .Data.Pages with .Site.RegularPages in your home page template. あとインラインのHTMLがデフォルトで削除されるので使ってたらコレもconfig.tomlへ追記
[markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true hardWraps = true 最近非互換のバージョンアップ多くない？
アップデートがめんどくさくなってきたな。。。</description>
    </item>
    
    <item>
      <title>chromebookが最高だった</title>
      <link>https://yaasita.github.io/2019/12/23/chromebook/</link>
      <pubDate>Mon, 23 Dec 2019 05:58:32 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/23/chromebook/</guid>
      <description>ASUS の C434TA-AI0084 を買ったのでレビュー
chromeOS  起動もアプリの動作も全体的に速くてとても良い smartlockが失敗する時がある  解除がちょっと遅い10秒くらい待たされる   chromeの複数ユーザー機能が使えない  多重ログイン機能はあるけどちょっと微妙  別ユーザーへスイッチする場合はsmartlockで解除できない 別ユーザー側のAndroidアプリ、Linux環境は使えない(chromeだけ) 後述のLinux環境でchromium入れてそこでアカウント切り替えする手もある 同時にログインできないだけなので、別ユーザを追加してスイッチすることは可能      ディスプレイ  タブレットには少し重い 解像度は 2194x1234 ～ 1182x665の範囲で調整可能 起動毎にバックライトの明るさがリセットされてしまう(音量は記憶してるのに。。。) グレア液晶は問題なし綺麗  テザリング  Moto E5 とbluetoothでのテザリングが出来なかった  とりあえずUSBテザリングは刺すだけで使えたので良しとしてます    キーボード  Deleteキーが無いけど、Alt + Backspaceで問題なし かな/英語キーと, 半角全角切り替えキーがあるのでMac派でもWindows派でも大丈夫かも キーボードのバックライトは消せない ←Alt + 明るさキーで消せました  Androidアプリ  ほとんどのアプリは問題なかった 大画面でAndroidアプリ使うのは割と快適(例 tumblr) Android版Excelでとりあえず見るのはOKそう タウンWifiみたいなWifiを制御するアプリは上手く動かないかもしれない(要検証) パズドラは動かない  Linux環境 OS  Debian9なのでDebian10にアップデートされるのを期待 使い始めるのはすごく簡単、設定から有効ボタンを押すだけ 丸ごとLinux環境バックアップ機能あり  バックアップは丸ごとtarで固めて1ファイルにしてくれるのでハンドリングはしやすい   USB共有機能あり /opt/google/cros-containers/bin/.</description>
    </item>
    
    <item>
      <title>GCP Cloud Functions内からサービスアカウントのtoken取る</title>
      <link>https://yaasita.github.io/2019/12/08/service-account-in-cf/</link>
      <pubDate>Sun, 08 Dec 2019 05:12:12 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/08/service-account-in-cf/</guid>
      <description>Cloud Functionsからサービスアカウントのアクセストークンをどうやって取るの？と疑問に思ったので調べた
Google Compute Engineと同じ取り方でOK
&amp;quot;use strict&amp;quot;; const fetch = require(&amp;quot;node-fetch&amp;quot;); exports.handler = async (req, res) =&amp;gt; { const url = &amp;quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/&amp;quot; + &amp;quot;[サービスアカウント名]/token&amp;quot;; const result = await fetch(url, { method: &amp;quot;GET&amp;quot;, headers: { &amp;quot;Metadata-Flavor&amp;quot;: &amp;quot;Google&amp;quot; } }); const token = await result.text(); console.log(token); res.status(200).send(&amp;quot;OK&amp;quot;); };  なんでドキュメントにも書いてある今更な事を書くかというと日本語ドキュメントには見出しが無いんですよね。。。。

まだ翻訳終わってないならまだしも（本当は英文のままで良いからタイトルくらいは残してほしいが) &amp;ldquo;Function Identity&amp;quot;とかクリックするとちゃんと日本語版あるんですよね
なんかメニューがバグってるのかな・・・
とりあえず英語版から探すのをオススメします&amp;hellip;
参考リンク
 関数ID Compute Metadata Server   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].</description>
    </item>
    
    <item>
      <title>GCPでアクセストークンを取得する</title>
      <link>https://yaasita.github.io/2019/11/14/gcp-access-token/</link>
      <pubDate>Thu, 14 Nov 2019 22:32:41 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/11/14/gcp-access-token/</guid>
      <description>ほとんどのサービスは クライアントライブラリ を使えば
export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json  みたいに環境変数を設定するだけで良いのだが、Cloud Build 等は access tokenを取得して叩く必要がある
という事でGCPのサービスアカウントからアクセストークンを取得するコード
 スコープ一覧はこちら
https://developers.google.com/identity/protocols/googlescopes
アクセストークンのテストは DLP とかがお手軽で良いかな
参考リンク  jose API Document Using OAuth 2.0 for Server to Server Applications  </description>
    </item>
    
    <item>
      <title>osu!taikoのskin</title>
      <link>https://yaasita.github.io/2019/10/27/osu/</link>
      <pubDate>Sun, 27 Oct 2019 03:00:31 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/10/27/osu/</guid>
      <description>osu!taikoのスキン
これが一番良かった
概要欄からダウンロードできる</description>
    </item>
    
    <item>
      <title>AtCoder Beginner Contest 142のD問題</title>
      <link>https://yaasita.github.io/2019/09/30/atcoder-abc142/</link>
      <pubDate>Mon, 30 Sep 2019 05:05:34 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/30/atcoder-abc142/</guid>
      <description>問題: D - Disjoint Set of Common Divisors
方針はユークリッドの互除法で最大公約数を出して、最大公約数を素因数分解
存在する素数の数+1(今回は1もお互いに素の数として含めるため)でOKぽい
perlで書いてみる
 解説動画</description>
    </item>
    
    <item>
      <title>systemd timerはちゃんと動いてる？</title>
      <link>https://yaasita.github.io/2019/09/29/systemd-timer/</link>
      <pubDate>Sun, 29 Sep 2019 16:51:09 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/29/systemd-timer/</guid>
      <description>systemdタイマーがちゃんと動いてるか確認したほうが良いよというお話
systemctl list-timers --allコマンドで一覧が見れるあれです
debian10だと /etc/cron.daily にあるスクリプトでこんな感じに書かれてたら、systemd timerの方を使ってる
if [ -d /run/systemd/system ]; then exit 0 fi  前回 と同様にノートパソコンのバッテリー稼働と誤って判断されることに起因する問題
例えばlogrotateとかみると
systemctl cat logrotate  こんな一文がある
ConditionACPower=true  これはバッテリー駆動の時は動かさないって意味らしいんだけど、どうも判定が狂ってるみたいでずっと実行されなかった
なので、以下のコマンドでoverride.conf作って判定を無効化した
systemctl edit logrotate # 書いた内容 [Unit] ConditionACPower=  というわけで
cronだけじゃなくて, systemd-timerもちゃんと見ておかないといけない
journalctl -n 10 -u logrotate | egrep -i &amp;quot;condition check.*skipped&amp;quot;  とりあえず分かった、バッテリー時の判定が入ってるtimer
 apt-daily-upgrade man-db logrotate anacron apt-daily  </description>
    </item>
    
    <item>
      <title>ビリビリ動画とcrunchyrollのIP制限をGCPで検証</title>
      <link>https://yaasita.github.io/2019/09/14/anime-ip-block/</link>
      <pubDate>Sat, 14 Sep 2019 22:21:43 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/14/anime-ip-block/</guid>
      <description>bilibili動画とcrunchyrollのIP制限はどんな感じなのか
GCPの各リージョンからアクセスして試してみる
rttは自宅から該当サーバーまでのpingしたときの平均値
なのでISPによって全然違うと思うので参考値ということで
   region bilibili crunchyroll rtt(ms)     asia-east1 (台湾) ng ok 60.149   asia-east2 (香港) ng ok 76.986   asia-northeast1 (東京) ng ok 29.624   asia-northeast2 (大阪) ng ok 37.401   asia-south1 (ムンバイ) ng ok 144.055   asia-southeast1 (シンガポール) ng ok 89.755   australia-southeast1 (シドニー) ng ok 122.193   europe-north1 (フィンランド) ng ok 256.714   europe-west1 (ベルギー) ng ok 229.</description>
    </item>
    
    <item>
      <title>on_ac_powerコマンドについて</title>
      <link>https://yaasita.github.io/2019/08/16/on-ac-power/</link>
      <pubDate>Fri, 16 Aug 2019 04:45:45 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/16/on-ac-power/</guid>
      <description>debian10にした関係でLinuxネタが続く
PCがバッテリーで動いてるかどうか判定するのにon_ac_powerってコマンドがある
そんで、バッテリー駆動の場合は電力を節約したいので、anacronとかを動かなくする制御がはいってる
例えば、/etc/cron.daily/mlocate の場合
if which on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then ON_BATTERY=0 on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || ON_BATTERY=$? if [ &amp;quot;$ON_BATTERY&amp;quot; -eq 1 ]; then exit 0 fi fi  こんな感じでon_ac_powerが1を返したらバッテリー駆動と判断しすぐに処理を止めてしまう
んで LB-C110B っていうひと昔前のノートPCだとこの判定が狂ってしまい常にバッテリー駆動と判定されてしまった
このままだと永遠にlocateコマンドが使えないので、divertで退避させた
dpkg-divert --divert /sbin/on_ac_power.disable --rename /sbin/on_ac_power ln -s /bin/true /sbin/on_ac_power  おしまい</description>
    </item>
    
    <item>
      <title>1から100の偶数の和を求めるやつ</title>
      <link>https://yaasita.github.io/2019/08/15/sum-even-number/</link>
      <pubDate>Thu, 15 Aug 2019 04:10:11 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/15/sum-even-number/</guid>
      <description>「1から100の偶数の和を求めるワンライナー」まとめ
perlでやってみる
perl -E &#39;$s+=$_%2?0:$_ for 1..100;say$s&#39; perl -E &#39;s/.+/$s+=$&amp;amp;%2?0:$&amp;amp;/e for 1..100;say$s&#39; perl -E &#39;$&amp;quot;=&amp;quot;+&amp;quot;;$a=&amp;quot;@{[1..100]}&amp;quot;;$a=~s/\d+/$&amp;amp;%2?0:$&amp;amp;/eg;eval&amp;quot;say $a&amp;quot;&#39; perl -E &#39;$&amp;quot;=&amp;quot;+&amp;quot;;eval&amp;quot;say @{[grep{$_%2==0}1..100]}&amp;quot;;&#39;  4つ思いついた
結論 simple is best</description>
    </item>
    
    <item>
      <title>各種サーバの中間証明書の扱い</title>
      <link>https://yaasita.github.io/2019/08/14/ssl-capath/</link>
      <pubDate>Wed, 14 Aug 2019 10:20:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/14/ssl-capath/</guid>
      <description>中間証明書をどう設定するか問題
postfix smtpd_tls_cert_file = /etc/letsencrypt/live/example.net/cert.pem smtpd_tls_key_file = /etc/letsencrypt/live/example.net/privkey.pem smtpd_tls_CAfile = /etc/letsencrypt/live/example.net/chain.pem  Let&#39;s Encryptの場合こんな感じ
smtpd_tls_CAfileに中間証明書を指定する
smtpd_tls_cert_fileにfullchain.pemを指定するやり方はNG
dovecot 10-ssl.conf
ssl_ca = &amp;lt;/etc/letsencrypt/live/example.net/chain.pem  これはダメ
この設定はクライアント証明書用ですので
正しくは、こんな感じに、まとめたやつを指定すればOK
ssl_cert = &amp;lt;/etc/letsencrypt/live/example.net/fullchain.pem  apache SSLCACertificateFileという設定はクライアント証明書用なのでここに入れない
SSLCertificateFile /etc/letsencrypt/live/example.net/fullchain.pem  dovecot同様に中間証明書もまとめて指定する
まとめ この問題はスマホのK-9 Mailでメール読もうとしたときに判明した
(突然CertPathValidatorExceptionって怒られた)
thunderbirdでメール読んでた時には発生しなかったのでなんだろなーと思ったんだけどこっちは多めにroot証明書入ってるみたいね

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   サーバー設定後はこんな感じで中間証明書まで確認したほうが良いかも
openssl s_client -connect example.org:465 -showcerts  thunderbirdだけで確認すると痛い目を見るよと言うお話でした</description>
    </item>
    
  </channel>
</rss>