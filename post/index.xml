<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on # cd ~yaasita</title>
    <link>https://yaasita.github.io/post/</link>
    <description>Recent content in Posts on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 24 Dec 2019 17:58:35 +0900</lastBuildDate>
    
	<atom:link href="https://yaasita.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>再度hugoアップデート</title>
      <link>https://yaasita.github.io/2019/12/24/hugo-update2/</link>
      <pubDate>Tue, 24 Dec 2019 17:58:35 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/24/hugo-update2/</guid>
      <description>前回からまたアップデート
hugoのバージョンを 0.56.3 =&amp;gt; v0.62.0 まで上げた
注意点としては, v0.58.0 から .Pagesの挙動が変わっているので
以下の通り、.Site.RegularPages に変更する必要がある
Building sites … WARN 2019/12/23 17:34:34 In the next Hugo version (0.58.0) we will change how $home.Pages behaves. If you want to list all regular pages, replace .Pages or .Data.Pages with .Site.RegularPages in your home page template. あとインラインのHTMLがデフォルトで削除されるので使ってたらコレもconfig.tomlへ追記
[markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true hardWraps = true なんか最近hugoのアップデートがめんどくさくなってきたな。。。</description>
    </item>
    
    <item>
      <title>chromebookが最高だった</title>
      <link>https://yaasita.github.io/2019/12/23/chromebook/</link>
      <pubDate>Mon, 23 Dec 2019 05:58:32 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/23/chromebook/</guid>
      <description>ASUS の C434TA-AI0084 を買ったのでレビュー
chromeOS  起動もアプリの動作も全体的に速くてとても良い smartlockが失敗する時がある  解除がちょっと遅い10秒くらい待たされる   chromeの複数ユーザー機能が使えない  多重ログイン機能はあるけどちょっと微妙  別ユーザーへスイッチする場合はsmartlockで解除できない 別ユーザー側のAndroidアプリ、Linux環境は使えない(chromeだけ) 後述のLinux環境でchromium入れてそこでアカウント切り替えする手もある 同時にログインできないだけなので、別ユーザを追加してスイッチすることは可能      ディスプレイ  タブレットには少し重い 解像度は 2194x1234 ～ 1182x665の範囲で調整可能 起動毎にバックライトの明るさがリセットされてしまう(音量は記憶してるのに。。。) グレア液晶は問題なし綺麗  テザリング  Moto E5 とbluetoothでのテザリングが出来なかった  とりあえずUSBテザリングは刺すだけで使えたので良しとしてます    キーボード  Deleteキーが無いけど、Alt + Backspaceで問題なし かな/英語キーと, 半角全角切り替えキーがあるのでMac派でもWindows派でも大丈夫かも キーボードのバックライトは消せない  Androidアプリ  ほとんどのアプリは問題なかった 大画面でAndroidアプリ使うのは割と快適(例 tumblr) Android版Excelでとりあえず見るのはOKそう タウンWifiみたいなWifiを制御するアプリは上手く動かないかもしれない(要検証) パズドラは動かない  Linux環境 OS  Debian9なのでDebian10にアップデートされるのを期待 使い始めるのはすごく簡単、設定から有効ボタンを押すだけ 丸ごとLinux環境バックアップ機能あり  バックアップは丸ごとtarで固めて1ファイルにしてくれるのでハンドリングはしやすい   USB共有機能あり /opt/google/cros-containers/bin/.</description>
    </item>
    
    <item>
      <title>GCP Cloud Functions内からサービスアカウントのtoken取る</title>
      <link>https://yaasita.github.io/2019/12/08/service-account-in-cf/</link>
      <pubDate>Sun, 08 Dec 2019 05:12:12 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/08/service-account-in-cf/</guid>
      <description>Cloud Functionsからサービスアカウントのアクセストークンをどうやって取るの？と疑問に思ったので調べた
Google Compute Engineと同じ取り方でOK
&amp;quot;use strict&amp;quot;; const fetch = require(&amp;quot;node-fetch&amp;quot;); exports.handler = async (req, res) =&amp;gt; { const url = &amp;quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/&amp;quot; + &amp;quot;[サービスアカウント名]/token&amp;quot;; const result = await fetch(url, { method: &amp;quot;GET&amp;quot;, headers: { &amp;quot;Metadata-Flavor&amp;quot;: &amp;quot;Google&amp;quot; } }); const token = await result.text(); console.log(token); res.status(200).send(&amp;quot;OK&amp;quot;); };  なんでドキュメントにも書いてある今更な事を書くかというと日本語ドキュメントには見出しが無いんですよね。。。。

まだ翻訳終わってないならまだしも（本当は英文のままで良いからタイトルくらいは残してほしいが) &amp;ldquo;Function Identity&amp;quot;とかクリックするとちゃんと日本語版あるんですよね
なんかメニューがバグってるのかな・・・
とりあえず英語版から探すのをオススメします&amp;hellip;
参考リンク
 関数ID Compute Metadata Server   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].</description>
    </item>
    
    <item>
      <title>GCPでアクセストークンを取得する</title>
      <link>https://yaasita.github.io/2019/11/14/gcp-access-token/</link>
      <pubDate>Thu, 14 Nov 2019 22:32:41 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/11/14/gcp-access-token/</guid>
      <description>ほとんどのサービスは クライアントライブラリ を使えば
export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json  みたいに環境変数を設定するだけで良いのだが、Cloud Build 等は access tokenを取得して叩く必要がある
という事でGCPのサービスアカウントからアクセストークンを取得するコード
 スコープ一覧はこちら
https://developers.google.com/identity/protocols/googlescopes
アクセストークンのテストは DLP とかがお手軽で良いかな
参考リンク  jose API Document Using OAuth 2.0 for Server to Server Applications  </description>
    </item>
    
    <item>
      <title>osu!taikoのskin</title>
      <link>https://yaasita.github.io/2019/10/27/osu/</link>
      <pubDate>Sun, 27 Oct 2019 03:00:31 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/10/27/osu/</guid>
      <description>osu!taikoのスキン
これが一番良かった
概要欄からダウンロードできる</description>
    </item>
    
    <item>
      <title>AtCoder Beginner Contest 142のD問題</title>
      <link>https://yaasita.github.io/2019/09/30/atcoder-abc142/</link>
      <pubDate>Mon, 30 Sep 2019 05:05:34 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/30/atcoder-abc142/</guid>
      <description>問題: D - Disjoint Set of Common Divisors
方針はユークリッドの互除法で最大公約数を出して、最大公約数を素因数分解
存在する素数の数+1(今回は1もお互いに素の数として含めるため)でOKぽい
perlで書いてみる
 解説動画</description>
    </item>
    
    <item>
      <title>systemd timerはちゃんと動いてる？</title>
      <link>https://yaasita.github.io/2019/09/29/systemd-timer/</link>
      <pubDate>Sun, 29 Sep 2019 16:51:09 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/29/systemd-timer/</guid>
      <description>systemdタイマーがちゃんと動いてるか確認したほうが良いよというお話
systemctl list-timers --allコマンドで一覧が見れるあれです
debian10だと /etc/cron.daily にあるスクリプトでこんな感じに書かれてたら、systemd timerの方を使ってる
if [ -d /run/systemd/system ]; then exit 0 fi  前回 と同様にノートパソコンのバッテリー稼働と誤って判断されることに起因する問題
例えばlogrotateとかみると
systemctl cat logrotate  こんな一文がある
ConditionACPower=true  これはバッテリー駆動の時は動かさないって意味らしいんだけど、どうも判定が狂ってるみたいでずっと実行されなかった
なので、以下のコマンドでoverride.conf作って判定を無効化した
systemctl edit logrotate # 書いた内容 [Unit] ConditionACPower=  というわけで
cronだけじゃなくて, systemd-timerもちゃんと見ておかないといけない
journalctl -n 10 -u logrotate | egrep -i &amp;quot;condition check.*skipped&amp;quot;  とりあえず分かった、バッテリー時の判定が入ってるtimer
 apt-daily-upgrade man-db logrotate anacron apt-daily  </description>
    </item>
    
    <item>
      <title>ビリビリ動画とcrunchyrollのIP制限をGCPで検証</title>
      <link>https://yaasita.github.io/2019/09/14/anime-ip-block/</link>
      <pubDate>Sat, 14 Sep 2019 22:21:43 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/14/anime-ip-block/</guid>
      <description>bilibili動画とcrunchyrollのIP制限はどんな感じなのか
GCPの各リージョンからアクセスして試してみる
rttは自宅から該当サーバーまでのpingしたときの平均値
なのでISPによって全然違うと思うので参考値ということで
   region bilibili crunchyroll rtt(ms)     asia-east1 (台湾) ng ok 60.149   asia-east2 (香港) ng ok 76.986   asia-northeast1 (東京) ng ok 29.624   asia-northeast2 (大阪) ng ok 37.401   asia-south1 (ムンバイ) ng ok 144.055   asia-southeast1 (シンガポール) ng ok 89.755   australia-southeast1 (シドニー) ng ok 122.193   europe-north1 (フィンランド) ng ok 256.714   europe-west1 (ベルギー) ng ok 229.</description>
    </item>
    
    <item>
      <title>on_ac_powerコマンドについて</title>
      <link>https://yaasita.github.io/2019/08/16/on-ac-power/</link>
      <pubDate>Fri, 16 Aug 2019 04:45:45 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/16/on-ac-power/</guid>
      <description>debian10にした関係でLinuxネタが続く
PCがバッテリーで動いてるかどうか判定するのにon_ac_powerってコマンドがある
そんで、バッテリー駆動の場合は電力を節約したいので、anacronとかを動かなくする制御がはいってる
例えば、/etc/cron.daily/mlocate の場合
if which on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then ON_BATTERY=0 on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || ON_BATTERY=$? if [ &amp;quot;$ON_BATTERY&amp;quot; -eq 1 ]; then exit 0 fi fi  こんな感じでon_ac_powerが1を返したらバッテリー駆動と判断しすぐに処理を止めてしまう
んで LB-C110B っていうひと昔前のノートPCだとこの判定が狂ってしまい常にバッテリー駆動と判定されてしまった
このままだと永遠にlocateコマンドが使えないので、divertで退避させた
dpkg-divert --divert /sbin/on_ac_power.disable --rename /sbin/on_ac_power ln -s /bin/true /sbin/on_ac_power  おしまい</description>
    </item>
    
    <item>
      <title>1から100の偶数の和を求めるやつ</title>
      <link>https://yaasita.github.io/2019/08/15/sum-even-number/</link>
      <pubDate>Thu, 15 Aug 2019 04:10:11 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/15/sum-even-number/</guid>
      <description>「1から100の偶数の和を求めるワンライナー」まとめ
perlでやってみる
perl -E &#39;$s+=$_%2?0:$_ for 1..100;say$s&#39; perl -E &#39;s/.+/$s+=$&amp;amp;%2?0:$&amp;amp;/e for 1..100;say$s&#39; perl -E &#39;$&amp;quot;=&amp;quot;+&amp;quot;;$a=&amp;quot;@{[1..100]}&amp;quot;;$a=~s/\d+/$&amp;amp;%2?0:$&amp;amp;/eg;eval&amp;quot;say $a&amp;quot;&#39; perl -E &#39;$&amp;quot;=&amp;quot;+&amp;quot;;eval&amp;quot;say @{[grep{$_%2==0}1..100]}&amp;quot;;&#39;  4つ思いついた
結論 simple is best</description>
    </item>
    
    <item>
      <title>各種サーバの中間証明書の扱い</title>
      <link>https://yaasita.github.io/2019/08/14/ssl-capath/</link>
      <pubDate>Wed, 14 Aug 2019 10:20:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/14/ssl-capath/</guid>
      <description>中間証明書をどう設定するか問題
postfix smtpd_tls_cert_file = /etc/letsencrypt/live/example.net/cert.pem smtpd_tls_key_file = /etc/letsencrypt/live/example.net/privkey.pem smtpd_tls_CAfile = /etc/letsencrypt/live/example.net/chain.pem  Let&#39;s Encryptの場合こんな感じ
smtpd_tls_CAfileに中間証明書を指定する
smtpd_tls_cert_fileにfullchain.pemを指定するやり方はNG
dovecot 10-ssl.conf
ssl_ca = &amp;lt;/etc/letsencrypt/live/example.net/chain.pem  これはダメ
この設定はクライアント証明書用ですので
正しくは、こんな感じに、まとめたやつを指定すればOK
ssl_cert = &amp;lt;/etc/letsencrypt/live/example.net/fullchain.pem  apache SSLCACertificateFileという設定はクライアント証明書用なのでここに入れない
SSLCertificateFile /etc/letsencrypt/live/example.net/fullchain.pem  dovecot同様に中間証明書もまとめて指定する
まとめ この問題はスマホのK-9 Mailでメール読もうとしたときに判明した
(突然CertPathValidatorExceptionって怒られた)
thunderbirdでメール読んでた時には発生しなかったのでなんだろなーと思ったんだけどこっちは多めにroot証明書入ってるみたいね

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   サーバー設定後はこんな感じで中間証明書まで確認したほうが良いかも
openssl s_client -connect example.org:465 -showcerts  thunderbirdだけで確認すると痛い目を見るよと言うお話でした</description>
    </item>
    
    <item>
      <title>虫よけスプレー</title>
      <link>https://yaasita.github.io/2019/07/29/musiyoke/</link>
      <pubDate>Mon, 29 Jul 2019 03:42:37 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/07/29/musiyoke/</guid>
      <description>虫除けスプレーで最近買ったこれが良かった
ベタベタしないので気にならない
フマキラー SKIN VAPEってやつかな
商品名はスキンベープミスト　200mlかも

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   そういや虫よけ剤に入ってるDEETって薬はなぜ虫が寄り付かないか謎らしい</description>
    </item>
    
    <item>
      <title>例のS3署名バージョン2について</title>
      <link>https://yaasita.github.io/2019/06/25/s3v2/</link>
      <pubDate>Tue, 25 Jun 2019 00:31:08 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/06/25/s3v2/</guid>
      <description>AWS S3の署名バージョン騒動
大丈夫ぽいけど一応調べた時につかったスクリプト
CloudTrailでログを有効化してからお使いください
 </description>
    </item>
    
    <item>
      <title>Cloud Runがすごく良い</title>
      <link>https://yaasita.github.io/2019/05/29/cloud-run/</link>
      <pubDate>Wed, 29 May 2019 21:42:23 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/05/29/cloud-run/</guid>
      <description>GCPのCloud Runがめっちゃ便利
覚えなきゃいけないルールは2つ
 Dockerにする事 環境変数 $PORT のポート番号でlistenしてレスポンスを返す事  これだけ
コマンドとかはこの辺見ればすぐできると思います
あと、Chunked Transferみたいな仕組みで進捗を返すみたいなAPIは難しいかもしれない
以下のようなプログラムでちょっとずつレスポンス返しても、バッファリングされてるみたいで、最後ドバっと返ってきた
 </description>
    </item>
    
    <item>
      <title>PKCEをJavaScriptで実装する</title>
      <link>https://yaasita.github.io/2019/04/29/pkce/</link>
      <pubDate>Mon, 29 Apr 2019 01:23:20 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/04/29/pkce/</guid>
      <description>code_verifier から code_challenge の生成方法について調べた
code_challenge_method=S256の場合は以下のような実装ロジックになる
node.jsで書いた
Oauth2のPKCE
base64エンコードじゃなくてbase64urlエンコードなのが注意点
 </description>
    </item>
    
    <item>
      <title>令和の対応に際して</title>
      <link>https://yaasita.github.io/2019/04/25/reiwa/</link>
      <pubDate>Thu, 25 Apr 2019 02:08:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/04/25/reiwa/</guid>
      <description>techrachoの記事
perlも追加でお願いします
 </description>
    </item>
    
    <item>
      <title>tarの差分バックアップ</title>
      <link>https://yaasita.github.io/2019/04/01/tar-backup/</link>
      <pubDate>Mon, 01 Apr 2019 16:12:46 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/04/01/tar-backup/</guid>
      <description>前回の続き
でctime変化しちゃってどうしたか？
ファイルサイズとファイル名を取っておいて差分を作ることにした
 こんな感じのスクリプトで、ファイル名 + tab + ファイルサイズで保存する
(厳密にやる場合はsha256とかで)
そんで現在のファイルリストも取って、差分をとる
diff -u previous.txt now.txt | egrep &amp;quot;^\+[^\+]&amp;quot; | perl -ple &#39;s/^\+//;s/\t.+//&#39; &amp;gt; tar.txt あとは-Tオプションで差分のファイルだけをtarで固める
tar -cvaf hoge.tgz -T tar.txt </description>
    </item>
    
    <item>
      <title>tarの-gオプションについて</title>
      <link>https://yaasita.github.io/2019/03/30/tar-g-option/</link>
      <pubDate>Sat, 30 Mar 2019 02:32:25 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/03/30/tar-g-option/</guid>
      <description>-g, &amp;ndash;listed-incremental
という増分バックアップに使われるオプションについてどうやって判定してるか？
それはctimeの変化を見ている
ctimeの変化で気をつけなければいけないことはハードリンクによるバックアップ
(rsync &amp;ndash;link-dest等)
例えば、以下のようなファイルが存在し
work/ `-- 1.txt  以下のコマンドを発行した場合
tar -g resume -cvf work.tar work/  初回なので当然全部がバックアップされる
このまま以下のコマンドを打てばディレクトリだけのバックアップになる(差分がないため)
tar -g resume -cvf work.tar work/  しかし、以下のようにハードリンクをするとctimeが変わってしまいバックアップ対象にリストされてしまう
stat work/1.txt # ctime確認 cp -al work work2 # linksを増やす stat work/1.txt # ctime更新されている tar -g resume -cvf work.tar work/ # 1.txtは対象になる rm -rf work2 # linksを減らす tar -g resume -cvf work.tar work/ # 1.txtは対象になる  なので、rsyncの差分バックアップの対象ディレクトリだったり、cp -alでのバックアップを取っている際はこれに注意する
うまく増分バックアップができなくなる
続き</description>
    </item>
    
    <item>
      <title>hugoアップデート</title>
      <link>https://yaasita.github.io/2019/03/12/hugo-update/</link>
      <pubDate>Tue, 12 Mar 2019 23:00:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/03/12/hugo-update/</guid>
      <description>久々にhugoをアップデート v0.41 =&amp;gt; v0.54まで上げた
ワーニング潰し アップデートに伴い
.Prev と .Nextが非推奨になったぽい マニュアル, コミット
なのでこれはそれぞれ以下のように修正すればOK(意味が逆なので分かりにくいけど)
 .Prev =&amp;gt; .NextPage .Next =&amp;gt; .PrevPage  OGP設定 某会社でこのブログのRSSフィードをSlackに流していると聞いたので設定してみました
上手く表示できてますか？
修正箇所
themes/hugo-theme-geppaku/layouts/partials/header.html
 {{ if .IsHome }} &amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{{ .Site.Title }}&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;website&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ .Site.BaseURL }}&amp;quot; /&amp;gt; {{ else }} &amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{{ .Title }}&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;article&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ .Site.BaseURL }}{{ .Page.Dir }}&amp;quot; /&amp;gt; {{ end }} &amp;lt;meta property=&amp;quot;og:site_name&amp;quot; content=&amp;quot;{{ .</description>
    </item>
    
    <item>
      <title>Windows10のクリップボード履歴機能</title>
      <link>https://yaasita.github.io/2019/03/10/clipboard/</link>
      <pubDate>Sun, 10 Mar 2019 22:47:52 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/03/10/clipboard/</guid>
      <description>Windows10に標準でクリップボード履歴機能が付いたらしい
 https://www.atmarkit.co.jp/ait/articles/1903/08/news028.html  Windows キー + Vで使えるようになる
cliborの方が使いやすそうな気がするけど、しばらくこっち使ってみる</description>
    </item>
    
    <item>
      <title>AlwaysOnSSL終了のお知らせ</title>
      <link>https://yaasita.github.io/2019/02/28/alwaysonssl/</link>
      <pubDate>Thu, 28 Feb 2019 01:44:13 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/02/28/alwaysonssl/</guid>
      <description>無料のSSL証明書AlwaysOnSSLがセキュリティ問題を指摘されてシャットダウンしたぽい
AlwaysOnSSL web security issues
S/MIME手に入るので良かったんだけどなぁ・・・
前回</description>
    </item>
    
    <item>
      <title>最近使ってる集中アプリ</title>
      <link>https://yaasita.github.io/2019/02/08/concentration/</link>
      <pubDate>Fri, 08 Feb 2019 00:52:50 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/02/08/concentration/</guid>
      <description>いろいろ試してみた
 Forest: 広告が邪魔 Focus To-Do: 複雑でよく分からなかった ブロックタイマー: なんか画面が付きっぱなしになる FLIP: 勉強用かな操作がむずい Studyplus: なんかポモドーロぽいの使えなかった  で結局Focus To-DoのWindowsアプリ版を使ってる</description>
    </item>
    
    <item>
      <title>ELB配下のどれか生きてるインスタンスのAPIを叩く</title>
      <link>https://yaasita.github.io/2019/01/21/post-under-elb/</link>
      <pubDate>Mon, 21 Jan 2019 03:24:13 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/01/21/post-under-elb/</guid>
      <description>構想

コード
 ELBからインスタンス一覧引っ張る所はまだ書いてない
明けましておめでとうございます
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>スマホ変えた</title>
      <link>https://yaasita.github.io/2018/12/19/sumaho/</link>
      <pubDate>Wed, 19 Dec 2018 01:06:14 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/12/19/sumaho/</guid>
      <description>Moto E5 2GB/16GBってやつに変更した
Android8まで上がった
ついでにSIMもIIJ mioからLINEモバイルに変えた</description>
    </item>
    
    <item>
      <title>dynamodbオンデマンド</title>
      <link>https://yaasita.github.io/2018/12/19/dynamodb/</link>
      <pubDate>Wed, 19 Dec 2018 00:53:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/12/19/dynamodb/</guid>
      <description>re:Invent 2018で言われたアレ
DynamoDBオンデマンド
のベンチを取ってみた
 ベンチマークに使ったスクリプト  結論  ほとんどDynamoDB ondemand でOKだと思うj オートスケールぽい挙動なのでちょっとずつスケールしてるぽい 200とかそんくらいのスパイクアクセスがある場合はあらかじめ、プロビジョニングキャパシティにしておいた方が良いと思う ただし、オンデマンドの有効化は一日一回だけなので注意  </description>
    </item>
    
    <item>
      <title>電源を変えた</title>
      <link>https://yaasita.github.io/2018/12/17/power-supply/</link>
      <pubDate>Mon, 17 Dec 2018 00:02:37 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/12/17/power-supply/</guid>
      <description>寒いせいでPCの調子が悪くなった
ANTEC(アンテック) NeoECO Classicシリーズ 650Wモデル NE650C
って3年くらい使った電源が、寒い日にうまくついてくれない。
（電源つけて2,3秒で再起動を繰り返す)
なので
KRPW-AK750W/88+ という玄人志向のやつに変更した
8000円くらいのやつ</description>
    </item>
    
    <item>
      <title>skypeのログフォーマットが変わってた</title>
      <link>https://yaasita.github.io/2018/12/02/skype2json/</link>
      <pubDate>Sun, 02 Dec 2018 01:28:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/12/02/skype2json/</guid>
      <description>のでちょっとスクリプト修正した
https://github.com/yaasita/skype2json
修正点  yarnじゃなくても良いと聞いたのでnpmにだけにした フォーマットが歴代合わせて3つあったので、3つスクリプト書いた(年代は適当) libに共通関数をまとめた  なんか新しいフォーマットだと
nsp_dataってカラムにjsonで突っ込んでるみたいね。json型が無いSQLiteのツライところ
まとめ ころころフォーマットが変わるけどSQLiteになってるからSkypeは簡単にバックアップ出来て良い
LINEはどうしたもんか</description>
    </item>
    
    <item>
      <title>vimとtranslate-shellを連携する</title>
      <link>https://yaasita.github.io/2018/11/23/translate/</link>
      <pubDate>Fri, 23 Nov 2018 00:54:50 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/23/translate/</guid>
      <description>translate-shellが便利だ
vimrcにこんな感じに書く
 英単語の意味をちょっと調べる  翻訳  なんか微妙に画面がバグってるけど、本当はちゃんと表示されてる
まとめ こういうちょっとした改善大事</description>
    </item>
    
    <item>
      <title>githubのwebhook受け取ってjenkins走らせる</title>
      <link>https://yaasita.github.io/2018/11/14/github2jenkins/</link>
      <pubDate>Wed, 14 Nov 2018 01:41:06 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/14/github2jenkins/</guid>
      <description>無かったので作りました
Github -&amp;gt; Mojolicious -&amp;gt; jenkins  </description>
    </item>
    
    <item>
      <title>HSTSの説明資料</title>
      <link>https://yaasita.github.io/2018/11/12/hsts/</link>
      <pubDate>Mon, 12 Nov 2018 01:24:39 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/12/hsts/</guid>
      <description>なんかで作ったので
HSTSとは HTTPでの通信を減らしよりセキュアなHTTPSを使うように促す仕組み
通常 通常HTTPリクエストをして、301、302等のリダイレクトによってHTTPSにアクセスし直す
が、HTTPでのやりとり部分に中間者攻撃のリスクが存在する

※厳密には301リダイレクトはブラウザがキャッシュするので2回目以降はサーバー側にリクエストしない
HSTS ヘッダ HSTSヘッダを受け取ると、ブラウザ側でHTTPをHTTPSに読み替えてリクエストする
通常のリダイレクトは違い、一旦 HSTSヘッダを受け取ると有効期間中は決してhttpによるリクエストをしない
(http:// ~ というリンクはブラウザ側で読み換える)

付与するヘッダーは以下のようなもの
strict-transport-security: max-age=31536000; includeSubDomains; preload   max-age: 有効時間（秒単位） includeSubDomains: サブドメインも含めるかどうか alis.to なら hoge.alis.to も有効になる preload: preloadに登録しても良いかどうか（後述）  HSTS preload HSTS preloadは予め hstspreload.org に自分のサイトを登録しておいて
初回リクエスト時からHTTPSを有効にしておく仕組み

メリット・デメリット  メリット  observatory の点数アップ (対外アピール） 盗聴・中間者攻撃リスクを軽減しよりセキュアになる   デメリット  証明書の運用を失敗できない サブドメインを含め、HTTPでの運用を一切できなくなる ローカルでのテスト時に偽の証明書を無視しにくくなる    通常だと出てくる証明書エラー無視のリンクが・・・

HSTSのサイトは証明書無視ボタンが出ない

windowsだとやり方があるらしいが、ローカルでの確認とかはやりにくくなる
/etc/hostsを化かして対応する、実ドメインでのリハーサル時はプライベートCA等で対応すること
 https://support.opendns.com/hc/en-us/articles/227989087-Chrome-for-Windows-only-HSTS-Certificate-Exception-Instructions https://moriya.xrea.jp/tdiary/20150827.html   function callback1(data){ var photos = data.</description>
    </item>
    
    <item>
      <title>徳丸さんのセキュリティ問題(CSRF)</title>
      <link>https://yaasita.github.io/2018/11/11/tokumaru-csrf/</link>
      <pubDate>Sun, 11 Nov 2018 01:33:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/11/tokumaru-csrf/</guid>
      <description>徳丸さんがCSRFの問題を出していたので考えてみる
問題：間違ったCSRF対策～初級編～
解答
https://github.com/yaasita/tokumaru-csrf-20181110
なんか最初はXMLHttpRequestとか駆使して、chgmailform.phpからtoken引っこ抜こうと思ったんだけど
CORSとかCORBで無理なんすよね
でよく見るとtokenが無いときの考慮がないよってやつでした
まとめ 最近のブラウザは良く出来てる</description>
    </item>
    
    <item>
      <title>mitmproxyが便利</title>
      <link>https://yaasita.github.io/2018/11/10/mitmproxy/</link>
      <pubDate>Sat, 10 Nov 2018 03:22:31 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/10/mitmproxy/</guid>
      <description>とっても便利なmitmproxyを使ってみた
概要 こんな感じでHTTPSなサイトも中間に入りこんでくれる
（root証明証を予め信頼しておく必要がある)
browser &amp;lt;---(指定のCA鍵で再署名)---- mitmproxy &amp;lt;---(HTTPSを一旦解く)----- web server  インストール apt install mitmproxy  設定 プライベートCAをやってるなら
 /etc/ssl/demoCA/private/cakey.pem /etc/ssl/demoCA/cacert.pem  この２ファイルを結合する
こんな感じで mitmproxy-ca.pem って名前でどっかのディレクトリに置く
-----BEGIN ENCRYPTED PRIVATE KEY----- ... -----END ENCRYPTED PRIVATE KEY----- -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- 実行 こんな感じで実行できる &amp;ndash;view-filter で表示させたいURLを絞れる
(hogedirの中にmitmproxy-ca.pemが入ってる)
mitmproxy --set confdir=/path/to/hogedir --view-filter m3u  画面中ではVimぽいキーバインドで色々操作できる
リクエストを選んで、wでストリームを保存できる
dump mitmproxyだけだと長いURLとかは省略されちゃったりするので、完全なものを見る場合にmitmdumpを使う
# getだけ抽出 mitmdump -nr /tmp/save -w outfile &amp;quot;~m get&amp;quot; # リクエスト一覧 mitmdump -nr /tmp/save  まとめ HTTPSのデバッグ時にめっちゃ便利</description>
    </item>
    
    <item>
      <title>CircleCIのキャッシュについて</title>
      <link>https://yaasita.github.io/2018/10/19/circleci/</link>
      <pubDate>Fri, 19 Oct 2018 03:03:35 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/10/19/circleci/</guid>
      <description>先に結論だけ
 キャッシュは一度書き込むとupdate出来ない キャッシュクリアは名前を変えて対応する  以下具体例
以下のようなキャッシュをした際に
古いバージョンのライブラリが入ってしまった場合
- restore_cache: keys: - v2-dependencies-{{ checksum &amp;quot;requirements.txt&amp;quot; }} - v2-dependencies- - run: name: install dependencies command: | python3 -m venv venv . venv/bin/activate pip install -r requirements.txt - save_cache: paths: - ./venv key: v2-dependencies-{{ checksum &amp;quot;requirements.txt&amp;quot; }} これを解消しようとして、以下のようにしてもcacheはupdateされない
- restore_cache: keys: - v2-dependencies-{{ checksum &amp;quot;requirements.txt&amp;quot; }} - v2-dependencies- - run: name: install dependencies command: | python3 -m venv venv . venv/bin/activate pip install -r requirements.</description>
    </item>
    
    <item>
      <title>全文検索n-gram</title>
      <link>https://yaasita.github.io/2018/09/29/n-gram/</link>
      <pubDate>Sat, 29 Sep 2018 04:25:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/29/n-gram/</guid>
      <description>N-gramについて
検索とインデックスについて作った
検討資料用にどうぞ
https://gist.github.com/yaasita/ea31d7bbfc839fc859fd7d713800088b</description>
    </item>
    
    <item>
      <title>skypeの会話ログをjsonに</title>
      <link>https://yaasita.github.io/2018/09/25/skype-log/</link>
      <pubDate>Tue, 25 Sep 2018 00:56:22 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/25/skype-log/</guid>
      <description>skypeの会話履歴をJSONにしておくやつ作った
https://github.com/yaasita/skype2json
logはsqliteで保存されている
こちらによるとskype for windows 10とskype for windows desktopの保存場所が違う

こっちが最近のやつ
場所: %localappdata%\Packages\Microsoft.SkypeApp_kzf8qxf38zg5c\LocalState

昔のやつ
場所: C:\Users\username\AppData\Roaming\Skype\username\main.db
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;skype1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;skype1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;skype2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;skype2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>SSL証明書のchain検証</title>
      <link>https://yaasita.github.io/2018/09/23/verify-certificate-chain/</link>
      <pubDate>Sun, 23 Sep 2018 01:02:54 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/23/verify-certificate-chain/</guid>
      <description>以下のようなチェインを検証したい時
AddTrust |_ ca1 |_ ca2 |_ hoge  こんな感じにコマンドを打つ
openssl verify -trusted /etc/ssl/certs/AddTrust_External_Root.pem \ -untrusted ca/ca1.pem \ -untrusted ca/ca2.pem \ hoge.pem*  verify -CAfileを指定して検証する例を見るけど、
インストールされてるデフォルトのrootCAも見ちゃうから
-no-CAfile, -no-CApathで無効化しなきゃだったりするのでこっちの方が良さそう</description>
    </item>
    
    <item>
      <title>Hugoをアップデート</title>
      <link>https://yaasita.github.io/2018/09/16/hugo-new-version/</link>
      <pubDate>Sun, 16 Sep 2018 15:48:27 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/16/hugo-new-version/</guid>
      <description>なんかこんなプルリクも来てたのでthemeもちょいと修正
たまにはhugoのbuild logみてwarning潰してかないとだな</description>
    </item>
    
    <item>
      <title>perlのクロージャ</title>
      <link>https://yaasita.github.io/2018/09/06/perl-closure/</link>
      <pubDate>Thu, 06 Sep 2018 02:43:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/06/perl-closure/</guid>
      <description>これでも良いけど
{ my $count; sub func { return ++$count; } }  最近ならこうstate使って
use feature qw(:5.10); sub func { state $count; return ++$count; }  ただstateって配列とかには使えない</description>
    </item>
    
    <item>
      <title>ubuntu18.04でDKIM設定</title>
      <link>https://yaasita.github.io/2018/08/18/dkim/</link>
      <pubDate>Sat, 18 Aug 2018 17:40:23 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/08/18/dkim/</guid>
      <description>インストール apt install opendkim opendkim-tools  opendkim設定 mkdir /etc/postfix/dkim/ opendkim-genkey -D /etc/postfix/dkim/ -d example.com -s mail # -d ドメイン # -s セレクタ chgrp opendkim /etc/postfix/dkim/* chmod g+r /etc/postfix/dkim/*  /etc/opendkim.conf
Syslog	yes LogWhy Yes UMask	007 Canonicalization	relaxed/relaxed Mode	sv Socket inet:8891@localhost PidFile /var/run/opendkim/opendkim.pid OversignHeaders	From TrustAnchorFile /usr/share/dns/root.key UserID opendkim KeyTable file:/etc/postfix/dkim/keytable SigningTable file:/etc/postfix/dkim/signingtable  /etc/postfix/dkim/keytable
mail._domainkey.example.net example.net:mail:/etc/postfix/dkim/mail.private  /etc/postfix/dkim/signingtable
example.net mail._domainkey.example.net  反映
systemctl restart opendkim.service  postfix設定 以下追記</description>
    </item>
    
    <item>
      <title>プライベートCAでダメなaltname</title>
      <link>https://yaasita.github.io/2018/08/05/private-ca-invalid/</link>
      <pubDate>Sun, 05 Aug 2018 00:57:46 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/08/05/private-ca-invalid/</guid>
      <description>openssl.cnf
subjectAltName=@alt_names [ alt_names ] DNS.1 = *.example.com IP.1 = 192.168.0.1  ここに書ける値についてのお話
IPでこういうのはダメ
 IP.1 = 192.168.0.* IP.2 = 192.168.0.0/24  IPアドレス範囲もダメ
こういうのはOKなのでテスト用の証明書だったらこの辺だけ書いて渡すのが良いのかな
 IP.1 = 127.0.0.1 DNS.1 = localhost  </description>
    </item>
    
    <item>
      <title>AlwaysOnSSLがダメぽい</title>
      <link>https://yaasita.github.io/2018/08/01/alwaysonssl-breaking/</link>
      <pubDate>Wed, 01 Aug 2018 01:03:14 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/08/01/alwaysonssl-breaking/</guid>
      <description>S/MIMEもSSL証明書も取れない
(´；ω；｀)ﾌﾞﾜｯ
トップページも繋がらないしもう駄目か・・・
前回
続き</description>
    </item>
    
    <item>
      <title>クライアント証明書&#43;HTTP2</title>
      <link>https://yaasita.github.io/2018/07/29/h2-plus-client-auth/</link>
      <pubDate>Sun, 29 Jul 2018 16:36:57 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/07/29/h2-plus-client-auth/</guid>
      <description>SSLRequire は 非推奨みたいなので
クライアント証明書とIP制限を今風に書き直す
あとCNとかも検証するようにした
こんな感じ
&amp;lt;Directory /var/www&amp;gt; Options Indexes FollowSymLinks MultiViews ExecCGI SSLVerifyClient optional &amp;lt;RequireAny&amp;gt; Require ip 192.168.100.0/24 &amp;lt;RequireAll&amp;gt; Require ssl-verify-client Require expr &amp;quot;%{SSL_CLIENT_S_DN_CN} == &#39;hogeclient&#39;&amp;quot; &amp;lt;/RequireAll&amp;gt; &amp;lt;/RequireAny&amp;gt; &amp;lt;/Directory&amp;gt;  あと
Protocols http/1.1 h2  のようにhttp/1.1を先にしないと
curl: (92) HTTP/2 stream 1 was not closed cleanly: HTTP_1_1_REQUIRED (err 13)  こんなエラーになるので注意
参考リンク
 reqexprの説明 mod_ssl変数一覧  </description>
    </item>
    
    <item>
      <title>PerlでElasticsearch</title>
      <link>https://yaasita.github.io/2018/07/04/es-perl/</link>
      <pubDate>Wed, 04 Jul 2018 03:06:02 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/07/04/es-perl/</guid>
      <description>perlでElasticsearch
mojoliciousでの例
 </description>
    </item>
    
    <item>
      <title>GCPでAWS Batch的な事をやる</title>
      <link>https://yaasita.github.io/2018/06/20/aws-batch-gcp/</link>
      <pubDate>Wed, 20 Jun 2018 23:46:45 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/06/20/aws-batch-gcp/</guid>
      <description>こんな感じにS3になんか置いて、ファイルがあったら起動して、終わったらshutdownするみたいな奴

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   GCPはインスタンスの起動停止が早いので結構良い感じ
Lambda 処理するファイルが存在して、GCPが動いてたら起動かける
 GCP キュー代わりのファイル消してから
bootしてから3分後に実行（ちょっとインターバルないとインスタンスに入るのが大変になる）
処理の最後でshutdownすればOK
/etc/systemd/system/gcp-calc.service
[Unit] Description=gcp-calc Wants=network-pre.target After=multi-user.target [Install] WantedBy=multi-user.target [Service] ExecStart=/root/run.sh Type=oneshot  /etc/systemd/system/gcp-calc.timer
[Unit] Description=gcp calc [Timer] OnBootSec=3min [Install] WantedBy=timers.target  </description>
    </item>
    
    <item>
      <title>クライアント証明書とIP制限</title>
      <link>https://yaasita.github.io/2018/05/26/client-auth/</link>
      <pubDate>Sat, 26 May 2018 03:49:43 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/05/26/client-auth/</guid>
      <description>外からはクライアント証明書を要求して、中からは素通しさせたいケース
Apache2.4ならこんな感じ
SSLCACertificateFile /etc/apache2/ssl/example.crt &amp;lt;Directory /var/www&amp;gt; Options Indexes FollowSymLinks MultiViews ExecCGI Require ip 192.168.100.0/24 SSLVerifyClient require Satisfy any &amp;lt;/Directory&amp;gt;  curlで確認
curl https://example.net --key client.key --cert cert.crt --http1.1  作るときは /usr/lib/ssl/misc/CA.pl -newreq とかで適当に作る
鍵とセットなら良いのでcommon nameとかは適当
参考リンク プライベートCA作るまで</description>
    </item>
    
    <item>
      <title>vimのterminalモード</title>
      <link>https://yaasita.github.io/2018/05/19/vim-terminal/</link>
      <pubDate>Sat, 19 May 2018 05:16:04 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/05/19/vim-terminal/</guid>
      <description>メモ
  tmuxパカパカ開くよりは良い気がする
  以下のマッピング追加してペーストできるようにした
 if has(&#39;terminal&#39;) tnoremap &amp;lt;C-T&amp;gt; &amp;lt;C-W&amp;gt;&amp;quot;&amp;quot; tnoremap &amp;lt;C-Q&amp;gt; &amp;lt;C-W&amp;gt;N endif    ubuntu18.04でもちょい古くてなんか挙動が少し違うから手動で入れた方が良い
  ビルド
 apt-get build-dep vim apt-get install libperl-dev python-dev python3-dev ruby-dev git clone --depth 1 git@github.com:vim/vim.git cd vim make make install    参考リンク
【(Neo)Vim】terminal mode のマッピングについての闇とその解決法
結論：すごく便利だと思います</description>
    </item>
    
    <item>
      <title>たまにはGDBM使う</title>
      <link>https://yaasita.github.io/2018/04/17/gdbm-file/</link>
      <pubDate>Tue, 17 Apr 2018 01:09:31 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/04/17/gdbm-file/</guid>
      <description>2018年にGDBM使う
perl標準モジュールにある
簡単なKVSならこれで
debianだと多分入ってるけど、libperl5.24が無い環境だとダメぽい
#!/usr/bin/perl use strict; use warnings; use feature qw(:5.10); use utf8; use GDBM_File ; my $filename = &amp;quot;gdm&amp;quot;; my %hash; tie %hash, &#39;GDBM_File&#39;, $filename, &amp;amp;GDBM_WRCREAT, 0640; $hash{hoge} = &amp;quot;huga&amp;quot;; say &amp;quot;$_ =&amp;gt; $hash{$_}&amp;quot; for keys %hash;  </description>
    </item>
    
    <item>
      <title>PerlのHTTP::Tiny</title>
      <link>https://yaasita.github.io/2018/04/07/libio-socket-ssl/</link>
      <pubDate>Sat, 07 Apr 2018 04:17:18 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/04/07/libio-socket-ssl/</guid>
      <description>perlのHTTP::Tinyは標準モジュールなんだけど、IO::Socket::SSLが無くて
IO::Socket::SSL 1.42 must be installed for https support が出ちゃう場合は
apt install libio-socket-ssl-perl </description>
    </item>
    
    <item>
      <title>GoogleのCloud SDKの署名鍵エラー</title>
      <link>https://yaasita.github.io/2018/04/07/google-cloud-sdk-gpg/</link>
      <pubDate>Sat, 07 Apr 2018 02:24:37 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/04/07/google-cloud-sdk-gpg/</guid>
      <description>GCP(google cloud platform)の署名鍵が変わってた
つーか元のgpg鍵の有効期限が切れてる
取得:1 http://packages.cloud.google.com/apt cloud-sdk-xenial InRelease [6,372 B] エラー:1 http://packages.cloud.google.com/apt cloud-sdk-xenial InRelease 公開鍵を利用できないため、以下の署名は検証できませんでした: NO_PUBKEY 6A030B21BA07F4FB なんか探してみると2018年4月1日に作った鍵にしてるみたい
gpg2 --search-keys BA07F4FB gpg: data source: http://gpg.NebrWesleyan.edu:11371 (1) Google Cloud Packages Automatic Signing Key &amp;lt;gc-team@google.com&amp;gt; 2048 bit RSA key BA07F4FB, created: 2018-04-01, expires: 2021-03-31 ということで追加して事なきを得た
gpg2 -a --export BA07F4FB | apt-key add - apt-key del A7317B0F </description>
    </item>
    
    <item>
      <title>Let&#39;s Encryptのワイルドカード</title>
      <link>https://yaasita.github.io/2018/03/31/lets-wildcard/</link>
      <pubDate>Sat, 31 Mar 2018 03:38:25 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/03/31/lets-wildcard/</guid>
      <description>debian testingに
certbot 0.22.2が来てたので使ってみる
とりあえずこんな感じで行った
まだサーバを指定しなきゃいけないけど、これでワイルドカード手に入るのは良い
apt install certbot certbot certonly --manual -d yaasita.net -d *.yaasita.net --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory  </description>
    </item>
    
    <item>
      <title>AlwaysOnSSL</title>
      <link>https://yaasita.github.io/2018/03/21/alwaysonssl/</link>
      <pubDate>Wed, 21 Mar 2018 01:37:01 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/03/21/alwaysonssl/</guid>
      <description>letsencryptとは違う無料のSSLサービス使ってみた
その名も AlwaysOnSSL
サーバ証明書 使って見た感想
 CAAレコード違反のレポートメールは飛んでこなかった 証明書の期間は1年間 CTログはComodo CA に書くみたいでLetsencryptより少ない ワイルドカードは無理 SANに複数のドメイン入れるのも無理  チェインはこんな感じ
DigiCert Global Root G2 |_ AlwaysOnSSL TLS RSA CA G1 |_ yourdomain.example.com  DigiCertなんで大抵のブラウザならOKなはず
curlで簡単に叩けるのでcertbotが入らない場合はこっちの方が良いかも
certbotが入るならLetsencryptの方が良いと思う
S/MIME  有効期間は1年間 CSR作って署名してもらうので、秘密鍵は自分で作る安心設計  チェーンはこんな感じ
Symantec Class 1 Public Primary CertificationAuthority - G6 |_ Symantec Class 1 Individual Subscriber CA - G7  普通にメール受信できるなら作ってもらえるとても良い
CNにメールアドレス入れてCSR作ってからVerifyする
そんで、My Certificatesから中間証明書と証明書ダウンロードしてpkcs12にまとめればOK
openssl pkcs12 -export -in merged.crt -inkey secret.key -out email.pfx  まとめ S/MIMEはすごくありがたい</description>
    </item>
    
    <item>
      <title>perlのデストラクタ</title>
      <link>https://yaasita.github.io/2018/03/17/perl-destory/</link>
      <pubDate>Sat, 17 Mar 2018 02:57:05 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/03/17/perl-destory/</guid>
      <description>Ctrl-Cで止めたときもデストラクタを呼びたいときがある
そういう時は、シグナルハンドラを作ればOK
最後に変数のスコープから外れてデストラクタが呼ばれる
 </description>
    </item>
    
    <item>
      <title>Apacheでリバースプロキシ</title>
      <link>https://yaasita.github.io/2018/02/04/apache-header/</link>
      <pubDate>Sun, 04 Feb 2018 16:27:56 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/02/04/apache-header/</guid>
      <description>Apacheでリバースプロキシするときこんな感じに書いた方が良いよという話
&amp;lt;VirtualHost *:443&amp;gt; ServerName example.net &amp;lt;Proxy *&amp;gt; Require all granted &amp;lt;/Proxy&amp;gt; ProxyRequests Off ProxyPreserveHost On ProxyPass / http://192.168.0.1:8080/ keepalive=On ProxyPassReverse / http://192.168.0.1:8080/ RequestHeader set X-Forwarded-Proto &amp;quot;https&amp;quot; RequestHeader unset X-Forwarded-For RequestHeader unset X-Forwarded-Server RequestHeader unset X-Forwarded-Host Include /path/to/common.conf &amp;lt;/VirtualHost&amp;gt;  X-Forwarded-Forとかを一旦unsetしないと、
X-Forwarded-Forとかをクライアント側から指定されると、追加されて判別が困難になる
curl -H &amp;quot;X-Forwarded-For: 1.2.3.4&amp;quot;  みたいな感じで指定されると
 x-forwarded-for: &amp;quot;1.2.3.4, 192.168.0.100&amp;quot;  こんな感じに追加されて http://192.168.0.1:8080 側にわたってしまう</description>
    </item>
    
    <item>
      <title>プライベートCA作るまで</title>
      <link>https://yaasita.github.io/2018/01/31/private-ca/</link>
      <pubDate>Wed, 31 Jan 2018 18:04:22 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/01/31/private-ca/</guid>
      <description>Debian9でやってみた
cd /etc/ssl /usr/lib/ssl/misc/CA.pl -newca /usr/lib/ssl/misc/CA.pl -newreq /usr/lib/ssl/misc/CA.pl -sign # /tmp/ca.pemを入れてもらう openssl x509 -outform PEM -in demoCA/cacert.pem -out /tmp/ca.pem # 変換 openssl x509 -outform PEM -in newcert.pem -out /etc/nginx/ssl/hogehoge.crt # パスフレーズ解除 openssl rsa -in newkey.pem -out /etc/nginx/ssl/hogehoge.key  データベースおかしくなったら
index.txt空っぽすればOK
rm demoCA/index.txt touch demoCA/index.txt  /etc/ssl/openssl.cnf は こんな感じ
証明書の管理は
chromeなら設定 =&amp;gt; 詳細設定 =&amp;gt; SSLの管理からやる
windowsの場合はファイル名を指定して実行 =&amp;gt; certlm.msc と同じこと
あと注意点として、chromeはsubjectAltNameを見るので注意
(EnableCommonNameFallbackForLocalAnchorsってやつを設定するとできるようだけど)</description>
    </item>
    
    <item>
      <title>GoogleHomeでPCつける</title>
      <link>https://yaasita.github.io/2018/01/14/google-home/</link>
      <pubDate>Sun, 14 Jan 2018 03:41:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/01/14/google-home/</guid>
      <description>Mojoliciousで受けてコマンド叩くだけ
IFTTTはこんな感じにして


Mojolicious側のコントローラはこんな感じで受けた
 喋りたくない時もあるので、JavaScriptでも叩けるようにした(適当な場所にHTML置いておいた)
function hogeop(){ postjson({key: &#39;huga&#39;}) } function postjson(j) { fetch(&amp;quot;/google&amp;quot;, { method: &amp;quot;POST&amp;quot;, headers: { &#39;Content-Type&#39;: &#39;application/json&#39; }, body: JSON.stringify(j) }).then(res =&amp;gt; res.json()).then(res =&amp;gt; { console.log(res) }); }  結論: こうやって家電を操作できるのは楽しい
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>systemd-nspawnアドベントカレンダー</title>
      <link>https://yaasita.github.io/2017/12/19/systemd-nspawn-adcal/</link>
      <pubDate>Tue, 19 Dec 2017 04:34:55 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/19/systemd-nspawn-adcal/</guid>
      <description>書きました
https://qiita.com/advent-calendar/2017/systemd-nspawn</description>
    </item>
    
    <item>
      <title>gpgでサブキーを指定して暗号化</title>
      <link>https://yaasita.github.io/2017/12/04/gpg-specify-subkey/</link>
      <pubDate>Mon, 04 Dec 2017 23:27:01 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/04/gpg-specify-subkey/</guid>
      <description>gpgで副鍵(subkey)を新しく作ったとする(addkey)
でいざ使うと思ったら、やむ負えない事情により古い副鍵で暗号化しなきゃいけなくなったとする
こんな感じの状態ね
pub rsa2048 2017-04-09 [SC] XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX uid [ultimate] yamasita &amp;lt;yamasita@example.net&amp;gt; sub rsa2048 2017-04-09 [E] sub elg2048 2017-12-04 [E] んで、普通にgpg -e で暗号化すると新しい elg2048 の方が使われてしまう
rsa2048を使いたくなったらこんな感じでrsa2048の方のIDを指定して暗号化する
gpg --recipient BBBBBBBBBBB12345! -v -e memo  IDは&amp;ndash;edit-keysとかやれば見れるお
あと、注意点として副鍵は追加しても古い鍵はしばらく残しておくこと
送信側がすぐ、新しい鍵を入れてくれるとも限らないし古い鍵で暗号化されたものを復号化できなくなる
主鍵は、副鍵を署名するだけのものであって、副鍵の秘密鍵は取っておかなきゃいけないのです</description>
    </item>
    
    <item>
      <title>MonaCoinのマイニング</title>
      <link>https://yaasita.github.io/2017/12/03/mona-coin/</link>
      <pubDate>Sun, 03 Dec 2017 01:30:08 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/03/mona-coin/</guid>
      <description>モナコインをマイニングしてみる
cpuminer-multiでやってみた
スコア  IDCF Cloud (Light.S1) メモリ1GB 仮想1CPU =&amp;gt; 17.48 kH/s 自宅PC Core i5-4460 @ 3.20GHz 4コア メモリ 4GB =&amp;gt; 376 kH/s ノートパソコン LB-C110B Celeron 1037U 2コア/1.80GHz メモリ8GB =&amp;gt; 91 kH/s  まとめ CPUマイニングなんてやるもんじゃない←結論</description>
    </item>
    
    <item>
      <title>TeratermからConEmuへ移行した</title>
      <link>https://yaasita.github.io/2017/12/02/teraterm-to-conemu/</link>
      <pubDate>Sat, 02 Dec 2017 04:36:08 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/02/teraterm-to-conemu/</guid>
      <description>長年使ってたTeratermからConEmuへ移行した
SSHクライアントはputtyを使ってる
WSL経由でも良かったんだけど、なんかVimのvisualモードで背景色が変わらなかったり表示が微妙だったので結局putty使った
良かった点  絵文字も表示できる タブが便利(TeratermもCollectorで出来るけどこっちの方が使いやすい) F1キーをリモート側に送るとかそういう設定がしやすい  微妙な点  Alt-Vでペーストしてたけどこれが使えない(設定方法が分からない)  まとめ ConEmu入れた後putty設定したり、微妙に面倒だけど使いやすい</description>
    </item>
    
    <item>
      <title>PS Vita 3.67アップデートでTLS1.2対応</title>
      <link>https://yaasita.github.io/2017/11/29/vita-new-version/</link>
      <pubDate>Wed, 29 Nov 2017 23:20:37 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/11/29/vita-new-version/</guid>
      <description>3.65時点だと対応してなかったけど、3.67でTLS1.2対応したようです🎉
公式には
 システムソフトウェアにおいて、動作の安定性を改善しました。
 としか書いてないけど</description>
    </item>
    
    <item>
      <title>SSL証明書の有効期限チェック</title>
      <link>https://yaasita.github.io/2017/11/24/ssl-check/</link>
      <pubDate>Fri, 24 Nov 2017 01:54:56 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/11/24/ssl-check/</guid>
      <description>なんか必要だったので、シェルとかでも良いけど
 </description>
    </item>
    
    <item>
      <title>Teratermでreject clipbordのエラー</title>
      <link>https://yaasita.github.io/2017/11/16/teraterm-copy/</link>
      <pubDate>Thu, 16 Nov 2017 06:33:07 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/11/16/teraterm-copy/</guid>
      <description>teraterm + Tmuxでコピーをすると
Reject clipboard write access from remoteのエラーが出る
これはOSC52っていう制御文字を使ってリモートからOSのクリップボードを書き込むことができる機能がブロックされてるよって事
直すには Setup -&amp;gt; Addtional settings -&amp;gt; Control Sequenceタブ
と進んで該当箇所を設定すればOK
その下にNotifyの設定もある

参考リンク  リモートの tmux でコピーした内容のローカルのクリップボードへの反映   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>s3fsとIPアドレス制限だけのpublic bucket</title>
      <link>https://yaasita.github.io/2017/11/07/s3fs-public-bucket/</link>
      <pubDate>Tue, 07 Nov 2017 01:36:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/11/07/s3fs-public-bucket/</guid>
      <description>s3fsを使ってこんな感じのバケットポリシーのs3をマウントするときのやつ
(hogehogeバケットとその中身を特定IPアドレスの人に開放する)
{ &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;, &amp;quot;Id&amp;quot;: &amp;quot;Policy1509977001523&amp;quot;, &amp;quot;Statement&amp;quot;: [ { &amp;quot;Sid&amp;quot;: &amp;quot;Stmt1509976998204&amp;quot;, &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Principal&amp;quot;: &amp;quot;*&amp;quot;, &amp;quot;Action&amp;quot;: &amp;quot;s3:*&amp;quot;, &amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:s3:::hogehoge&amp;quot;, &amp;quot;Condition&amp;quot;: { &amp;quot;IpAddress&amp;quot;: { &amp;quot;aws:SourceIp&amp;quot;: &amp;quot;203.0.113.1&amp;quot; } } }, { &amp;quot;Sid&amp;quot;: &amp;quot;Stmt1509976998204&amp;quot;, &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Principal&amp;quot;: &amp;quot;*&amp;quot;, &amp;quot;Action&amp;quot;: &amp;quot;s3:*&amp;quot;, &amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:s3:::hogehoge/*&amp;quot;, &amp;quot;Condition&amp;quot;: { &amp;quot;IpAddress&amp;quot;: { &amp;quot;aws:SourceIp&amp;quot;: &amp;quot;203.0.113.1&amp;quot; } } } ] }  んでs3fsはこんな感じ
s3fs -o public_bucket=1,rw,allow_other,umask=0022,endpoint=ap-northeast-1,default_acl=public-read hogehoge /mnt  public_bucketがポイント</description>
    </item>
    
    <item>
      <title>正しいパッケージのアップデート方法</title>
      <link>https://yaasita.github.io/2017/10/26/pkg-update/</link>
      <pubDate>Thu, 26 Oct 2017 01:30:38 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/10/26/pkg-update/</guid>
      <description>本番環境と検証環境があり、パッケージのアップデートを行いたい場合
 10月1日 検証環境のパッケージを上げる 11月1日 検証環境で問題なければ本番も上げる  この時、それぞれの日に本番環境、検証環境で apt update, apt upgradeをすると本番、検証で差分が生じ検証されていないパッケージもアップデートされる可能性がある
正しくは10月1日に検証環境、本番環境で 同時 に以下のコマンドを実行
apt-get update apt-get upgrade --download-only  検証環境で以下を実行
apt-get upgrade  問題なければ本番環境で以下を実行
apt-get upgrade  ポイントは apt-get update, apt-get upgrade --download-only を検証,本番環境ともに同じタイミングで実行して更新予定のパッケージを揃えておくこと
またubuntuは/etc/apt/apt.conf.d/10periodicの「APT::Periodic::Update-Package-Lists」を0にしておかないと毎日自動でapt-get updateが走るので注意すること
図にするとこんな感じ

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>銀行の通帳を捨てた</title>
      <link>https://yaasita.github.io/2017/10/15/bank-tutyo/</link>
      <pubDate>Sun, 15 Oct 2017 22:55:44 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/10/15/bank-tutyo/</guid>
      <description>記帳に行くのがめんどくさくなったので全部捨ててみた
Web通帳の各行保存期間はこんな感じ
 ゆうちょ銀行  ゆうちょダイレクトプラス: 15ヶ月分   三菱東京UFJ銀行(三菱東京ＵＦＪダイレクト)  Eco通帳: 25ヵ月分   横浜銀行(はまぎんマイダイレクト)  マイスマート通帳: 36ヵ月分    </description>
    </item>
    
    <item>
      <title>WORLD OF FINAL FANTASY(WOFF)攻略まとめ</title>
      <link>https://yaasita.github.io/2017/10/12/woff/</link>
      <pubDate>Thu, 12 Oct 2017 15:29:48 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/10/12/woff/</guid>
      <description>ワールド オブ ファイナルファンタジーの攻略ページまとめ
 アビリティ  アビリティ一覧・効果・大技組み合わせ   クエスト・ストーリー  よりみちクエスト 隠しマップの行き方 ストーリー攻略 マップ クリア後隠しダンジョン XG倒したときのパーティ   アイテム  マディンの記憶入手方法 ミラーストーン一覧と入手法   ミラージュ  WOFF攻略!ゴブリンプリンセス★、アンデッドセレブ★、クイーンアチョ★入手法 最強ミラージュランキング！ 図鑑1-10 図鑑11-20 図鑑21-22    </description>
    </item>
    
    <item>
      <title>maildropの管理UIを作った</title>
      <link>https://yaasita.github.io/2017/09/29/maildrop-admin/</link>
      <pubDate>Fri, 29 Sep 2017 02:38:43 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/09/29/maildrop-admin/</guid>
      <description>フロントをVue.jsでこんな感じの構成

動作の様子

maildropの設定ファイル(~/.mailfilter)でも良いんだけどちょっと
日付が入れられないのとエントリーが増えてくるとちょっと管理しきれなくなった
一旦こんな感じのJSONを経由することでマシにした感じ
 &amp;quot;JUNKMAIL&amp;quot;: [ { &amp;quot;header&amp;quot;: &amp;quot;From&amp;quot;, &amp;quot;regex&amp;quot;: &amp;quot;.*atmarkit.co.jp&amp;quot;, &amp;quot;time&amp;quot;: &amp;quot;2017/05/08 01:58&amp;quot; }, { &amp;quot;header&amp;quot;: &amp;quot;From&amp;quot;, &amp;quot;regex&amp;quot;: &amp;quot;.*facebookmail.com&amp;quot;, &amp;quot;time&amp;quot;: &amp;quot;2017/05/08 01:58&amp;quot; }, サーバサイドの実装
https://github.com/yaasita/maildrop-admin
.mailfilterへの変換処理
  function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img0&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img0&#34;).src = photos[0].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>iptablesの変更をWebからやる</title>
      <link>https://yaasita.github.io/2017/08/22/imap-iptables/</link>
      <pubDate>Tue, 22 Aug 2017 02:17:37 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/08/22/imap-iptables/</guid>
      <description>httpsのほかにもう一個ポートのアクセス制限を面倒見たくなかったのでなんとなくやってみた
httpsでWebUIにアクセスしたらIP許可リストに入れるって処理

PerlのCGIからGo言語で書いたバイナリを呼んでiptablesを更新する的な処理
GoとPerl間はJSONで受け渡す
Goで書いたのはSUIDビット立てたバイナリで叩きたいと思ったから
（なんかうまくいかなくて結局sudoでやったけど)
https://github.com/yaasita/mail-iptables
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>S/MIMEの設定</title>
      <link>https://yaasita.github.io/2017/08/12/smime/</link>
      <pubDate>Sat, 12 Aug 2017 17:25:39 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/08/12/smime/</guid>
      <description>StartSSL CSR作る
emailaddressにS/MIME設定したいアドレスを入れる
openssl req -newkey rsa:2048 -keyout yourname.key -out yourname.csr  証明書が送られてくるのでこんな感じでまとめて
-----BEGIN PRIVATE KEY----- ... -----END PRIVATE KEY----- -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  pkcs12に変換してthunderbirdにインポートする
openssl pkcs12 -export -in sakusei.pem -out email.pfx  なんか送られてきた中間証明書がCRLFとLFが混在してるので直した
チェーンはこんな感じになってた
StartCom Certification Authority |_ StartCom Certification Authority ECC |_ StartCom CC2 ICA |_ 自分のメールアドレス  そういやCAAレコードを検証しなかったけどいいのかね？
でここまでやって気づいたんだけどStartComの証明書が失効扱いで全然検証通らなかった
これはGmailも同じなのでStartCom使うのは中止
COMODO 今度COMODOを使うことになったんだけど既にChromeだとKEYGEN要素が使えないらしくFirefoxでアクセスするしかない
(コードもselect[_moz-type=&amp;rdquo;-mozilla-keygen&amp;rdquo;]になってるし)
こっちはフォームから申請して、リンククリックすればすぐに証明書がFirefoxに入るのでそれをエクスポートしてthunderbirdに入れればOK
チェーンはこんな感じ
COMODO RSA Certification Authority |_COMODO RSA Client Authentication and Secure Email CA |_ 自分のメールアドレス  まとめ Let&#39;s EncryptがS/MIME対応してほしい</description>
    </item>
    
    <item>
      <title>DNSのCAAレコードについて</title>
      <link>https://yaasita.github.io/2017/08/11/dns-caa-record/</link>
      <pubDate>Fri, 11 Aug 2017 02:03:56 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/08/11/dns-caa-record/</guid>
      <description>CAA (Certification Authority Authorization)レコードのチェックが2017年9月8日から必須になるみたい
ちょっと調べてみる
DANEはクライアント用でこっちはCA用のレコードらしい
例えばこんな感じのCAAレコードを書いて Let&#39;s Encryptで発行しようとすると
こんなエラーが返される
;; ANSWER SECTION: yaasita.tk. 60 IN CAA 0 issue &amp;quot;comodoca.com&amp;quot; yaasita.tk. 60 IN CAA 0 issuewild &amp;quot;\;&amp;quot; yaasita.tk. 60 IN CAA 0 iodef &amp;quot;mailto:alert@yaasita.net&amp;quot;  この場合、hoge.yaasita.tk. みたなサブドメインもcomodocaでしか発行できなくなる
(設定はサブドメインに継承される)
ただし、上書きは可能なのでCAAを以下のようにすればLet&#39;s Encryptだけから発行できるように変わる
hoge IN CAA 0 issue &amp;quot;letsencrypt.org&amp;quot; hoge IN CAA 0 issuewild &amp;quot;;&amp;quot; hoge IN CAA 0 iodef &amp;quot;mailto:alert@yaasita.net&amp;quot;  例えば、google.com のCAAは以下のようになっているので、Google Trust Servicesおよびsymantecからしか発行できない
仮に drive.google.com のwebrootに任意のファイルを置ける脆弱性があったとしても(http-01で)Let&#39;s Encryptの証明書を発行することはできないし、WoSignで偽の証明書を発行されることもない
(WoSignがCAA無視してたら意味ないけど)
google.com. 84592 IN CAA 0 issue &amp;quot;pki.</description>
    </item>
    
    <item>
      <title>edit-slack.vimちょっと書き直した</title>
      <link>https://yaasita.github.io/2017/08/10/edit-slack/</link>
      <pubDate>Thu, 10 Aug 2017 02:35:57 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/08/10/edit-slack/</guid>
      <description>edit-slack.vim をちょっと直した
主な変更点は以下の通り
reactionを表示するようにした

アップロードされたファイルのダウンロードリンクを表示

キーワード検索ができるようにした
例) vim slack://sw/hogehoge vim slack://sw/from:@yamasita vim slack://sw/on:today  取っ散らかってたコードをちょっと直した
https://github.com/yaasita/edit-slack/compare/v0.2.0...v0.8.1
ちょっと見ない間にSlackもなんか変わってて、今までのTest tokenがlegacy tokenって名前になってたり、botアクセス、userアクセスで細かくAPI使用制限がされてるようになってた(前からか？)
 function callback(data){ photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>会社員→自営業でも再就職手当は貰える</title>
      <link>https://yaasita.github.io/2017/08/09/sitsugyou-hoken/</link>
      <pubDate>Wed, 09 Aug 2017 16:16:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/08/09/sitsugyou-hoken/</guid>
      <description>なので、辞めた後にハロワ行って雇用保険受給資格者証もらってから開業届出した後に報告しに行った方が良い
失業状態だと偽って失業保険貰うと不正受給になるので注意</description>
    </item>
    
    <item>
      <title>apacheのログフォーマット</title>
      <link>https://yaasita.github.io/2017/07/22/apache-log/</link>
      <pubDate>Sat, 22 Jul 2017 17:53:24 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/07/22/apache-log/</guid>
      <description>apacheのログフォーマットはJSONにしておいた方がパースが楽という話
こんな感じにする
LogFormat &amp;quot;\ { \ \&amp;quot;host\&amp;quot;:\&amp;quot;%V\&amp;quot;, \ \&amp;quot;method\&amp;quot;:\&amp;quot;%m\&amp;quot;, \ \&amp;quot;port\&amp;quot;:\&amp;quot;%p\&amp;quot;, \ \&amp;quot;processingTime\&amp;quot;:\&amp;quot;%D\&amp;quot;, \ \&amp;quot;protocol\&amp;quot;:\&amp;quot;%H\&amp;quot;, \ \&amp;quot;query\&amp;quot;:\&amp;quot;%q\&amp;quot;, \ \&amp;quot;referer\&amp;quot;:\&amp;quot;%{Referer}i\&amp;quot;, \ \&amp;quot;remoteIP\&amp;quot;:\&amp;quot;%a\&amp;quot;, \ \&amp;quot;request\&amp;quot;:\&amp;quot;%U\&amp;quot;, \ \&amp;quot;responseByte\&amp;quot;:\&amp;quot;%B\&amp;quot;, \ \&amp;quot;status\&amp;quot;:\&amp;quot;%&amp;gt;s\&amp;quot;, \ \&amp;quot;time\&amp;quot;:\&amp;quot;%t\&amp;quot;, \ \&amp;quot;unixtime\&amp;quot;:\&amp;quot;%{%s}t\&amp;quot;, \ \&amp;quot;userAgent\&amp;quot;:\&amp;quot;%{User-agent}i\&amp;quot;, \ \&amp;quot;user\&amp;quot;:\&amp;quot;%u\&amp;quot; \ }&amp;quot; \ leapache  吐き出し
CustomLog ${APACHE_LOG_DIR}/access-json.log leapache  https://blog.logentries.com/2014/08/json-logging-in-apache-and-nginx-with-logentries/</description>
    </item>
    
    <item>
      <title>IDCFクラウド試してみた</title>
      <link>https://yaasita.github.io/2017/07/16/idcf-cloud/</link>
      <pubDate>Sun, 16 Jul 2017 01:47:46 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/07/16/idcf-cloud/</guid>
      <description>conohaから引っ越し
 ソースIP、パブリックIPの概念がちょっと難しい OP25Bはされてない 多分VMwareで動いてる conohaよりはファイヤーウォールとか細かく設定できるけど、ポートフォワードの設定とかしなきゃいけないので若干面倒  conohaとの比較 最安プランで比べてみる
転送量のリミットはあるものの総じてIDCFの方が良いかもしれない
   機能 conoha IDCF     メモリ 512MB 1GB   料金 680円 540円   CPU(bogomips) 4589.37 5600.00   Disk 20GB 15GB   転送量課金 なし 3,240GB/月まで無料   仮想方式 kvm VMware    </description>
    </item>
    
    <item>
      <title>githubからコードスニペットを探す</title>
      <link>https://yaasita.github.io/2017/07/15/github-code-search/</link>
      <pubDate>Sat, 15 Jul 2017 23:53:05 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/07/15/github-code-search/</guid>
      <description>githubのAPIでコードスニペット探すと捗る
  </description>
    </item>
    
    <item>
      <title>machine-idを変える時</title>
      <link>https://yaasita.github.io/2017/07/06/dbus-uuidgen/</link>
      <pubDate>Thu, 06 Jul 2017 13:46:49 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/07/06/dbus-uuidgen/</guid>
      <description>systemd-nspawn使ってて
なんか /etc/machine-id　ないよって言われたとき
dbus-uuidgen &amp;gt; root/etc/machine-id  </description>
    </item>
    
    <item>
      <title>AWSで監視してSlackに流す設定</title>
      <link>https://yaasita.github.io/2017/06/22/aws-monitor/</link>
      <pubDate>Thu, 22 Jun 2017 04:17:15 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/06/22/aws-monitor/</guid>
      <description>EC2 -&amp;gt; CloudWatch -&amp;gt; SNS -&amp;gt; Lambda -&amp;gt; Slackみたいなよくある設定例

Slack Customize Slack =&amp;gt; Custom Integrations から Incoming WebHooks 選んで適当にチャンネル選んで追加
URLをメモっておく
EC2 とりあえずaws cli入れて、この辺の監視スクリプトをcronに登録すればOK
apt-get install awscli # カスタムメトリクス用スクリプト apt-get install unzip libwww-perl libdatetime-perl curl http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip -O unzip CloudWatchMonitoringScripts-1.2.1.zip rm CloudWatchMonitoringScripts-1.2.1.zip cd aws-scripts-mon cp awscreds.template awscreds.conf vim awscreds.conf # keyIDとSecretKeyを書いておく  こんな感じのやつをcronに登録
~/aws-scripts-mon/mon-put-instance-data.pl --mem-util --swap-util --disk-path=/ --disk-space-util --from-cron  んで即座に反映されるはず
 カスタムメトリクスをパブリッシュする  CloudWatch ダッシュボード作ったりアラーム書いたりしておく
通知はSNSのTopicsを指定する(後述)
SNS Topicsを新しく作ってTopicネームくらいは適当に埋めておく後で、Lambda側で指定するのでTopicさえあればOK
Lambda 適当にNode.jsで書く</description>
    </item>
    
    <item>
      <title>PS vita向けSSL設定</title>
      <link>https://yaasita.github.io/2017/06/13/vita-ssl/</link>
      <pubDate>Tue, 13 Jun 2017 01:57:49 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/06/13/vita-ssl/</guid>
      <description>PlayStation Vitaの内蔵ブラウザは
TLSv1.1, TLSv1.2
が使えないので、 TLSv1 を使うこと
システムソフトウェア 3.65 時点</description>
    </item>
    
    <item>
      <title>絵文字探すときに</title>
      <link>https://yaasita.github.io/2017/05/23/emoji/</link>
      <pubDate>Tue, 23 May 2017 23:24:02 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/05/23/emoji/</guid>
      <description>便利な emojipedia
http://emojipedia.org/</description>
    </item>
    
    <item>
      <title>コピー禁止のWebサイトについて</title>
      <link>https://yaasita.github.io/2017/05/21/web-copy-protect/</link>
      <pubDate>Sun, 21 May 2017 01:48:56 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/05/21/web-copy-protect/</guid>
      <description>コピー禁止のWordpressサイトが増えてきました
ちょっと検索ワードをコピペするのに不便なので回避方法
1. とりあえずJavaScriptをOFFる これで大半はOK wp-copyprotect って拡張だけならこれで大丈夫
この仕組みの参考実装はこんな感じ
https://gist.github.com/yaasita/7b07710840186561c76d7e5c4af28b2d
chromeならURLバーの左をクリックしてJavaScriptをブロックで

2. noscriptのタグを消す WP Content Copy Protection みたいなやつだと noscript タグの中に画面一杯に広げてコンテンツを見えなくするdivが入るので、chrome developers tools開いて &amp;lt;noscript&amp;gt;タグごと削除する
Oops! It appears that you have disabled your Javascript. In order for you to see this page as it is meant to appear, we ask that you please re-enable your Javascript! みたいな文言はこれ

3. cssでuser-selectをnoneにしている場合 chrome developers toolsでuser-select: text;書き換えてやる

とりあえずここまでやれば大抵コピーできるようになるはず
参考リンク  コピペ禁止サイト Webページの「コピペ禁止」を解除・回避するJavaScriptコード   function callback(data){ var photos = data.</description>
    </item>
    
    <item>
      <title>tumblrの画像を貼るときに直リンクしてはいけない</title>
      <link>https://yaasita.github.io/2017/05/07/dont-use-direct-link-in-tumblr/</link>
      <pubDate>Sun, 07 May 2017 02:49:05 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/05/07/dont-use-direct-link-in-tumblr/</guid>
      <description>なぜか？画像のURLはたまに変わりリンク切れしてしまうから
ちゃんとAPIを叩いてポストIDから画像リンクを取得した方が良い
 </description>
    </item>
    
    <item>
      <title>テーマを簡素にしてtumblrを見たいとき</title>
      <link>https://yaasita.github.io/2017/05/06/noneblr/</link>
      <pubDate>Sat, 06 May 2017 04:55:23 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/05/06/noneblr/</guid>
      <description>noneblrというサービスが良いかもしれない
これでどんなBlogも一定のUIで見れる
http://noneblr.com/
こんな感じになる
login押すと権限求められるけど怖いからそれはやってない</description>
    </item>
    
    <item>
      <title>Vue.jsのちょっとしたこと</title>
      <link>https://yaasita.github.io/2017/04/14/vuejs-tips/</link>
      <pubDate>Fri, 14 Apr 2017 15:57:44 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/04/14/vuejs-tips/</guid>
      <description>v-on=&amp;quot;click&amp;quot;とmodelは一緒に使えない  watchで監視する  https://github.com/vuejs/vue/issues/1146    ある要素だけが繰り返すわけじゃないときはtemplateで挟むとよい &amp;lt;template v-for=&amp;quot;item in items&amp;quot;&amp;gt; &amp;lt;a&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;b&amp;gt;&amp;lt;/b&amp;gt; &amp;lt;/template&amp;gt;  https://jp.vuejs.org/v2/guide/list.html
hash操作はリアクティブにならない https://jp.vuejs.org/v2/guide/reactivity.html
vm.b = 2 // NG Vue.set(object, key, value) // OK  </description>
    </item>
    
    <item>
      <title>gpg鍵を変えた</title>
      <link>https://yaasita.github.io/2017/04/09/update-gpg-key/</link>
      <pubDate>Sun, 09 Apr 2017 23:28:13 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/04/09/update-gpg-key/</guid>
      <description>https://keybase.io/yaasita
有効期限を付けて1年毎に交換するのは止めよう
keybase.ioの更新がめんどくさすぎる
失効証明書だけ取っておいてどっか保存しておけば十分な気がしてきた
ちなみに一回鍵消してもう一回連携やりなおしたら、Invitations が 24 まで増えたんだけどこれ無限増殖できるのでは・・・</description>
    </item>
    
    <item>
      <title>Google Cloud Shellのディレクトリ削除</title>
      <link>https://yaasita.github.io/2017/04/06/gcp-shell-homedata/</link>
      <pubDate>Thu, 06 Apr 2017 00:21:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/04/06/gcp-shell-homedata/</guid>
      <description>120日で削除されるらしい
It&#39;s been over 120 days since you opened Cloud Shell from the Google Cloud Platform console. In 7 days, your Cloud Shell home directory will be automatically scheduled for deletion.  </description>
    </item>
    
    <item>
      <title>ginを使ってechoをLiveReload</title>
      <link>https://yaasita.github.io/2017/04/03/gin-live-reload/</link>
      <pubDate>Mon, 03 Apr 2017 00:05:20 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/04/03/gin-live-reload/</guid>
      <description>Golangのweb frame workの Echo のライブリロード
ginがproxyしてくれるのでechoサーバのポートを教えてくれればよろしくリコンパイルしてくれる
gin --appPort 8080 r go run server.go  CompileDaemonだとこんな感じか
go get github.com/githubnemo/CompileDaemon CompileDaemon -command=&amp;quot;./run.sh&amp;quot; -include=&amp;quot;*.go&amp;quot;   参考リンク  https://github.com/codegangsta/gin https://github.com/githubnemo/CompileDaemon https://goo.gl/gp6L9z  </description>
    </item>
    
    <item>
      <title>複数ファイルアップロードの実装</title>
      <link>https://yaasita.github.io/2017/04/02/multiple-upload/</link>
      <pubDate>Sun, 02 Apr 2017 04:18:50 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/04/02/multiple-upload/</guid>
      <description>multiple指定してuploadフォーム作るときの話
&amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;files&amp;quot; multiple /&amp;gt;  で複数ファイル選択できるが
Perl CGIで受けるときに↓みたいにすると
my @files = $q-&amp;gt;param(&#39;files&#39;); for my $filename (@files) { my $fn = decode(&amp;quot;UTF-8&amp;quot;, $filename); move($q-&amp;gt;tmpFileName($filename), &amp;quot;/path/to/dir&amp;quot;); }  iOSで選択するとfilenameが全部image.jpgでPOSTされてしまう可能性があるのでダメ
(AndroidとかはOK)
なのでこんな感じにする
my @fhs = $q-&amp;gt;upload(&#39;files&#39;); my %fname_count; for my $fh (@fhs){ my $out_filename = non_overlapping_filenames(&amp;quot;$fh&amp;quot;); my $io_handle = $fh-&amp;gt;handle; open (my $wr,&amp;quot;&amp;gt;&amp;quot;, $out_filename) or die $!; while (&amp;lt;$io_handle&amp;gt;){ print $wr $_; } close $wr; push(@result, decode(&amp;quot;UTF-8&amp;quot;,&amp;quot;$fh&amp;quot;)); }  あと古めのアンドロイドはmultiple指定しても複数ファイル選択ができない
Andoroid4.0はダメだけど6.0だとOKだった</description>
    </item>
    
    <item>
      <title>Vimの副ファイル</title>
      <link>https://yaasita.github.io/2017/03/30/vim-alternate-file/</link>
      <pubDate>Thu, 30 Mar 2017 01:46:13 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/03/30/vim-alternate-file/</guid>
      <description>なんか検索に引っかからないのでメモ
英語で the alternate file ってやつを取るときは Ctrl-^コマンドでやる
日本語配列だとCtrl-6かな
日本語ヘルプだと代替ファイルって訳になってるけど
E23: 副ファイルはありません  のエラーになるんだよな
というわけで
alternate file = 代替ファイル = 副ファイル
という認識で</description>
    </item>
    
    <item>
      <title>DockerでAUFSを使わない</title>
      <link>https://yaasita.github.io/2017/03/21/do-not-use-aufs/</link>
      <pubDate>Tue, 21 Mar 2017 23:06:46 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/03/21/do-not-use-aufs/</guid>
      <description>AUFSっていうか/var/lib/dockerに置きたくないとかそういう話
Dockerでもsystemd-nspawnよろしくそのディレクトリで即座にコンテナ上げたいとき
 要するに /proc, /dev, /sys, /net あたりを外して全部bindしちゃえばよかった</description>
    </item>
    
    <item>
      <title>AWSソリューションアーキテクト</title>
      <link>https://yaasita.github.io/2017/03/18/aws-test/</link>
      <pubDate>Sat, 18 Mar 2017 23:56:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/03/18/aws-test/</guid>
      <description>なんか必要になったということで取ってきた
総合スコア: 74% トピックレベルのスコア: 1.0 高可用性、コスト効率、耐障害性、スケーラブルなシステムの設計: 72% 2.0 実装/デプロイ: 83% 3.0 セキュリティ: 72% 4.0 トラブルシューティング: 80% 勉強につかったサイト
https://aws.koiwaclub.com/
細かい数字とか覚えるよりもどんなサービスなのかなーくらいが頭に入ってれば良さげ
かかる費用は
模擬試験＋本試験=2160+16200=18360円
だった</description>
    </item>
    
    <item>
      <title>Vue.jsとモーダルウィンドウ</title>
      <link>https://yaasita.github.io/2017/03/04/vuejs-modal/</link>
      <pubDate>Sat, 04 Mar 2017 02:29:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/03/04/vuejs-modal/</guid>
      <description>参考実装 slotで後から要素を上書きすればOK
 https://github.com/yaasita/vuejs-modal
参考リンク  https://jp.vuejs.org/v2/examples/modal.html  </description>
    </item>
    
    <item>
      <title>Vue.jsでドラッグ＆ドロップリスト</title>
      <link>https://yaasita.github.io/2017/02/20/draggable-list/</link>
      <pubDate>Mon, 20 Feb 2017 23:17:28 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/20/draggable-list/</guid>
      <description>Vue.js 2.1.10でやってみる
https://github.com/yaasita/vuejs-dad-box
 並び変え終わったらdragendで
var request_url = &amp;quot;https://hogehogehoge&amp;quot; var req = new XMLHttpRequest(); req.open(&#39;POST&#39;, request_url, false); req.setRequestHeader(&amp;quot;Content-Type&amp;quot;, &amp;quot;application/json&amp;quot;); req.send(JSON.stringify(this.boxes));  とかやってどっかに飛ばす
んで後ろ側で
$sort_json = json_decode(file_get_contents(&amp;quot;php://input&amp;quot;),true);  とかやって受けた
実際は毎回更新させるのは重いだろうし、交換したDOM二つだけをjsonに乗せるとか工夫の余地あり
参考リンク  多分Vue.js 1 時代のやつ  Vue.jsのリストレンダリングとhtml5のドラッグ＆ドロップの実装   ネイティブ HTML5 ドラッグ＆ドロップ  </description>
    </item>
    
    <item>
      <title>Vimのエンコード周り</title>
      <link>https://yaasita.github.io/2017/02/17/vim-encodeing/</link>
      <pubDate>Fri, 17 Feb 2017 23:56:59 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/17/vim-encodeing/</guid>
      <description>下図参照
https://yaasita.tumblr.com/post/157354717792



 function callback(data){ gdata = data.response.posts[0].photos; var photos = data.response.posts[0].photos; for(var i=0;i </description>
    </item>
    
    <item>
      <title>Vue.js内のメソッドはコロン省略しない方が良い</title>
      <link>https://yaasita.github.io/2017/02/17/do-not-omit-colon-in-vuejs/</link>
      <pubDate>Fri, 17 Feb 2017 02:06:29 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/17/do-not-omit-colon-in-vuejs/</guid>
      <description>InternetExplorer11で
SCRIPT1003: &#39;:&#39; がありません。  というエラーになるから
// OK var ok = new Vue({ el: &#39;#example1&#39;, data: { }, methods: { HogeMethod: function(){ } } }); // NG var ng = new Vue({ el: &#39;#example2&#39;, data: { }, methods: { HogeMethod(){ } } });  chromeとかMicrosoft Edgeとかなら良いんだけどね</description>
    </item>
    
    <item>
      <title>relをtumblrテーマに加える</title>
      <link>https://yaasita.github.io/2017/02/14/add-rel-to-tumblr/</link>
      <pubDate>Tue, 14 Feb 2017 01:05:25 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/14/add-rel-to-tumblr/</guid>
      <description>tumblrのテーマをDefaultにしてみた
一点気になったのは
リンクがこんな感じでrel属性が指定されてない
&amp;lt;a href=&amp;quot;{PreviousPage}&amp;quot; class=&amp;quot;left&amp;quot;&amp;gt; &amp;lt;a rel=&amp;quot;next&amp;quot; href=&amp;quot;{NextPage}&amp;quot; class=&amp;quot;right&amp;quot;&amp;gt;  これだとvimiumの[[, ]]コマンドで辿れないのでそこだけ修正した
 修正後のテーマ  https://gist.github.com/yaasita/40831000ea20c85f20eeccaa7de5c9c3   参考リンク  rel=”next”とrel=”prev” の使い方    </description>
    </item>
    
    <item>
      <title>閉じるボタンとVue.js</title>
      <link>https://yaasita.github.io/2017/02/07/close-button-with-vuejs/</link>
      <pubDate>Tue, 07 Feb 2017 23:59:54 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/07/close-button-with-vuejs/</guid>
      <description>box並べて閉じるボタンつけて、押されたらDOM消して何かするみたいなよくあるインターフェイス
Vue.js使って書いてみた
すごい便利
 https://github.com/yaasita/vuejs-close-button</description>
    </item>
    
    <item>
      <title>FreenomのドメインはWebサイトないと消えちゃう</title>
      <link>https://yaasita.github.io/2017/02/03/freenom-deletes-freely/</link>
      <pubDate>Fri, 03 Feb 2017 02:46:27 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/03/freenom-deletes-freely/</guid>
      <description>だそうです
Dear yamasita yamasita, The Freenom Review Team has visited your website today. Unfortunately we have to say that today we cancelled your domain YAASITA.ML. The reason for the cancellation is that the website address you used for your free domain name was not accessible or did not follow the guidelines set in our terms and conditions. At this stage, anyone, including yourself, is able to (re)register the cancelled domain YAASITA.</description>
    </item>
    
    <item>
      <title>hostとdigコマンドの挙動が違う時</title>
      <link>https://yaasita.github.io/2017/01/27/host_and_dig_commands_are_different/</link>
      <pubDate>Fri, 27 Jan 2017 01:52:29 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/27/host_and_dig_commands_are_different/</guid>
      <description>名前を引くときにhostコマンドでは返ってくるがdigだとおかしくなるときがある
こんな感じにすれば同じになる
host example.net. dig +nodnssec +noedns +noadflag example.net. a  WN-G300GRはadビット立ててると応答すらしないらしい</description>
    </item>
    
    <item>
      <title>GMOのConoha VPS使ってみた</title>
      <link>https://yaasita.github.io/2017/01/22/conoha-vps/</link>
      <pubDate>Sun, 22 Jan 2017 23:51:14 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/22/conoha-vps/</guid>
      <description>非常に良い
さくらVPSより良いかもしれない
 DNSサーバ無料 OP25B無し SSD 20GB 初期費用なし 転送量無制限 時間課金方式と月額方式のハイブリット  今はコンテナ技術でサクッと移動できちゃうので、
安いクラウドサービス渡り歩くのも良いと思った</description>
    </item>
    
    <item>
      <title>BCCヘッダを落とすのは誰か</title>
      <link>https://yaasita.github.io/2017/01/22/who_drops_bccheader/</link>
      <pubDate>Sun, 22 Jan 2017 00:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/22/who_drops_bccheader/</guid>
      <description>BCCヘッダは転送しないで、MTA側で消されるというのは有名な話だけど
実際どんな感じなのか
まずメーラーでBCCを指定して送ったとする
この時BCCヘッダはどのタイミングで消えるか？という問題
MUA(thunderbird等) -&amp;gt; 送信側MTA(postfix等) -&amp;gt; 受信側MTA(postfix等)  thunderbird まずthunderbirdからBCCで送信した場合はそもそもBccヘッダはつけない(Icedove/45.6.0で検証)
envelope toには存在するがそもそもBccヘッダなんてものを書かない
postfix postfixもデフォルトではBccヘッダは落とすようになっている
しかしこの設定を変更すればBccヘッダを落とさないでそのまま配送される
message_drop_headers = bcc, content-length, resent-bcc, return-path   参考  http://www.postfix.org/postconf.5.html#message_drop_headers    まとめ 本来見られちゃいけないヘッダをMTAに渡して、多分消してくれるだろうと期待するのはあまりよくないと思う
具体的にはBccヘッダまで綺麗に書いて sendmail -t で送るよりはちゃんとenvelope to を指定して送った方が安全度高い
要するにthunderbirdみたいに送るべき</description>
    </item>
    
    <item>
      <title>新旧リダイレクト</title>
      <link>https://yaasita.github.io/2017/01/16/redirect-githubpage/</link>
      <pubDate>Mon, 16 Jan 2017 23:36:18 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/16/redirect-githubpage/</guid>
      <description>middlemanからの移行に際してリンクが壊れまくった
GoogleのSearch Console
https://yaasita.tumblr.com/post/155945715637  とりあえずJavaScriptで新URL案内すればいいか
 こんな感じ
https://yaasita.tumblr.com/post/155945774152  旧ページ  記事ページ  https://yaasita.github.io/2010/08/30/5917.html   タグページ  https://yaasita.github.io/tags/soft.html   年ページ  https://yaasita.github.io/2008.html    </description>
    </item>
    
    <item>
      <title>ore_markdownを画像埋め込みに対応させた</title>
      <link>https://yaasita.github.io/2017/01/15/ore_markdown_update2/</link>
      <pubDate>Sun, 15 Jan 2017 02:47:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/15/ore_markdown_update2/</guid>
      <description>またore_markdown-goの修正
こんな感じに画像データをBase64にして埋め込めばHTMLファイル一枚で完結しそうだったので修正した
&amp;lt;img src=&amp;quot;data:image/png;base64,(base64文字列)&amp;quot; alt=&amp;quot;img1&amp;quot;&amp;gt;  修正内容
吐き出されたHTMLの例
https://gist.githubusercontent.com/yaasita/d9b55cff5e52197adf4840cf702e5bd6/raw/c6a3c2f96f4360ad3fa526c6c5ae5302acd26769/preview.html
保存してHTMLを表示させれば画像がみれるはず</description>
    </item>
    
    <item>
      <title>MacBook買ったのでサポートお願いした</title>
      <link>https://yaasita.github.io/2017/01/09/mac-personal-setup/</link>
      <pubDate>Mon, 09 Jan 2017 16:27:40 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/09/mac-personal-setup/</guid>
      <description>13インチ MacBook Air 1.6GHzデュアルコアIntel Core i5 整備済製品 (\84,000)で買ったのでパーソナルセットアップをお願いしてみた
時間は30分だったけど、電話でいろいろ質問できて良い
http://www.apple.com/jp/retail/personalsetup/</description>
    </item>
    
    <item>
      <title>ansibleで作ったロール</title>
      <link>https://yaasita.github.io/2017/01/09/my-ansible-role/</link>
      <pubDate>Mon, 09 Jan 2017 16:24:41 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/09/my-ansible-role/</guid>
      <description>成果物  ec2でスワップファイル置くとかするやつ  https://github.com/yaasita/ansible_role_amazon-ec2   aptのproxy設定  https://github.com/yaasita/ansible_role_apt-proxy   ブラックホールメールサーバ作るときの設定  https://github.com/yaasita/ansible_role_blackhole-postfix   adminユーザ作るとき  https://github.com/yaasita/ansible_role_admin-server   centosでよくやる設定  https://github.com/yaasita/ansible_role_common_centos   Ubuntuでよくやる設定  https://github.com/yaasita/ansible_role_common_ubuntu   Dockerコンテナにするときによくやる設定  https://github.com/yaasita/ansible_role_docker-care   munin-node入れるとき  https://github.com/yaasita/ansible_role_munin   mysql  https://github.com/yaasita/ansible_role_mysql   nagios nrpe  https://github.com/yaasita/ansible_role_nagios-nrpe   ネットワーク設定  https://github.com/yaasita/ansible_role_network   proxy設定(主にaptの)  https://github.com/yaasita/ansible_role_proxy   railsの初期設定  https://github.com/yaasita/ansible_role_rails   rbenv  https://github.</description>
    </item>
    
    <item>
      <title>ore_markdownをGo言語で書き直した</title>
      <link>https://yaasita.github.io/2017/01/06/ore_markdown_to_golang/</link>
      <pubDate>Fri, 06 Jan 2017 15:44:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/06/ore_markdown_to_golang/</guid>
      <description>久々に ore_markdownを書き直した
感想とか  Ruby(Gem: github-markdown)→Go(russross/blackfriday)で書き直し スタティックファイルもgo-bindataでバイナリに閉じ込めた OS間の違いを意識するのがめんどくさいのでVimでの判定は全部やめてGo側に寄せた 早くて良い  成果物とかライブラリ  作ったもの  https://github.com/yaasita/ore_markdown https://github.com/yaasita/ore_markdown-go   blackfriday  https://github.com/russross/blackfriday https://godoc.org/github.com/russross/blackfriday   go-bindata  https://github.com/jteeuwen/go-bindata    </description>
    </item>
    
    <item>
      <title>blogをmiddlemanからhugoに移行した</title>
      <link>https://yaasita.github.io/2017/01/05/middleman2hugo/</link>
      <pubDate>Thu, 05 Jan 2017 04:50:10 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/05/middleman2hugo/</guid>
      <description>使ってみた感想  ビルドはmiddlemanで10分かかってたけど1秒になった themeはgeppakuというのを使用 シンプルで良い  Tumblrリンクのプルリクエストも快くマージしてくれた感謝m(_ _)m   pagination 周りの部分はちょっとページ数が多いとカラム落ちしたり苦しかったので書き直した taxonomiesを追加して、年別のアーカイブページを作成 アーカイブページを逆順にする対応はなぜかうまくいかなかったので後で調査する  とりあえずJavaScriptで逆順にした &amp;gt; gist   hugo serverのライブリロードがとっても良い(ブラウザも自動更新)  ただしpagination周りで変な書き方するとサーバごと落ちる   DISQUS周りはちょっとカスタマイズした  なぜかデフォルトだと読み込まなかったので   markdown周りはほぼ設定ファイルで完結  今回の設定はこんな感じ   middleman時代のリンクを維持するためにUglyURLs設定したけどcategoriesとかリンク切れが面倒だったので中止  参考: http://wdkk.co.jp/note/2015/0824-hugo-public/   Highlight.js今回無効にした過去分のcodeブロックが微妙になったので  総評
Static Site Generatorはとても良い
移行するにも、更新するにもメンテがすごく楽
移行スクリプト 基本的にはファイル名にある時間のデータをTOMLに直して終わり
/home/yamasitaにhugo,middlemanのディレクトリがある前提
 参考リンク  middleman hugo  </description>
    </item>
    
    <item>
      <title>GCPの Cloud DNSでグルーレコード</title>
      <link>https://yaasita.github.io/2016/12/03/google-cloud-dns/</link>
      <pubDate>Sat, 03 Dec 2016 23:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/12/03/google-cloud-dns/</guid>
      <description>Google Cloud Platform のDNSでグルーレコード作るときは
こんな感じでNS指定したあとに、Aレコード追加すればグルーレコード(Glue Record)に追加してくれるようだ

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.9.5-9+deb8u8-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; +norec @ns-cloud-d1.googledomains.com. name.yaasita.xyz. a ; (2 servers found) ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 39015 ;; flags: qr; QUERY: 1, ANSWER: 0, AUTHORITY: 2, ADDITIONAL: 3 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;name.yaasita.xyz. IN A ;; AUTHORITY SECTION: name.yaasita.xyz. 300 IN NS ns1.name.yaasita.xyz. name.</description>
    </item>
    
    <item>
      <title>VALUE-DOMAINでグルーレコード追加</title>
      <link>https://yaasita.github.io/2016/11/25/value-domain/</link>
      <pubDate>Fri, 25 Nov 2016 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/11/25/value-domain/</guid>
      <description>VALUE-DOMAIN バリュードメインの権威DNSサーバを使いつつ
レコードにグルーレコードを追加する方法
BINDみたくこんな感じにやる
ns cloud cloud.example.net. a cloud.example.net. 123.123.123.123  上位の権威サーバにグルーレコードを設定する場合は
下記参照
https://www.value-domain.com/userguide/manual/othermodns/</description>
    </item>
    
    <item>
      <title>AWSへVMイメージごと移動する手順</title>
      <link>https://yaasita.github.io/2016/11/20/aws-vm-import/</link>
      <pubDate>Sun, 20 Nov 2016 20:45:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/11/20/aws-vm-import/</guid>
      <description>手順 img作る前に以下を確認しておく
 DHCPを有効にしている iptablesを無効に rawでイメージを作っておく  次に以下のコマンドでインポート
# hoge-importってバケット作ったとする # 最初にimgをS3に上げておく aws s3 cp hoge.img s3://hoge-import/hoge.img # IAM周りを準備 aws iam create-role --role-name vmimport --assume-role-policy-document file://trust-policy.json aws iam put-role-policy --role-name vmimport --policy-name vmimport --policy-document file://role-policy.json # インポートタスク開始 aws ec2 import-image --description &amp;quot;hoge server&amp;quot; --disk-containers file://containers.json # 進捗見る aws ec2 describe-import-image-tasks  使ったjsonファイル
 参考リンク  http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/VMImportPrerequisites.html#vmimport-image-formats http://docs.aws.amazon.com/cli/latest/reference/ec2/import-image.html  </description>
    </item>
    
    <item>
      <title>フレッツのDNS挙動</title>
      <link>https://yaasita.github.io/2016/10/31/flets-dns/</link>
      <pubDate>Mon, 31 Oct 2016 00:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/10/31/flets-dns/</guid>
      <description>NSレコードに指定したホスト名にCNAMEを持たせてはいけない
という話は有名だがどのように挙動が変わるか見てみる
準備 yaasita.ml. の権威サーバは ns1.aws.yaasita.net. にしておく
NSで指定されてるサーバは CNAMEとして aws.yaasita.net. に設定しておく
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.9.5-9+deb8u7-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; +norec @aws.yaasita.net. ns1.aws.yaasita.net. a ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 31880 ;; flags: qr aa; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 4096 ;; QUESTION SECTION: ;ns1.aws.yaasita.net. IN A ;; ANSWER SECTION: ns1.</description>
    </item>
    
    <item>
      <title>最近買ったスマホ</title>
      <link>https://yaasita.github.io/2016/10/22/smart-phone/</link>
      <pubDate>Sat, 22 Oct 2016 22:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/10/22/smart-phone/</guid>
      <description>エイスース SIMフリースマートフォン ASUS ZenFone 2 Laser（Qualcomm Snapdragon 410/メモリ 2GB） 16GB ブラック ZE500KL-BK16  18,672円だった
Androidは6.0.1まで上がった</description>
    </item>
    
    <item>
      <title>更新通知のbashrc</title>
      <link>https://yaasita.github.io/2016/09/10/update-notify/</link>
      <pubDate>Sat, 10 Sep 2016 12:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/09/10/update-notify/</guid>
      <description>こんな感じで、更新を促す
 </description>
    </item>
    
    <item>
      <title>超次元アクション ネプテューヌU</title>
      <link>https://yaasita.github.io/2016/09/04/nepu/</link>
      <pubDate>Sun, 04 Sep 2016 03:13:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/09/04/nepu/</guid>
      <description>Vita版のやつ
ギョウ界チ武道会 クリアしたキャラ
 ネプチューヌ ノワール ブラン ベール ネプギア ユニ ロム ラム デンゲキコ パープルハート ブラックハート ホワイトハート グリーンハート パープルシスター ブラックシスター ホワイトシスター(左) ホワイトシスター(右) ファミ通  -&amp;gt; 取得したアイテムで審議判定できる
http://catmiimi.com/nepu_military
参考リンク http://catmiimi.com/nepu</description>
    </item>
    
    <item>
      <title>smplayerでリピート再生</title>
      <link>https://yaasita.github.io/2016/08/27/smplayer/</link>
      <pubDate>Sat, 27 Aug 2016 14:33:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/08/27/smplayer/</guid>
      <description>ずっとループして再生
 再生(P) → A-Bセクション(A) → 繰り返し(R)  </description>
    </item>
    
    <item>
      <title>AWSのVPNまわり</title>
      <link>https://yaasita.github.io/2016/07/31/aws-vpn/</link>
      <pubDate>Sun, 31 Jul 2016 00:36:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/07/31/aws-vpn/</guid>
      <description>よくある質問
対応機器
http://aws.amazon.com/jp/vpc/faqs/
ハードウェアVPN接続
 1つの仮想プライベートゲートウェイあたり10接続
http://docs.aws.amazon.com/ja_jp/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html
http://dev.classmethod.jp/cloud/aws/vpc-connect-hardware-vpn/  </description>
    </item>
    
    <item>
      <title>s3fs使う</title>
      <link>https://yaasita.github.io/2016/06/22/s3fs/</link>
      <pubDate>Wed, 22 Jun 2016 13:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/06/22/s3fs/</guid>
      <description>s3fsはamazon S3をファイルしすてむのように使うやつ
ただ遅い
基本ここ見てやる
https://github.com/s3fs-fuse/s3fs-fuse/wiki/Installation-Notes
今回はCeontOS6を対象
# paco入れておく yum install paco # コンパイルに必要なもの入れる yum install -y gcc libstdc++-devel gcc-c++ curl-devel libxml2-devel openssl-devel mailcap # fuse wget https://github.com/libfuse/libfuse/releases/download/fuse_2_9_4/fuse-2.8.5.tar.gz ./configure make paco -lD &#39;make install&#39; # /usr/local/lib 追記 vi /etc/ld.so.conf ldconfig # s3fs wget http://s3fs.googlecode.com/files/s3fs-1.74.tar.gz tar xvaf s3fs-1.74.tar.gz cd s3fs-1.74/ autoreconf --install export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure --prefix=/usr make paco -lD &#39;make install&#39; # mount s3fs hoge-bucket /s3 -o rw,allow_other,uid=501,gid=501,default_acl=public-read su - apps cd /s3 date &amp;gt; date.</description>
    </item>
    
    <item>
      <title>やる夫で学ぶ機械学習シリーズ</title>
      <link>https://yaasita.github.io/2016/06/11/deep-learning/</link>
      <pubDate>Sat, 11 Jun 2016 23:55:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/06/11/deep-learning/</guid>
      <description>http://tkengo.github.io/blog/2016/06/06/yaruo-machine-learning0/</description>
    </item>
    
    <item>
      <title>戦国無双クロニクル3(Vita)攻略</title>
      <link>https://yaasita.github.io/2016/05/10/sengoku-musou/</link>
      <pubDate>Tue, 10 May 2016 00:36:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/05/10/sengoku-musou/</guid>
      <description>攻略サイト
http://goo.gl/bAfbfX
この全武将お手軽さ評価づけが参考になる
http://goo.gl/uenJG4</description>
    </item>
    
    <item>
      <title>IRCのログを記録するbotbot.me</title>
      <link>https://yaasita.github.io/2016/05/04/botbot-me/</link>
      <pubDate>Wed, 04 May 2016 23:10:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/05/04/botbot-me/</guid>
      <description>https://botbot.me/
botbot.meはIRCに参加させることでログを取って
公開できるbotだ
便利そう</description>
    </item>
    
    <item>
      <title>リアルタイム監視ソフトnetdata</title>
      <link>https://yaasita.github.io/2016/04/25/netdata/</link>
      <pubDate>Mon, 25 Apr 2016 23:24:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/04/25/netdata/</guid>
      <description>https://github.com/firehol/netdata
インストール
https://github.com/firehol/netdata/wiki/Installation
# 起動 /usr/sbin/netdata # 見てみる http://192.168.0.38:19999/  </description>
    </item>
    
    <item>
      <title>ファイル同期ソフトSyncthing</title>
      <link>https://yaasita.github.io/2016/04/25/syncthing/</link>
      <pubDate>Mon, 25 Apr 2016 23:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/04/25/syncthing/</guid>
      <description>ファイル同期ソフトSyncthingを試してみる
公式
https://syncthing.net/
Go言語で出来ていてクロスプラットフォーム
Androidでも動く
同様のソフトにBitTorrent Syncがあるみたいだけどこっちのほうが良さそう
（同期ディレクトリに上限がないため）
こんな感じ
./syncthing -gui-address=&amp;quot;192.168.0.10:3184&amp;quot; -no-browser  </description>
    </item>
    
    <item>
      <title>Git-itやってみた</title>
      <link>https://yaasita.github.io/2016/04/24/git-it/</link>
      <pubDate>Sun, 24 Apr 2016 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/04/24/git-it/</guid>
      <description>日本語も選択できるElectron製のアプリで
ステップバイステップで勉強できる
ここのリリースページからバイナリを落として実行する
https://github.com/jlord/git-it-electron
結果
http://yaasita.github.io/patchwork/
参考リンク
 Git-it – 手を動かしながら習得できる日本語対応のGit/GitHub学習アプリ  http://www.softantenna.com/wp/review/git-it/   プルリク練習用のリポジトリ  https://github.com/jlord/patchwork   結果確認  http://jlord.us/patchwork/    </description>
    </item>
    
    <item>
      <title>HDDの不良セクタ埋める</title>
      <link>https://yaasita.github.io/2016/03/26/hdd_bad_sector/</link>
      <pubDate>Sat, 26 Mar 2016 00:43:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/03/26/hdd_bad_sector/</guid>
      <description>HDDの不良セクタ代替処理を自動化
Reallocated_Sector_Ctが残ってれば使える手法
https://github.com/yaasita/hdd_badsector
使い方
smartctl -a /dev/sdc | ./hdd_check.pl /dev/sdc  </description>
    </item>
    
    <item>
      <title>Mojoliciousのwebsocket回り</title>
      <link>https://yaasita.github.io/2016/02/21/mojolicious/</link>
      <pubDate>Sun, 21 Feb 2016 02:29:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/02/21/mojolicious/</guid>
      <description>websocketの開いてもデフォルト15秒でタイムアウトするのが嫌なら
↓みたいな感じでtimeout伸ばす
Mojo::IOLoop-&amp;gt;stream($self-&amp;gt;tx-&amp;gt;connection)-&amp;gt;timeout(300);    参考リンク http://kazuph.hateblo.jp/entry/20120310/1331395725 https://github.com/yuki-kimoto/mojolicious-guides-japanese/wiki  </description>
    </item>
    
    <item>
      <title>ff10-2</title>
      <link>https://yaasita.github.io/2016/02/15/ff10-2/</link>
      <pubDate>Mon, 15 Feb 2016 01:13:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/02/15/ff10-2/</guid>
      <description>FF10-2ラストミッション LAST MISSIONでの使用ドレス
ラスボスが混乱攻撃してくるのでその対策は必須
あと、アイテムに足して、呪いだったりボムだったりの状態異常がかかる場合があるので、アイテムエスナを使えるアイテムシューターも必須かと思う
 ガンナー (混乱防御のため) アイテムシューター ダークナイト (暗黒が強力) 調教師 (穴掘りでアイテム探し) 白魔導士 (ケアルガで回復)  あと装備アイテムは以下の2種類
 満ちる月の石 (自動MP回復) トリプルティアラ(3回攻撃)  参考リンク  FF10-2ラストミッション攻略ページ 結界解除条件  </description>
    </item>
    
    <item>
      <title>下位10%のダメなエンジニアシリーズ</title>
      <link>https://yaasita.github.io/2016/01/25/dame-engineer/</link>
      <pubDate>Mon, 25 Jan 2016 00:23:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/01/25/dame-engineer/</guid>
      <description>パズル1  http://tango-ruby.hatenablog.com/entry/2015/11/30/122814 http://challenge-your-limits.herokuapp.com/  答え
curl http://challenge-your-limits.herokuapp.com/call/me # getだめだよって怒られる curl -F &amp;quot;hoge=hoge&amp;quot; http://challenge-your-limits.herokuapp.com/call/me # 適当にPOSTすると正しいURLを教えてくれる curl -F &amp;quot;name=hoge&amp;quot; -F &amp;quot;email=huga@hoge.com&amp;quot; \ http://challenge-your-limits.herokuapp.com/challenge_users # あとはこんな感じで  パズル2  http://tango-ruby.hatenablog.com/entry/2015/12/28/212010 http://challenge-your-limits2.herokuapp.com/  答え
curl http://challenge-your-limits2.herokuapp.com/call/my/APIs # メソッドが違うらしい curl -X DELETE http://challenge-your-limits2.herokuapp.com/call/my/APIs # いろいろ試すとDELETEで通る curl http://challenge-your-limits2.herokuapp.com/c2_users/12/hacker_apply # 案内されたURLにリクエストするとなんか違うらしい curl http://challenge-your-limits2.herokuapp.com/help/me/out # とりあえず登録 curl -F &amp;quot;username=yaasita&amp;quot; -F &#39;email=hoge1@example.com&#39; \ http://challenge-your-limits2.heroku/app.com/c2_users/ # 帰ってきた値でBASIC認証 curl --user yaasita:uRd4yy-imPbHBR4W http://challenge-your-limits2.herokuapp.com/c2_users/10 # あとは帰ってきた文字列をBASE64デコード  パズル3  http://tango-ruby.hatenablog.com/entry/2016/01/10/125615 http://challenge-your-limits3.herokuapp.com/  答え</description>
    </item>
    
    <item>
      <title>リンク</title>
      <link>https://yaasita.github.io/2016/01/24/link/</link>
      <pubDate>Sun, 24 Jan 2016 02:15:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/01/24/link/</guid>
      <description> 監視カメラまとめ  http://www.insecam.org/en/bycountry/JP/   SIはやめておけ  http://anond.hatelabo.jp/20160123131828 バックアップ    </description>
    </item>
    
    <item>
      <title>素因数分解の話</title>
      <link>https://yaasita.github.io/2016/01/11/factor/</link>
      <pubDate>Mon, 11 Jan 2016 02:20:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/01/11/factor/</guid>
      <description>素因数分解してくれるサービス
http://factordb.com/
自分のSSH鍵がリストされてないか確認してみる
# 公開鍵の modulus ssh-keygen -m PKCS8 -e -f authorized_keys &amp;gt; kagi openssl rsa -pubin -inform PEM -text -noout &amp;lt; kagi &amp;gt; modulus # 秘密鍵の modulus とか prime1, prime2の確認 openssl rsa -text -noout -in ~/.ssh/id_rsa  こんな感じのスクリプトで10進数にすればOK
perlで大きめの数値計算する例も
 載ってない一安心
  http://goo.gl/Qqaed5
  http://goo.gl/yKVyUH
  参考リンク
 TeslaCrypt（vvvウイルス）によって暗号化されたファイルの復号手順メモ    </description>
    </item>
    
    <item>
      <title>systemdでの電源管理</title>
      <link>https://yaasita.github.io/2016/01/06/acpi/</link>
      <pubDate>Wed, 06 Jan 2016 00:47:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/01/06/acpi/</guid>
      <description>Arch Linuxのwikiが詳しかった
/etc/systemd/logind.conf
あたりを直す
ノートPC閉じたときのSuspendを止めたかったから↓みたいにした
HandleSuspendKey=ignore HandleLidSwitch=ignore  </description>
    </item>
    
    <item>
      <title>docker composeインストール</title>
      <link>https://yaasita.github.io/2015/12/31/compose/</link>
      <pubDate>Thu, 31 Dec 2015 18:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/12/31/compose/</guid>
      <description>docker-composeもcheckinstallでdebパッケージにしといた
https://goo.gl/MKXvhm
Makefile
install: chmod +x bin/docker-compose cp bin/docker-compose /usr/local/bin/ cp bash/docker-compose /etc/bash_completion.d/  </description>
    </item>
    
    <item>
      <title>checkinstallでdocker-machineをパッケージに</title>
      <link>https://yaasita.github.io/2015/12/30/checkinstall/</link>
      <pubDate>Wed, 30 Dec 2015 03:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/12/30/checkinstall/</guid>
      <description>debパッケージにするとアンインストールが楽になる
 https://github.com/docker/machine https://goo.gl/X5Njaz  以下のMakefileを作ってcheckinstallコマンドでおｋ
bash補完はこの辺
docker-machine-0.5.5/ ├── Makefile ├── docker-machine ├── docker-machine-prompt.bash ├── docker-machine-wrapper.bash └── docker-machine.bash  Makefile
 </description>
    </item>
    
    <item>
      <title>最近のSIer記事</title>
      <link>https://yaasita.github.io/2015/11/29/sier/</link>
      <pubDate>Sun, 29 Nov 2015 22:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/11/29/sier/</guid>
      <description> IT業界で客先常駐という働き方はもうやめにできないか 大手Sierで見た！ 日本でプログラマが少ない理由は戦う戦場を間違えているからです  </description>
    </item>
    
    <item>
      <title>RAID5のリビルド中にもう一個壊れるってやつ</title>
      <link>https://yaasita.github.io/2015/10/17/raid5_fail/</link>
      <pubDate>Sat, 17 Oct 2015 16:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/10/17/raid5_fail/</guid>
      <description>リビルド中にもう一個壊れてRAID5が終わった話
/dev/md0: Version : 1.2 Creation Time : Fri Jan 6 12:24:44 2012 Raid Level : raid5 Array Size : 5860535808 (5589.04 GiB 6001.19 GB) Used Dev Size : 1953511936 (1863.01 GiB 2000.40 GB) Raid Devices : 4 Total Devices : 4 Persistence : Superblock is persistent Update Time : Sat Oct 17 16:59:57 2015 State : clean, FAILED Active Devices : 2 Working Devices : 3 Failed Devices : 1 Spare Devices : 1 Layout : left-symmetric Chunk Size : 512K Name : hoge:0 UUID : 55b9d6ea:4627c873:a0bcab05:a4f0c25d Events : 6755 Number Major Minor RaidDevice State 5 8 49 0 active sync /dev/sdd1 2 0 0 2 removed 2 8 33 2 active sync /dev/sdc1 6 0 0 6 removed 4 8 1 - faulty /dev/sda1 6 8 17 - spare /dev/sdb1  HDD一台が壊れたので /dev/sdb1を追加中にアレイの構成Diskがもう一個壊れた</description>
    </item>
    
    <item>
      <title>ISUCON5で惨敗した件</title>
      <link>https://yaasita.github.io/2015/09/30/isucon5/</link>
      <pubDate>Wed, 30 Sep 2015 00:38:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/09/30/isucon5/</guid>
      <description>ISUCON5に参加してきました
T・D・U！T・D・U！という名前で出てみました
最高スコアは5000ちょっとでしたOTZ
感想  ISUCON  会社以外の人ととチーム組むと他社の事情とか聞けて結構良いかもしれない idobata,GCE(Google Compute Engine)とか使ったことなかったからいい機会だったかも VM渡されて時間内に早くするんだ！って競技はルールも分かりやすくて面白い 惨敗だったけど楽しかったし勉強になった   GCP(Google Cloud Platform)  なんかAWS慣れてる所為もあるんだろうけど結構手間取った ついでに触ったGoogle Cloud DNSはRoute53の方が高機能かな～ あらかじめユーザ名＋鍵登録しておけばインスタンス立ち上げ時にユーザ作って鍵設定までしてくれて便利(小並感   idobata  slackと違って1ユーザのアカウントをチーム内で共有するみたいな感じなので  会社内のチャット→slack 会社を跨いだメンバーとのやり取り→idobataみたいな感じがよいのかな   ちょっとISUCON中は重かったけどこれからに期待    反省  最初に落ち着いて計測してみたほうが良かったかも  制限時間があるから焦って、手当たり次第に対応してたけどもっと計測に時間とってやることやらない事決めてから取り掛かれば良かったかも   troterにほぼ任せちゃったので。。。   役割決めないとだったな お前これやる、俺これやる的な話してから取り掛かるべきだったかも   やっぱコード読まなきゃダメ  パラメータチューニングとかでもちょっとはスコア上がるけど、ロジック見て良い感じの実装にするのは必須ですた 例年 sinatraアプリらしいので一個くらいは作ってから望むべきだったかも    参考リンク  ISUCON5の予選に参加して惨敗してきました #isucon   function callback(data){ var photos = data.</description>
    </item>
    
    <item>
      <title>handbrakeでISOをエンコード</title>
      <link>https://yaasita.github.io/2015/08/25/handbrake/</link>
      <pubDate>Tue, 25 Aug 2015 00:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/08/25/handbrake/</guid>
      <description>Linuxで動画のエンコード/リッピングするとき
apt-get handbreak  handbrake-gtk
で起動して、左側のソース選んで
開始でOK
あんま難しくない
http://yaasita.tumblr.com/post/127482624497 </description>
    </item>
    
    <item>
      <title>saslauthd-debian</title>
      <link>https://yaasita.github.io/2015/07/26/saslauthd-debian/</link>
      <pubDate>Sun, 26 Jul 2015 02:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/07/26/saslauthd-debian/</guid>
      <description>なんか Debian Jessie(8.1)のsaslauthdのsystemd定義が書かれてない気がする
なので自動起動に設定したかったら自分で書く感じで
/etc/systemd/system/saslauthd.service
 みたいな定義を書いて
systemctl daemon-reload systemctl enable saslauthd.service systemctl start saslauthd.service  </description>
    </item>
    
    <item>
      <title>最近買ったスマホ</title>
      <link>https://yaasita.github.io/2015/07/26/xperia/</link>
      <pubDate>Sun, 26 Jul 2015 02:29:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/07/26/xperia/</guid>
      <description>EXPANSYSで買った
Sony Xperia E4g E2003 (Unlocked LTE, 8GB, White) 18,737円  SIMフリーはIIJ MIO
IIJ IIJmio SIM ウェルカムパック microSIM ( SMS 機能付き ) 版 1,900円  </description>
    </item>
    
    <item>
      <title>IIJ(MIO SIM)のIPアドレス帯</title>
      <link>https://yaasita.github.io/2015/07/20/iij-ip/</link>
      <pubDate>Mon, 20 Jul 2015 20:38:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/07/20/iij-ip/</guid>
      <description>調べた限りだとこんな感じ
 </description>
    </item>
    
    <item>
      <title>コードを書いて実力判定</title>
      <link>https://yaasita.github.io/2015/06/06/codeeval/</link>
      <pubDate>Sat, 06 Jun 2015 21:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/06/06/codeeval/</guid>
      <description>コード書くと評価してくれるようなサービス
https://www.codeeval.com/browse/1/</description>
    </item>
    
    <item>
      <title>簡易監視スクリプト</title>
      <link>https://yaasita.github.io/2015/06/02/kanshi/</link>
      <pubDate>Tue, 02 Jun 2015 00:02:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/06/02/kanshi/</guid>
      <description>自分で自分を監視するperlスクリプト
https://github.com/yaasita/kanshi-self</description>
    </item>
    
    <item>
      <title>オンライン囲碁ゲームCOSUMI</title>
      <link>https://yaasita.github.io/2015/06/01/igo/</link>
      <pubDate>Mon, 01 Jun 2015 00:01:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/06/01/igo/</guid>
      <description>やってみた
5路盤しか勝てない
結果</description>
    </item>
    
    <item>
      <title>MySQLの地図情報</title>
      <link>https://yaasita.github.io/2015/05/31/mysql-gis/</link>
      <pubDate>Sun, 31 May 2015 01:58:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/05/31/mysql-gis/</guid>
      <description>MySQLのGIS回り
こんな感じで使うぽい
# インサート insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;旭鮨総本店 新宿住友ビル50F店&#39; ,GeomFromText(&#39;POINT(35.691421 139.692595)&#39;) ); insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;久兵衛 京王プラザホテル店&#39; ,GeomFromText(&#39;POINT(35.689685 13 9.694664)&#39;) ); insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;白金寿司&#39; ,GeomFromText(&#39;POINT(35.693417 139.687282)&#39;) ); insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;喜与し&#39; ,GeomFromText(&#39;POINT(35.692192 139.742396)&#39;) ); # 現在の位置から近い順に表示 コンシェリア西新宿= 35.692777 139.687362 select shop_name, GLength( GeomFromText( concat(&#39;LineString(35.</description>
    </item>
    
    <item>
      <title>クラシックダンジョンX2のインストール機能</title>
      <link>https://yaasita.github.io/2015/05/19/classic-dungeon-x2/</link>
      <pubDate>Tue, 19 May 2015 00:15:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/05/19/classic-dungeon-x2/</guid>
      <description>クラシックダンジョンX2にはインストール機能ってやつがあるけど、
UMDとかなら意味あるらしいけど、vitaでダウンロード版だと
むしろ遅くなるしなんか不具合おきるぽい
vitaの場合はコンテンツ管理からアンインストールできた
61MBくらいのデータ(ゲームデータ)ってやつを消せばおｋ</description>
    </item>
    
    <item>
      <title>Meteor チュートリアル 01</title>
      <link>https://yaasita.github.io/2015/05/10/meteor-tutorial01/</link>
      <pubDate>Sun, 10 May 2015 00:28:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/05/10/meteor-tutorial01/</guid>
      <description>話題のMeteorを触ってみた
discovermeteorっていうチュートリアル本があるのでやってみる
なんか原文は有料になってる気がするけど翻訳版は読めるみたい
http://ja.discovermeteor.com/
とりあえず最初の方だけ
Getting Started インストール
途中でsudoするので出来るようにしておく
curl https://install.meteor.com | sh  最初に以下のコマンドを発行して作る
meteor create microscope  ちなみにこの.meteor/.gitignoreに書かれてる
.meteor/.local/の中を消せばリセットされる
パッケージの追加
meteor add mizzao:bootstrap-3 meteor add underscore  ディレクトリ追加
mkdir server client public lib  実行について
 server =&amp;gt; サーバ上でのみ実行 client =&amp;gt; クライアント上でのみ実行 それ以外はどちらでも動く publicには静的ファイルを置く libはどのファイルよりも先に実行される main.*というファイル名は一番最後に実行される  CSSを追加
mkdir client/stylesheets vi client/stylesheets/style.css  https://github.com/yaasita/meteor-microscope/tree/88cc746c372b13dae6a669c014c764320a8e776e
Deployment deployしてみる
meteor deploy yaasita.meteor.com  なんかこれでできるぽい
modulusというのを使うのがいいらしい
npm install -g modulus ndenv rehash modulus login modulus project create  modulusでmongodb使うにはダッシュボードからDATABASESを選んでいける</description>
    </item>
    
    <item>
      <title>Linuxでスクリーンショット取る</title>
      <link>https://yaasita.github.io/2015/04/18/linux-screenshot/</link>
      <pubDate>Sat, 18 Apr 2015 02:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/18/linux-screenshot/</guid>
      <description>shutterというのがよさ気
apt-get install shutter  http://www.xmisao.com/2014/02/07/get-screenshot-on-linux-by-shutter.html
他にxwd使う方法もある
# クリックしたウィンドウ xwd | convert - hoge.png xwd -root | convert - desktop.png  http://www.xmisao.com/2013/09/17/linux-xwindow-screenshot.html</description>
    </item>
    
    <item>
      <title>Linuxのクリップボードマネージャ</title>
      <link>https://yaasita.github.io/2015/04/18/linux-clipboard-manager/</link>
      <pubDate>Sat, 18 Apr 2015 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/18/linux-clipboard-manager/</guid>
      <description>diodon apt-get install diodon  初期設定はCtrl + Alt + vで呼び出し
Preferenceから以下の設定を直した
 Automatically paste selected item  自動ペーストをやめる   PluginsのApplication Indicatorのチェックを外す  なんかCtrl-Vが使えなくなったりするので使うのやめた
klipper KDEのやつ
apt-get install klipper  初期はShift+Zになってるので設定からなおす
全般の選択とクリップボード→選択を無視する
ってやつやると選択しただけでクリップボードに入るのを抑止
できる</description>
    </item>
    
    <item>
      <title>Linuxのターミナルで出来るマリオらしい</title>
      <link>https://yaasita.github.io/2015/04/13/linux-terminal-game/</link>
      <pubDate>Mon, 13 Apr 2015 00:24:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/13/linux-terminal-game/</guid>
      <description>すごいなこれ

まさかの？Linuxターミナル上でプレイする『スーパーマリオブラザーズ』
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>boxesっていうソフト</title>
      <link>https://yaasita.github.io/2015/03/29/boxes/</link>
      <pubDate>Sun, 29 Mar 2015 03:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/03/29/boxes/</guid>
      <description>vimでも使える
apt-get install boxes  Visual Modeで選択して
!boxes -d shell  とかやる
参考リンク 毎日のスクリプト作成にちょっとしたコダワリを加えるboxes</description>
    </item>
    
    <item>
      <title>ロックマンX5攻略</title>
      <link>https://yaasita.github.io/2015/03/22/rockmanx5/</link>
      <pubDate>Sun, 22 Mar 2015 23:09:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/03/22/rockmanx5/</guid>
      <description>エンディング 以下の3種類
 ゼロがプレイヤーキャラから外れていない状態で、エックスでクリア。  シャトル成功でOK   ゼロがプレイヤーキャラから外れている状態で、エックスでクリア。  エニグマ、シャトルどっちも失敗すればOK   ゼロでクリア。  シャトル成功でOK    ステージ攻略 クレッセント・グリズリー(左一番上)  弱点  エックス：スパイクロープ ゼロ：双幻夢   サブタンク  暴走トラックの途中に普通においてある   ライフアップ  暴走トラック面中間の屋根の上(ファルコン or ガイアアーマ必須)   パーツ  ファルコン・フットパーツ 暴走トラックから飛び降りてすぐ上の岩を壁蹴りで登る。   強化パーツ  ライフ: ショックアブソーバー エナジー: ハイパーダッシュ    ボルト・クラーケン(左上から2番目)  弱点  クレッセントショット or 三日月斬   ライフアップ  ガイアアーマー必須 ステージ最後のトラップの上Vと書かれた箱をチャージショット   パーツ  ファルコン・ヘッドパーツ ライドチェイサーでエネルギー8個全部取る   強化パーツ  ライフ: ハイパーチャージ エナジー: ゼットセイバーエクステンド（ゼロ用）    シャイニング・ホタルニクス(左下から2番目)  弱点  エックス：トライサンダー ゼロ：電刃   ライフアップ  ステージ最初の針の下 ファルコンかガイア使って取る   パーツ  ファルコン・アームパーツ クレッセントショット(エックス) or 三日月斬(ゼロ) 天井にあるプラズマ放題を↑の武器で壊す   EXアイテム  木の天井をグランドファイヤで燃やす   強化パーツ  ライフ: ラピッド５（エックス用） エナジー: ショットイレイザー（ゼロ用）    タイダル・マッコイーン(左一番下)  弱点  エックス：クレッセントショット ゼロ：三日月斬   ライフアップ  ファルコンアーマー or ガイアアーマー or 電刃 水の引いた船の中 ゼロの場合はブロック破壊 エックスの場合はアーマ使って取る   パーツ  ファルコン・ボディパーツ ジュエルシェイバー(エックス) 水の引いた船の中↑の武器で扉を破壊   強化パーツ  ライフ: スーパーリカバー エナジー: エナジーセイバー    スパイラル・ペガシオン(右一番上)  弱点  エックス：ダークホールド ゼロ：ダークホールド   ライフアップ  上に登るリフトの2番目停止位置にある 右に行けば普通に取れる   パーツ  ガイア・ボディパーツ ファルコンアーマーが必要 斜めリフトに乗るところを上に飛ぶ   サブタンク  下に降りていくリフトの下   強化パーツ  ライフ: ハイジャンプ エナジー: スピードムーブ    スパイク・ローズレッド(右上から2番目)  弱点  エックス：グランドファイア ゼロ：断地炎   ライフアップ  ガイアアーマー ステージ最初のVとかかれた箱をチャージショットで壊す ダッシュでブロック動かして足場作ってジャンプ   パーツ  ファルコンアーマー(フットパーツ) ロープ掴みの連続で横に進む途中の岩の間を上に   強化パーツ  ライフ: アルティメットバスター エナジー: ゼットセイバープラス（ゼロ用）    ダーク・ネクロバット(右下から2番目)  弱点  ウイルレーザー 滅閃光   サブタンク  ステージ後半に置いてある ファルコンアーマーで取る   ライフアップ  重力逆転のところにある   パーツ  ガイア・ヘッドパーツ ウィルレーザーが必要 ボス手前の穴を下に降りる。   サブタンク  リフトで進む場所の最後   強化パーツ  ライフ: ウィルスバリアー エナジー: ウィルスバスター    バーン・ディノレックス(右一番下)  弱点  ウィングスパイラル 疾風   ライフアップ  マグマが左から出てくるところの一番左にある   パーツ  ガイア・アームパーツ ライドアーマーにのってマグマ進んで一番奥 ファルコンアーマーで行くのもOK   強化パーツ  ライフ: スピードショット エナジー: バスタープラス    零空間1(真ん中) シャドーデビル</description>
    </item>
    
    <item>
      <title>sshuttleで簡易VPN</title>
      <link>https://yaasita.github.io/2015/03/15/sshuttle/</link>
      <pubDate>Sun, 15 Mar 2015 03:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/03/15/sshuttle/</guid>
      <description>こんな感じで接続する
sshuttle -r hogeuser@hoge-server 10.0.0.0/16 --dns  bash-completionが利かないのが不便なので、
sshなりを流用すればOK
これでいい感じにiptablesを設定してNAT通ししてくれる
便利</description>
    </item>
    
    <item>
      <title>ロックマンX4攻略</title>
      <link>https://yaasita.github.io/2015/03/05/rockmanx4/</link>
      <pubDate>Thu, 05 Mar 2015 00:15:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/03/05/rockmanx4/</guid>
      <description>ステージ攻略 ウェブ・スパイダス(上段左) クモみたいな奴
 パーツ  フットパーツ　前半降りてくるところの右   弱点武器  X: ツインスラッシャー(ライオンから奪った)   ライフアップ  後半、2つ目の燃やせる木の幹の中（炎の攻撃で入手）。    サイバー・クジャッカー(上段左から2番目)  パーツ  ヘッドパーツ 前半、エリア3をSランク   弱点武器  X: ソウルボディ(キノコ) ゼロ: 上に上昇しながら炎だすやつ   ライフアップ  前半、エリア1（ゼロはエリア2）を「S」ランクを出して抜ける。   サブタンク  前半、エリア2（ゼロはエリア3）を「S」ランクを出して抜ける。    ストーム・フクロウル(上段右から2番目)  パーツ  アームパーツ 後半、トゲ地帯の上 ライトニングウェブで普通の壁蹴りで行く   弱点武器  X:エイミングレーザー(孔雀)   ライフアップ  前半、下に極太ビームを放つ最初のUFOの下（足場破壊前に回収）。    マグマード・ドラグーン(上段右)  パーツ  ボディパーツ 後半　ライドアーマ乗り捨てジャンプ ツインスラッシャーチャージショットで破壊   弱点武器  ダブルサイクロン(フクロウ)   ライフアップ  後半、ライドアーマー手前の階段状通路の左上。    ジェット・スティングレン(下段左) エイみたいな奴</description>
    </item>
    
    <item>
      <title>HabitRPGについて</title>
      <link>https://yaasita.github.io/2015/02/28/habitrpg/</link>
      <pubDate>Sat, 28 Feb 2015 22:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/02/28/habitrpg/</guid>
      <description>function callback(data){ var original_url = data.response.posts[0].photos[0].original_size.url; document.getElementById(&#34;habitimg&#34;).parentNode.href = original_url; document.getElementById(&#34;habitimg&#34;).src = original_url; }   公式 https://habitrpg.com/
遊び方   アバター
 左上が自分のアバターで、クリックするとカスタマイズできる    ライフゲージ
 赤いバーがライフゲージで、仕事をしないと減っていく 0になると1レベルダウン＆お金、装備品が無くなる    経験値
 黄色いバーは経験値 仕事を達成するとお金と経験値が入る ゲージ一杯になるとレベルアップ レベルがあがると、ゲームの新要素がアンロック    仕事はHabits(習慣), Dailies(毎日), To-Dos(すべきこと)の3つの仕事がある
  Habits(習慣)
 絶えず行う仕事 良い習慣を作る(プラス)⇒経験値+お金が入る 悪い習慣を作れば(マイナス)⇒ライフゲージが減る    Dailies(毎日)
 1日に1回完了させたい仕事 毎日チェックできればお金と経験値が入る チェックできないとライフゲージが減る    To-Dos(すべきこと)
 1回限りの仕事    Rewards</description>
    </item>
    
    <item>
      <title>三国志解説サイト</title>
      <link>https://yaasita.github.io/2015/02/08/sangokushi/</link>
      <pubDate>Sun, 08 Feb 2015 23:44:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/02/08/sangokushi/</guid>
      <description>はじめての三国志
http://hajimete-sangokushi.com/</description>
    </item>
    
    <item>
      <title>LinuxでPDF編集ソフトまとめ</title>
      <link>https://yaasita.github.io/2015/01/04/linux-pdf/</link>
      <pubDate>Sun, 04 Jan 2015 00:17:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/01/04/linux-pdf/</guid>
      <description>libreoffice-pdfimport libreofficeでPDF編集できる
なんか変なところで逆さまになったり微妙だった
でもUIはLibreofficeの感覚で使えるので今後に期待
pdfchain pdftkのGUIフロントエンド
コマンドラインでやった方が良いかな
pdfmod LinuxでPDF編集するならこれが一番いいかもしれない
ページの入れ替え、回転とかできる
左サイドバーにページ一覧が出たらよかったなぁ
pdfsam Javaで動くGUIのPDF編集ソフト
なんか難しくてよくわからなかった
pdfshuffler pdfmodに似てる感じのPDF編集ソフトこっちも直感的で使いやすい
pdfmodに比べて重い気がする
機能も若干少な目
pdftk コマンドライン(CUI)で使うPDF編集ソフト
結合とかはGUIだとうまくできないので、こっちでやった方が良さげ</description>
    </item>
    
    <item>
      <title>vim-adventures</title>
      <link>https://yaasita.github.io/2014/12/21/vim-adventures/</link>
      <pubDate>Sun, 21 Dec 2014 04:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/12/21/vim-adventures/</guid>
      <description>vim-adventures 攻略情報 level1  海のところはカーソルを右端に置いてjで下に行けば越えられる  j,k移動は現在行の位置と同じ縦位置に移動しようとするということがわかればOKそう    level2  w,bとかとって適当に宝箱取る 30秒以内に島を渡ってxキーとる スタート地点付近の宝箱をBキーで取る  level3  なんか間違った英文をxキーを使って削除して鍵GET その後スタート地点付近にある宝箱取って終わり  https://github.com/yaasita/bpsvim/wiki/vim-adventures
http://vim-adventures.com/</description>
    </item>
    
    <item>
      <title>ユニコード文字の顔文字一覧</title>
      <link>https://yaasita.github.io/2014/12/20/kaomoji/</link>
      <pubDate>Sat, 20 Dec 2014 14:47:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/12/20/kaomoji/</guid>
      <description>http://matome.naver.jp/odai/2139210846915545101</description>
    </item>
    
    <item>
      <title>picasaウェブアルバム </title>
      <link>https://yaasita.github.io/2014/11/15/picasa-web/</link>
      <pubDate>Sat, 15 Nov 2014 23:57:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/11/15/picasa-web/</guid>
      <description>こっから入れる
https://picasaweb.google.com/home?hl=ja</description>
    </item>
    
    <item>
      <title>chromeのキャッシュから画像引っ張って保存する</title>
      <link>https://yaasita.github.io/2014/11/15/chrome-chache-jpg/</link>
      <pubDate>Sat, 15 Nov 2014 22:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/11/15/chrome-chache-jpg/</guid>
      <description>キャッシュはC:\Users\hogeuser\AppData\Local\Google\Chrome\User Data\Default\Cacheに保存されている
そっから引っ張ってきてLinuxとかで以下のコマンドで変換する
file f_000* | grep JPEG | perl -F: -nlae &#39;print $F[0]&#39; | xargs -i mv {} {}.jpg  Twitterの画像引っ張って来るためにやった
本当はキャッシュを削除して該当のページだけを見てから保存する方法がいいのかも</description>
    </item>
    
    <item>
      <title>Onenoteでオートコレクトの設定</title>
      <link>https://yaasita.github.io/2014/10/30/onenote-autocorrect/</link>
      <pubDate>Thu, 30 Oct 2014 00:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/30/onenote-autocorrect/</guid>
      <description>ファイル⇒オプション開いて
文章校正⇒オートコレクトのオプション
https://yaasita.tumblr.com/post/101260507767  https://yaasita.tumblr.com/post/101260507767</description>
    </item>
    
    <item>
      <title>フリーのPDF編集ソフト</title>
      <link>https://yaasita.github.io/2014/10/26/master-pdf-editor/</link>
      <pubDate>Sun, 26 Oct 2014 05:49:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/26/master-pdf-editor/</guid>
      <description>Master PDF Editor
http://code-industry.net/get.pdfeditor.php
Linux版もあっていい感じ</description>
    </item>
    
    <item>
      <title>MySQL Workbench入りのDockerイメージ</title>
      <link>https://yaasita.github.io/2014/10/22/mysql-workbench/</link>
      <pubDate>Wed, 22 Oct 2014 23:56:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/22/mysql-workbench/</guid>
      <description>https://registry.hub.docker.com/u/yaasita/docker-mysql/
使い方
docker run -d -p 22 -v /tmp:/tmp mysql /usr/bin/supervisord ssh localhost -p49153 export DISPLAY=192.168.0.2:0 mysql-workbench  </description>
    </item>
    
    <item>
      <title>jQuery File Uploadをリバースプロキシ下で使う</title>
      <link>https://yaasita.github.io/2014/10/21/jquery-file-upload-patch/</link>
      <pubDate>Tue, 21 Oct 2014 01:08:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/21/jquery-file-upload-patch/</guid>
      <description>デフォルトだとHTTP_X_FORWARDED_HOST等のヘッダは解釈してくれないので、
以下のような設定にしてHOSTヘッダも化かす(apacheの場合)
ProxyPreserveHost On ProxyPass / http://hoge.example.com/ ProxyPassReverse / http://hoge.example.com/  HTTP_X_FORWARDED_HOSTも解釈して欲しかったら以下のようなパッチを当てる
 パッチの当て方
patch -p0 &amp;lt; rproxy.patch  </description>
    </item>
    
    <item>
      <title>ワークツリー付きのgit共有リポジトリ</title>
      <link>https://yaasita.github.io/2014/10/20/work-tree-git/</link>
      <pubDate>Mon, 20 Oct 2014 01:21:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/20/work-tree-git/</guid>
      <description>作ったリポジトリを横断的に検索したいときbareリポジトリだと
検索しにくいので、Work Tree付きの共有リポジトリ作った
ついでに、bitbucketのリポジトリもローカルに持ってきたときのメモ
 関連
gitでbareじゃない共有リポジトリを作る</description>
    </item>
    
    <item>
      <title>dockerでpukiwiki</title>
      <link>https://yaasita.github.io/2014/10/14/docker-pukiwiki/</link>
      <pubDate>Tue, 14 Oct 2014 00:25:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/14/docker-pukiwiki/</guid>
      <description>dockerでpukiwiki
https://registry.hub.docker.com/u/yaasita/docker-pukiwiki/</description>
    </item>
    
    <item>
      <title>CGI(perl)でメール送る</title>
      <link>https://yaasita.github.io/2014/10/13/mail-cgi/</link>
      <pubDate>Mon, 13 Oct 2014 22:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/13/mail-cgi/</guid>
      <description>CGIでメール送るときの例
POSTされる文字コードがよくわからない場合は
nkf通してヨロシクやってもらう
CSRF対策は前の画面でセッション作っておけば良いです
 </description>
    </item>
    
    <item>
      <title>Dockerでrep2を動かす</title>
      <link>https://yaasita.github.io/2014/10/13/docker_rep2/</link>
      <pubDate>Mon, 13 Oct 2014 22:08:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/13/docker_rep2/</guid>
      <description>https://registry.hub.docker.com/u/yaasita/docker-rep2/</description>
    </item>
    
    <item>
      <title>itunesで購入済みアプリを見る</title>
      <link>https://yaasita.github.io/2014/10/05/itunes-purchase/</link>
      <pubDate>Sun, 05 Oct 2014 03:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/05/itunes-purchase/</guid>
      <description>itunes開いてiTunes Storeからナビリンクの購入済み
https://yaasita.tumblr.com/post/99156026702

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>マウスでなぞってASCIIアート書ける</title>
      <link>https://yaasita.github.io/2014/09/28/asciiflow/</link>
      <pubDate>Sun, 28 Sep 2014 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/28/asciiflow/</guid>
      <description>アスキーフローというらしい
http://asciiflow.com/</description>
    </item>
    
    <item>
      <title>modern.ieのVMファイルの解凍</title>
      <link>https://yaasita.github.io/2014/09/23/modern-ie/</link>
      <pubDate>Tue, 23 Sep 2014 22:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/23/modern-ie/</guid>
      <description>モダンIEというIEテスト用のVM配ってるサイト
sfxの解凍はunrarでできた
unrar e IE11.Win7.ForLinuxVirtualBox.part1.sfx  https://www.modern.ie/ja-jp
Windows7の日本語化について
 WindowsUpdateでオプション選択してLanguage Pack入れる コントロールパネルの Clock, Language, and Regionを選択 TimeZone変更  http://qiita.com/hnakamur/items/5f2f9e817dd0de60abb2</description>
    </item>
    
    <item>
      <title>squirrelmailっていうWebメールクライアント</title>
      <link>https://yaasita.github.io/2014/09/21/squirrelmail/</link>
      <pubDate>Sun, 21 Sep 2014 01:56:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/21/squirrelmail/</guid>
      <description>いわゆるweb mailソフト
IMAPしか対応してないけど、localhost以外のメールも読める
Dockerイメージにしてみた
https://registry.hub.docker.com/u/yaasita/docker-squirrelmail/
sshで入って以下のコマンドで設定できる
/etc/squirrelmail/conf.pl  設定箇所  IMAPの接続情報 IMAPのTLS接続の有無  2. Server Settings =&amp;gt; A. Update IMAP Settings   言語  10. Languages  1. Default Language =&amp;gt; ja_JP 2. Default Charset =&amp;gt; iso-2022-jp      参考リンク  http://centossrv.com/squirrelmail.shtml  </description>
    </item>
    
    <item>
      <title>闇SIer</title>
      <link>https://yaasita.github.io/2014/09/11/yami_sier/</link>
      <pubDate>Thu, 11 Sep 2014 02:53:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/11/yami_sier/</guid>
      <description> 闇SIer 元ファイル  </description>
    </item>
    
    <item>
      <title>自分の声を遅れて聞こえさせて話し難くなる</title>
      <link>https://yaasita.github.io/2014/08/31/speech-jammer/</link>
      <pubDate>Sun, 31 Aug 2014 02:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/31/speech-jammer/</guid>
      <description>SpeechJammerLiteというらしい
https://sites.google.com/site/qurihara/home/speechjammer/lt</description>
    </item>
    
    <item>
      <title>3Dのパズルゲーム？</title>
      <link>https://yaasita.github.io/2014/08/31/blueprint3d/</link>
      <pubDate>Sun, 31 Aug 2014 00:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/31/blueprint3d/</guid>
      <description>3Dのパーツを重ねて絵にするゲーム
Blueprint3D
http://armorgames.com/play/12557/blueprint3d</description>
    </item>
    
    <item>
      <title>簡易Radiko録音スクリプトらしい</title>
      <link>https://yaasita.github.io/2014/08/27/radiko-recording/</link>
      <pubDate>Wed, 27 Aug 2014 00:49:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/27/radiko-recording/</guid>
      <description>らしい
https://gist.github.com/matchy2/3956266</description>
    </item>
    
    <item>
      <title>MACアドレスのベンダーを調べる</title>
      <link>https://yaasita.github.io/2014/08/25/mac-address-search/</link>
      <pubDate>Mon, 25 Aug 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/25/mac-address-search/</guid>
      <description>http://standards.ieee.org/develop/regauth/oui/public.html
MACアドレスの上位3バイトを検索窓に入れる
例) 00-22-68</description>
    </item>
    
    <item>
      <title>teraterm越しに特殊キーを送る</title>
      <link>https://yaasita.github.io/2014/08/24/teraterm-keycode/</link>
      <pubDate>Sun, 24 Aug 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/24/teraterm-keycode/</guid>
      <description>キーをどこで奪われてるのかまず探す
teratem -&amp;gt; bash -&amp;gt; app  teratemでキーを取られているならKEYBOARD.CNFの末尾に以下のように追記する
User(連番)で追記する書式についてはteratemのヘルプ参照
User3=1037,0,$1E User4=1040,0,$11  この例だとUser3でvimの副ファイル切り替え(:h ctrl-^)を出来るようにしている
User4ではDockerのデタッチに使うCtrl-qを通している
Ctrl-qについてはbash側でも取られるのでそっちも変更する
# キー設定を参照 # stopに割り当てられてるのが分かる stty -a # startをundefにする(ついでにstopも) stty start undef stty stop undef  </description>
    </item>
    
    <item>
      <title>HDDの故障が疑われるときにやったこと</title>
      <link>https://yaasita.github.io/2014/08/16/hdd-fail/</link>
      <pubDate>Sat, 16 Aug 2014 19:10:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/16/hdd-fail/</guid>
      <description>なんかrsyncでバックアップしようとすると以下のエラーが出るようになった
rsync: read errors mapping &amp;quot;/home/yamasita/Desktop/hogehoge.dat&amp;quot;: Input/output error (5) ERROR: /home/yamasita/Desktop/hogehoge.dat failed verification -- update discarded.  まずbadblocksで調べてみる
badblocks /home/yamasita/Desktop/hogehoge.dat  ダメそう
とりあえず、fsckをかけてみる
/のパーティションなのでfsckの間隔を調整
dumpe2fs -h /dev/sda1 | egrep -i &#39;check|mount count&#39; tune2fs -i 30d /dev/sda1  これでとりあえず不良セクタ退避させた
過去記事
HDDが故障したときにやったこと
参考リンク
http://nfolamp.wordpress.com/2010/10/25/dumpe2fstune2fs-manipulating-the-ext-fs-auto-check-parameters/</description>
    </item>
    
    <item>
      <title>検証環境の作り方</title>
      <link>https://yaasita.github.io/2014/08/13/kensyou/</link>
      <pubDate>Wed, 13 Aug 2014 02:53:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/13/kensyou/</guid>
      <description> 検証環境の作り方 元ファイル  </description>
    </item>
    
    <item>
      <title>youtubeとかダウンロードできるClipGrab</title>
      <link>https://yaasita.github.io/2014/08/11/clipgrab/</link>
      <pubDate>Mon, 11 Aug 2014 06:30:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/clipgrab/</guid>
      <description>動画ファイルダウンロードソフト
動画保存に便利
今までyoutubeとかダウンロードするときはDownloadHelper使ってたんですが、
こっちのほうが良いことが分かった
以下のリンクにLinuxで開けばバイナリがダウンロードできる
http://clipgrab.de/ja
apt-get install libqtwebkit4  しておけば多分動く
サポートしているサイト一覧
http://clipgrab.org/faqs/supported-sites</description>
    </item>
    
    <item>
      <title>vimでキータイプ音を鳴らす</title>
      <link>https://yaasita.github.io/2014/08/11/vim-sound/</link>
      <pubDate>Mon, 11 Aug 2014 06:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/vim-sound/</guid>
      <description>.gvimrc
autocmd! TextChangedI * silent! execute &amp;quot;!aplay /tmp/wav/seq1_key1.wav &amp;amp;&amp;quot;  参考
http://tekkoc.tumblr.com/post/63418217996/vim
効果音あるところ
http://www.skipmore.com/sound/index_04.html</description>
    </item>
    
    <item>
      <title>書くことに集中できるエディタOmmWriter</title>
      <link>https://yaasita.github.io/2014/08/11/ommwriter/</link>
      <pubDate>Mon, 11 Aug 2014 05:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/ommwriter/</guid>
      <description>書いているときに音楽がなったり、キーボード操作音とかなったりする
公式
今は有料版しかなかったので$5ほど支払ってみた
なんかキーボードの操作音は音が小さいので調整したほうがいいかもしれない
調整方法はC:\Program Files (x86)\HerraizSoto\OmmWriter\Resources\Soundにあるwavを増幅させるとよい
audacityならwavを開いてエフェクト⇒増幅でできる
https://yaasita.tumblr.com/post/94368458857

LinuxだとFocusWriterってのが近そう
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>paizaのオンラインハッカソン</title>
      <link>https://yaasita.github.io/2014/08/02/paiza-kirishima/</link>
      <pubDate>Sat, 02 Aug 2014 14:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/02/paiza-kirishima/</guid>
      <description>https://paiza.jp/poh/kirishima
 結果
http://paiza.jp/poh/kirishima/result/aa7b9f29d7942c7e5646bd10d758c434</description>
    </item>
    
    <item>
      <title>vimのunite-webcolorname使ってみた</title>
      <link>https://yaasita.github.io/2014/07/20/webcolorname-vim/</link>
      <pubDate>Sun, 20 Jul 2014 03:35:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/webcolorname-vim/</guid>
      <description>設定
NeoBundle &#39;Shougo/unite.vim&#39; NeoBundle &#39;pasela/unite-webcolorname&#39;  使い方
 </description>
    </item>
    
    <item>
      <title>vim-startifyを使ってみる</title>
      <link>https://yaasita.github.io/2014/07/20/vim-startify/</link>
      <pubDate>Sun, 20 Jul 2014 03:11:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/vim-startify/</guid>
      <description>https://github.com/mhinz/vim-startify

設定
NeoBundle &#39;mhinz/vim-startify&#39; let g:startify_list_order = [&#39;files&#39;, &#39;bookmarks&#39;, &#39;dir&#39;] let g:startify_files_number = 20 let g:startify_custom_header = \ map([&#39;( ^ o ^ ) / &amp;lt; vim &#39;.v:version]+split(system(&#39;date&#39;), &#39;\n&#39;),&#39;&amp;quot; &amp;quot;.v:val&#39;) + [&#39;&#39;,&#39;&#39;] let g:startify_bookmarks = split(system(&#39;awk &amp;quot;{print \$2}&amp;quot; ~/.NERDTreeBookmarks&#39;),&#39;\n&#39;)   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>lightline.vimを使ってみた</title>
      <link>https://yaasita.github.io/2014/07/20/lightline/</link>
      <pubDate>Sun, 20 Jul 2014 00:12:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/lightline/</guid>
      <description>https://github.com/itchyny/lightline.vim
こんな感じになる
https://yaasita.tumblr.com/post/92242385452

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;lightline&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;lightline&#34;).src = photos[0].original_size.url; }   設定
NeoBundle &#39;itchyny/lightline.vim&#39; let g:lightline = { \ &#39;active&#39;: { \ &#39;left&#39;: [ [ &#39;mode&#39;, &#39;paste&#39; ], \ [ &#39;readonly&#39;, &#39;filename&#39;, &#39;modified&#39; ], \ [ &#39;fugitive&#39; ] \ ], \ &#39;right&#39;: [ [ &#39;lineinfo&#39; ], \ [ &#39;percent&#39; ], \ [ &#39;filetype&#39;, &#39;fileencoding&#39;, &#39;fileformat&#39; ] ] \ }, \ &#39;component&#39;: { \ &#39;fugitive&#39;: &#39;%{exists(&amp;quot;*fugitive#statusline()&amp;quot;)?</description>
    </item>
    
    <item>
      <title>vimの書き込みと同時に別ファイルに書き出す</title>
      <link>https://yaasita.github.io/2014/07/19/vim-backup-write/</link>
      <pubDate>Sat, 19 Jul 2014 22:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/19/vim-backup-write/</guid>
      <description>vimrcを書いたら別のファイルにも書き出す例
 </description>
    </item>
    
    <item>
      <title>HTMLファイルをパースするコマンド</title>
      <link>https://yaasita.github.io/2014/07/18/html-xml-utils/</link>
      <pubDate>Fri, 18 Jul 2014 01:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/18/html-xml-utils/</guid>
      <description>apt-get install html-xml-utils curl http://www.yahoo.co.jp/ &amp;gt; /tmp/yahoo hxselect -c html &amp;lt; /tmp/yahoo  参考リンク
 http://blog.ueda.asia/?p=2417 http://unix.stackexchange.com/questions/6389/parse-html-on-linux  </description>
    </item>
    
    <item>
      <title>CookieClicker</title>
      <link>https://yaasita.github.io/2014/07/13/cookie-clicker/</link>
      <pubDate>Sun, 13 Jul 2014 14:30:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/13/cookie-clicker/</guid>
      <description>クッキークリッカーのセーブデータ
 </description>
    </item>
    
    <item>
      <title>dockerでatom</title>
      <link>https://yaasita.github.io/2014/07/13/docker-atom/</link>
      <pubDate>Sun, 13 Jul 2014 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/13/docker-atom/</guid>
      <description>Dockerfile
 でsshで入る
cd /usr/bin ln -s nodejs node git clone --depth 1 https://github.com/atom/atom cd atom ./script/build ./script/grunt install  参考リンク
https://github.com/atom/atom/blob/master/docs/build-instructions/linux.md</description>
    </item>
    
    <item>
      <title>itunes入れるとDVDドライブが認識しない</title>
      <link>https://yaasita.github.io/2014/07/12/itunes-dvd-device/</link>
      <pubDate>Sat, 12 Jul 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/12/itunes-dvd-device/</guid>
      <description>レジストリの以下のキーを消すとうまくいった
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E965-E325-11CE-BFC1-08002BE10318}  http://michisugara.jp/archives/2013/op_drive_failure.html</description>
    </item>
    
    <item>
      <title>ネットワーク監視コマンド18</title>
      <link>https://yaasita.github.io/2014/07/12/network-monitor/</link>
      <pubDate>Sat, 12 Jul 2014 23:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/12/network-monitor/</guid>
      <description> Nload iftop iptraf nethogs bmon slurm tcptrack Vnstat bwm-ng cbm - Color Bandwidth Meter speedometer Pktstat Netwatch Trafshow Netload ifstat dstat collectl  参考リンク  http://www.binarytides.com/linux-commands-monitor-network/  </description>
    </item>
    
    <item>
      <title>Asciinemaで端末操作を共有する</title>
      <link>https://yaasita.github.io/2014/07/11/asciinema/</link>
      <pubDate>Fri, 11 Jul 2014 00:55:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/11/asciinema/</guid>
      <description> 端末操作を共有できる  https://asciinema.org/   任意の画面を選択してすぐGIFにする  https://gyazo.com/ja    </description>
    </item>
    
    <item>
      <title>tumblrでタグトラッキング</title>
      <link>https://yaasita.github.io/2014/07/06/tumblr-tagg-search/</link>
      <pubDate>Sun, 06 Jul 2014 05:14:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/06/tumblr-tagg-search/</guid>
      <description>ダッシュボード右上の検索ボックスは
http://www.tumblr.com/search/hoge  に飛ばされてしまうので
http://www.tumblr.com/tagged/hoge  で検索する</description>
    </item>
    
    <item>
      <title>gvfsのオートマウントを止める</title>
      <link>https://yaasita.github.io/2014/07/05/gvfs-mount/</link>
      <pubDate>Sat, 05 Jul 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/05/gvfs-mount/</guid>
      <description>/home/user/.gvfsになんか自動でマウントされるのを止める
rm -rf ~/.local/share/gvfs*  面倒だったので以下で対処した
rm -rf ~/.local  多分、gnome関連パッケージのせい</description>
    </item>
    
    <item>
      <title>AWSの導入ガイド</title>
      <link>https://yaasita.github.io/2014/07/05/aws-guide/</link>
      <pubDate>Sat, 05 Jul 2014 22:43:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/05/aws-guide/</guid>
      <description> APNパートナー様により『エンタープライズAWS導入ガイド』が公開されました！  伊藤忠テクノソリューションズ株式会社    </description>
    </item>
    
    <item>
      <title>Debianで自動アップデート設定</title>
      <link>https://yaasita.github.io/2014/07/03/unattended-upgrades/</link>
      <pubDate>Thu, 03 Jul 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/03/unattended-upgrades/</guid>
      <description>apt-get install unattended-upgrades  /etc/apt/apt.conf.d/50unattended-upgrades
Unattended-Upgrade::Origins-Pattern { &amp;quot;o=Debian,n=jessie&amp;quot;; &amp;quot;o=Debian,n=jessie-updates&amp;quot;; &amp;quot;o=Debian,n=jessie-proposed-updates&amp;quot;; &amp;quot;o=Debian,n=jessie,l=Debian-Security&amp;quot;; &amp;quot;origin=Debian,archive=${distro_codename},label=Debian-Security&amp;quot;; }; Unattended-Upgrade::Package-Blacklist { };  /etc/apt/apt.conf.d/10periodicにAPT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;;を追加
APT::Periodic::Update-Package-Lists &amp;quot;1&amp;quot;; APT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;; APT::Periodic::Download-Upgradeable-Packages &amp;quot;0&amp;quot;; APT::Periodic::AutocleanInterval &amp;quot;0&amp;quot;; APT::Periodic::RandomSleep &amp;quot;0&amp;quot;;  再起動をしなきゃいけないアップデートは以下を有効にするらしい
再起動が必要なら/var/run/reboot-requiredが作られるのか
// Automatically reboot *WITHOUT CONFIRMATION* if // the file /var/run/reboot-required is found after the upgrade //Unattended-Upgrade::Automatic-Reboot &amp;quot;false&amp;quot;;  参考リンク
 http://orangain.hatenablog.com/entry/unattended-upgrades  </description>
    </item>
    
    <item>
      <title>emailアドレスの存在チェックプログラム</title>
      <link>https://yaasita.github.io/2014/07/02/email-exists-check/</link>
      <pubDate>Wed, 02 Jul 2014 12:14:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/02/email-exists-check/</guid>
      <description>RCPT TO送ってOKなら閉じる
 DNSだけ調べる
 参考リンク
 https://gist.github.com/mikedamage/5564196  </description>
    </item>
    
    <item>
      <title>irfanviewでGIFアニメをバラす</title>
      <link>https://yaasita.github.io/2014/07/01/irfanview-gif-split/</link>
      <pubDate>Tue, 01 Jul 2014 23:43:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/01/irfanview-gif-split/</guid>
      <description>IrfanviewでGIFアニメを単一画像にする方法
 GIFアニメを開く Options -&amp;gt; Extract all frames  </description>
    </item>
    
    <item>
      <title>初めての暗号化メール</title>
      <link>https://yaasita.github.io/2014/07/01/thunderbird-pgp/</link>
      <pubDate>Tue, 01 Jul 2014 23:36:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/01/thunderbird-pgp/</guid>
      <description> はじめての暗号化メール (Thunderbird編)  </description>
    </item>
    
    <item>
      <title>percolにmigemo検索追加</title>
      <link>https://yaasita.github.io/2014/06/30/migemo-percol/</link>
      <pubDate>Mon, 30 Jun 2014 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/30/migemo-percol/</guid>
      <description>percolでもmigemo検索できるらしい
Debian Jessieでやってみる
apt-get install libpython3.4-dev libpython2.7-dev libmigemo-dev curl -O http://www.atzm.org/etc/files/pymigemo/pymigemo-0.4.tar.gz paco -lp pymigemo-0.4 pip install pymigemo-0.4.tar.gz /usr/sbin/update-cmigemo-dict  ~/.percol.d/rc.pyに以下追加
 参考リンク
 https://gist.github.com/mitukiii/4234173  </description>
    </item>
    
    <item>
      <title>Gitの仕組み解説サイト</title>
      <link>https://yaasita.github.io/2014/06/29/git-inside/</link>
      <pubDate>Sun, 29 Jun 2014 23:04:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/git-inside/</guid>
      <description>すごくわかりやすい
 Git の仕組み  </description>
    </item>
    
    <item>
      <title>dockerでsublime text 3を動かす</title>
      <link>https://yaasita.github.io/2014/06/29/docker_sublime/</link>
      <pubDate>Sun, 29 Jun 2014 03:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/docker_sublime/</guid>
      <description>必要パッケージのインストール apt-get install libglib2.0-0 x11-apps x11-xserver-utils apt-get install conky-all apt-get install libgtk2.0-0  ホストのIPを特定して、Xサーバ指定 netstat -nr | grep &#39;^0\.0\.0\.0&#39; | awk &#39;{print $2}&#39; export DISPLAY=172.17.42.1:0  実行 subl  </description>
    </item>
    
    <item>
      <title>Googleサジェストでvim補完するやつ</title>
      <link>https://yaasita.github.io/2014/06/29/google_complete/</link>
      <pubDate>Sun, 29 Jun 2014 02:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/google_complete/</guid>
      <description>要curl
使い方は適当な単語入力してCtrl-x,Ctrl-u
 </description>
    </item>
    
    <item>
      <title>最近のvim</title>
      <link>https://yaasita.github.io/2014/06/29/recently_vim/</link>
      <pubDate>Sun, 29 Jun 2014 00:07:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/recently_vim/</guid>
      <description>最近話題になったり個人的に発見したりしたやつ
折り畳みについて  折り畳み嫌いの男が一夜でFolding freakにまでなった話  FoldCCnaviという関数がすばらしい   折り畳み嫌いの男が一夜でFolding freakにまでなった話2  Vim Pluginランキング  VimAwesome  なんかGithubに上がってるドットファイルに書いてあるプラグインとか集計しているらしい    vim7.4.338新機能  breakindentが追加された  Googleサジェストから補完候補   Googleサジェストから補完候補を作るVimスクリプト書いた
 NeoBundle &#39;mattn/webapi-vim&#39; NeoBundle &#39;mattn/googlesuggest-complete-vim&#39; set completefunc=googlesuggest#Complete &amp;quot;usage takasu&amp;lt;c-x&amp;gt;&amp;lt;c-u&amp;gt;    </description>
    </item>
    
    <item>
      <title>cgroupでcpuリミットをあてる</title>
      <link>https://yaasita.github.io/2014/06/22/cgroup-cpu-limit/</link>
      <pubDate>Sun, 22 Jun 2014 15:57:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/22/cgroup-cpu-limit/</guid>
      <description>microインスタンスはstealの関係でCPUリミットを設定するとよいらしい
microインスタンスはlimitかけると大きくパフォーマンスが向上する
なのでやってみました
環境はt1.micro (ubuntu 14.04)
cgcreate -g cpu:ruby cgexec -g cpu:ruby ./install_ruby.sh cgset -r cpu.cfs_quota_us=250000 ruby cgset -r cpu.cfs_period_us=1000000 ruby # 確認 cd /sys/fs/cgroup ls cpu/ruby cat cpu/ruby/tasks cgget -r cpu.cfs_quota_us -r cpu.cfs_period_us ruby  参考リンク
 cgroup について理解する cgroup でメモリと走行時間に制限を加える  </description>
    </item>
    
    <item>
      <title>Windows8.1の完全シャットダウン方法</title>
      <link>https://yaasita.github.io/2014/06/18/windows8_1_shutdown/</link>
      <pubDate>Wed, 18 Jun 2014 00:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/18/windows8_1_shutdown/</guid>
      <description>Win+cで設定ボタン⇒PC設定の変更⇒保守と管理⇒回復⇒今すぐ再起動する⇒PCの電源を切る  https://www2.mouse-jp.co.jp/ssl/user_support2/sc_faq_documents.asp?FaqID=13460</description>
    </item>
    
    <item>
      <title>非推奨になったネットワークコマンド</title>
      <link>https://yaasita.github.io/2014/06/17/deprecated_network_cmd/</link>
      <pubDate>Tue, 17 Jun 2014 01:13:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/17/deprecated_network_cmd/</guid>
      <description>Deprecated command Replacement command(s)     arp ip n (ip neighbor)   ifconfig ip a (ip addr), ip link, ip -s (ip -stats)   iptunnel ip tunnel   iwconfig iw   nameif ip link, ifrename   netstat ss, ip route (for netstat-r), ip -s link (for netstat -i), ip maddr (for netstat-g)   route ip r (ip route)     http://understeer.</description>
    </item>
    
    <item>
      <title>tumblrにpostするコマンド作った</title>
      <link>https://yaasita.github.io/2014/06/15/tumblr_post_nodejs/</link>
      <pubDate>Sun, 15 Jun 2014 12:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/15/tumblr_post_nodejs/</guid>
      <description>gistコマンドみたいにtumblrにポストできたら便利なので作った
tumblrwksの使い方はtumblrwks/testに大体書いてある
npm install -g tumblrwks   参考リンク  tumblrwks gem tumblr_clientを使ってみた tumblrのAPI回り  </description>
    </item>
    
    <item>
      <title>unite.vimみたいなpercol</title>
      <link>https://yaasita.github.io/2014/06/12/percol/</link>
      <pubDate>Thu, 12 Jun 2014 23:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/12/percol/</guid>
      <description>これ使うとシェルでもuniteみたいなインターフェイスで検索できる
公式サイト
インストール apt-get install python-pip pip install percol  設定 ~/.bashrc
 ~/.percol.d/rc.pyはREADMEのコピペ
参考リンク
 bashでもpercolをイイ感じに使う方法  </description>
    </item>
    
    <item>
      <title>gem tumblr_clientを使ってみた</title>
      <link>https://yaasita.github.io/2014/06/08/tumblr_client/</link>
      <pubDate>Sun, 08 Jun 2014 23:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/08/tumblr_client/</guid>
      <description>使い方 アプリ登録をしておいて以下のコマンドでアクセストークン取得
gem install tumblr_client tumblr  うまくいけば~/.tumblrに設定が作られる
参考リンク  tumblr_clientを使ってTumblr APIを利用する  </description>
    </item>
    
    <item>
      <title>tumblrのAPI回り</title>
      <link>https://yaasita.github.io/2014/06/08/tumblr_api/</link>
      <pubDate>Sun, 08 Jun 2014 23:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/08/tumblr_api/</guid>
      <description>手順   アプリを登録
OAuth Consumer KeyとSecret Keyを作る
  アクセストークンリクエスト
 #!/usr/bin/env ruby require &#39;oauth&#39; require &#39;oauth/consumer&#39; @consumer=OAuth::Consumer.new( &amp;quot;consumer key&amp;quot;,&amp;quot;secret key&amp;quot;, { :site =&amp;gt; &#39;http://www.tumblr.com&#39;, :request_token_path =&amp;gt; &#39;/oauth/request_token&#39;, :authorize_path =&amp;gt; &#39;/oauth/authorize&#39;, :access_token_path =&amp;gt; &#39;/oauth/access_token&#39;, :http_method =&amp;gt; :get } ) @request_token=@consumer.get_request_token put @request_token.authorize_url    リクエストトークンを踏む
  コールバックされる
  verifirerをメモる
 @access_token = @request_token.get_access_token(:oauth_verifier =&amp;gt; verifier ) puts @access_token.token puts @access_token.secret    APIによってはOauthリクエスト署名いらいないやつもある
(api_keyのみでOK)
curl http://api.</description>
    </item>
    
    <item>
      <title>vimのマークダウン関連まとめ</title>
      <link>https://yaasita.github.io/2014/06/07/vim_markdown/</link>
      <pubDate>Sat, 07 Jun 2014 15:41:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/07/vim_markdown/</guid>
      <description>vimでmarkdown関連まとめ
昔使ってたやつ  kannokanno/previm  javascriptでmarkdown描画してる 大きめのmarkdownだと処理が追いつかない場合がある htmlを人に渡す時にひと手間必要   suan/vim-instant-markdown  node.js必須 たまにバグる   rcmdnk/vim-markdown  参考リンク参照 vimアップデートによりエラーになる   plasticboy/vim-markdown   いいけどfile typeがmkdだったりちょっと癖あり
  以下の設定で使ってた
 NeoBundle &#39;plasticboy/vim-markdown&#39; let g:vim_markdown_folding_disabled=1     tpope/vim-markdown  なんかリスト中にあるコードがハイライトされなかった    今使ってるやつ  yaasita/ore_markdown  syntaxとmarkdownプレビュー同梱 ruby,bundler必須 単一のHTMLファイルを生成するので人に渡しやすい windows対応 syntaxはplasticboy/vim-markdownを使用 cssはbootstrapとgithub    参考リンク
 VimでのMarkdown環境を整える  </description>
    </item>
    
    <item>
      <title>ディレクトリ間の差分を取ってくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/03/dir_diff/</link>
      <pubDate>Tue, 03 Jun 2014 18:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/03/dir_diff/</guid>
      <description>apt-get install meld  参考リンク
http://baker-street.jugem.jp/?eid=164</description>
    </item>
    
    <item>
      <title>キーボード操作を表示してくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/01/key_display/</link>
      <pubDate>Sun, 01 Jun 2014 02:37:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/01/key_display/</guid>
      <description>windows用のキーボード操作表示ソフト
osdHotkey

参考リンク
 押したキーを表示してくれるソフトのまとめ   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>firefoxのバージョンチェックを無効化する拡張</title>
      <link>https://yaasita.github.io/2014/05/30/firefox_version_check/</link>
      <pubDate>Fri, 30 May 2014 23:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/30/firefox_version_check/</guid>
      <description>iceweaselでvimfxとか使うときにはこれ使う
 Disable Add-on Compatibility Checks  </description>
    </item>
    
    <item>
      <title>githubのレポート作ってくれるサイト</title>
      <link>https://yaasita.github.io/2014/05/28/github_report/</link>
      <pubDate>Wed, 28 May 2014 13:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/28/github_report/</guid>
      <description>githubの活動履歴からレポートを作ってくれるサイト
どんな言語が好きかとかそういうの
http://osrc.dfm.io/yaasita/</description>
    </item>
    
    <item>
      <title>mlocateについて</title>
      <link>https://yaasita.github.io/2014/05/27/mlocate/</link>
      <pubDate>Tue, 27 May 2014 00:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/27/mlocate/</guid>
      <description>mlocateはlocateの改良版
mlocateはupdatedbコマンドにより定期的に全ファイルを調べる
Debianは以下のcronで定期実行しているようだ
/etc/cron.daily/mlocate
ファイル数が多くなってなかなか終わらなくなったら
/etc/updatedb.confを編集して無視するファイルを追加するとよい
PRUNE_BIND_MOUNTS=&amp;quot;yes&amp;quot; PRUNENAMES=&amp;quot;.git .bzr .hg .svn&amp;quot; PRUNEPATHS=&amp;quot;/tmp /var/spool /media /mnt /raid/backup&amp;quot; PRUNEFS=&amp;quot;NFS nfs nfs4 rpc_pipefs afs binfmt_misc proc smbfs autofs iso9660 ncpfs coda devpts ftpfs devfs mfs shfs sysfs cifs lustre_lite tmpfs usbfs udf fuse.glusterfs fuse.sshfs curlftpfs&amp;quot;  </description>
    </item>
    
    <item>
      <title>itunes経由でBook同期</title>
      <link>https://yaasita.github.io/2014/05/26/itunes_books/</link>
      <pubDate>Mon, 26 May 2014 01:46:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/26/itunes_books/</guid>
      <description>手元のPDFをipadに転送したくていろいろ探したら
下記画像みたいなブックという項目を出さないとダメみたい

iTunesStoreでブック押したりなんかいろいろしたら出るようになった
あとPDFを追加するときは以下のフォルダに置くと良いみたい（入れると自動的に消える）
C:\Users\hogeuser\Music\iTunes\iTunes Media\iTunes に自動的に追加   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>middlemanのbuildを自動化する</title>
      <link>https://yaasita.github.io/2014/05/25/middleman_build/</link>
      <pubDate>Sun, 25 May 2014 23:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/middleman_build/</guid>
      <description>こんな感じのスクリプトをcronで回せばOK
 </description>
    </item>
    
    <item>
      <title>hardware checkコマンド</title>
      <link>https://yaasita.github.io/2014/05/25/hardware_check/</link>
      <pubDate>Sun, 25 May 2014 15:20:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/hardware_check/</guid>
      <description>lshwだけじゃない
PC構成を把握するコマンド
ハードウェアチェックコマンド  hwinfo --short hdparm -i /dev/sda inxi -Fx lsscsi  lsscsiがいい感じ
参考リンク  http://www.binarytides.com/linux-commands-hardware-info/  </description>
    </item>
    
    <item>
      <title>Linuxで一定時間操作しなかったらpm-suspend</title>
      <link>https://yaasita.github.io/2014/05/25/auto_suspend/</link>
      <pubDate>Sun, 25 May 2014 02:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/auto_suspend/</guid>
      <description>dwm使ってるからこういうのも自分で作らなきゃならない
5,10,15分にマウスの位置が変わらなかったらサスペンドする
~/.xsessionrc とかにこんな感じで追記
/sbin/start-stop-daemon --start -v -b -m -p $PIDFILE -x ~/.dwm/auto_suspend.sh  必要なツールも事前にインストールしておく
apt-get install xdotool pm-utils   </description>
    </item>
    
    <item>
      <title>middlemanについて</title>
      <link>https://yaasita.github.io/2014/05/25/middleman/</link>
      <pubDate>Sun, 25 May 2014 00:26:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/middleman/</guid>
      <description>middleman blog gem &amp;quot;middleman-blog&amp;quot; middleman init middleman --template=blog  config.ru # 上のほうにあるUTC消す Time.zone = &amp;quot;Tokyo&amp;quot; # 一番最後に以下追加 set :markdown, :tables =&amp;gt; true, :autolink =&amp;gt; true, :fenced_code_blocks =&amp;gt; true, :with_toc_data =&amp;gt; true, :hard_wrap =&amp;gt; true, :strikethrough =&amp;gt; true set :markdown_engine, :redcarpet # sass compass_config do |config| config.output_style = :expanded end   http://qiita.com/yterajima/items/d7deec7cc0caaf95982e  新規投稿 be middleman article yamasita_test  パーマリンク修正 blog.permalink = &amp;quot;{year}/{month}/{title}.html&amp;quot;  アーカイブページ config.ruに以下のように書く
#blog.calendar_template = &amp;quot;calendar.html&amp;quot; blog.year_template = &amp;quot;calendar.</description>
    </item>
    
    <item>
      <title>octopressについて</title>
      <link>https://yaasita.github.io/2014/05/25/octopress/</link>
      <pubDate>Sun, 25 May 2014 00:23:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/octopress/</guid>
      <description>使い方 git clone git://github.com/imathis/octopress.git octopress cd octopress bundle install rake install  投稿 bundle exec rake new_post[&amp;quot;1st_post&amp;quot;] bundle exec rake generate  編集 ↓を編集する source/_posts/2014-02-09-1st-post.markdown bundle exec rake generate bundle exec rake watch #これで自動的にgenerate  Liquid # 以下みたいにすると変数とれる {{ page.title }}  サイドバーにアーカイブ表示 &amp;amp; カテゴリーリスト  作ったgist 月別アーカイブ  参考リンク  GitHubPage liquid  </description>
    </item>
    
    <item>
      <title>jekyllについて</title>
      <link>https://yaasita.github.io/2014/05/25/jekyll/</link>
      <pubDate>Sun, 25 May 2014 00:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/jekyll/</guid>
      <description>使い方 # 作成 jekyll build # jekyllサーバ 更新監視 jekyll server -w  _config.ymlにこう書く
GFM対応
name: Your New Jekyll Site markdown: redcarpet pygments: true redcarpet: extensions: [&amp;quot;no_intra_emphasis&amp;quot;, &amp;quot;fenced_code_blocks&amp;quot;, &amp;quot;autolink&amp;quot;, &amp;quot;tables&amp;quot;, &amp;quot;with_toc_data&amp;quot;, &amp;quot;strikethrough&amp;quot;]  bloggerからの移行  import bloggerからの移行スクリプト?  参考リンク  ずぼらな人のための Jekyll 入門 Jekyllいつやるの？ジキやルの？今でしょ！ 最初にインストールした Jekyll プラグイン  </description>
    </item>
    
    <item>
      <title>脆弱性報告ツール Debsecan</title>
      <link>https://yaasita.github.io/2014/05/18/debsecan/</link>
      <pubDate>Sun, 18 May 2014 21:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/18/debsecan/</guid>
      <description>パッケージの説明 debsecan は特に Debian のインストールに影響を及ぼす脆弱性リストを生成する ためのツールです。
debsecan は検査対象マシン上で起動し、インターネット経由で
脆弱性情報をダウンロードします。
新しい脆弱性が発見されたり、セキュリティ更新 が利用可能になると、指定したパーティーにメールを送信できます。
apt-get install debsecan  日本語だと以下の情報もおすすめ
 JVN脆弱情報データベース深刻度順 JPドメイン　Web改竄速報  </description>
    </item>
    
    <item>
      <title>bloggerからmiddlemanに移行した</title>
      <link>https://yaasita.github.io/2014/05/17/blogger2middleman/</link>
      <pubDate>Sat, 17 May 2014 00:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/17/blogger2middleman/</guid>
      <description>bloggerからmiddleman(というかこのページ)に移行したときのやり方メモ
  bloggerからデータをエクスポートする
 管理画面から　設定　⇒　その他　⇒　ブログをエクスポート    XMLファイルが一行が長いので整形
 &amp;gt;&amp;lt;を&amp;gt;\n&amp;lt;に変換    以下のようなスクリプトentry事に分解
   整形
   こんな感じでできたファイルをbuildすればOK
$ bundle exec middleman build  </description>
    </item>
    
    <item>
      <title>DNS関連のためになるPDF</title>
      <link>https://yaasita.github.io/2014/05/14/dns/</link>
      <pubDate>Wed, 14 May 2014 01:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/14/dns/</guid>
      <description> DNSサーバーの引っ越し - JPRS DNS 浸透の都市伝説を斬る  </description>
    </item>
    
    <item>
      <title>システムバックアップをISOにしてくれるやつ</title>
      <link>https://yaasita.github.io/2014/05/04/mondo_rescue/</link>
      <pubDate>Sun, 04 May 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/04/mondo_rescue/</guid>
      <description> Mondo Rescue  </description>
    </item>
    
    <item>
      <title>tmuxでbashの履歴を即座に書き出す設定</title>
      <link>https://yaasita.github.io/2014/04/29/tmux_bash/</link>
      <pubDate>Tue, 29 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/29/tmux_bash/</guid>
      <description>function share_history { history -a history -c history -r } PROMPT_COMMAND=&#39;share_history&#39; shopt -u histappend  </description>
    </item>
    
    <item>
      <title>50%の確率でジョブを走らせる</title>
      <link>https://yaasita.github.io/2014/04/06/43/</link>
      <pubDate>Sun, 06 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/06/43/</guid>
      <description> #50%の確率で当ジョブを走らせる
num=`expr $RANDOM % 10`
if [ $num -le 4 ]
then
logger &#34;job Start...50%&#34;
else
logger &#34;Job Cancel...50%&#34;
exit 0
fi
 </description>
    </item>
    
    <item>
      <title>neosnippetの説明</title>
      <link>https://yaasita.github.io/2014/04/05/63/</link>
      <pubDate>Sat, 05 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/05/63/</guid>
      <description> snippetファイルの作り方
https://github.com/yonchu/dotfiles/blob/master/.vim/snippets/snippet.snip </description>
    </item>
    
    <item>
      <title>dovecotで特定のユーザのみ接続許可する</title>
      <link>https://yaasita.github.io/2014/03/22/104/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/104/</guid>
      <description> /etc/pam.d/dovecot
をいじってこんな感じにするといい
#%PAM-1.0
@include common-auth
account required pam_succeed_if.so user = hogeuser
@include common-account
@include common-session

参考リンク
http://wiki2.dovecot.org/Authentication/RestrictAccess </description>
    </item>
    
    <item>
      <title>uim-mozcの設定</title>
      <link>https://yaasita.github.io/2014/03/22/83/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/83/</guid>
      <description> 以下のパッケージをインストール
uim-qt
uim-xim

起動
uim-xim &amp;amp;

設定
uim-pref-qt4
 </description>
    </item>
    
    <item>
      <title>画像を入れるとイメージCSSを作ってくれるサイト</title>
      <link>https://yaasita.github.io/2014/03/16/css_image/</link>
      <pubDate>Sun, 16 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/16/css_image/</guid>
      <description>Lavish</description>
    </item>
    
    <item>
      <title>無線LANとサスペンド機能の有効化</title>
      <link>https://yaasita.github.io/2014/03/09/145/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/09/145/</guid>
      <description> 以下のパッケージとかを入れる
firmware-linux-nonfree
firmware-realtek
lspci
とか使ってハードウェアを調べること </description>
    </item>
    
    <item>
      <title>軽量なLinux用PDFビューワ</title>
      <link>https://yaasita.github.io/2014/02/02/166/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/02/02/166/</guid>
      <description> mupdf
apt-get install mupdf

viライクなキーバインド </description>
    </item>
    
    <item>
      <title>X11の画面設定はarandrが便利</title>
      <link>https://yaasita.github.io/2014/01/19/187/</link>
      <pubDate>Sun, 19 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/19/187/</guid>
      <description> apt-get install arandr
でインストールできる
公式サイト
http://christian.amsuess.com/tools/arandr/ </description>
    </item>
    
    <item>
      <title>wget画像収集</title>
      <link>https://yaasita.github.io/2014/01/18/206/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/18/206/</guid>
      <description> こんな感じのコマンドかな？
wget -erobots=off -H -N -r -nd -nH -l 1 -k -A jpg,png -R html url </description>
    </item>
    
    <item>
      <title>xrandrの使い方</title>
      <link>https://yaasita.github.io/2014/01/13/226/</link>
      <pubDate>Mon, 13 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/13/226/</guid>
      <description> wikipedia分かりやすい
モニターと可能な設定の表示
xrandr
全てのモニターを最高解像度で、同じ画面を表示する。
xrandr --auto
内蔵モニターの右側に外部モニターを表示。モニターの名前は、上の xrandr で調べられる。ここでは 内部モニター：LVDS、外部モニター：VGA とする。
xrandr --output VGA --right-of LVDS
内蔵モニターの上側に外部モニターを表示。
xrandr --output VGA --above LVDS
マルチモニターを使用する場合、X11の設定ファイル：通常 /etc/X11/xorg.conf で、仮想スクリーンの範囲を大きく取っておく。 例：
Virtual 2048 2048
参考リンク
http://ja.wikipedia.org/wiki/XRandR
関連記事
X11で縦表示とか画面の回転設定 </description>
    </item>
    
    <item>
      <title>Debianで無線LAN接続</title>
      <link>https://yaasita.github.io/2014/01/11/247/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/247/</guid>
      <description>今回はwicdを使う
無線デバイス確認
# lspci | grep -i wire
03:00.0 Network controller: Intel Corporation PRO/Wireless 3945ABG [Golan] Network Connection (rev 02)

ファームインストール
apt-get install firmware-iwlwifi

あとはこんな感じで設定
Networkmanagerのアンインストール
apt-get remove network-manager

# apt-getinstall install wicd
# apt-getinstall wicd-curses

Xなくてもつかえるwicd-cursesが便利だった
あとnetdevグループに属してないとwicd使えない
参考リンク
https://wiki.debian.org/WiFi/HowToUse#Wicd
https://wiki.debian.org/iwlwifi</description>
    </item>
    
    <item>
      <title>let&#39;s noteにacpid入れてバックライト調整</title>
      <link>https://yaasita.github.io/2014/01/11/268/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/268/</guid>
      <description> debian jessieでやってみた
使用したPCはLet&#39;s Note CF-W5
acpi-supportインストール
apt-get install acpi-support

Enabling backlight controlを参考にする
/etc/acpi/bright.sh
#!/bin/sh
bl_dev=/sys/class/backlight/panasonic/brightness
step=1
case $1 in
-)
echo $( expr `cat $bl_dev` - $step )  $bl_dev
;;
+)
echo $( expr `cat $bl_dev` + $step )  $bl_dev
;;
esac

/etc/acpi/events/bright_d
event=video/brightnessdown
action=https://yaasita.github.io/etc/acpi/bright.sh -

/etc/acpi/events/bright_u
event=video/brightnessup
action=https://yaasita.github.io/etc/acpi/bright.sh +

参考リンク
https://wiki.archlinux.org/index.php/acpid </description>
    </item>
    
    <item>
      <title>Debian wheezyで日本語環境設定</title>
      <link>https://yaasita.github.io/2014/01/02/287/</link>
      <pubDate>Thu, 02 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/02/287/</guid>
      <description> こんな感じ
apt-get install manpages-ja
dpkg-reconfigure locales
dpkg-reconfigure tzdata
 </description>
    </item>
    
    <item>
      <title>chef bootstrapが使えないときにnodeを追加する</title>
      <link>https://yaasita.github.io/2013/12/15/307/</link>
      <pubDate>Sun, 15 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/15/307/</guid>
      <description> knife configure client /path/to/tempdir
できたファイルをnodeに置く
/etc/chef/client.rb
/etc/chef/validation.pem
で↓のコマンドでOK
chef-client
参考リンク
http://hivecolor.com/id/46 </description>
    </item>
    
    <item>
      <title>maildirsizeをMaildirに置くとクォータ設定できる</title>
      <link>https://yaasita.github.io/2013/12/15/328/</link>
      <pubDate>Sun, 15 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/15/328/</guid>
      <description> maildirsizeをMaildirに置くとクォータの設定ができる
dovecotとかmaildropが対応している
~/Maildir/maildirsize
8000C
284871170 10382
 </description>
    </item>
    
    <item>
      <title>WindowsでSPICE接続</title>
      <link>https://yaasita.github.io/2013/12/07/349/</link>
      <pubDate>Sat, 07 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/07/349/</guid>
      <description> SPICEクライアントをダウンロード
http://www.spice-space.org/download.html
virt-viewer-x64-0.5.7.msiを使いました
んでインストール
C:\Program Files\VirtViewer\bin\remote-viewer.exe
あたりを実行

参考リンク
http://www.server-world.info/query?os=Fedora_18&amp;amp;p=kvm&amp;amp;f=8 </description>
    </item>
    
    <item>
      <title>sopcastをDebian wheezyで使ってみる</title>
      <link>https://yaasita.github.io/2013/11/10/391/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/11/10/391/</guid>
      <description> ダウンロードは公式サイトから
file sp-sc-auth
readelf -h sp-sc-auth
みたいにするとELF32の実行ファイルだとわかる
http://www.itmedia.co.jp/help/tips/linux/l0448.html
なので、32bit用のライブラリ追加
dpkg --add-architecture i386
apt-get install ia32-libs-i386

あとはReadmeの通りこんな感じで起動
./sp-sc-auth sop://broker.sopcast.com:3912/6001 3908 8908

VLCで保存する場合はツールバー→メディア→変換／保存→ネットワークタブからできる
チャンネル一覧はこちら
SopCast.exeと同じフォルダに置く
https://gist.github.com/yaasita/7390590 </description>
    </item>
    
    <item>
      <title>vimでIME制御するには</title>
      <link>https://yaasita.github.io/2013/11/10/370/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/11/10/370/</guid>
      <description> 日本語とか打つときに参考にする
https://sites.google.com/site/fudist/Home/vim-nihongo-ban/vim-japanese/ime-control/xvkbd#imctrl </description>
    </item>
    
    <item>
      <title>攻撃されてる国がわかる地図</title>
      <link>https://yaasita.github.io/2013/10/25/412/</link>
      <pubDate>Fri, 25 Oct 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/10/25/412/</guid>
      <description> デジタルアタックマップ
http://www.digitalattackmap.com/ </description>
    </item>
    
    <item>
      <title>rsyncを蹴るためのラッパーをwshで書いた</title>
      <link>https://yaasita.github.io/2013/10/13/432/</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/10/13/432/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>Cookie Clickerで遊んでみた</title>
      <link>https://yaasita.github.io/2013/09/23/453/</link>
      <pubDate>Mon, 23 Sep 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/09/23/453/</guid>
      <description> 日本語版はこちら
http://cafe-capy.net/cookieclicker/
貯蔵数が焼いた数を上回っちゃったりしてたから不正とみなされちゃったけど最終的なデータはこちら
MS4wMzZ8fDEzNzk3OTY0MDAxNzZ8MTExMTExfDIuODQyMjMzOTk5Mzk0ODU3M2UrMjg7MjQzODM3NDc4MTg4NjU7MjkyNDsxMDsyNjE5MDI0Njc1NzszMTstMTstMTswOzA7MDswOzY1OzI0NzN8MzI5LDMzMiw1MzcwMTczODQ3MiwwOzIwMSwyMDEsMTc4MDEzMDQ4NiwwOzIwMCwyMDAsMjc0MjQ0ODIsMDsyMDMsMjAzLDk5MzA3NDM3LDA7MTY3LDE2NywzMjk4NDc2NzIsMDsxMDYsMTA2LDM5OTE3NjQyNSwwOzEwNywxMDcsMTI2MzM4Njc5NywwOzExOSwxMTksMTY1NTgwODE5NTksMDsxMjUsMTI1LDEzNzU4NjIxMzM3NSwwOzEzNiwxMzYsMTA4OTYwMzI2OTkwOSwwO3w0NTAzNTk5NjI3MzcwNDk1OzQ1MDM1OTk2MjczNzA0OTU7MjI1MTgwMTk2MTE2ODUxMTs0NTAzNTczNzIzNDc4NTI3OzEwNDg1NzV8NDUwMjQ5ODEwMjQ3Njc5OTsxNzUxMTY1MDE2NDczNQ%3D%3D%21END%21

cookie編集時に使ったスクリプト
 </description>
    </item>
    
    <item>
      <title>一切のパスワード認証を無効化する</title>
      <link>https://yaasita.github.io/2013/09/16/474/</link>
      <pubDate>Mon, 16 Sep 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/09/16/474/</guid>
      <description> Linuxでこんな設定した
ちょっとデモ用にLinuxデスクトップを見せたかったので・・・
/etc/pam.d/common-auth
の先頭に以下を追加
 auth sufficient pam_permit.so

いますぐ実践! Linux システム管理 PAM の設定を理解する </description>
    </item>
    
    <item>
      <title>smartdでHDD監視</title>
      <link>https://yaasita.github.io/2013/08/29/494/</link>
      <pubDate>Thu, 29 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/29/494/</guid>
      <description> インストール
apt-get install smartmontools

/etc/default/smartmontoolsの以下の行を有効にする
start_smartd=yes

/etc/smartd.confを編集
DEVICESCANをコメントアウトして設定を書く
#DEVICESCAN -d removable -n standby -m root -M exec /usr/share/smartmontools/smartd-runner
/dev/sda -a -d sat -o on -S on -s (S/../.././02|L/../../6/03) -m hoge@example.com

こうするとメールのテストができるらしい
/dev/sda -a -d sat -o on -S on -s (S/../.././02|L/../../6/03) -m hoge@example.com -M test

参考リンク
http://www.geocities.jp/sugachan1973/doc/funto57.html </description>
    </item>
    
    <item>
      <title>Debian WheezyにRTL8111/8168Bのドライバインストール</title>
      <link>https://yaasita.github.io/2013/08/25/515/</link>
      <pubDate>Sun, 25 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/25/515/</guid>
      <description> Realtekのドライバはインストールしておいたほうがいいみたい
firmware-realtekってのがnon-freeにあったからaptで入る
ethtool -i eth0
lspci | grep Realtek

参考リンク
http://cskimura.blogspot.jp/2010/06/rtl81118168b-on-debian.html </description>
    </item>
    
    <item>
      <title>Windows8でBlu-ray再生</title>
      <link>https://yaasita.github.io/2013/08/25/536/</link>
      <pubDate>Sun, 25 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/25/536/</guid>
      <description> VLCをインストールして
↓から鍵ファイルとlibaacsを所定の場所に保存
http://vlc-bluray.whoknowsmy.name/
参考リンク
http://orangeprose.blog.fc2.com/blog-entry-199.html </description>
    </item>
    
    <item>
      <title>LinuxでWake On Lanを設定する</title>
      <link>https://yaasita.github.io/2013/08/18/556/</link>
      <pubDate>Sun, 18 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/18/556/</guid>
      <description> WOLの設定は以下参照
http://80286.blog62.fc2.com/blog-entry-37.html </description>
    </item>
    
    <item>
      <title>Windowsの無料イメージ</title>
      <link>https://yaasita.github.io/2013/08/18/578/</link>
      <pubDate>Sun, 18 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/18/578/</guid>
      <description>IEテスト用らしい
http://www.modern.ie/ja/virtualization-tools</description>
    </item>
    
    <item>
      <title>とっても綺麗なフォント</title>
      <link>https://yaasita.github.io/2013/08/09/600/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/09/600/</guid>
      <description> フロップデザインフォント
http://www.flopdesign.com/freefont/flopdesignfont.html </description>
    </item>
    
    <item>
      <title>sshでchrootされたsftp専用アカウントの作り方</title>
      <link>https://yaasita.github.io/2013/08/05/620/</link>
      <pubDate>Mon, 05 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/05/620/</guid>
      <description> sshd_configを編集する
 Match User sftpuser
AllowTcpForwarding no
ChrootDirectory /home/chroot
ForceCommand internal-sftp
PasswordAuthentication yes
X11Forwarding no

注意点としてはsftpuserは/home/chrootに書き込み権限を持たせないこと
そうしないとうまくいかない </description>
    </item>
    
    <item>
      <title>Linuxでパッケージのアーキティクチャにamd64を追加する</title>
      <link>https://yaasita.github.io/2013/07/29/641/</link>
      <pubDate>Mon, 29 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/29/641/</guid>
      <description> # dpkg --add-architecture amd64
 </description>
    </item>
    
    <item>
      <title>rubyを駆使して敵を倒していくゲーム</title>
      <link>https://yaasita.github.io/2013/07/28/661/</link>
      <pubDate>Sun, 28 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/28/661/</guid>
      <description>Ruby Warrior
https://www.bloc.io/ruby-warrior/</description>
    </item>
    
    <item>
      <title>構成管理ツールAnsible</title>
      <link>https://yaasita.github.io/2013/07/26/682/</link>
      <pubDate>Fri, 26 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/26/682/</guid>
      <description> chefもいいけどこれもよさそう
Ansible
http://apatheia.info/blog/2013/04/06/about-ansible/
http://www.ansibleworks.com/ </description>
    </item>
    
    <item>
      <title>Debian Wheezyではffmpegじゃなくてlibav-toolsを使おう</title>
      <link>https://yaasita.github.io/2013/07/18/701/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/18/701/</guid>
      <description>コマンドはavconvらしい
avconv -i 002.flv -strict experimental 002.mp4

http://wiki.debian.org/NewInWheezy</description>
    </item>
    
    <item>
      <title>KVMとvirt-manager仮想マシン管理</title>
      <link>https://yaasita.github.io/2013/07/14/742/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/14/742/</guid>
      <description> kvmのインストール
 aptitude install qemu-kvm libvirt-bin virt-manager
libvirtグループへ参加
 usermod -a -G libvirt hogeuser
ネットワーク設定
auto eth0
iface eth0 inet manual
auto br0
iface br0 inet static
address 192.168.0.100
netmask 255.255.255.0
gateway 192.168.0.1
bridge_ports eth0
bridge_stp off

参考リンク
http://wiki.debian.org/KVM
http://wiki.debian.org/QEMU#QEMU_networking_with_VDE
http://misc.e-hdk.com/benkyokai/2012-kernel-vm-advent-calendar-21st
 </description>
    </item>
    
    <item>
      <title>LinuxでXのキーボードレイアウトの変更</title>
      <link>https://yaasita.github.io/2013/07/14/722/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/14/722/</guid>
      <description>ユーザーでこんな感じのコマンドを打つらしい
setxkbmap -layout jp 
dpkg-reconfigure keyboard-configuration

参考リンク
http://margaret-sdpara.blogspot.jp/2012/12/debian-usb-live-lxde.html</description>
    </item>
    
    <item>
      <title>squid3でviaヘッダを任意の値に変更する</title>
      <link>https://yaasita.github.io/2013/07/13/763/</link>
      <pubDate>Sat, 13 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/13/763/</guid>
      <description>こんな感じに書けばいいらしい
request_header_access VIA deny all
request_header_replace VIA 1.1 Squid3

http://green-rabbit.sakura.ne.jp/blog/2010/04/28/1320/</description>
    </item>
    
    <item>
      <title>sshで接続時にオプションを付与する</title>
      <link>https://yaasita.github.io/2013/06/14/784/</link>
      <pubDate>Fri, 14 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/14/784/</guid>
      <description> こんな感じかな
それぞれ鍵認証無効化、ホスト鍵チェックの無効化
ssh -o &#34;PubkeyAuthentication no&#34; hogehost
ssh -o &#34;StrictHostKeyChecking no&#34; hogehost
 </description>
    </item>
    
    <item>
      <title>mysqlのレプリケーション同期設定</title>
      <link>https://yaasita.github.io/2013/06/12/824/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/12/824/</guid>
      <description> マスター側で以下のコマンドを打つ
mysql&amp;amp;gt; FLUSH LOGS;
$ mysqldump --order-by-primary --single-transaction --master-data -uroot -p&#39;passwd&#39; databasename  databasename.dump
mysql&amp;amp;gt; show master status;

スレーブ側でこんな感じに吸い上げる
mysql&amp;amp;gt; stop slave;
mysql -uroot -p&#39;passwd&#39; databasename &amp;amp;lt; databasename.dump
mysql&amp;amp;gt; start slave;
mysql&amp;amp;gt; show slave status;

参考リンク
http://blog.nomadscafe.jp/2011/12/-mysql40dump-mysqldump-wrapper.html </description>
    </item>
    
    <item>
      <title>sshを使ったchroot環境の構築</title>
      <link>https://yaasita.github.io/2013/06/12/805/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/12/805/</guid>
      <description> 参考リンク
http://team2ch.org/blog/?p=1362 </description>
    </item>
    
    <item>
      <title>作業を邪魔しないBGMを選んでくれるfocus@will</title>
      <link>https://yaasita.github.io/2013/06/02/845/</link>
      <pubDate>Sun, 02 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/02/845/</guid>
      <description> 作業用BGMとしてはいいらしい
https://www.focusatwill.com/music/#player </description>
    </item>
    
    <item>
      <title>公開VPNゲート</title>
      <link>https://yaasita.github.io/2013/05/16/865/</link>
      <pubDate>Thu, 16 May 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/05/16/865/</guid>
      <description> http://www.vpngate.net/ja/ </description>
    </item>
    
    <item>
      <title>X11で縦表示とか画面の回転設定</title>
      <link>https://yaasita.github.io/2013/05/12/885/</link>
      <pubDate>Sun, 12 May 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/05/12/885/</guid>
      <description>xranderで設定した
/etc/kde4/kdm/Xsetupに以下を追記
xrandr --output HDMI-1 --rotate left --primary
参考リンク
UbuntuTips/Hardware/HowToChangeMonitorResolution</description>
    </item>
    
    <item>
      <title>postfixで複合条件アクション</title>
      <link>https://yaasita.github.io/2013/05/04/905/</link>
      <pubDate>Sat, 04 May 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/05/04/905/</guid>
      <description> こんな感じでスパムメールを拒否してみた
目標は：特定のIPかつ(123.123.123.123)、特定のアドレス(reject@)を拒否する
まず、check_client_accessをつくる
smtpd_restriction_classesで制限クラスをつくって
client_accessで定義した制限クラスに飛ばす
/etc/postfix/main.cf
smtpd_recipient_restrictions = permit_mynetworks ,
check_client_access hash:/etc/postfix/client_access ,
permit_sasl_authenticated ,
reject_unauth_destination
smtpd_restriction_classes = spam_restriction
spam_restriction = check_recipient_access hash:/etc/postfix/rejectaddress

/etc/postfix/client_access
123.123.123.123 spam_restriction

/etc/postfix/rejectaddress
reject@ REJECT

参考リンク
Postfix で特定の IP アドレスを拒否する設定
[postfix-jp: 115] Re: 複合条件での送信制限は可能でしょうか？ </description>
    </item>
    
    <item>
      <title>Linuxで動画編集</title>
      <link>https://yaasita.github.io/2013/04/29/947/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/29/947/</guid>
      <description> Avidemuxが良かった
deb-multimediaに入っているので/etc/apt/sources.list.dに以下を追加
deb http://www.deb-multimedia.org squeeze main non-free

参考リンク
http://d.hatena.ne.jp/over80/20080818/1219074708 </description>
    </item>
    
    <item>
      <title>ruby mechanizeで画像スクレイピングしてみる</title>
      <link>https://yaasita.github.io/2013/04/29/927/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/29/927/</guid>
      <description>画像収集スクリプト書いた
hogeimgダウンロード =&amp;amp;gt; id=nextなオブジェクトクリック =&amp;amp;gt; 以下くりかえし
リトライ回数と繰り返し回数は適宜修正すること</description>
    </item>
    
    <item>
      <title>Xvfbで仮想バッファ＆x11vncの設定メモ</title>
      <link>https://yaasita.github.io/2013/04/22/968/</link>
      <pubDate>Mon, 22 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/22/968/</guid>
      <description> xvfbで仮想バッファ作成→export DISPLAY=:1→startlxde→x11vncでvnc接続を許可する
みたいな感じか

参考リンク
http://d.hatena.ne.jp/ishidamakot/20110717/1310890337
http://lists.debian.or.jp/debian-users/200101/msg00057.html </description>
    </item>
    
    <item>
      <title>X環境でのDPMS</title>
      <link>https://yaasita.github.io/2013/04/20/989/</link>
      <pubDate>Sat, 20 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/20/989/</guid>
      <description> xset -q
で確認
xset dpms 0 0 0 とかで設定できるのか
なるほどね
参考リンク
https://forums.ubuntulinux.jp/viewtopic.php?id=1732 </description>
    </item>
    
    <item>
      <title>Thunderbirdで受信フォルダ以外も新着チェックする</title>
      <link>https://yaasita.github.io/2013/04/18/1010/</link>
      <pubDate>Thu, 18 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/18/1010/</guid>
      <description>http://www.club.kyutech.ac.jp/~tanio/wordpress/2012/05/thunderbird-check-all-new-mail/
http://kawama.jp/archives/2011/04/thunderbird_gmail_imap.html</description>
    </item>
    
    <item>
      <title>Googleにはない検索を実現してくれるshodan</title>
      <link>https://yaasita.github.io/2013/04/12/1072/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/12/1072/</guid>
      <description> 機器のセキュリティチェックにどうぞ
ポートスキャンでもしてるんかな？
www.shodanhq.com </description>
    </item>
    
    <item>
      <title>opensslでstarttlsのSMTPをコマンド実行</title>
      <link>https://yaasita.github.io/2013/04/12/1030/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/12/1030/</guid>
      <description> こんな感じでやってみよう
openssl s_client -starttls smtp -crlf -quiet -connect email-smtp.us-east-1.amazonaws.com:587

expectで送る場合はこんな感じ
 </description>
    </item>
    
    <item>
      <title>大量ファイルのあるディレクトリでls</title>
      <link>https://yaasita.github.io/2013/04/12/1052/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/12/1052/</guid>
      <description> http://memo.jj-net.jp/657 </description>
    </item>
    
    <item>
      <title>らじるらじるをLinux環境で聞く</title>
      <link>https://yaasita.github.io/2013/04/08/1092/</link>
      <pubDate>Mon, 08 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/08/1092/</guid>
      <description> mplayerを使えばいけるらしい
http://ubuntu.futene.net/tips/radiru.html </description>
    </item>
    
    <item>
      <title>iptablesで送信制限</title>
      <link>https://yaasita.github.io/2013/04/07/1113/</link>
      <pubDate>Sun, 07 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/07/1113/</guid>
      <description>#OUTPUT limit
iptables -A OUTPUT -p tcp -m multiport --sport 80,443 -m hashlimit \
--hashlimit-name web_send_limit --hashlimit 1000/sec --hashlimit-burst 30000 \
--hashlimit-mode dstip --hashlimit-htable-expire 86400000 -j ACCEPT
iptables -A OUTPUT -p tcp -m multiport --sport 80,443 -j REJECT</description>
    </item>
    
    <item>
      <title>iptablesでIPアドレス制限（アクセス制限）</title>
      <link>https://yaasita.github.io/2013/04/01/1134/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/01/1134/</guid>
      <description> こんな感じで、Webアクセスを限定させてる
iptablesはこう書いて

dropは別ファイルにすると便利

参考リンク
iptablesで日本のIPアドレスからのアクセスのみ許可する
iptables の RETURN の使い方 </description>
    </item>
    
    <item>
      <title>opensslでSMTPするとRENEGOTIATINGになる</title>
      <link>https://yaasita.github.io/2013/04/01/1175/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/01/1175/</guid>
      <description> なるほどこういうことか
openssl s_client -quiet -connect
みたいに-quietつければいいみたい
http://backslash.ddo.jp/wordpress/archives/434 </description>
    </item>
    
    <item>
      <title>更新日時順にソートしてからリネームするperlスクリプト</title>
      <link>https://yaasita.github.io/2013/04/01/1155/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/01/1155/</guid>
      <description> こんな感じ？
 </description>
    </item>
    
    <item>
      <title>iptablesでDOS攻撃に対処する</title>
      <link>https://yaasita.github.io/2013/03/30/1216/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/30/1216/</guid>
      <description>ipt_recentで対処するSynCookie使うhashlimit使うhashlimit使う2hashlimit使う3</description>
    </item>
    
    <item>
      <title>拡張子を一気に変換</title>
      <link>https://yaasita.github.io/2013/03/30/1237/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/30/1237/</guid>
      <description> http://www.atmarkit.co.jp/flinux/rensai/linuxtips/248chngext.html </description>
    </item>
    
    <item>
      <title>自然対数(log)の割り算で任意底の対数計算</title>
      <link>https://yaasita.github.io/2013/03/30/1196/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/30/1196/</guid>
      <description> 例えば512は2の何乗か調べる場合は
（この場合底はe）
log512/log2 = log2^9/log2 = 9log2/log2 = 9
http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1262091227
http://ab.sinryow.net/lesson/shisu.html </description>
    </item>
    
    <item>
      <title>DebianでVPN(PPTP)</title>
      <link>https://yaasita.github.io/2013/03/29/1258/</link>
      <pubDate>Fri, 29 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/29/1258/</guid>
      <description>こんな感じでできた
 Setting up a VPN-server on Amazon EC2 Debian etch に pptpdを導入  </description>
    </item>
    
    <item>
      <title>AWSのAPI toolsでセキュリティグループ制御</title>
      <link>https://yaasita.github.io/2013/03/28/1279/</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/28/1279/</guid>
      <description>一覧
ec2-describe-group
追加
ec2-authorize sg-name -P all -s 123.123.123.123/32
削除
ec2-revoke sg-name -P all -s 123.123.123.123/32
参考リンク
AWSdocumentation</description>
    </item>
    
    <item>
      <title>AWSのec2 ai tools使い方</title>
      <link>https://yaasita.github.io/2013/03/28/1300/</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/28/1300/</guid>
      <description> マイアカウントからアクセス証明書（X.509証明書）を作成
http://wiki.debian.org/Cloud/CreateEC2Imageを参考に
環境変数を設定
export EC2_HOME=$HOME/ec2
export PATH=$PATH:$EC2_HOME/bin
export EC2_PRIVATE_KEY=/mnt/pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem export EC2_CERT=/mnt/cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem export PATH=$PATH:$EC2_HOME/bin
export EC2_URL=https://ec2.ap-northeast-1.amazonaws.com

あとはec2コマンドがつかえるはず
ec2-describe-regions

スナップショットとか便利なやつ
http://d.hatena.ne.jp/rx7/20100606/p1
aptで入れる場合は
http://qiita.com/items/216e0f8b69f20d5b07d3 </description>
    </item>
    
    <item>
      <title>Linux 101 hacks</title>
      <link>https://yaasita.github.io/2013/03/26/1321/</link>
      <pubDate>Tue, 26 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/26/1321/</guid>
      <description> 翻訳してくれてる人いた
http://d.hatena.ne.jp/bobchin/searchdiary?of=93&amp;amp;word=*[Linux%20101%20Hacks] </description>
    </item>
    
    <item>
      <title>opensslでstarttlsの確認とかできるらしい</title>
      <link>https://yaasita.github.io/2013/03/25/1341/</link>
      <pubDate>Mon, 25 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/25/1341/</guid>
      <description> http://d.hatena.ne.jp/hiro-ueda/20090409/1239249624
参考リンク
その他確認コマンド </description>
    </item>
    
    <item>
      <title>作業用BGM探すとき</title>
      <link>https://yaasita.github.io/2013/03/24/1361/</link>
      <pubDate>Sun, 24 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/24/1361/</guid>
      <description> exfm
参考リンク
http://commte.net/blog/archives/2416 </description>
    </item>
    
    <item>
      <title>仕事を探したり発注できたりするサイト</title>
      <link>https://yaasita.github.io/2013/03/23/1381/</link>
      <pubDate>Sat, 23 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/23/1381/</guid>
      <description> ・ランサーズ
・クラウドワークス </description>
    </item>
    
    <item>
      <title>2ch規制情報を参照できるところ</title>
      <link>https://yaasita.github.io/2013/03/18/1400/</link>
      <pubDate>Mon, 18 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/18/1400/</guid>
      <description> http://qb7.2ch.net/_403/madakana.cgi </description>
    </item>
    
    <item>
      <title>expectでメールを送ってみる</title>
      <link>https://yaasita.github.io/2013/02/24/1420/</link>
      <pubDate>Sun, 24 Feb 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/02/24/1420/</guid>
      <description> こんな感じか？
 </description>
    </item>
    
    <item>
      <title>Spamassassinとmaildropの設定</title>
      <link>https://yaasita.github.io/2013/02/22/1441/</link>
      <pubDate>Fri, 22 Feb 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/02/22/1441/</guid>
      <description> Debianでやった
以下のプログラムをインストール
spamassassin → デーモン spmad
spamc → spamdとやりとりするためのインターフェイス
maildrop →　配送プログラム
で、こんな感じで$HOMEにおいておけばいいみたい
~/.forward

~/.mailfilter

あとはspam学習するためのcron設定
/etc/cron.daily/sa-learn

以下のコマンドでシンタックスチェックもできるらしい
maildrop -V 9 &amp;amp;lt; /dev/null
参考リンク
Spamassassin setup
maildrop 利用のメモというかtips
maildropのインストール  </description>
    </item>
    
    <item>
      <title>apacheのcombinedログのパース処理</title>
      <link>https://yaasita.github.io/2013/02/10/1463/</link>
      <pubDate>Sun, 10 Feb 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/02/10/1463/</guid>
      <description> こんな感じか？
 やっぱり面倒だからLTSVにするか </description>
    </item>
    
    <item>
      <title>Huawei 新モデル E586 モバイル</title>
      <link>https://yaasita.github.io/2013/01/29/1483/</link>
      <pubDate>Tue, 29 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/29/1483/</guid>
      <description> を買ってみた
所謂、SIMフリーの無線LANルータ </description>
    </item>
    
    <item>
      <title>ettercapで中間者攻撃（MITM）</title>
      <link>https://yaasita.github.io/2013/01/20/1503/</link>
      <pubDate>Sun, 20 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/20/1503/</guid>
      <description>やり方は簡単
以下のようにして192.168.0.2,192.168.0.11間のメッセージに割り込める
ettercap -Tq -M arp /192.168.0.2/ /192.168.0.11/
インターフェイスは-Tのテキスト、-Cのcurses、-GのGtkと選べる
tcpflowで覗いてみる
tcpflow -cse -i eth0 dst port 80
-c コンソールに出力
-s 印字できないもじは.へ変換
-e カラー表示
-i インターフェイス指定</description>
    </item>
    
    <item>
      <title>PS vitaのUserAgent</title>
      <link>https://yaasita.github.io/2013/01/20/1523/</link>
      <pubDate>Sun, 20 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/20/1523/</guid>
      <description> Vitaのユーザーエージェントを調べてみました
 </description>
    </item>
    
    <item>
      <title>マウスオーバーで単語検索</title>
      <link>https://yaasita.github.io/2013/01/14/1543/</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/14/1543/</guid>
      <description> 英単語を調べるときとかでも便利
翻訳もできる
1.Greasemonkeyをインストール
2. スクリプトを追加（以下URLのINSTALL)
http://userscripts.org/scripts/show/12901
alt押しながら単語選択で検索
alt+yで設定
参考リンク
http://mozilla-remix.seesaa.net/article/80993858.html
http://www.simplivillage.com/trac/wiki/Userscript/FastLookupJPandEN </description>
    </item>
    
    <item>
      <title>DNSのツールをWebから出来るサイト</title>
      <link>https://yaasita.github.io/2013/01/11/1564/</link>
      <pubDate>Fri, 11 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/11/1564/</guid>
      <description> http://www.dnsstuff.com/tools </description>
    </item>
    
    <item>
      <title>gistをgitで更新する</title>
      <link>https://yaasita.github.io/2013/01/07/gist/</link>
      <pubDate>Mon, 07 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/07/gist/</guid>
      <description>gistは普通にgit clone してpushできます
リポジトリが以下のURLだったら
https://gist.github.com/1234567
※非公開リポジトリの場合はもっと長いです
以下のコマンドでCloneできます
git clone git@gist.github.com:1234567  あと知っておくと便利な小技として
以下のようにするとhogefileのみ貼り付けできます
&amp;lt;script src=&amp;quot;https://gist.github.com/1234567.js?file=hogefile&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  </description>
    </item>
    
    <item>
      <title>PS vitaエラーコード一覧</title>
      <link>https://yaasita.github.io/2013/01/07/1604/</link>
      <pubDate>Mon, 07 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/07/1604/</guid>
      <description> https://gist.github.com/raw/4140449/PS%20Vita
http://gamegaz.com/2013010310456/ </description>
    </item>
    
    <item>
      <title>digコマンドを理解する</title>
      <link>https://yaasita.github.io/2013/01/05/1624/</link>
      <pubDate>Sat, 05 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/05/1624/</guid>
      <description>* usage
dig [@server] domain [query-type]

* query-type
a (Aレコード)
any (任意の情報)
mx (MXレコード)
ns (NSレコード)
soa (SOAレコード)
hinfo (HINFOレコード)
axfr (ゾーン転送)
txt (TXTレコード)

* status
NOERROR (正常)
NXDOMAIN (ドメインは存在しない)
SERVFAIL (サーバの応答エラー)

* flags
qr (クエリの回答)
aa (権威ある回答)
tc (TCPフォールバック)
ra (フルサービスリゾルバ)
rd (再帰要求,+norecオプションで消える)

参考リンク
http://d.hatena.ne.jp/japanrock_pg/20090410/1239355230
http://www.syon.co.jp/syontech/tech002.html</description>
    </item>
    
    <item>
      <title>LinuxでCDからISOイメージ作成</title>
      <link>https://yaasita.github.io/2013/01/03/1666/</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/03/1666/</guid>
      <description> dd if=/dev/cdrom of=hoge.iso

http://d.hatena.ne.jp/yoshifumi1975/20071012/p1 </description>
    </item>
    
    <item>
      <title>正規表現を分かりやすく可視化してくれるサイト</title>
      <link>https://yaasita.github.io/2013/01/03/1646/</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/03/1646/</guid>
      <description> http://www.regexper.com/ </description>
    </item>
    
    <item>
      <title>apacheのログをsyslogにも出す</title>
      <link>https://yaasita.github.io/2013/01/02/1746/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1746/</guid>
      <description>CustomLog ${APACHE_LOG_DIR}/access.log combined
CustomLog &#34;|/usr/bin/logger -p local6.info --&#34; combined

参考リンク
http://d.hatena.ne.jp/oratta/20101121/1290341166</description>
    </item>
    
    <item>
      <title>PCを破棄したくなったら</title>
      <link>https://yaasita.github.io/2013/01/02/1705/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1705/</guid>
      <description> ごみパソに送りつけると良いらしい
http://www.53pc.com/hikitori/index.html </description>
    </item>
    
    <item>
      <title>postfix &amp;amp; dovecotを特定ユーザのみログイン可能にする</title>
      <link>https://yaasita.github.io/2013/01/02/1726/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1726/</guid>
      <description>/etc/pam.d/dovecot
/etc/pam.d/smtp(無かったら作る)
を以下のの内容にした
hogeuserのみログインを許す設定
#%PAM-1.0
@include common-auth
account required pam_succeed_if.so user = hogeuser
@include common-account
@include common-session

設定を変更したら再起動を忘れずに
/etc/init.d/saslauthd restart
その他pamモジュールの詳しい使い方は
man pam_listfile
みたいにする
あとログを見ればpamで使うサービス名を特定できた
参考リンク
http://wiki.debian.org/PostfixAndSASL
http://d.hatena.ne.jp/hiro-ueda/20090901/1251811629
http://www.usupi.org/sysad/105.html
http://www.usupi.org/sysad/106.html</description>
    </item>
    
    <item>
      <title>postfixでバーチャルドメイン</title>
      <link>https://yaasita.github.io/2013/01/02/1765/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1765/</guid>
      <description>postfixでバーチャルドメイン
参考リンク
http://tmtm.org/postfix/tutorial/virtual.html
http://bitwalker.dtiblog.com/blog-entry-151.html</description>
    </item>
    
    <item>
      <title>smtp-authの設定(Postfix)</title>
      <link>https://yaasita.github.io/2013/01/02/1786/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1786/</guid>
      <description>1. saslインストール
aptでsasl2-binを入れる
2. postfixの設定(main.cf)
#mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
smtpd_sasl_auth_enable = yes
smtpd_sasl_path = smtpd
smtpd_recipient_restrictions = permit_sasl_authenticated, reject_unauth_destination
mynetworksからはauth無しで許可する場合はコメント外してもOK
3. postfixの設定(master.cf)
ポイントはchrootをnにすること
しないとsocketを見つけられないのでエラーになる
submission inet n - n - - smtpd
-o smtpd_sasl_auth_enable=yes
-o smtpd_client_restrictions=permit_sasl_authenticated,reject

4.グループへ参加
adduser postfix sasl

5. smtpd.conf追加
sasl/smtpd.conf
pwcheck_method: saslauthd
mech_list: plain login

参考リンク
http://www.docunext.com/wiki/Postfix#Postfix_and_SASL
http://www.uetyi.mydns.jp/wordpress/postfix-setting/entry-465.html</description>
    </item>
    
    <item>
      <title>大量のデータをAmazonのストレージに置くサービス</title>
      <link>https://yaasita.github.io/2013/01/02/1685/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1685/</guid>
      <description>Amazon Glacier
というらしいS3よりいいのかな</description>
    </item>
    
    <item>
      <title>起動後一定時間経ったら○○の処理をする</title>
      <link>https://yaasita.github.io/2012/12/27/1805/</link>
      <pubDate>Thu, 27 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/27/1805/</guid>
      <description> というスクリプトの例
uptimeから取ってくる
以下は3時間経ったらhoge.shを実行する
 </description>
    </item>
    
    <item>
      <title>unboundのインストールと初期設定</title>
      <link>https://yaasita.github.io/2012/12/24/1826/</link>
      <pubDate>Mon, 24 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/24/1826/</guid>
      <description> 1.インストール
普通にaptで入れる
2.初期設定
unbound.conf
interface: 0.0.0.0
access-control: 192.168.0.0/24 allow

3.レコード設定
local-data: &#34;hoge.net. IN A 192.168.0.4&#34;
local-data: &#34;hoge.net. IN MX 10 hoge.net.&#34;
local-data-ptr: &#34;192.168.0.4 hoge.net.&#34;
※ hoge.netのAレコードを設定してしまうと、hoge.netのMXレコードを
本物のDNSに問い合わせないで無しで返してしまうので注意
4.ulimitの設定
warningsがうるさいなら
ulimit -n 4140
を/etc/init.d/unboundの頭の方に書いておくと良いんじゃないでしょうか？ </description>
    </item>
    
    <item>
      <title>Debianにpostfixadminをインストール</title>
      <link>https://yaasita.github.io/2012/12/23/1848/</link>
      <pubDate>Sun, 23 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/23/1848/</guid>
      <description>1.インストール
# apt-get install postfixadmin

2.Webサーバ設定
/etc/postfixadminに設定ファイルがあるのでリンクを張る
今回はlighttpdで
# ln -s /etc/postfixadmin/lighttpd.conf /etc/lighttpd/conf-enabled/60-postfixadmin.conf
# /etc/init.d/lighttpd restart

3.初期セットアップ
http://yourdomain.com/postfixadmin/setup.php
にアクセスしてセットアップ
初期パスワードとadminアカウントを作成
4.その他の設定
/usr/share/doc/postfixadmin/DOCUMENTS
↑を読む</description>
    </item>
    
    <item>
      <title>動画でプログラミングを学べるサイト</title>
      <link>https://yaasita.github.io/2012/12/21/1869/</link>
      <pubDate>Fri, 21 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/21/1869/</guid>
      <description> ドットインストール
http://dotinstall.com/ </description>
    </item>
    
    <item>
      <title>ビルドするためにインストールするパッケージをまとめて</title>
      <link>https://yaasita.github.io/2012/12/19/1889/</link>
      <pubDate>Wed, 19 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/19/1889/</guid>
      <description> 入れる方法は
↓みたいにする
この例だとvimに必要なパッケージ
apt-get build-dep vim

http://vim-jp.org/docs/build_linux.html </description>
    </item>
    
    <item>
      <title>AutoHotkeyを使ってTeraTerm &#43; vimを快適にする</title>
      <link>https://yaasita.github.io/2012/11/25/1951/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/25/1951/</guid>
      <description> Esc押したらIMEをオフにしてくれれば良いので以下のような設定にした
あと、無変換キー＋Rでsudoしてくれる設定も追加しておいた
AutoHotkey.ahk

注意点としてはEscがEscを再帰的に呼んで無限ループするので、Escの頭に$を付ける必要があること
IMEのOn/Offの切り替えはえらい人がスクリプトを作ってくれていたので、そっちからコピペ
http://www6.atwiki.jp/eamat/pub/MyScript/Lib/
参考リンク
https://sites.google.com/site/autohotkeyjp/reference/AutoHotkey_L/index </description>
    </item>
    
    <item>
      <title>Web上でプログラミングの勉強が出来るサイト</title>
      <link>https://yaasita.github.io/2012/11/25/1910/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/25/1910/</guid>
      <description> http://www.codecademy.com
http://www.codeschool.com/ </description>
    </item>
    
    <item>
      <title>雨の音を流してくれるサイト</title>
      <link>https://yaasita.github.io/2012/11/25/1931/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/25/1931/</guid>
      <description> http://www.rainymood.com/
http://raining.fm/
参考リンク
http://www.lifehacker.jp/2012/08/120820_raining_fm.html </description>
    </item>
    
    <item>
      <title>teratermインストール後にやることメモ</title>
      <link>https://yaasita.github.io/2012/11/24/1971/</link>
      <pubDate>Sat, 24 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/24/1971/</guid>
      <description> Teratermが新しくなっていたので、ここでまとめておく
1.TERATERM.INI
 2.KEYBOARD.CNF
https://raw.github.com/gist/4140449/2bad78bfe24a407764f13c7055fc0ed452f1affd/KEYBOARD.CNF
3.テーマファイル
テーマファイルとかあればhttps://raw.github.com/gist/4140449/91748dba84035a7a0f0ac7dfa8b8ec480b8ed93c/yamasita.ini </description>
    </item>
    
    <item>
      <title>phpでctagsを使う</title>
      <link>https://yaasita.github.io/2012/11/22/1990/</link>
      <pubDate>Thu, 22 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/22/1990/</guid>
      <description> phpが入ってるディレクトリで
ctags -a -R --langmap=PHP:.php --php-types=c+f+d+v+i .

でOKみたい
↓で種類みれる
ctags --list-kinds=php

こうすればtagsファイルが作られる
参考リンク
http://blog.veryposi.info/programing/php/php-ctags-vim/ </description>
    </item>
    
    <item>
      <title>2012版 Firefox Thunderbird 使ってるアドオンまとめ</title>
      <link>https://yaasita.github.io/2012/11/03/2009/</link>
      <pubDate>Sat, 03 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/03/2009/</guid>
      <description>FirefoxautotranslatorVideo DownloadHelperelasticfox-ec2tagFirebugFireMobileSimulatorLiveNavigate UpNicoFoxPersonas PlusQuickJavaScrapBookTomblooViewSourceWithVimiumテキストリンク
ThunderbirdDisplay Mail User AgentLightningMailHops</description>
    </item>
    
    <item>
      <title>screenfetch</title>
      <link>https://yaasita.github.io/2012/10/28/2029/</link>
      <pubDate>Sun, 28 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/28/2029/</guid>
      <description> 
bashで出来たシステムモニタ
各ディストリのマークとか出る </description>
    </item>
    
    <item>
      <title>tumblrのショートカットキー</title>
      <link>https://yaasita.github.io/2012/10/20/2051/</link>
      <pubDate>Sat, 20 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/20/2051/</guid>
      <description> ダッシュボードで使えるよ j（ジェイ） 次のpostへ移動 k（ケー） 前のpostへ移動
l（エル） like / like解除 n（エヌ） notesを開く / 閉じる r（アール） reblog（別ウィンドウが開く）
R（Shift＋アール） 即時reblog
E（Shift＋イー） キュー（投稿予約）へreblog
スペース 動画再生？（未確認）
カーソルキー左 前のページへ カーソルキー右 次のページへ
z+tab 切り替え
http://dara-j.asablo.jp/blog/2012/10/17/6605357&amp;amp;nbsp;
http://www.tumblr.com/tips#keyboard_shortcuts </description>
    </item>
    
    <item>
      <title>xsetで省電力モードを解除</title>
      <link>https://yaasita.github.io/2012/10/16/2070/</link>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/16/2070/</guid>
      <description>現在の設定を確認 xset q
DPMSを無効化
xset -dpmsxset dpms force off
DPMSを有効化
xset +dpms スタンバイ、サスペンド、パワーオフ時間を設定（有効化時しか意味は無い）
xset dpms 300 600 900
参考リンク
http://kakurasan.ehoh.net/summary/xset.cmd.term.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/254usedpmsx3x.html</description>
    </item>
    
    <item>
      <title>tumblrのリンクと要素まとめ（使う分だけ）</title>
      <link>https://yaasita.github.io/2012/10/11/2089/</link>
      <pubDate>Thu, 11 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/11/2089/</guid>
      <description> 自分がフォローしている人をブログに表示する
HTMLの編集からどうぞ
 following
&amp;amp;lt;div&amp;amp;gt;
{block:Followed} &amp;amp;lt;a href=&#34;{FollowedURL}&#34;&amp;amp;gt;&amp;amp;lt;img src=&#34;{FollowedPortraitURL-48}&#34;/&amp;amp;gt;&amp;amp;lt;/a&amp;amp;gt;
{/block:Followed}
&amp;amp;lt;/div&amp;amp;gt;
{/block:Following}

リンク
(hogeをユーザ名に変更すること)
アーカイブ（http://hoge.tumblr.com/archive）ランダム表示（http://hoge.tumblr.com/random）RSS（http://hoge.tumblr.com/rss）携帯向け簡易表示（http://hoge.tumblr.com/mobile）Like一覧（http://www.tumblr.com/liked/by/hoge）ログイン時有効リンク
自分がフォローしている人一覧（http://www.tumblr.com/following）自分をフォローしている人一覧（http://www.tumblr.com/followers）
参考リンク
http://tagblr.tumblr.com/post/340724562 
http://ryo-skd.tumblr.com/post/311289824/tumblr-tumblr-nplll-mutter </description>
    </item>
    
    <item>
      <title>twitterのbotを作る</title>
      <link>https://yaasita.github.io/2012/10/09/2109/</link>
      <pubDate>Tue, 09 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/09/2109/</guid>
      <description>そんなに難しくないと思った・・・
CONSUMER_KEYとCONSUMER_SECRETの取得 アプリの登録を行う
このページから飛んで適当に入力する
ユーザに許可してもらいアクセストークンをもらう スクリプト実行⇒authページ⇒許可を押す⇒数値をメモ⇒スクリプトに入力
#!/usr/bin/env ruby # coding: utf-8 require &#39;rubygems&#39; require &#39;oauth&#39; OAUTH_CONSUMER_KEY=&#39;XXXXXXXXXXXXXXXXXXXXXXXXXX&#39; OAUTH_CONSUMER_SECRET=&#39;XXXXXXXXXXXXXXXXXXXXXXXX&#39; consumer = OAuth::Consumer.new( OAUTH_CONSUMER_KEY , OAUTH_CONSUMER_SECRET , { :site=&amp;amp;amp;gt;&amp;quot;http://twitter.com&amp;quot; }) #optprm = { :oauth_callback=&amp;amp;amp;gt;&amp;quot;（コールバック先のURL）&amp;quot; } request_token = consumer.get_request_token puts &amp;quot;Access this URL and approve =&amp;amp;amp;gt; #{request_token.authorize_url}&amp;quot; print &amp;quot;Input OAuth Verifier: &amp;quot; oauth_verifier = gets.chomp.strip access_token = request_token.get_access_token( :oauth_verifier =&amp;amp;amp;gt; oauth_verifier ) puts &amp;quot;Access token: #{access_token.token}&amp;quot; puts &amp;quot;Access token secret: #{access_token.secret}&amp;quot;  後はもらったアクセストークン＆コンシューマIDでスクリプトを書く twitter のgemでもoauthのgemでも簡単なことをやる場合はあんま変わんない感じ</description>
    </item>
    
    <item>
      <title>munin2.0が出てるらしい</title>
      <link>https://yaasita.github.io/2012/10/02/2129/</link>
      <pubDate>Tue, 02 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/02/2129/</guid>
      <description> http://pocketstudio.jp/log3/2012/06/04/new-features-of-munin2/
http://dozen.dip.jp/archives/212 </description>
    </item>
    
    <item>
      <title>ffmpegの使い方</title>
      <link>https://yaasita.github.io/2012/09/30/2150/</link>
      <pubDate>Sun, 30 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/30/2150/</guid>
      <description> &amp;amp;nbsp;ffmpeg -i 入力ファイル 出力ファイル
みたいな感じでOKらしい
ffmpeg -i hoge.flv hoge.mp4
でもいけた
mp3のビットレート調整とかも出来る
ffmpeg -i input.mp3 -ab 128k output.mp3
http://d.hatena.ne.jp/takuya_1st/20120225/1330189927
http://yosilove.blog.shinobi.jp/Entry/603/ </description>
    </item>
    
    <item>
      <title>rubyのバージョン管理 rbenv試してみた</title>
      <link>https://yaasita.github.io/2012/09/26/2171/</link>
      <pubDate>Wed, 26 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/26/2171/</guid>
      <description> rvmとかあるらしいけど今回はrbenvを使ってみます 
cd
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo &#39;export PATH=&#34;$HOME/.rbenv/bin:$PATH&#34;&#39; &amp;amp;gt;&amp;amp;gt; ~/.bash_profile
echo &#39;eval &#34;$(rbenv init -)&#34;&#39; &amp;amp;gt;&amp;amp;gt; ~/.bash_profile

ここで、シェルのリスタート
次にrbenv installが使えるようにbuildプラグインをインストール 
mkdir -p ~/.rbenv/plugins
cd ~/.rbenv/plugins
git clone git://github.com/sstephenson/ruby-build.git

これでrbenv installコマンドが使えるようになります
インストールできるバージョンを確認 
rbenv install -l
 インストール 
rbenv install 1.9.3-xxxxx
 使用中のバージョンを確認 
rbenv versions
 バージョンの切り替え 
rbenv global 1.9.2-p290
 リフレッシュ変更を反映 
rbenv rehash
 </description>
    </item>
    
    <item>
      <title>WindowsでS.M.A.R.T情報を取得</title>
      <link>https://yaasita.github.io/2012/09/23/2191/</link>
      <pubDate>Sun, 23 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/23/2191/</guid>
      <description> Linuxだとsmartctlとかだけど、Windowsだとこれがいい感じ
CrystalDiskInfo
http://www.forest.impress.co.jp/lib/sys/hrdbnch/hardinfo/crdiskinfo.html </description>
    </item>
    
    <item>
      <title>最近使ってるダンボールの収納ボックス</title>
      <link>https://yaasita.github.io/2012/09/23/2212/</link>
      <pubDate>Sun, 23 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/23/2212/</guid>
      <description> 結構便利
http://item.rakuten.co.jp/angers/121696/ </description>
    </item>
    
    <item>
      <title>とっても分かりやすいRailsチュートリアル</title>
      <link>https://yaasita.github.io/2012/09/22/2232/</link>
      <pubDate>Sat, 22 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/22/2232/</guid>
      <description> http://japanese.railstutorial.org/chapters/beginning </description>
    </item>
    
    <item>
      <title>機動戦士ガンダムSEED BATTLE DESTINY攻略HP</title>
      <link>https://yaasita.github.io/2012/09/02/2253/</link>
      <pubDate>Sun, 02 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/02/2253/</guid>
      <description>http://sakray06.blog.so-net.ne.jp/2012-06-12</description>
    </item>
    
    <item>
      <title>TeratermでTTLマクロをショートカットキーで呼び出す</title>
      <link>https://yaasita.github.io/2012/08/25/2273/</link>
      <pubDate>Sat, 25 Aug 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/08/25/2273/</guid>
      <description> login.ttl 
connect &#39;192.168.0.2:23 /nossh /T=1 /W=&#34;jitaku&#34; /F=TERATERM_ARERT.INI /K=KEYBOARD.CNF&#39;
wait &#39;login:&#39;
sendln &#39;hogehoge&#39;
wait &#39;Password:&#39;
sendln &#39;password&#39;
 KEYBOARD.cnfに以下を追記 
[User keys]
User1=1083,2,sudo.ttl
 KEYBOARD.ttlがあるところにsudo.ttlをおく 
sendln &#39;sudo -s&#39;
pause 1
sendln &#39;passwd&#39;
 </description>
    </item>
    
    <item>
      <title>vim&#43;tmuxでキーが効かないとき</title>
      <link>https://yaasita.github.io/2012/08/19/2311/</link>
      <pubDate>Sun, 19 Aug 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/08/19/2311/</guid>
      <description> vim + tmuxのとき http://blog.othree.net/log/2010/01/07/screen-vim-f1f4-map/ </description>
    </item>
    
    <item>
      <title>vimでも暗号化できるらしい</title>
      <link>https://yaasita.github.io/2012/08/19/2292/</link>
      <pubDate>Sun, 19 Aug 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/08/19/2292/</guid>
      <description> http://yakinikunotare.boo.jp/orebase2/vim/crypt_file </description>
    </item>
    
    <item>
      <title>vimでgitのブラウジングすると便利だよ</title>
      <link>https://yaasita.github.io/2012/07/23/2330/</link>
      <pubDate>Mon, 23 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/23/2330/</guid>
      <description> という話
gitvというプラグイン:Gitvコマンドからどうぞ
3方向マージ(3 way merge)もGdiffで一発
http://d.hatena.ne.jp/cohama/20120417/1334679297
http://yuku-tech.hatenablog.com/entry/20110427/1303868482 </description>
    </item>
    
    <item>
      <title>vimのプラグイン管理vundle</title>
      <link>https://yaasita.github.io/2012/07/19/2351/</link>
      <pubDate>Thu, 19 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/19/2351/</guid>
      <description> 便利なのでメモ
git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
http://shu-cream.blogspot.jp/2011/04/2011vimvundle.html  </description>
    </item>
    
    <item>
      <title>opensslの確認コマンドまとめ</title>
      <link>https://yaasita.github.io/2012/07/09/2371/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/09/2371/</guid>
      <description> http://chinmai.net/~osakana/tech-memo/wiki.cgi?page=OpenSSL+CSR%2C+%BE%DA%CC%C0%BD%F1%A4%CA%A4%C9%B3%CE%C7%A7%A5%B3%A5%DE%A5%F3%A5%C9 </description>
    </item>
    
    <item>
      <title>Postfix⇒Gmailへのリレー設定</title>
      <link>https://yaasita.github.io/2012/07/09/2391/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/09/2391/</guid>
      <description> 以下の設定でGoogleのSMTPを中継するようになる main.cf 
relayhost = [smtp.gmail.com]:587
smtp_use_tls = yes
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_tls_security_options = noanonymous
smtp_sasl_mechanism_filter = plain
smtp_tls_CAfile = /etc/postfix/ssl/cacert.pem
 /etc/postfix/sasl_passwd 
[smtp.gmail.com]:587 hoge@gmail.com:hogepasswd
 以下のコマンドを忘れずに postmap sasl_passwd 参考リンク
http://linux.matchy.net/archives/35
http://stevejenkins.com/blog/2011/06/fixing-postfix-certificate-verification-failed-for-gmail-untrusted-issuer-error-message/
http://giantdorks.org/alain/fix-for-postfix-untrusted-certificate-tls-error/ </description>
    </item>
    
    <item>
      <title>amazon(aws)でubuntu12.04の初期設定</title>
      <link>https://yaasita.github.io/2012/07/03/2412/</link>
      <pubDate>Tue, 03 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/03/2412/</guid>
      <description> localeの設定 http://www.server-world.info/query?os=Ubuntu_12.04&amp;amp;p=japanese ec2 toolのインストール http://qiita.com/items/216e0f8b69f20d5b07d3 </description>
    </item>
    
    <item>
      <title>オンランから.htaccessを作成してくれるサイト</title>
      <link>https://yaasita.github.io/2012/06/30/2432/</link>
      <pubDate>Sat, 30 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/30/2432/</guid>
      <description> すげー便利 http://www.htaccesseditor.com/ </description>
    </item>
    
    <item>
      <title>gitでpushしたらpushした先でワーキングツリーをリセット</title>
      <link>https://yaasita.github.io/2012/06/26/2452/</link>
      <pubDate>Tue, 26 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/26/2452/</guid>
      <description> それhookで出来るよ

cd .git/hooks/
mv post-receive.sample post-receive
chmod +x post-receive
echo &#39;cd /home/hoge/huga/&#39;  post-receive
echo &#39;git --git-dir=.git reset --hard HEAD&#39;  post-receive
 </description>
    </item>
    
    <item>
      <title>SSH力を身につけた</title>
      <link>https://yaasita.github.io/2012/06/23/2472/</link>
      <pubDate>Sat, 23 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/23/2472/</guid>
      <description> sshで繋いじゃった後でも
Enter押してすぐに
~Cでコンソール(helpコマンド使えるよ)
~#でフォワード一覧
~?でヘルプ
↓みたいに.ssh/config書けば多段がいけるらしい
Host humidai
&amp;amp;nbsp;HostName hoge.co.jp
Host target
&amp;amp;nbsp;ProxyCommand ssh -W 192.168.x.x:22 humidai
参考リンク
SSH力をつけよう </description>
    </item>
    
    <item>
      <title>Amazon AWSについて</title>
      <link>https://yaasita.github.io/2012/06/16/2491/</link>
      <pubDate>Sat, 16 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/16/2491/</guid>
      <description> 参考リンク
&amp;amp;nbsp;Amazon EC2 を使った無限IPアドレスの作り方 </description>
    </item>
    
    <item>
      <title>ディスクアクセスをキャッシュして高速化する</title>
      <link>https://yaasita.github.io/2012/06/10/2511/</link>
      <pubDate>Sun, 10 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/10/2511/</guid>
      <description> その名もpreload
参考リンク http://blog.browncat.org/2008/02/linuxpreload.html </description>
    </item>
    
    <item>
      <title>gitでbareじゃない共有リポジトリを作る</title>
      <link>https://yaasita.github.io/2012/06/09/2552/</link>
      <pubDate>Sat, 09 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/09/2552/</guid>
      <description> 共有リポジトリだと作業フォルダが無くて不便なので

[core]
repositoryformatversion = 0
filemode = true
bare = false
logallrefupdates = true
[receive]
denyCurrentBranch = ignore
 コマンドならこう 
git config --add receive.denyCurrentBranch ignore
 参考リンク http://d.hatena.ne.jp/shokai/20101105/1288968082 </description>
    </item>
    
    <item>
      <title>Linuxからリモートデスクトップ(RDP)</title>
      <link>https://yaasita.github.io/2012/06/09/2530/</link>
      <pubDate>Sat, 09 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/09/2530/</guid>
      <description> xfreerdpでいけます

apt-get install freerdp-x11
 </description>
    </item>
    
    <item>
      <title>Linuxデスクトップのガジェットとか</title>
      <link>https://yaasita.github.io/2012/06/08/2572/</link>
      <pubDate>Fri, 08 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/08/2572/</guid>
      <description> システムモニタ ・adesklets
・conky
・gdesklets
参考リンク http://wikiwiki.jp/linux/?FrontPage
http://usamimi.info/~linux/  </description>
    </item>
    
    <item>
      <title>brctlでブリッジインターフェイスを作成</title>
      <link>https://yaasita.github.io/2012/06/04/2613/</link>
      <pubDate>Mon, 04 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/04/2613/</guid>
      <description> KVMを使うときに必要になったブリッジインターフェイスの設定メモ コマンドでは以下のようにやればO 
brctl addbr br0
brctl addif br0 eth0
 /etc/network/interfaces 
auto lo br0
iface lo inet loopback
allow-hotplug eth0
auto eth0
iface eth0 inet static
address 192.168.0.4
netmask 255.255.255.0
gateway 192.168.0.1
iface br0 inet static
bridge_ports eth0
address 192.168.0.40
netmask 255.255.255.0
gateway 192.168.0.1
 参考リンク
brctl でLinuxマシンをHUBにする - いますぐ実践! Linuxシステム管理第2回　KVMの導入と基本的な使い方 </description>
    </item>
    
    <item>
      <title>DebianでKVMを試してみた</title>
      <link>https://yaasita.github.io/2012/06/04/2593/</link>
      <pubDate>Mon, 04 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/04/2593/</guid>
      <description> こんな感じでDebian Wiki通りにやればOK -cの後は/dev/cdrom or iso 
virt-install -n testos -r 128 --disk path=/tmp/testos.dsk,size=10 --os-type=linux --network bridge=br0 --vncport=5900 --vnclisten=0.0.0.0 -c /tmp/debian.iso
あとはこんな感じでXサーバーにコンソールを出力させた virt-viewer testos --display=192.168.0.5:0
仮想マシンの削除 virsh destroy testos2
virsh undefine testos2
参考リンク
http://docs.redhat.com/docs/ja-JP/Red_Hat_Enterprise_Linux/5/html/Virtualization/chap-Virtualization-Managing_guests_with_virsh.html </description>
    </item>
    
    <item>
      <title>2ch互換掲示板CGI</title>
      <link>https://yaasita.github.io/2012/05/28/2634/</link>
      <pubDate>Mon, 28 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/28/2634/</guid>
      <description> http://www.toshinari.net/ </description>
    </item>
    
    <item>
      <title>lighttpd &#43; zabbixをDebian squeezeにインストール</title>
      <link>https://yaasita.github.io/2012/05/26/2655/</link>
      <pubDate>Sat, 26 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/26/2655/</guid>
      <description> aptで以下のパッケージをインストール 
zabbix-agent #監視される側
zabbix-frontend-php #zabbixのWebインターフェイス
zabbix-server-mysql #zabbixのサーバー（監視する側）
 lighttpdに以下を追記 
alias.url += (
&#34;/zabbix&#34; =&amp;amp;gt; &#34;/usr/share/zabbix&#34;
)
 なんかログインできなかったので以下のSQLを発行 
update users set passwd=md5(&#39;hoge&#39;) where alias=&#39;Admin&#39;;
 参考リンクSQLのアップデートの仕方マニュアル </description>
    </item>
    
    <item>
      <title>HA構成のサーバー作るときに使うソフトメモ</title>
      <link>https://yaasita.github.io/2012/05/20/2677/</link>
      <pubDate>Sun, 20 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/20/2677/</guid>
      <description>複数のサーバーを同一の設定にする Puppet  OSインストールを簡略化 kickstart  データ同期 DRBD  Heartbeat(Pacemaker) 生死監視</description>
    </item>
    
    <item>
      <title>lighttpdでSSL設定</title>
      <link>https://yaasita.github.io/2012/05/07/2698/</link>
      <pubDate>Mon, 07 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/07/2698/</guid>
      <description>Debian(squeeze)でやってみた
1.モジュールの有効化

lighty-enable-mod ssl

2.認証局(CA)の作成

/usr/lib/ssl/misc/CA.sh -newca

最初はエンター
後は対話形式に適当に入力する
入力項目についてはここら辺を参照 A challenge passwordとAn optional company nameは飛ばした
3.サーバーの秘密鍵,CRTの作成

openssl genrsa -out server.key 2048
openssl req -new -days 365 -key server.key -out csr.pem

4.署名(CRT)ファイルの作成

openssl ca -in csr.pem -keyfile demoCA/private/cakey.pem -cert demoCA/cacert.pem -out crt.pem
エラーが出る場合は以下のようにindex.txtを空にする（ここら辺参照） 
rm demoCA/index.txt
touch demoCA/index.txt

5. ファイルの設置

ファイルをvim等で適当に編集して
-----BEGIN RSA PRIVATE KEY-----
hogehogehogehoge.....
-----END RSA PRIVATE KEY-----</description>
    </item>
    
    <item>
      <title>LDAPの設定メモ</title>
      <link>https://yaasita.github.io/2012/05/06/2717/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/06/2717/</guid>
      <description> slapdをインストール
mozillaAbPersonAlpha.schemaを以下へコピーする
/etc/ldap/schema
phpldapadminをインストール
lighttpdのconfに以下を追加
# Alias for pa directory
alias.url += (
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; &#34;/pl&#34; =&amp;amp;gt; &#34;/usr/share/phpldapadmin&#34;,
)
パスワードを忘れたら
dpkg-reconfigure slapd
↓で内容の確認
slapcat
cn=admin...
で始まる行をメモして
phpldapadminにログイン
詳しくはこちら
/usr/share/doc/slapd
本体はこっち？
/usr/share/slapd
参考リンク
Gentoo Linuxな生活​/ThunderBirdアドレス帳をLDAPで悩む </description>
    </item>
    
    <item>
      <title>BIND9の設定</title>
      <link>https://yaasita.github.io/2012/05/05/2738/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/05/2738/</guid>
      <description>インストールapt-get install bind9正引きの設定named.conf.local zone &#34;test&#34; {
type master;
file &#34;/etc/bind/db.test&#34;;
};
db.test $TTL 1D
@ IN SOA dns.test. root.hoge. (
20120505 ; Serial
604800 ; Refresh
86400 ; Retry
2419200 ; Expire
604800 ) ; Negative Cache TTL
;
@ IN NS dns.test.
main IN A 192.168.0.2
vista IN A 192.168.0.3
dns IN A 192.168.0.4
note IN CNAME dns.test.
jitaku IN A 192.168.0.11
逆引きの設定named.conf.local zone &#34;0.168.192.in-addr.arpa&#34; {
type master;</description>
    </item>
    
    <item>
      <title>vimでコマンドをファイル中に書くことができる</title>
      <link>https://yaasita.github.io/2012/05/05/2757/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/05/2757/</guid>
      <description> その名もモードライン 
:h modeline
 </description>
    </item>
    
    <item>
      <title>mysqlのtips</title>
      <link>https://yaasita.github.io/2012/04/22/2777/</link>
      <pubDate>Sun, 22 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/22/2777/</guid>
      <description>*AUTO_INCREMENTの値をリセットする
ALTER TABLE hogetable AUTO_INCREMENT = 1;
http://www.programming-magic.com/20071126231401/
*列の追加
alter table log add date date after id;
http://www.programming-magic.com/20071004015528/ *列の削除
alter table log drop date;
(logテーブルからdateカラム削除) http://www.programming-magic.com/20071023000012/</description>
    </item>
    
    <item>
      <title>nagios3でのパッシブチェックについて</title>
      <link>https://yaasita.github.io/2012/04/15/2796/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/15/2796/</guid>
      <description> nagios3でのパッシブチェックは外部コマンドファイル(External Commands)に書き込むことで実現するチェックした結果を名前付パイプ(/var/lib/nagios3/rw/nagios.cmd)に書き込むことでnagios3が拾う
以下のようなスクリプトを用意する #!/bin/sh
echocmd=&#34;/bin/echo&#34;
CommandFile=&#34;/var/lib/nagios3/rw/nagios.cmd&#34;
datetime=`date +%s`
cmdline=&#34;[$datetime] PROCESS_SERVICE_CHECK_RESULT;$1;$2;$3;$4&#34;
`$echocmd $cmdline &amp;amp;gt;&amp;amp;gt; $CommandFile`
cronか何かで以下のようにスクリプトを叩く引数は4つで最初からホスト名、サービス名、ステータス、メッセージの順でサービス名はservice_descriptionで指定したもの ./result.sh localhost HTTP 2 &#34;DOWN MESSAGE&#34;
HOSTのパッシブチェックは以下のようなコマンドで #!/bin/sh
echocmd=&#34;/bin/echo&#34;
CommandFile=&#34;/var/lib/nagios3/rw/nagios.cmd&#34;
datetime=`date +%s`
cmdline=&#34;[$datetime] PROCESS_HOST_CHECK_RESULT;$1;$2;$3&#34;
`$echocmd $cmdline &amp;amp;gt;&amp;amp;gt; $CommandFile`
こう叩く ./host.sh localhost 0 &#34;OK&#34;

参考リンク
Nagios 3翻訳プロジェクトExternal Commands
Passive Checks </description>
    </item>
    
    <item>
      <title>nagios3で外部コマンドを初期化するには？</title>
      <link>https://yaasita.github.io/2012/04/15/2817/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/15/2817/</guid>
      <description>nagios3のWebインターフェイス等で行ったステータスを初期化するには /var/lib/nagios3/retention.dat を削除すればOK</description>
    </item>
    
    <item>
      <title>lighttpd&#43;nagios3</title>
      <link>https://yaasita.github.io/2012/04/13/2839/</link>
      <pubDate>Fri, 13 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/13/2839/</guid>
      <description>&amp;amp;nbsp;lighttpd+nagios3を試してみた
インストールapt-get install nagios3CGI設定/etc/lighttpd/lighttpd.conf  alias.url += (
&#34;/nagios3/stylesheets&#34; =&amp;amp;gt; &#34;/etc/nagios3/stylesheets&#34; ,
&#34;/cgi-bin/nagios3&#34; =&amp;amp;gt; &#34;/usr/lib/cgi-bin/nagios3&#34;,
&#34;/nagios3/cgi-bin&#34; =&amp;amp;gt; &#34;/usr/lib/cgi-bin/nagios3&#34;,
&#34;/nagios3&#34; =&amp;amp;gt; &#34;/usr/share/nagios3/htdocs&#34;
)
$HTTP[&#34;url&#34;] =~ &#34;^/nagios3/cgi-bin|^/cgi-bin/nagios3&#34; {
cgi.assign = ( &#34;&#34; =&amp;amp;gt; &#34;&#34; )
auth.require = (
&#34;&#34; =&amp;amp;gt;
(
&#34;method&#34; =&amp;amp;gt; &#34;basic&#34;,
&#34;realm&#34; =&amp;amp;gt; &#34;nagios&#34;,
&#34;require&#34; =&amp;amp;gt; &#34;user=nagiosadmin&#34;
)
)
}
/etc/nagios3/nagios.cfg
check_external_commands=1
パーミッション
# dpkg-statoverride --update --add nagios www-data 2710 /var/lib/nagios3/rw
# dpkg-statoverride --update --add nagios nagios 751 /var/lib/nagios3</description>
    </item>
    
    <item>
      <title>bloggerの問題を報告するには？</title>
      <link>https://yaasita.github.io/2012/03/24/2858/</link>
      <pubDate>Sat, 24 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/24/2858/</guid>
      <description> 以下のリンクからどうぞ
悩んでいたクイック編集が出ない問題も載ってた
理由は分からないけど以下のリンクで.jpにリダイレクトされなくなる
http://rdt17.blogspot.com/ncr </description>
    </item>
    
    <item>
      <title>Ruby on Railsのインストール</title>
      <link>https://yaasita.github.io/2012/03/23/2878/</link>
      <pubDate>Fri, 23 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/23/2878/</guid>
      <description>必要なパッケージのインストール適当に以下のパッケージをインストール 
build-essential imagemagick zlib1g-dev libssl-dev libreadline-dev libmagick-dev libmagickcore-dev
libmagickwand-dev sqlite3 libsqlite3-dev automake bison mysql-server mysql-client libmysqld-dev libmysqlclient-dev libcurl4-openssl-dev
libapr1-dev libaprutil1-dev libxslt-dev libxml2-dev
※この時点ではRubyは入れない RVMのインストールRVMはRubyのバージョンのスイッチとか簡単に出来るので便利
公式サイトどおりに以下のコマンドですぐインストールされる 
curl -L get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
 Rubyのインストール
rvm install ruby
rvm list
rvm use 1.9.3 --default
必要なGemインストール
gem install bundler
gem install rails
gem install unicron
その他の設定あとJavaScriptエンジンが足りないとか起こられたら こちらを参照して設定する
Gemfileに以下を追記 
gem &#39;execjs&#39;
gem &#39;therubyracer&#39;

rails new hoge</description>
    </item>
    
    <item>
      <title>perlのワンライナーでファイルの一括リネーム</title>
      <link>https://yaasita.github.io/2012/03/21/2899/</link>
      <pubDate>Wed, 21 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/21/2899/</guid>
      <description> メモしておく
以下の例はファイルの拡張子を残して連番にする例
リネーム前確認
perl -le &#39;for(@ARGV){$n=$o=$_;$n=~s/.+(\..+)/sprintf(&#34;%04d$1&#34;,++$i)/e;print &#34;$o = $n&#34;}&#39; *

リネーム
perl -le &#39;for(@ARGV){$n=$o=$_;$n=~s/.+(\..+)/sprintf(&#34;%04d$1&#34;,++$i)/e;rename $o,$n}&#39; *
 </description>
    </item>
    
    <item>
      <title>github使ってみた</title>
      <link>https://yaasita.github.io/2012/03/19/2919/</link>
      <pubDate>Mon, 19 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/19/2919/</guid>
      <description>今更だけどgithub使ってみたときのメモ
とりあえず初期設定は下記参考リンク見ながらやればOK
以下はリポジトリの作成→アップロードまで簡易版のメモ
gitの設定名前とe-mailを設定 git config --global user.name &#34;Firstname Lastname&#34;
git config --global user.email &#34;your_email@youremail.com&#34;
githubのユーザーＩＤとアクセストークンの設定 ※アクセストークンはAccount Settings→左メニューのAccount Settingsで見れる git config --global github.user username
git config --global github.token 0123456789yourf0123456789token
sshの設定.ssh/configに以下を書いておく Host github.com
User git
Hostname github.com
IdentityFile ~/.ssh/YOUR_PRIVATE_KEY
リポジトリの作成githubにログインして&#34;New Repository&#34;を押せばOK リポジトリにpushmkdir repname
cd repname
git init
touch README
git add README
git commit -m &#39;first commit&#39;
git remote add origin git@github.com:yourid/repname.git
git push -u origin master

感想
コマンドから簡単にWebのホスティングサービスにアップロードできるのは超便利</description>
    </item>
    
    <item>
      <title>CUI(テキストベース)のメッセンジャー</title>
      <link>https://yaasita.github.io/2012/03/14/2940/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/14/2940/</guid>
      <description> CUIでメッセが出来たらいいなーと思って探してみた
centerim
finch
参考リンク
http://techno-st.net/2009/02/18/cui-im.html
http://d.hatena.ne.jp/goth_wrist_cut/20080128/1201484704 </description>
    </item>
    
    <item>
      <title>HDDが故障したときにやったこと</title>
      <link>https://yaasita.github.io/2012/03/11/2962/</link>
      <pubDate>Sun, 11 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/11/2962/</guid>
      <description>/dev/sddが故障を検地 (S.M.A.R.T)
まずはsmartのセルフテストをやってみる
smartctl -t long /dev/sdd  badblocksでHDDをチェック
今回は読み込みチェックだけやった
badblocks -s -v /dev/hda  書き込みチェックもやるなら↓
badblocks -s -v -n /dev/hda
-s 進捗状況表示
-v 詳細表示
-n 非破壊テスト
http://nabe.blog.abk.nu/0245
ファイルシステムが壊れてそうなら
fsck
を使うこと</description>
    </item>
    
    <item>
      <title>dwmのキーマップの変更</title>
      <link>https://yaasita.github.io/2012/03/09/2983/</link>
      <pubDate>Fri, 09 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/09/2983/</guid>
      <description> ソースをダウンロードしてから
makeする
apt-get source dwm
以下のとおり変更
#define MODKEY Mod1Mask
↓
#define MODKEY Mod4Mask
static const char *termcmd[] = { &#34;uxterm&#34;, NULL };
↓
static const char *termcmd[] = { &#34;x-terminal-emulator&#34;, NULL };

make
あとは出来たdwmをフォルダに突っ込めばOK
参考リンク
http://wiki.mma.club.uec.ac.jp/clear/dwm </description>
    </item>
    
    <item>
      <title>mysqlを使ってみる</title>
      <link>https://yaasita.github.io/2012/03/01/3004/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/01/3004/</guid>
      <description> インストールはmysql-clientとmysql-serverを入れればOK
mysqlへの接続
mysql -u root -p
DB一覧の表示
show databases;
databasesの切り替え
use データベース名
テーブルの表示
show tables;
phpmyadminへのログイン
http://192.168.0.1/phpmyadmin/
バックアップ
mysqldump --user=root --password=hoge --all-databases &amp;amp;gt; /tmp/mysql.dump
リストア
mysql -u root -phoge &amp;amp;lt; /tmp/mysql.dump </description>
    </item>
    
    <item>
      <title>Catalyst&#43;lighttpd&#43;fastcgiで動かしてみる</title>
      <link>https://yaasita.github.io/2012/02/05/3025/</link>
      <pubDate>Sun, 05 Feb 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/02/05/3025/</guid>
      <description>Catalyst+lighttpd+fastcgiで動かす場合の設定メモ
今回は下の図のように動かす
Catalystはスタンドアロンで動かすほうが早い気がする
bin-path指定で動かす場合はこちらを参照

conf編集/etc/lighttpd/conf-enabled/10-fastcgi.confを編集 今回のサーバーではlighttpdは普通のWebサーバーとして使っているので、ポートで切り分ける以下を追加 あとserver.port文を消す $SERVER[&#34;socket&#34;] == &#34;192.168.0.4:5000&#34; {
#server.port = 5000
fastcgi.server = (
&#34;&#34; =&amp;amp;gt; ( # the extension is empty because we want to match on any extension
&#34;myserver1&#34; =&amp;amp;gt; (
&#34;host&#34; =&amp;amp;gt; &#34;192.168.0.4&#34;,
&#34;port&#34; =&amp;amp;gt; 5001,
&#34;check-local&#34; =&amp;amp;gt; &#34;disable&#34;
)
)
)
}
$SERVER[&#34;socket&#34;] == &#34;192.168.0.4:4000&#34; {
}
Catalystの起動ポート越しにやりとりするからパーミッションとかは適当でOK script/helloworld_fastcgi.pl --listen 192.168.0.4:5001 --keeperr 2
デーモン化する/etc/init.dにスクリプトを書けば自動起動する こちらを参考に適当にスクリプト書けばOK 
参考リンク
Deploying Catalyst Applications
Deploying Catalyst applications with lighttpd and FastCGI</description>
    </item>
    
    <item>
      <title>LinuxでISO=&amp;gt;aviエンコード（DVDリッピング）</title>
      <link>https://yaasita.github.io/2012/02/02/3047/</link>
      <pubDate>Thu, 02 Feb 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/02/02/3047/</guid>
      <description> LinuxでDVDのISOイメージをavi化する方法を調べたのでメモ
リポジトリにdebian-multimediaを追加/etc/apt/sources.listに以下の一行を追加 deb http://www.debian-multimedia.org squeeze main non-free
このFAQにあるとおり公開鍵をインストール dpkg -i debian-multimedia-keyring_2008.10.16_all.deb
acidripをインストールapt-get update
apt-get install acidrip
ISOイメージをマウントmount -o loop /tmp/DVD.ISO /mnt
acidripを起動acidrip
/mntを指定してエンコード あとはGUIなので分かるはず  </description>
    </item>
    
    <item>
      <title>CUIでサウンド制御</title>
      <link>https://yaasita.github.io/2012/01/31/3090/</link>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/31/3090/</guid>
      <description> PCMの調節とか音の調整を出来るコマンド
alsamixer
よく忘れるので.......φ（．．）メモメモ
 </description>
    </item>
    
    <item>
      <title>Linuxでtorを使ってみる</title>
      <link>https://yaasita.github.io/2012/01/31/3068/</link>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/31/3068/</guid>
      <description> Torは匿名のプロキシとして動作する
インストール
apt-get install tor

/etc/tor/torrcを編集
SocksListenAddress 192.168.0.4(Torが入っているサーバーのアドレス)
を追加
## Replace this with &#34;SocksPort 0&#34; if you plan to run Tor only as a
## relay, and not make any local application connections yourself.
SocksPort 9050 # what port to open for local application connections
SocksListenAddress 127.0.0.1 # accept connections only from localhost
SocksListenAddress 192.168.0.4

あとは再起動でOK
killall tor
tor

これで192.168.0.2から接続できた
SocksPolicyは何も設定しなければ全て許可 </description>
    </item>
    
    <item>
      <title>最近のCygwinをインストール</title>
      <link>https://yaasita.github.io/2012/01/26/3111/</link>
      <pubDate>Thu, 26 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/26/3111/</guid>
      <description> 最近のCygwinが便利になってたので導入メモ
１．インストール
公式サイトからsetup.exeを持ってくる
ソフトのインストールに毎回setup.exeを使うのは面倒なので、apt-cygを導入する
２．Xサーバの導入
setup.exeからX11を選択して全部入れる
そんでウィンドウマネージャとしてdwmを入れる
ソースは公式サイトから拾ってビルド
tar xzf dwm-6.0.tar.gz
cd dwm-6.0
make
mv dwm.exe /usr/bin/
あとは~/.xinitrcに適当に書いてstartxでOK
xhost +192.168.0.4
dwm

３．その他設定
あとは便利に使うコマンドとしてcygstartを覚えておくと良いかも
詳しくはこちら
コンソールの設定だけど右クリック→Options→Looks→背景色とか透過とかカーソルをいじる
Xサーバーに飛ばしたかったらアプリ起動側で変数設定すること
export DISPLAY=&#34;192.168.0.3:0&#34;

関連記事
http://rdt17.blogspot.com/2011/05/xming.html </description>
    </item>
    
    <item>
      <title>rsyncで転送途中のファイルを破棄しない</title>
      <link>https://yaasita.github.io/2012/01/24/3154/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/24/3154/</guid>
      <description> 所謂、リジューム（レジューム）機能ってやつだ
--partial
を付ければOKみたい
参考リンク
http://d.hatena.ne.jp/matoken/20110525/1306335511 </description>
    </item>
    
    <item>
      <title>コマンド補完を強力にしてくれるbash_completion</title>
      <link>https://yaasita.github.io/2012/01/24/3132/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/24/3132/</guid>
      <description> インストールはaptでできる（bash-completion）
.bashrcに以下の記述をすればOKだけどDebianの場合は予め書いてあった
if [ -f /etc/bash_completion ] &amp;amp;&amp;amp; ! shopt -oq posix; then
. /etc/bash_completion
fi

その他詳しいことは
man dh_bash-completion
参考リンク
http://d.hatena.ne.jp/orangeclover/20110204/1296769974
http://d.hatena.ne.jp/wadap/20080601/1212312418 </description>
    </item>
    
    <item>
      <title>自分があとどれくらいの時間生きていられるか？</title>
      <link>https://yaasita.github.io/2012/01/09/3174/</link>
      <pubDate>Mon, 09 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/09/3174/</guid>
      <description> 自分があとどれくらいの時間生きていられるか簡単にわかるサイトです
ライフカウンター
残された時間がすぐに分かって便利です。
例えば本日1/9誕生日の25歳の場合、残された時間は482113時間です。（寿命80歳までと仮定して）
毎日8時間寝るとすると人生の1/3ですから160704時間寝ています
この人はSEをしていて、毎日残業して14時間働き、休日出勤も多いので年間休日は100日です
定年は65歳にあがったみたいなので、65歳とします
14 x (365 - 100) x (65-25) = 148400時間が働いている時間です。
まとめると以下のようになります
寝ている時間　160704h
働いてる時間　148400h
自由な時間　173009h
合計　482113h

自由な時間は全体の35％しかないことが分かります。
何か仕事とは別にやりたい事や目標がある場合、残された173009時間でやる必要があります。
年にすると約20年しかないですので結構少ない気がします。
（実際には自由な時間中に家事、食事、冠婚葬祭等がありますのでずっと少ないです）
もし、働いている時間も自由な時間も充実していなかったとしたら死ぬ時に後悔するんじゃないでしょうか？もしこの例のような生活をしているSEの方が居ましたら考え直した方が良いかもしれないです。 </description>
    </item>
    
    <item>
      <title>年収を入力すると女の子が評価してくれるサイト</title>
      <link>https://yaasita.github.io/2012/01/08/3194/</link>
      <pubDate>Sun, 08 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/08/3194/</guid>
      <description> http://televider.com/msz/
参考リンク
http://www.zaeega.com/archives/53541552.html </description>
    </item>
    
    <item>
      <title>/boot/grub/grub.cfgのrootってどこから設定されている？</title>
      <link>https://yaasita.github.io/2012/01/06/3214/</link>
      <pubDate>Fri, 06 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/06/3214/</guid>
      <description> というわけで調べてみた
update-grub2のコールスタック

/etc/grub.d/10_linuxを見れば分かるとおり
grub.cfgの$linux_root_device_thisversionによって作られています。
で、これは$GRUB_DEVICEから作られています。（grub-mkconfig参照）
結局、$GRUB_DEVICEはどこを参照しているかというと以下のコマンドで出してます。
grub-probe --target=device /
というわけでgrub-probeというコマンドの結果を入れているので、grub legacyみたいに設定値ではありません。じゃあどうやってrootパラメータを変更するの？って話になるけど、それはchrootするとか
GRUBメニュー選択時にEDITするとかが良いんじゃないでしょうか？ </description>
    </item>
    
    <item>
      <title>/dev/disk/by-uuidに無いHDDがある？</title>
      <link>https://yaasita.github.io/2012/01/06/3236/</link>
      <pubDate>Fri, 06 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/06/3236/</guid>
      <description> 答え
mkfsでフォーマットしてないからです。
フォーマットすれば出ます。
ファイルシステム単位につけるものらしいね
だからmkfsしなおしたら変わります
ご注意を
参考リンク
http://manual.aptosid.com/ja/part-uuid-ja.htm </description>
    </item>
    
    <item>
      <title>マザーボードのチップセットとかCPU情報をLinuxで取得する</title>
      <link>https://yaasita.github.io/2011/12/31/3257/</link>
      <pubDate>Sat, 31 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/31/3257/</guid>
      <description> lshwというユーティリティがあった
aptでインストールできた
参考リンク
PCのハードウェア情報を表示するには </description>
    </item>
    
    <item>
      <title>SIerは滅びぬ！何度でも蘇るさ！</title>
      <link>https://yaasita.github.io/2011/12/25/3279/</link>
      <pubDate>Sun, 25 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/25/3279/</guid>
      <description> 受託開発をするSIerがヤバイよ的な話はよく聞く話でSIer内部でそんな話もチラホラと聞くようになりました。
（ヤバイ理由は人月換算とか多重請負とかいろいろ言われてます）
でも結局のところこの先もSIerは生き残るよねっていうのが僕の見解。
もう何十年もこんな感じでやってきたから引くに引けないんですよ。
これは知人から聞いた話なんですが、ある大企業システムのIT部門の人は
本当にそのシステムを使っているユーザーから改善案を聞いて直すということを
しないらしいです。
仕様変更・機能追加はそのIT部門の上司の思いつきらしいですｗ
当然、普段から使っているユーザーの要望ではないので、どんどん使いにくくなってる
＋いらない機能ばかり増えてるみたいですがｗ
で、こういう話って大企業とかだと結構ある話みたいです。
ユーザーが沢山いるシステムだと一人一人にヒアリングするのが面倒だし、
俺は（IT部門だから）そのシステム使わない。上司が言ったとおりの
仕様で発注出せばいいやーみたいに考えるのでしょう。
他に優秀なパッケージソフトがあっても買いません。
今まで、大手SIerに頼んでたんだから、今更、どこぞの中小企業と取引なんて
したくない。なぜなら稟議を通すときに説明を求められて面倒だからｗ
で糞システムをアホみたいな価格で買ってくるんです。
IT部門の人は会社の利益向上というよりも自分が面倒な思いをしなければいいやと
思ってるんですね。
自分がシステムを使わないから当事者意識が希薄なんです。
IT部門という独立した部署を持てる大企業で起こりがちな気もします。
酷いときには今期の予算は1000万円だけど発注は500万しかしてなかったなぁ・・・
（予算をある程度余らせるとそれはそれで怒られるらしいｗ）
と気づいたIT部門の人はSIerとこんな交渉もします。
IT部門　「大手SIerさんこの案件500万から800万に値上げしてもいいすよ」
大手SIer「ヽ(´▽｀)ノﾜｰｲ喜んで！ではこの案件は800万で見積もりします♪」
なんてこともやってます。
こんな事をよく続けてられるなと最初は思いました。
普通は他社との競争原理が働き淘汰されていくようにも思えます。
でも、大手SIerと大企業、公共団体、銀行ってズブズブの関係だって知ってました？
見渡せば部長クラスの人は元顧客側のお偉いさんだったり、
今、顧客の立場として発注してるのは大手SIerから出向している人だったりｗ
結局みんな身内でお金を回してるんじゃないかと思うくらいですｗ
こんな感じで何十年も回してるから、
もう良いやって思ってるんです。
顧客側も今更内製とか顧客がプロジェクトに参加するなんてことはしないでしょう
IT部門の人からすれば自分は使わないのだから丸投げできる大手SIerの方が良いに決まってます。
「面倒だから」・「今までそうやってきたから」を変えるには本当に経営危機とかにならない
限り無理でしょう。
結局こんな感じでSIerは続いていきます。
大手SIerは人を手配し、誰も見ないような品質項目やExcel資料を作るのに必死になっています。
中堅SIerは、そこら辺の人をSEに見立てて大手SIerに売り飛ばすだけです。
プログラマーは何十にも中間搾取されているので雀の涙ほどの給料で働きます。
みな実際はユーザーの利便性をそこなう糞システムだと知らずに日々残業をします。
きっとこの状況はこの先もずっと変わらないんだろうな（;´ー｀）
でも結局これってIT業界だけじゃなくてどこの業界も同じようなものじゃないでしょうか？
世の中なんてこんなものですよね
参考リンク
久々のSI業界
日本のIT業界の問題点
笑ってはいけないSIer </description>
    </item>
    
    <item>
      <title>携帯開発の実態（笑わないプログラマ）</title>
      <link>https://yaasita.github.io/2011/12/24/3299/</link>
      <pubDate>Sat, 24 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/24/3299/</guid>
      <description>例の軍曹のデスマーチ話です
 前編 後編  </description>
    </item>
    
    <item>
      <title>freenetをLinux環境にインストール</title>
      <link>https://yaasita.github.io/2011/12/19/3319/</link>
      <pubDate>Mon, 19 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/19/3319/</guid>
      <description> 公式ページからDownloadを選択「Linux etc」をクリックnew_installer_offline_1405.jarをダウンロードして
↓のコマンドでインストール
java -jar new_installer_offline.jar
インストールするディレクトリを聞かれるので適当に答えればOK
run.shが起動とか終了の時に使うシェル
START引数で起動、STOP引数で停止かな </description>
    </item>
    
    <item>
      <title>Googleのキーボードショートカット検索が終わってた</title>
      <link>https://yaasita.github.io/2011/12/04/3341/</link>
      <pubDate>Sun, 04 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/04/3341/</guid>
      <description> 前に書いたキーボードショートカットサービスが終了していた
今はAccessible Viewというサービスになってるみたい
操作方法はキーボードショートカット時代と同じ
音が出るようになったみたいだけど・・・
使いたい人はお試しあれ
https://www.google.com/webhp?esrch=Axs </description>
    </item>
    
    <item>
      <title>HJSplitって何だ？</title>
      <link>https://yaasita.github.io/2011/11/06/3361/</link>
      <pubDate>Sun, 06 Nov 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/11/06/3361/</guid>
      <description> ファイルを分割＆結合してくれるソフトです
主に海外のダウンロードサイトなどで目にします。
公式サイトはこちら
そこからLinux版とWinodws版が選べます
今回はLinux版を使います
公式ページからtarファイルを拾ってきて解凍すればOK
その中にあるhjsplitを蹴れば実行されますXが動いている＋GTKが入っていれば多分大丈夫
※まあLinuxならcatでつなげてもいいと思う </description>
    </item>
    
    <item>
      <title>FXで使えるチャート</title>
      <link>https://yaasita.github.io/2011/11/04/3383/</link>
      <pubDate>Fri, 04 Nov 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/11/04/3383/</guid>
      <description> ここにいろいろあった
http://www.fxcm.co.jp/tools/chart.html
その中でも↓が使いやすかったかも
http://www.dailyfx.com/charts/netdaniachart/ </description>
    </item>
    
    <item>
      <title>iotop日本語man</title>
      <link>https://yaasita.github.io/2011/10/30/3403/</link>
      <pubDate>Sun, 30 Oct 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/10/30/3403/</guid>
      <description>iotopを最近使ってたから日本語訳にしてみた
結構意訳になってる
IOTOP(1)&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;  IOTOP(1)


NAME
iotop - シンプルなIOモニター
SYNOPSIS
iotop [OPTIONS]
DESCRIPTION
iotopはLinuxカーネルからI/O使用情報を取得し(カーネル2.6.20以上を必要とします)、
プロセス・スレッド毎にI/O使用状況を表示します。
カーネルのビルドオプションに以下を含める必要があります。
CONFIG_TASK_DELAY_ACCT, CONFIG_TASK_IO_ACCOUNTING, CONFIG_TASKSTATS and CONFIG_VM_EVENT_COUNTERS
iotopはI/Oのプロセス/スレッドごとのI/O帯域を表示間隔毎に表示します。
また、プロセスがI/Oの処理によって待たせれている時間の割合も表示します。
各プロセスについてI/Oの優先度(クラス/レベル)が表示されます。
加えて、表示間隔の間に読み書きされた総I/O帯域は一番上に表示されます。
左矢印、右矢印キーを使うとソート項目を変更できます。rでソート順を逆転できます。
oで--onlyオプションの有効、無効を切り替えられます。(IOを使用しているプロセスだけを表示するかどうか)
pで--processesオプションの有効、無効を切り替えられます。(プロセスのみを表示してスレッドは表示しないかどうか)
aで--accumulatedオプションの有効、無効を切り替えられます。(IOの累積値表示に切り替えるかどうか)
qで終了します。
iでスレッド/プロセスの優先度を変更できます。
その他のキーを押すと最新の情報に更新できます。
OPTIONS
--version
バージョンを表示し終了します。
-h, --help
使用方法を表示し、終了します。
-o, --only
実際にI/Oを使用しているプロセス/スレッドのみを表示します。これはoを押すことで
表示中にも切り替えることができます。
-b, --batch
対話的な表示でなくなります。(バッチモード)これは状態を記録するときに便利です。
-n NUM, --iter=NUM
自動的に終了する時間を指定します。(デフォルトでは自動的に終了しません。)
これはバッチモードで役に立ちます。
-d SEC, --delay=SEC
表示間隔を設定します。(デフォルトは1秒)　1.1秒のような少数も指定可能です。
-p PID, --pid=PID
表示するプロセスIDを指定します。(デフォルトは全て表示します)
-u USER, --user=USER
表示するユーザーIDを指定します。(デフォルトは全て表示します)
-P, --processes
プロセスのみ表示します。通常は全てのスレッドを表示します。
-a, --accumulated</description>
    </item>
    
    <item>
      <title>LinuxでrootのGUIウィンドウを開きたいとき</title>
      <link>https://yaasita.github.io/2011/10/11/3424/</link>
      <pubDate>Tue, 11 Oct 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/10/11/3424/</guid>
      <description> sudoでrootになってからXアプリを起動してもDisplayのオープンに失敗するので
gksuでrootターミナルを開いてからやるとOK </description>
    </item>
    
    <item>
      <title>postfixでメールフィルタを設定</title>
      <link>https://yaasita.github.io/2011/09/25/3445/</link>
      <pubDate>Sun, 25 Sep 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/09/25/3445/</guid>
      <description> 1.main.cfに以下を追加
content_filter=filter:dummy
2.master.cfに以下を追加
filter unix - n n - - pipe
flags=Rq user=hogeuser argv=/tmp/filter.pl $recipient
※$recipientは受信者が引数に渡される
参考リンク
Postfix キューに入った後のコンテンツフィルタ
Postfix設定パラメータ </description>
    </item>
    
    <item>
      <title>マーブルvsカプコン2(MARVEL VS. CAPCOM 2 NEW AGE OF HEROES)</title>
      <link>https://yaasita.github.io/2011/08/27/3467/</link>
      <pubDate>Sat, 27 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/27/3467/</guid>
      <description>通称マブカプ2
まとめ
クソゲーまとめ @ ウィキ
MARVEL　VS　CAPCOM２　攻略
コマンド</description>
    </item>
    
    <item>
      <title>Linuxでスキャナを使うには</title>
      <link>https://yaasita.github.io/2011/08/21/3487/</link>
      <pubDate>Sun, 21 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/21/3487/</guid>
      <description> aptか何かでsaneとxsaneをインストール
sane-find-scannerで検索
/etc/sane.d/mustek_usb.confを編集
以下の行だけ有効化
option max_block_size 1024 usb 0x04b8 0x010a /dev/usb/scanner0 
あとはrootでログインしてxsaneをメニューから選択すればできた
ちなみに試したのはEpsonのGT-8700
参考リンク
http://samidarehetima.blog9.fc2.com/blog-entry-8.html
検索した結果 </description>
    </item>
    
    <item>
      <title>atコマンドの実行内容（実際に発行するコマンド）を知りたい</title>
      <link>https://yaasita.github.io/2011/08/20/3512/</link>
      <pubDate>Sat, 20 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/20/3512/</guid>
      <description> at -c job ... だそうです。
参考リンク
http://okwave.jp/qa/q5599261.html </description>
    </item>
    
    <item>
      <title>WindowsでもMplayerを使う</title>
      <link>https://yaasita.github.io/2011/08/14/3533/</link>
      <pubDate>Sun, 14 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/14/3533/</guid>
      <description>Mplayerはオープンソースのメディアプレイヤー
公式サイトからDownloadと進んで
「MPlayer SVN Windows with SMPlayer GUI (recommended)」をえらんだ
最初に設定したのは以下の通り
GeneralMedia Settingで「Remember Settings for all files」を外した
Screenshotsの場所を変更
※これはファイル毎に再生ポジションを記憶してくれたりする
設定ファイルはC:\Documents and Settings\hoge\.smplayerにある
InterfaceRecent filesを20に変更
Instancesタブで一つのウィンドウしか開かないようにした
File types関連付けする拡張子にチェック
あと注意しなければならないことは
マルチディスプレイだと左のウィンドウに移動したときに
Video→Screenをえらんでディスプレイ先を切り替えること</description>
    </item>
    
    <item>
      <title>lighttpdでバーチャルホスト設定</title>
      <link>https://yaasita.github.io/2011/08/13/3554/</link>
      <pubDate>Sat, 13 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/13/3554/</guid>
      <description> lighttpd.confを少しいじるだけで出来た
以下のように設定した
hogehoge.netのホスト(HTTP_HOST)またはプライベートIPで指定してきたら
/var/wwwを見せる
それ以外なら/var/www2を見せる
という制御にした
server.document-root = &#34;/var/www2&#34; $HTTP[&#34;host&#34;] == &#34;hogehoge.net&#34; { server.document-root = &#34;/var/www&#34; } else $HTTP[&#34;host&#34;] == &#34;192.168.0.4&#34; { server.document-root = &#34;/var/www&#34; } 
今回はドキュメントルート以外は全部同じ設定にしてあるので、conf-enabled/05-auth.confとかも同じ設定になるので注意 </description>
    </item>
    
    <item>
      <title>/etc/init.dに作った起動スクリプトのリンク設定とか</title>
      <link>https://yaasita.github.io/2011/08/12/3618/</link>
      <pubDate>Fri, 12 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/12/3618/</guid>
      <description> 起動時、終了時等のランレベルが変更されたときに走るスクリプトは/etc/init.dに
格納するが、rc0.d/～rc6.d/のディレクトリにリンクを張る必要がある
昔は手動でやっていたが、今は決まった書式でコメントを書いておけば自動的にアップデートしてくれるらしい
update-rc.dというコマンドで行える
ヘッダさえちゃんと書けばinsservというコマンドを打つだけで全スクリプトのリンクが張られる
詳しくは/etc/init.d/READMEを見れば分かる
関連記事
init.d/とか各ランレベルごとの起動スクリプトについて
rep2をオンメモリーにして高速化2  </description>
    </item>
    
    <item>
      <title>sudoku(数独)の日本語man</title>
      <link>https://yaasita.github.io/2011/08/12/3583/</link>
      <pubDate>Fri, 12 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/12/3583/</guid>
      <description>Linux用のsudokuゲームの日本語manです
NAMEsudoku - 数独ゲーム
SYNOPSIS(ゲームを始める)
sudoku [options] ... [&amp;amp;lt;filename&amp;amp;gt;]
(問題を作成)
sudoku -g [&amp;amp;lt;num&amp;amp;gt;] [options] ...
(問題を解く)
sudoku -v [options] ...
(難易度を計算)
sudoku -s [options] ...
DESCRIPTIONThe sudoku board game is played on a 9x9 grid, divided into rows, columns, and
9 blocks of 3x3 squares. The objective is to fill the empty squares with the
digits 1-9, so that each row, column, and block contains each of the digits 1-9</description>
    </item>
    
    <item>
      <title>KDMのセッション選択の制御とかの話</title>
      <link>https://yaasita.github.io/2011/08/11/3658/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3658/</guid>
      <description> 現在、Xにログインするときに使用するディスプレイマネージャにはKDMを使用している
このKDMのセッション制御についてメモしておく
・ログイン時にセッションをDefaultを選んでログインする
→.xinitrc .xsessionに書いたデフォルトセッションが開始される
（詳しくはここら辺参照）
・その他のセッションを明示的にえらんでログインする
→.xinitrc .xsessionは無視されてえらんだセッションが開始される
参考リンク
KDMハンドブック
テーマ </description>
    </item>
    
    <item>
      <title>KDMの設定をGUIで行う</title>
      <link>https://yaasita.github.io/2011/08/11/3638/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3638/</guid>
      <description> 今まで：kcontrol
これから：systemsettings
だそうです
参照
なのでsystemsettingsをインストールしたらそこから設定してみよう
Advancedタブ→LoginManagerで設定できる
日本語がいいならついでにkde-l10n-jaを入れておくと良いかも </description>
    </item>
    
    <item>
      <title>LinuxでHDDの使用率を調べるには？</title>
      <link>https://yaasita.github.io/2011/08/11/3678/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3678/</guid>
      <description> HDDの各フォルダの使用量を調べる方法について調べた
duコマンドで計ってもいいけど
Baobabってコマンドでもいいかも
参考リンク
ハードディスク使用率をグラフィカルに表示するには
ディレクトリやディスクの使用量を調べるには </description>
    </item>
    
    <item>
      <title>FF12攻略まとめ</title>
      <link>https://yaasita.github.io/2011/07/16/3699/</link>
      <pubDate>Sat, 16 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/16/3699/</guid>
      <description>まとめWiki
Final Fantasy XII WIKI
FF12攻略情報-ZAPAnet
武器・防具について
武器の特徴
武器・防具の入手方法
防具リスト
武器リスト
ライセンス
ライセンスボードの位置
技・魔法
技・魔法入手場所
サブイベント</description>
    </item>
    
    <item>
      <title>wineで入れたソフトのアンインストールについて</title>
      <link>https://yaasita.github.io/2011/07/14/3719/</link>
      <pubDate>Thu, 14 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/14/3719/</guid>
      <description> ここに書いてあった
以下のコマンドで出来るらしい
uninstaller
その他にregeditというコマンドでレジストリも編集できるらしい
まあなにかおかしくなったら~/.wineを削除すればOKだろう
参考リンク
http://linux.ikoinoba.net/index.php?mode=page&amp;amp;aim=wine </description>
    </item>
    
    <item>
      <title>オープンソースの音楽再生ソフト「subsonic」を使ってみる</title>
      <link>https://yaasita.github.io/2011/07/13/3740/</link>
      <pubDate>Wed, 13 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/13/3740/</guid>
      <description> SubsonicはWebベースの音楽再生ソフトでサーバーにある音楽をitunesの様に管理・再生できるソフトみたい
インストールは驚くほど簡単だった
Debian Squeeze
１．Subsonic動作に必要なファイルをインストールしておく
↓あたりをaptとかでインストールしておく（詳しくはこちら）
openjdk-6-jre
flac
faad
vorbis-tools
ffmpeg

２．ダウンロードしたSubsonicをインストール
dpkg -i subsonic-x.x.deb
３．ブラウザでアクセスして設定
http://localhost:4040/にアクセス（もしくは違う端末からIPアドレス指定でもOK）して
設定する。
まずは日本語にするにはSetting→General→Languageを日本語にすればOK
あとはadminのパスワードと必要なアカウントの作成、音楽フォルダの指定、必要ならネットワーク設定を行えば使えるようになる
※注
以下の機能はSubsonicプロジェクトに寄付しないと継続して使用できません
Android、iPhoneやWindows Phone 7のへのストリームの音楽配信ビデオストリーミングsubsonic.orgのDNSサービスWebインターフェイスで広告が表示されない
参考リンク
http://d.hatena.ne.jp/Molokheiya/20110628/p1
関連ソフト
gnump3d
Ampache
AudioGalaxy </description>
    </item>
    
    <item>
      <title>弾を光らせて軌跡を作り見やすくする曳光弾</title>
      <link>https://yaasita.github.io/2011/07/01/3761/</link>
      <pubDate>Fri, 01 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/01/3761/</guid>
      <description> 曳光弾というらしい
これにより弾の軌道が分かるんだと・・・
参考リンク
http://karapaia.livedoor.biz/archives/51767062.html
http://www.nicovideo.jp/watch/sm14657423 </description>
    </item>
    
    <item>
      <title>シンプルで軽量なブラウザsurf</title>
      <link>https://yaasita.github.io/2011/06/06/3781/</link>
      <pubDate>Mon, 06 Jun 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/06/06/3781/</guid>
      <description> Debianのsidならパッケージがあったのでこんな感じでリポジトリを設定
-iオプションで画像を無効化、-pでFLASH等のプラグインを無効化、-sでJavaScript無効化とか出来るので
重いサイトを見るときには重宝しそう
ただ、レンダリングはChromeの方が早い気がする
似ている名前でsurfrawというのがあるけどこれはWebから指定した単語の検索結果をブラウザに渡してくれるソフトらしい
こんな感じで書くとgoogleでdebianを検索した結果がブラウザに渡される
surfraw　google debian </description>
    </item>
    
    <item>
      <title>ヨッシーのクッキー裏技</title>
      <link>https://yaasita.github.io/2011/06/05/3802/</link>
      <pubDate>Sun, 05 Jun 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/06/05/3802/</guid>
      <description> 
強いCPUと戦える </description>
    </item>
    
    <item>
      <title>ネットワークの総転送バイトとかを調べる</title>
      <link>https://yaasita.github.io/2011/05/30/3823/</link>
      <pubDate>Mon, 30 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/30/3823/</guid>
      <description> cat /proc/net/dev </description>
    </item>
    
    <item>
      <title>モンロー/ノイマン効果とは</title>
      <link>https://yaasita.github.io/2011/05/29/3863/</link>
      <pubDate>Sun, 29 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/29/3863/</guid>
      <description> 円形に配置した爆発物が爆発すると中央部にエネルギーが集中してどうたらこうたら・・・
魔法少女まどか☆マギカの１１話参考とのこと
参考リンク
ほむほむ11話戦闘シーン
モンロー/ノイマン効果(Wikipedia) </description>
    </item>
    
    <item>
      <title>変数のスコープは狭い方が良い？</title>
      <link>https://yaasita.github.io/2011/05/29/3843/</link>
      <pubDate>Sun, 29 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/29/3843/</guid>
      <description> カーゴカルトみたいな感じか
たしかにそうだと思った
分裂勘違い君劇場
中途半端に優秀なプログラマが「正しいプログラミングテクニック」だと妄信しがちな３つポイント  </description>
    </item>
    
    <item>
      <title>pam-auth-updateで認証方式の変更</title>
      <link>https://yaasita.github.io/2011/05/24/3905/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/24/3905/</guid>
      <description> DTIのVPSの認証方式がKerberosになってたからコマンド打って再設定した
/etc/pam.d/common-password
を見るとよいかも </description>
    </item>
    
    <item>
      <title>top系のコマンドをまとめてみる（システムモニタリングツール）</title>
      <link>https://yaasita.github.io/2011/05/24/3883/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/24/3883/</guid>
      <description> システムモニタリングtop
標準インストール？の基本的なモニタリングソフト
htop
もっとユーザフレンドリーなUIになって見やすくなったtop
iotop
IOに着目して負荷を見るためのtop
atop
アクティブなプロセスのみを表示、前表示と差分があったものを表示するtop
ネットワークモニタリングapachetop
apacheのログからアクセスをリアルタイムに解析してくれる
lighttpdのログでも使えた
iftop
インターフェイスごとにトラフィックを計測
nethogs
アプリ毎にトラフィックを測定
dnstop
DNSのトラフィックを表示
jnettop
ホストとポート毎にトラフィックを表示
sntop
接続を検地するtop
参考リンク
http://phpspot.org/blog/archives/2010/12/top.html
http://journal.mycom.co.jp/news/2009/09/07/005/index.html </description>
    </item>
    
    <item>
      <title>Linuxの面白そうなゲーム</title>
      <link>https://yaasita.github.io/2011/05/22/3925/</link>
      <pubDate>Sun, 22 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/22/3925/</guid>
      <description> 全てaptでインストールできる
sudoku - コンソールでできる数独
xshogi - 将棋ゲーム　軽くて良い感じ
kraptor - シューティングゲーム
ltris - 軽いテトリス
netris　- コンソール版のテトリス
viruskiller - シューティングゲーム？（動作せず）
xblast - ボンバーマンのクローン
flobopuyo - ぷよぷよのクローン
xfireworks - デスクトップに花火が出る
xfishtank - デスクトップが水族館みたいになる
xpenguins - デスクトップにペンギンが出る
xsol - ただのソリティア
参考リンク
http://www10.atwiki.jp/gleaning/pages/32.html
http://penguin.tantin.jp/mori/category.html#af0d8275 </description>
    </item>
    
    <item>
      <title>perlで日付文字を解析するのに便利なモジュール</title>
      <link>https://yaasita.github.io/2011/05/22/3946/</link>
      <pubDate>Sun, 22 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/22/3946/</guid>
      <description> Date::Parse というらしいとても便利
#!/usr/bin/perl
use Date::Parse;
$unix_time=str2time (&#34;May 15 01:19:02&#34;,&#34;JST&#34;);
print $unix_time;
 </description>
    </item>
    
    <item>
      <title>パイプ処理の進行状況を教えてくれるコマンドpv</title>
      <link>https://yaasita.github.io/2011/05/15/3966/</link>
      <pubDate>Sun, 15 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/15/3966/</guid>
      <description> パイプビュー　というpv コマンドらしい
どうやらpvはcatみたいな効果があるみたい
pv rss.log* | gzip -c  /tmp/hoge.gz

こうやって２つのパイプの間に挟むのも手
cat rss.log* |pv | gzip -c  /tmp/hoge.gz
参考リンク
http://d.hatena.ne.jp/dharry/20110210/1297268423
http://yebo-blog.blogspot.com/2009/02/pipe-viewer.html </description>
    </item>
    
    <item>
      <title>WindowsXPの自動起動（オートラン）機能を無効化する</title>
      <link>https://yaasita.github.io/2011/05/14/3986/</link>
      <pubDate>Sat, 14 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/14/3986/</guid>
      <description> レジストリを以下のようにすればOKらしい
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer]
&#34;NoDriveTypeAutoRun&#34;=dword:000000b5

先日、友人からもらったUSB見たら6bi8wr29.exeというウィルスがUSBドライブの直下にあったからこれやっといてよかった危ない危ない・・・
参考リンク
http://www.mnet.ne.jp/~angie/kbase/xp-autorun.html
http://yonyon-blog.net/youmei/2008/05/27/cddvd%E3%82%84usb%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AE%E8%87%AA%E5%8B%95%E5%AE%9F%E8%A1%8C%E3%82%92%E7%84%A1%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/ </description>
    </item>
    
    <item>
      <title>ハッシュ解析の常套手段レインボーテーブル</title>
      <link>https://yaasita.github.io/2011/05/11/4006/</link>
      <pubDate>Wed, 11 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/11/4006/</guid>
      <description> レインボーテーブルとはあらかじめ作っておいたハッシュテーブルと平分の対応表を照らし合わせ、平分を得るテクニックらしいです。
チェインと呼ばれる単位に集約されているので、テーブルの容量が少なくてすむ利点があります。
ソフトはここら辺からどうぞ
http://project-rainbowcrack.com/index.htm
参考リンク
http://backslash.ddo.jp/wordpress/index.php/archives/584 </description>
    </item>
    
    <item>
      <title>LANの盗聴について</title>
      <link>https://yaasita.github.io/2011/05/10/4046/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4046/</guid>
      <description>昔、調べたことがあったのでメモ
有線LANの盗聴にはいくつか種類があって調べた限りだと以下の方法がある
以下の方法の殆どを行えるソフトはettercapがあるman ettercapとやるだけで勉強になる
→MAC Floodはdsniffの中にあるmacofを使うと良いかも
 ARP Spoofing ICMP Redirect DHCP Spoofing Port Stealing MAC Flood  APR Spoofing 偽のARP応答を返すことでARPテーブルを変更し中間者攻撃を行う手法
ARP Spoofingについてはこちらが参考になる
ICMP Redirect ICMPリダイレクトを使って経路情報を書き換え
DHCP Spoofing DHCPを使ってIPアドレスを振るときにGWを盗聴できるように変更
Port Stealing L2スイッチのポート情報を書き換えることでパケットをこちらに流すようにする
MAC Flood L2スイッチのMACテーブルを溢れさせて馬鹿ハブにして盗聴する荒業
参考リンク  LAN内の盗聴とその予防 スプーフィング MACアドレス書き換えで通信傍受！ ARPスプーフィングで通信傍受！ ファイアウォール/IDS の回避とスプーフィング オキテ破りにトライ！　ネットワーク実験室 見えざる脅威，ネットワーク盗聴を見つけ出す 社内の盗聴者を見つけ出すフリーツール「PromiScan」の使い方 社内LANが危ない? 今どきの社内セキュリティ対策 外部からの攻撃 SwitchingHubの特性を利用して盗聴する！  </description>
    </item>
    
    <item>
      <title>X Window Systemでスクリーンショットを取る</title>
      <link>https://yaasita.github.io/2011/05/10/4067/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4067/</guid>
      <description> 以下のコマンドで出来るらしい
対象をウィンドウだけを取るなら以下のコマンド
コマンドを打ってから対象をクリックでOK
xwd -frame -out 001.xwd
全体を取るには以下のコマンド
これは打った瞬間に取られる
xwd -root -out 002.xwd
参考リンク
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/861minsysps.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/010prtsc.html </description>
    </item>
    
    <item>
      <title>Xセッションからログアウトしたときにスクリプトを実行する</title>
      <link>https://yaasita.github.io/2011/05/10/4109/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4109/</guid>
      <description> ログアウトの制御は使用しているディスプレイマネージャに依存するみたいです。
Gnomeなら/etc/gdm/PostSession/Default
XDMなら/etc/X11/xdm/Xreset
KDEなら/etc/kde4/kdm/Xreset
WDMなら/etc/X11/wdm/Xreset（ディスプレイ毎に設定なら/etc/X11/wdm/Xreset_0等）
らしい
kdmからなら/etc/kde4/kdm/Xreset→/etc/X11/Xreset→/etc/X11/Xreset.d
と呼ばれているのが分かったので/etc/X11/Xreset.dにスクリプトを置けばOKみたい
あと環境変数$USERでログアウト対象のユーザー名を取得できるらしい
参考リンク
http://superuser.com/questions/65460/create-a-logoff-script-task-for-linux
http://haraita9283.blog98.fc2.com/blog-entry-406.html </description>
    </item>
    
    <item>
      <title>インプットメソッドibusを試す</title>
      <link>https://yaasita.github.io/2011/05/10/4087/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4087/</guid>
      <description> aptで以下をインストール
ibus
ibus-anthy
ibus-gtk
ibus-qt4
kasumi
im-switch

インストールしたら
im-switch -s ibusで切り替え
ibus-setupでセットアップ
dwmだとツールバーが無いので以下のように設定

参考リンク
http://glandium.org/blog/?p=989 </description>
    </item>
    
    <item>
      <title>シャドウパスワードの有効化、無効化の切り替えコマンド</title>
      <link>https://yaasita.github.io/2011/05/10/4026/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4026/</guid>
      <description> pwconv, pwunconv, grpconv, grpunconv
パスワード・グループの shadow 化と、通常ファイルへの逆変換 </description>
    </item>
    
    <item>
      <title>fork爆弾を試してみる</title>
      <link>https://yaasita.github.io/2011/05/08/4129/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/08/4129/</guid>
      <description> sleepだけなら大丈夫かな？と思って以下のスクリプトを実行してみた
→結果すぐに応答なしになってkillallも効かない状態に＼(^o^)／
電源を切るしかなくなった
#!/bin/bash
while :; do
$0 &amp;amp;
sleep 10m
done &amp;amp;

詳しくはWikipediaで </description>
    </item>
    
    <item>
      <title>Linuxでランダムに壁紙を変更するスクリプト書いた</title>
      <link>https://yaasita.github.io/2011/05/08/4173/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/08/4173/</guid>
      <description> いろいろソフトとかあるみたいだけどスクリプトでやってみる
#!/usr/bin/perl
use strict;
use warnings;
##################################
# ランダムに壁紙を変更するスクリプト
##################################
my $WALLPAPER_DIR=shift;
##################################
chdir $WALLPAPER_DIR or die $!;
my @pic_lst=(,);
my $random_num=int rand(scalar @pic_lst);
system &#34;hsetroot -full $pic_lst[$random_num]&#34; and die $!;
このスクリプトをrandom_wallpaper.plとして保存した
.xsessionrcに書いておけばOK
while true
do
/usr/local/bin/random_wallpaper.pl /jitaku/local/pic/Linux_wallpaper/ || exit
sleep 30m
done &amp;amp;

参考リンク
ペンギンの杜 〜 Linux ソフト集 〜アミューズメント/壁紙
美女LinuxをUbuntu(GNOME)の壁紙にする
参考記事
xsessionrcのプロセス制御 </description>
    </item>
    
    <item>
      <title>xsessionrcのプロセス制御</title>
      <link>https://yaasita.github.io/2011/05/08/4151/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/08/4151/</guid>
      <description>前回、前々回でwhileでループさせた後xsessionで壁紙やらステータスバーを変更してたけど、それだといろいろと不具合があることが分かったので修正する。
修正後のxsessionrcは以下のようになった
#!/bin/bash
#xsetroot -solid DarkSlateBlue
#hsetroot -full /usr/share/lxde/wallpapers/garasunodice.jpg
D_NUM=`echo $DISPLAY | cut -f 2 -d:`
PIDFILE=~/.xsession_${D_NUM}.pid
for psnum in $(cat $PIDFILE)
do
cmd=`ps -p $psnum | tail -1 `
if echo $cmd | grep Xsession  /dev/null ; then
kill $psnum
fi
done
rm -f $PIDFILE
while true
do
DATE=`date +&#34;%Y/%m/%d %H:%M&#34;`
LOAD=`loadav.pl`
xsetroot -name &#34;Load Average:$LOAD $DATE&#34; || exit
sleep 30s || exit
done &amp;amp;
echo $!  $PIDFILE</description>
    </item>
    
    <item>
      <title>bashrcに書いておくと便利な行</title>
      <link>https://yaasita.github.io/2011/05/07/4194/</link>
      <pubDate>Sat, 07 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/07/4194/</guid>
      <description> #キーバインド
set -o #キーバインドをviに
stty stop undef #端末ロックをやめる
bind C-f:menu-complete #Ctrl-fでメニューコンプリート
bind C-l:clear-screen #Ctrl-lで端末のクリア
#エイリアス
alias bc=&#39;bc -q&#39; #bc の最初のメッセージがうるさいので
alias mv=&#39;mv -i&#39; #お好みでrootのbashrcには必要？
alias rm=&#39;rm -i&#39; #お好みでrootのbashrcには必要？

注意点はset -o viの前にbindでキーバインドを設定しても無効になってしまうこと
必ずset -o viした後にbindを書くこと
過去記事
bashでCtrl-S押すと端末がロックされる
bashで端末ロック機能を解除する bashでTAB補完する（menu-complete） </description>
    </item>
    
    <item>
      <title>Xmingを試してみる</title>
      <link>https://yaasita.github.io/2011/05/01/4235/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/01/4235/</guid>
      <description> Xmingはwindowsで使えるXサーバー
ここからダウンロードしてインストール
とりあえず使ってみるにはWindows側で以下のコマンドでXサーバーを起動
Xming.exe -ac -multiwindow -clipboard

Linux側で以下のコマンドを実行（Windows側のIPアドレスが192.168.0.3だった場合）
export DISPLAY=&#34;192.168.0.6:0&#34;

あとはXのアプリを起動すればWindows側に現れるはず
本当はこの方法だとセキュリティ的にまずいのでX11転送とかを使う方がいいかも
参考リンク
公式サイト </description>
    </item>
    
    <item>
      <title>タスク切り替えソフトを選ぶ</title>
      <link>https://yaasita.github.io/2011/05/01/4214/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/01/4214/</guid>
      <description> 使いやすい＋早いと思ったのは
ufsかなぁ
ctclもなかなか良い感じだけど
切替の早さはufsかなぁ・・・
参考リンク
http://d.hatena.ne.jp/ampll/20090602/1243924925 </description>
    </item>
    
    <item>
      <title>ddclientでキャッシュが邪魔して更新されない件</title>
      <link>https://yaasita.github.io/2011/04/30/4256/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/30/4256/</guid>
      <description> どうやらキャッシュを参照して前回と同じIPなら更新しない仕様みたい
更新日が30日以上の間隔が空いてるなら更新するみたいだけど、待ってられないので
こんなスクリプトをcronに登録しておいた
#!/bin/bash
CACHE_FILE=&#34;/var/cache/ddclient/ddclient.cache&#34;
NOW_IP=`host hogehoge.net | cut -f 4 -d&#39; &#39;`
echo &#34;now ip is $NOW_IP&#34;
CACHE_IP=`cat $CACHE_FILE | tail -1 | cut -f 5 -d, | cut -f 2 -d= `
echo &#34;cache ip is $CACHE_IP&#34;
if [ &#34;$NOW_IP&#34; = &#34;$CACHE_IP&#34; ] ; then
echo &#34;IP check OK&#34;
else
echo &#34;IP check NG&#34;
rm $CACHE_FILE
fi

過去記事
ddclientでワーニングが出る問題
ddclientでDynDNSのIPをアップデートしてみようか </description>
    </item>
    
    <item>
      <title>nmapでサーバーの生存確認をする</title>
      <link>https://yaasita.github.io/2011/04/30/4277/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/30/4277/</guid>
      <description>自分の家のサーバー構成は前回話した感じになっている
（DNSを切り替えることでつながる先をスイッチしている）
自宅のサーバーが落ちるときにDynDNSを更新してレンタルサーバーに向くようにしているけど、これが結構失敗したりするので、レンタルサーバー側でも定期的に監視するようにした。
監視は以下の手順で行う
1.まずDNSで名前を引いて自分（レンタルサーバー側）に向いているか自宅に向いているか調べる
→自分に向いていたら問題ないので処理終了
→自宅に向いていたら2へ
2.自宅のサーバーのメールポートにコネクションが張れるか確認
→張れたら問題なく稼動しているので処理終了
→駄目なら自宅鯖が落ちてると判断しDynDNSを更新してDNSを自分に向かせる
以上の処理をcronに登録して1時間置きにやってみる
nmapでスキャンするときには-PNと-sTをつけるのがポイント
-PN →　自宅のルーターはpingに反応しないのでホストの生存確認は不要
-sT → ルーターからNAPT環境だとステルススキャン(-sS)はうまくいかなかった
nmap hogehoge.net -p 25 -v -PN -sT

あとは適当にスクリプトを組む
#!/usr/bin/perl
use strict;
use warnings;
#################################
# LOG
my $LOG=&#34;/var/log/hogelog&#34;;
#################################
my @result = `nmap hogehoge.net -p 25 -PN -sT`;
if ( join(&#34;&#34;,@result) =~/25\/tcp\s+open\s+smtp/ ){
system &#34;logger &#39;JITAKU MAIL IS LIVE!!&#39;&#34; and die $!;
logadd (@result);
}
else {
system &#34;logger &#39;JITAKU MAIL IS DEAD!</description>
    </item>
    
    <item>
      <title>DTIのVPSにPukiWikiをインストール</title>
      <link>https://yaasita.github.io/2011/04/25/4299/</link>
      <pubDate>Mon, 25 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/25/4299/</guid>
      <description>必要なのはphp5オンリーなので楽  ダウンロード 公式サイトからダウンロード 今回は「pukiwiki-1.4.7_notb_utf8.tar.gz」を選択 こちらは以下のコマンドで展開すればパーミッションの設定を省けるので良い tar xvzpf pukiwiki-1.4.7_notb_utf8.tar.gz インストール 基本的には ここ に書いてある通りやればOK md5値は以下のようにして算出できる echo -n &#39;pass&#39; | md5sum  この値を設定すればOK 上記例だとこんな感じ $adminpass = &#39;{x-php-md5}1a1dc91c907325c69271ddf0c944bc72&#39; 個別設定 その他個人の設定はお好みで
アップロードサイズの変更 vi plugin/attach.inc.php ここを参考にして アップロードサイズ上限を16MBに変更した(19行目付近) 
// Max file size for upload on script of PukiWikiX_FILESIZE
define(&#39;PLUGIN_ATTACH_MAX_FILESIZE&#39;, (16 * 1024 * 1024)); // default: 1MB
 ※ただしphp.iniの制限に引っかかっていたら意味ないので見直すこと→詳しくはこちら
はてなマークを消す方法
以下のようにnowikinameを1に変更する 
$nowikiname = 1;
 その他
ユーザ制御・アクセス制御
QAユーザー認証
セキュリティQA</description>
    </item>
    
    <item>
      <title>よく使うCGIスクリプト</title>
      <link>https://yaasita.github.io/2011/04/18/4319/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/18/4319/</guid>
      <description> 無料で使えてとても助かってる
フォトアルバム pipipiga
UTF-8用のファイルとか用意していてくれる
http://popilol.lolipop.jp/NiconicoPHP/
Fuploader
FLASHで出来てる　アップローダ
100Mまでアップロード可能
http://www.yumemaboroshi.net/cgi4905/
UTF-8+LFへの変換は
nkf -w8 -Lu ファイル名でOK
wikiはPukiWikiが設置が簡単で良いと思う </description>
    </item>
    
    <item>
      <title>lighttpdでアクセス制御</title>
      <link>https://yaasita.github.io/2011/04/17/4341/</link>
      <pubDate>Sun, 17 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/17/4341/</guid>
      <description> こんな感じで指定すると
/upload配下以外はユーザー認証が必要
 $HTTP[&#34;url&#34;] !~ &#34;^/upload&#34; {
auth.require = (
&#34;&#34; =
(
&#34;method&#34; = &#34;basic&#34;,
&#34;realm&#34; = &#34;wolzone&#34;,
&#34;require&#34; = &#34;valid-user&#34;
)
)
}

参考リンク
lighttpdの記述方法
lighttpdのmod_auth使用方法 </description>
    </item>
    
    <item>
      <title>ターミナルが256色をサポートしているかテストするには？</title>
      <link>https://yaasita.github.io/2011/04/12/4362/</link>
      <pubDate>Tue, 12 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/12/4362/</guid>
      <description> http://vimwiki.net/?tips%2F70
↑の256colors2.plっていうスクリプトを動かせばよいらしい </description>
    </item>
    
    <item>
      <title>bug.nを試してみた</title>
      <link>https://yaasita.github.io/2011/04/11/4383/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4383/</guid>
      <description> 前回Dwmにはまったので
Windowsでも出来ないか探してみたらあった
bug.nというらしい
使い方はLinuxの時とほぼ同じ
※（Winは左Windowsキー）
アクティブウィンドウの切り替え
Win+↑
Win+↓

ウィンドウのリサイズ
Win+←
Win+→

ウィンドウのクローズ
Win+c

分割の縦横切り替え
Win+Ctrl+Tab

タイトルバーの表示非表示
Win+Shift+d

ウィンドウの入れ替え
Win+Shift+Enter

マスターウィンドウの左右切り替え
Win+Ctrl+Enter

よく分からないけどレイアウトの変更
Win+Ctrl+←
Win+Ctrl+→

タスクバーの表示非表示
Win+Space

bug.nの終了
Win+Shift+q

参考リンク
http://sourceforge.jp/projects/tilingwm/wiki/FrontPage </description>
    </item>
    
    <item>
      <title>Debianのデスクトップ環境をDwmに変更してみた</title>
      <link>https://yaasita.github.io/2011/04/11/4446/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4446/</guid>
      <description> 軽量と言われるLXDEだけどやはり10年前のノートPCだと重いと感じてきたので変更する
変更するのはウィンドウマネージャのDwm
インストールはaptとかでさくっとできるはず
デフォルトのMod1キーはAltキーなのでいつもAltキーが必要です
起動して左上に表示されている１～９の数字は仮想デスクトップでここではタグと呼びます
基本操作は以下のとおり
uxtermの起動
Alt+Shift+Return
ウィンドウ間のフォーカスを切り替え
Alt+j
Alt+k

ウィンドウのサイズ変更
Alt+h
Alt+l

フォーカスされているウィンドウを閉じる
Alt+Shift+c
6番目のタグへ移動
Alt+6
全てのタグを選択(全ウィンドウが表示されます)
Alt+0
現在フォーカスされているウィンドウを4番目のタグへ移動
Alt+Shift+4
ウィンドウの入れ替え
Alt+Return
前回選択してたタグへ移動
Alt+Tab
上のバーの表示／非表示切り替え
Alt+b
ウィンドウをタイル表示（重ならないように配置）
Alt+t
フローティングレイアウト表示へ（重なって表示）
Alt+f※Alt押しながらマウスで移動できます
常に最大化表示（ひとつのウィンドウが最大化表示）
Alt+m
Dwmを終了
Alt+Shift+q
その他詳しいことは
man dwm
ステータスバーを変えるにはこちら
参考リンク
http://sourceforge.jp/projects/tilingwm/wiki/FrontPage </description>
    </item>
    
    <item>
      <title>Dwmのステータスバーと壁紙を変更してみる</title>
      <link>https://yaasita.github.io/2011/04/11/4425/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4425/</guid>
      <description> デフォルトのステータスバーはあまりにそっけないので変更してみた
下記参考リンクを参照すれば分かると思うけど
Dwmの上のバーの右上はxsetroot -nameで示される名前を表示しているので
~/.xsessionrcにこんな感じのスクリプトを書いてやる
※.xsessionrcはXのセッション開始時に読み込まれる詳しくは/etc/X11/Xsession参照
~/.xsessionrc
#!/bin/bash
xsetroot -solid DarkSlateBlue
hsetroot -full /usr/share/lxde/wallpapers/block.jpg
while true
do
DATE=`date +&#34;%Y/%m/%d %H:%M&#34;`
xsetroot -name &#34;$DATE&#34; || exit
sleep 30s
done &amp;amp;

xsetroot は背景色の設定（ここでは下の行で壁紙を設定してるから意味無いけど・・・）
hsetroot が壁紙の設定hsetroot をインストールする必要はある
参考リンク
ステータスバーの変更について
参考記事
xsessionrcのプロセス制御 </description>
    </item>
    
    <item>
      <title>Linuxで使える軽い画像ビューワ</title>
      <link>https://yaasita.github.io/2011/04/11/4404/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4404/</guid>
      <description> 使いやすくて軽い画像ビューワー
xzgvというらしい
画像フォルダで
xzgv *
で起動して
shift-z　ファイル一覧表示
z　Windowsにフィット
Space　次の画像へ
b　前の画像へ
矢印キー　画像を任意の方向へスクロール
s　画像をズームイン
S　画像をズームアウト
mirage基本はマウスで出来る
F2で画像をリネームできるのがポイント </description>
    </item>
    
    <item>
      <title>風来のシレン改造コード</title>
      <link>https://yaasita.github.io/2011/04/04/4467/</link>
      <pubDate>Mon, 04 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/04/4467/</guid>
      <description> チートコードhttp://homepage3.nifty.com/game-sfccode/furai_no_shiren.html </description>
    </item>
    
    <item>
      <title>コンソールの表示行を変更する</title>
      <link>https://yaasita.github.io/2011/04/03/4487/</link>
      <pubDate>Sun, 03 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/03/4487/</guid>
      <description> stty rows 56こんな感じで打てば
表示される行数を変更できる
ただ
どうやって起動時に設定するかが課題
参考リンク
sttyのほかの使い方
起動時に有効にする方法？ </description>
    </item>
    
    <item>
      <title>debian-volatileはsqueezeになってから無くなったらしい</title>
      <link>https://yaasita.github.io/2011/04/02/4507/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/02/4507/</guid>
      <description> こことかここに書いてあるけど
debian-volatileはsqueezeになってから無くなったらしい
 deb http://ftp.debian.org/debian squeeze-updates main
にすればいいみたい </description>
    </item>
    
    <item>
      <title>DebianにOperaをインストール</title>
      <link>https://yaasita.github.io/2011/04/02/4528/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/02/4528/</guid>
      <description> このとおりやれば出来た
/etc/apt/sources.listにリポジトリを追加
deb http://deb.opera.com/opera squeeze non-free

以下のコマンドを実行
aptitude update
wget -O - http://deb.opera.com/archive.key | apt-key add -
aptitude update
aptitude install opera

apt-keyについては
以下を参照
基本的にはapt-key updateでいいはず
http://debian.fam.cx/index.php?AptGet#secapt </description>
    </item>
    
    <item>
      <title>sshのポートフォワード（ポート転送）を禁止する</title>
      <link>https://yaasita.github.io/2011/03/27/4591/</link>
      <pubDate>Sun, 27 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/27/4591/</guid>
      <description> AllowTcpForwardingをnoに設定すればOKらしい
参考リンク
http://kamae-norihiro.blogspot.com/2010/11/ssh.html </description>
    </item>
    
    <item>
      <title>suidperlを使ってSUIDがセットされたperlスクリプトを動かす</title>
      <link>https://yaasita.github.io/2011/03/27/4571/</link>
      <pubDate>Sun, 27 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/27/4571/</guid>
      <description> Debianにて
perl-suidをインストール
シェバンを以下にして
#!/usr/bin/suidperl

sbinを動かすなら
PATHの設定も忘れずに・・・
$ENV{PATH}=&#34;/usr/sbin/&#34;;

というかsuidperlをインストールするくらいならsudoとか使った方がいいのかなぁ・・・
参考リンク
http://d.hatena.ne.jp/hogem/20080227/1204125414 </description>
    </item>
    
    <item>
      <title>一定時間だけログイン可能なユーザーを作った</title>
      <link>https://yaasita.github.io/2011/03/27/4549/</link>
      <pubDate>Sun, 27 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/27/4549/</guid>
      <description> sshのログインは基本的には鍵認証にしているのだが、
出先などでどうしてもログインしたい場合鍵が無くて困ることがあるので、一定時間だけパスワード認証できるユーザーを作った。
仕組みは以下のとおり

1.SUIDのセットされたperlスクリプトで実行するコマンドはusermod --lockコマンド　→suidperlについて
2.アンロックされる
3.sshのパスワード認証によってログインする　※1
4.cronにusermod --unlockを仕込んでおく
※1　特定のユーザーのみパスワード認証を許可する
hogeuserが今回の対象とする場合
Match User hogeuser
PasswordAuthentication yes
AllowTcpForwarding no


参考リンク
http://d.hatena.ne.jp/isseium/20100923/1285225757 </description>
    </item>
    
    <item>
      <title>rsyncのWindows版 cwRsyncを試す</title>
      <link>https://yaasita.github.io/2011/03/22/4612/</link>
      <pubDate>Tue, 22 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/22/4612/</guid>
      <description> 公式サイトからリンクを辿ってcwRsync_4.0.4_Installer.zip をダウンロード＆インストール今回は最小構成でインストール
Secure Channel Wrapperは入れなかった
PATHに&#34;C:\Program Files\cwRsync\bin&#34;を追加
あとはrsyncコマンドがつかえるので使用する今回はネットワークドライブからローカルへ同期してみた
例）Nドライブ→Cドライブのtestフォルダを同期
rsync -av --delete /cygdrive/n/backup/Firefox/ /cygdrive/c/test/
※心配なら-nオプションを付けて挙動を確認すると良いかも
参考リンク
http://satospo.sakura.ne.jp/blog_archives/tech/tool/cwrsync.html </description>
    </item>
    
    <item>
      <title>ブログランキングサイトまとめ</title>
      <link>https://yaasita.github.io/2011/03/20/4633/</link>
      <pubDate>Sun, 20 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/20/4633/</guid>
      <description> ・TopHatenar
国内のサイトで比較できるので分かりやすい
グラフとかも出て自分の順位が把握しやすい
登録までに1日かかる
このブログの結果
・BlogChart
レーダーチャートで表示してくれる
分かりやすいLv表示
このブログの結果
・ウェブク
ドメインの価値を表示してくれる
表示単位はドメイン
このブログの結果
・ブログ戦闘力チェッカー
ブログを戦闘力で例えてくれる
ドラゴンボールが好きな人は分かりやすい？
TopHatenarのデータを使っているのでTopHatenarへの登録が必要
このブログの結果
過去の記事
あなたのドメインの価値を教えてくれるサイト 
BlogChartってサイトでこのBlogのレベルを測定してみる  </description>
    </item>
    
    <item>
      <title>Debian squeezeにしたらコンソールの解像度が変わった</title>
      <link>https://yaasita.github.io/2011/03/14/4654/</link>
      <pubDate>Mon, 14 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/14/4654/</guid>
      <description> 事象は/etc/default/grubのGRUB_GFXMODEを変更しても
GRUB2の選択画面はその解像度になるがブート後のコンソール画面が狂ってしまうというもの
こんな単語でググったらいろいろ見つかった
こちらの情報を参考に設定してみた
1./etc/default/grubを編集
GRUB_GFXMODE=1024x768
というように設定
2./etc/grub.d/00_headerを編集
39行目あたりにある
if [ &#34;x${GRUB_GFXMODE}&#34; = &#34;x&#34; ] ; then GRUB_GFXMODE=640x480 ; fi
の下に以下の行を追記
GRUB_GFXPAYLOAD=&#34;${GRUB_GFXMODE}&#34;
127行目あたりの
set gfxmode=${GRUB_GFXMODE}
の下に
set gfxpayload=${GRUB_GFXPAYLOAD}
を追記
3.update-grub
update-grubする
その他
なんでもgfxtermとか言うらしい・・・詳しいことはよく分からない
参考リンク
https://forums.ubuntulinux.jp/viewtopic.php?pid=44077
http://linux.derkeiler.com/Mailing-Lists/Debian/2010-01/msg01695.html </description>
    </item>
    
    <item>
      <title>squeezeにしたら日本語manがおかしい</title>
      <link>https://yaasita.github.io/2011/03/13/4674/</link>
      <pubDate>Sun, 13 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/13/4674/</guid>
      <description> こちらを参照
http://debian.fam.cx/index.php?squeeze%2Finstall#z903c402 </description>
    </item>
    
    <item>
      <title>bashでTAB補完する（menu-complete）</title>
      <link>https://yaasita.github.io/2011/03/07/4694/</link>
      <pubDate>Mon, 07 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/07/4694/</guid>
      <description> ↓で出来るらしいスゴイ
今までzshじゃなきゃできないと思ってた
bind TAB:menu-complete

参考リンク
http://debian.fam.cx/index.php?Japanese#ped4bcbd </description>
    </item>
    
    <item>
      <title>トルネコの大冒険（SFC）のチートコード</title>
      <link>https://yaasita.github.io/2011/02/27/4715/</link>
      <pubDate>Sun, 27 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/27/4715/</guid>
      <description> 
改造コードは以下
満腹度固定
7E0DE573
HP減らない
7E0BB7FF
7E0BB800
HPの最大値MAX
7E0BCBFF
7E0BCC00
力の最大値MAX
7E0DDF63
力最大
7E0DE063
 </description>
    </item>
    
    <item>
      <title>cronの各処理の実行時間を測定してみた</title>
      <link>https://yaasita.github.io/2011/02/25/4736/</link>
      <pubDate>Fri, 25 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/25/4736/</guid>
      <description> なんかcron.dailyの実行がやけに重いなーとおもったので各スクリプトのどの処理が重いか調べてみた
1.timeプログラムのインストール
まずtimeプログラムが必要ですbashからなら普通に打てるのですがbinに入っているものじゃないとエラーになったのでインストール
debianならtimeパッケージをインストールすれば/usr/bin/timeが出来ました
2.実行時間測定スクリプトの作成
次に/tmpに以下のスクリプトを置き
time.pl
#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
use Time::HiRes;
my $runpg=shift;
say &#34;### $runpg START ### &#34;,Time::HiRes::time;
system &#34;/usr/bin/time $runpg&#34; and die $!;
say &#34;### $runpg END ### &#34;,Time::HiRes::time;

3.anacrontabの編集
/etc/anacrontabを編集（/etc/crontabの人はそちらを)
# 1 5 cron.daily nice run-parts -v /etc/cron.daily
1 5 cron.daily nice run-parts --list /etc/cron.daily | xargs -i /tmp/time.pl {}
ポイントはrun-partsを--listにして実行ファイル一覧を出力させてそれを引数として実行時間を計るプログラムに渡す </description>
    </item>
    
    <item>
      <title>ミュウツーはなかまたちとﾎﾟｹﾓﾝﾏｽﾀｰをめざすようだシリーズまとめ</title>
      <link>https://yaasita.github.io/2011/02/13/4757/</link>
      <pubDate>Sun, 13 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/13/4757/</guid>
      <description> とりあえず一覧にしてみた
その09その10その11その12その13その14その15その28その29その30その31その32その33その34その35
作者様ブログ
二尺足ラズ
(現時点で最新は35みたい) </description>
    </item>
    
    <item>
      <title>tinyhoneypotを使ってみる</title>
      <link>https://yaasita.github.io/2011/02/06/4778/</link>
      <pubDate>Sun, 06 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/06/4778/</guid>
      <description> aptかなんかでインストールコマンドは→thpot
thpotはxinetdかinetdを通してでも起動できます
接続とセッションを通しての命令は全てログに記録されます
以下のどれかの引数を与えてサービスを起動します
shell, ftp, http, mssql, smtp, pop3 ,ssh
ドキュメントは以下
/usr/share/doc/tinyhoneypot </description>
    </item>
    
    <item>
      <title>perl日本語ドキュメント</title>
      <link>https://yaasita.github.io/2011/01/30/4801/</link>
      <pubDate>Sun, 30 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/30/4801/</guid>
      <description> http://pjp.64p.org/ </description>
    </item>
    
    <item>
      <title>ctagsを使ってみる</title>
      <link>https://yaasita.github.io/2011/01/22/4822/</link>
      <pubDate>Sat, 22 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/22/4822/</guid>
      <description> タグファイル(tags)を作ればCtrl+]で飛べる
使い方は
ctags --language-force=perl hoge.pl
こうすれば同じ場所にtagsファイルが作られる
基本的には拡張子で判断してくれるらしいから
--language-forceは不要かも
対応言語は以下のコマンドで出力できる
ctags --list-languages
ちなみにcscopeというC言語専用だけど高機能な解析ツールもあるらしい・・・
参考リンク
http://hp.vector.co.jp/authors/VA025040/ctags/ctags_j.html </description>
    </item>
    
    <item>
      <title>Linuxで使える（割と）高機能なエディタ</title>
      <link>https://yaasita.github.io/2011/01/22/4843/</link>
      <pubDate>Sat, 22 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/22/4843/</guid>
      <description> 普段はgvimを使ってるけど長い行を開いたりすると重いので
Leafpad以上でgvim以下のエディタを探してたら
Editraというエディタを発見
スクリーンショットはこちら
特徴は
・マルチプラットフォーム（Windows,Linux,MacOS)
・60以上のプログラミング言語対応のシンタックスハイライト
・タブで使える
・日本語化されている
・軽い
・viモード搭載（環境設定→ドキュメント→コードタブ→「viエミュレーションを有効にする」にチェック </description>
    </item>
    
    <item>
      <title>radikoを聞くperlスクリプト書いた</title>
      <link>https://yaasita.github.io/2011/01/17/4864/</link>
      <pubDate>Mon, 17 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/17/4864/</guid>
      <description> ポイントはforkして指定した時間で落とすこと
#!/usr/bin/perl
################################################
# radiko を聞くスクリプト
# 引数で制御する
#
# ヘルプを表示するにはh
# radiko.pl -h
################################################
use strict;
use warnings;
use Getopt::Std;
my %opt;
getopts(&#34;hc:f:t:&#34;,\%opt);
if (exists $opt{h}){
print </description>
    </item>
    
    <item>
      <title>iptablesまとめ</title>
      <link>https://yaasita.github.io/2011/01/16/4905/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/16/4905/</guid>
      <description> よく忘れるのでメモ
ルールの表示例）natテーブルのルールを表示
因みにfilterテーブルなら省略可
iptables -t nat -L
ルールの追加例）80番ポートへのアクセスを遮断
iptables -A OUTPUT -p tcp --dport 80 -j DROP
ルールの削除iptables -D INPUT 3
パケット転送80番ポートのアドレスを192.168.0.4:4000へ転送
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to 192.168.0.4:4000 
参考リンク
iptablesで設定したルールを再起動後も反映したい
iptablesによるフィルタ設定 </description>
    </item>
    
    <item>
      <title>デビルメイクライ3攻略リンク集</title>
      <link>https://yaasita.github.io/2011/01/16/4885/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/16/4885/</guid>
      <description> 丁寧な攻略チャートがある
http://dmc-labo.secret.jp/DMC-Labo.html
武器アクション
スタイルアクション
http://www.geocities.jp/no0sloter/devil/index.html
MISSION 13のパズル解答
スペシャルエディションの裏技
タイトル画面でL1L2R1R2を押したまま十字キー上と左を押しながら左スティックを右下に入れる
バジールのコシュチューム一覧
・普通のバジール
・上半身軽装のバジール
・魔人化無制限のバジール（幻影剣は減る）
・ネロアンジェロに返信できるバジール
・ネロアンジェロ無制限のバジール（幻影剣も無制限） </description>
    </item>
    
    <item>
      <title>任意のIPを作って送れるソフト</title>
      <link>https://yaasita.github.io/2011/01/16/4926/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/16/4926/</guid>
      <description> sendip
debianならリポジトリにある
例）memo.txtの内容をtcpで送る
sendip -d memo.txt -p ipv4 -p tcp 192.168.0.3
参考リンク
http://masy.families.jp/diary/?200010c </description>
    </item>
    
    <item>
      <title>rtmpdump試してみた</title>
      <link>https://yaasita.github.io/2011/01/15/4947/</link>
      <pubDate>Sat, 15 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/15/4947/</guid>
      <description>NHKオンデマンドに挑戦
1.URLを解析
fms0000.nod.ipcasting.jp

2.hostsを変更
今回は192.168.0.4にrtmpsuckを走らせておく
192.168.0.4 fms0000.nod.ipcasting.jp

3.でダウンロード
出来るはずだったが、なんか出来なかったOTZ
因みにこんな方法もあるLinuxならiptablesで転送する
hogeuserをすべてlocalhostへ飛ばす例
iptables -t nat -A OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner hogeuser -j REDIRECT

iptables -t nat -n -L で確認
iptables -t nat -D OUTPUT 1　で削除
参考リンク
http://h.hatena.ne.jp/syouhi/9259273302189983422
気を取り直してradiko録音これはrtmpsuckで一発OK
rtmpdumpならこうかな
#!/bin/bash
rtmpdump -v -e -s &#39;http://radiko.jp/player/swf/player_2.0.1.00.swf&#39; \
-r &#39;rtmpe://radiko.smartstream.ne.jp/FMJ/_defInst_&#39; \
--playpath &#39;simul-stream?ucid=1dbab2acb98174787146465a40ba9eba&#39; \
-p &#39;http://radiko.jp/player/player.html&#39; \
-f &#39;WIN 10,1,102,64&#39; \
-o FMJ</description>
    </item>
    
    <item>
      <title>Bloogerのドラフト版ダッシュボード</title>
      <link>https://yaasita.github.io/2011/01/01/4991/</link>
      <pubDate>Sat, 01 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/01/4991/</guid>
      <description> http://draft.blogger.com/home </description>
    </item>
    
    <item>
      <title>tmuxを試してみた</title>
      <link>https://yaasita.github.io/2011/01/01/4970/</link>
      <pubDate>Sat, 01 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/01/4970/</guid>
      <description>tmuxの考え方セッション・・・複数のウィンドウを持つ固まり
ウィンドウ・・・複数のペインを持つ1画面
ペイン・・・いわゆる操作できる端末
プレフィックスキー全てプレフィックスキー(デフォルトはC-b)を押した後に入力する
※ $で始まるものはコマンド操作
それ以外はプレフィックスキー後に入力する
セッション操作
hogesessionというセッション名で作成
$ tmux new -s hogesession
セッション選択
:choose-session
セッション一覧を表示
$ tmux ls
hogeセッションにアタッチ
$ tmux a -t hoge
ウィンドウ操作windowのリネーム ,※:set-window-option automatic-rename onにするとデフォルトになる
新しいwindowの作成
c
windowの数字選択指定
0～9
windowの数字を変更
.
ウィンドウを8番へ移動
move-window -t 8
ウィンドウ選択
:choose-window
ウィンドウの入れ替え(1と入れ替える)
swap-window -t 1
ペインpane操作
ペインの入れ替え
{}
pane番号表示
q
レイアウト変更
SPACE
上下左右サイズ変更
+-&amp;amp;lt;&amp;amp;gt;
ペインの入力同期 on/off
:set-window-option synchronize-panes on:set-window-option synchronize-panes off
ペインを:1ウィンドウから一枚もらってくる
:join-pane -s :1
ペインを:1ウィンドウに移す
:join-pane -dt :1※:1.</description>
    </item>
    
    <item>
      <title>Bloggerのテンプレートを変更してみる</title>
      <link>https://yaasita.github.io/2010/12/26/5011/</link>
      <pubDate>Sun, 26 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/26/5011/</guid>
      <description>テンプレートデザイナー等の新機能が使えるらしいので変えます</description>
    </item>
    
    <item>
      <title>rsyncのinclude,excludeで注意すること</title>
      <link>https://yaasita.github.io/2010/12/26/5031/</link>
      <pubDate>Sun, 26 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/26/5031/</guid>
      <description>とりあえず3点
1.--excludeする前に--includeしておかないと意味が無い
2.あるフォルダ配下のファイルを対象にしたかった場合はフォルダ自体もincludeする
3.include,excludeは同期元ファイルからの相対パス
で例を使って説明します
以下の場合を想定
.
|-- dst
`-- src
|-- ABC
| |-- A
| |-- B
| `-- C
|-- a
|-- b
|-- c
|-- d
|-- e
`-- f

まずsrcフォルダからdstフォルダへ同期するとします
1の注意点から
↓のようにやっても何一つ同期されません。最初に全部弾いているので駄目
rsync -av --delete-excluded --exclude=&#34;*&#34; --include=&#34;a&#34; src/ dst/
下記のようにexcludeを後に置けばすればaだけ同期できます
rsync -av --delete-excluded --include=&#34;a&#34; --exclude=&#34;*&#34; src/ dst/

2の注意点について
ABCディレクトリ配下のみ同期したい場合
こうしてもうまくいきません(excludeで全部弾かれてしまいます)
rsync -av --delete-excluded --include=&#34;ABC/*&#34; --exclude=&#34;*&#34; src/ dst/
ABC配下のみ同期したい場合はまずABCをincludeします
↓のようにやればOK
rsync -av --delete-excluded --include=&#34;</description>
    </item>
    
    <item>
      <title>Frozen BubbleのFLASH版</title>
      <link>https://yaasita.github.io/2010/12/25/5052/</link>
      <pubDate>Sat, 25 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/25/5052/</guid>
      <description> Frozen BubbleのFLASH版があったのでメモ
http://www.gamefz.com/a.asp?id=2420 </description>
    </item>
    
    <item>
      <title>紙飛行機を飛ばすゲーム</title>
      <link>https://yaasita.github.io/2010/12/24/5072/</link>
      <pubDate>Fri, 24 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/24/5072/</guid>
      <description>紙飛行機を飛ばすゲーム
http://armorgames.com/play/7598/flight
←→　角度調節 SPACE ジェット噴射 R レインボースター  参考リンク
http://blog.livedoor.jp/lkrejg/archives/65520026.html</description>
    </item>
    
    <item>
      <title>multitailを調べてみる</title>
      <link>https://yaasita.github.io/2010/12/20/5092/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/20/5092/</guid>
      <description> multitail messages -I syslog.1
-I でファイルをひとつのウィンドウに混ぜて表示
multitail -l &#39;ping hoge&#39; -L &#39;ping foo&#39;
外部プログラムなら-Lで混ぜて表示
-cSオプションで組み込みのカラースキームを適用
表示している最中に
tでステータス表示
Tでログファイルを空にする
hでヘルプ
下記エラーが出たらウィンドウが小さいのが原因なので大きくすればOK
A problem occured at line 511 in function mynewwin (from file term.c):
Failed to create window with dimensions 54x9 at offset -27,-4 (terminal size: 76,24)
Binary build at Dec 10 2009 23:58:27

参考リンク
http://www.kichise.com/modules/pico/other/multitail.html
http://www.vanheusden.com/multitail/  </description>
    </item>
    
    <item>
      <title>teraterm &#43; screenだとマウスのスクロールが出来ない？</title>
      <link>https://yaasita.github.io/2010/12/20/5113/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/20/5113/</guid>
      <description> 解決策
Ctrlを押しながらマウスホイールをまわす TERATERM.INIのTranslateWheelToCursorをoffにする
参考リンク
http://d.hatena.ne.jp/orangeclover/20100406/1270564074 </description>
    </item>
    
    <item>
      <title>CUIでRSSを見てみる</title>
      <link>https://yaasita.github.io/2010/12/19/5135/</link>
      <pubDate>Sun, 19 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/19/5135/</guid>
      <description>下記参考リンクがすごい参考になったのでちょっとずつ試してみた
* Newsbeuter
適当にRSSへのURLを書いたテキストを用意(ex.url.txt)
url.txtは一行一URLにしておいた
newsbeuter -u url.txtで起動
RでリロードしてからENTERで適当に読める

インターフェイスはmuttに似ているなんかメールを読むようにRSSを読める既読未読とか分かるし、マーク、検索とか出来て便利前回読んだ時の状態を~/.newsbeuterに保存しているのでまた読み返すときも便利かもしれないsを押すと記事を保存できたりする
* Snownews 
squeezeにパッケージが無かったのでレビュー出来なかった・・・
lennyならある模様
* Canto (旧NRSS)
squeezeにはNRSSもcantoもあるけど公式サイト見るとCantoへ誘導されるのでこっちを使ってみる
何も考えずに下記のコマンドを打つと.cantoが出来る
canto.canto以下にconf.py.exampleが出来ているのでconf.pyへリネーム後
好きなURLへ変更すれば使える
jkで上下移動　SPACEで記事を読める

デフォルトでviキーバインドシンプルな外観gでブラウザに渡すことも出来たりするフィードを更新するときはcanto-fetchコマンドを使う
* rsstail
↓こんな感じで使ってる
rsstail -ldpcHvu http://blog.livedoor.jp/dqnplus/index.rdf-l でリンクを表示
-d　で説明
-p　で記事の日付
-c でコメント表示
-H でHTMLタグを除去
-v 冗長オプション
-u に続いてURLを与える
multitailでまとめるには
multitail -cS rsstail -l &#34;rsstail -lpcHvu http://aerial.deko8.jp/feed_ranking1d.xml&#34; -cS　rsstail -L &#34;rsstail -lpcHvu http://feeds.feedburner.com/hatena/b/hotentry&#34;
でいけると思ったけど文字化けして駄目だった
しょうがないから各RSSを追記リダイレクト(rsstail -u http://hoge.jp/rss.xml &amp;amp;gt;&amp;amp;gt; /tmp/rss.log)でそのファイルを眺めてる
* まとめ
newsbeuter →　メールを読むようにじっくり読みたい人向け</description>
    </item>
    
    <item>
      <title>bashrcが読み込まれない？</title>
      <link>https://yaasita.github.io/2010/12/11/5157/</link>
      <pubDate>Sat, 11 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/11/5157/</guid>
      <description> useraddでテスト用のアカウント作ったら読み込まれてたので
何でだろうとおもったら下のページに書いてあった
ようはprofileとかなければ呼ばれないらしい
http://blog.jojo.jp/?eid=1013034
呼ばれ方
~/.profile - ~/.bashrc </description>
    </item>
    
    <item>
      <title>CPUの温度とかを参照するには</title>
      <link>https://yaasita.github.io/2010/12/10/5198/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5198/</guid>
      <description> /proc/acpi/thermal_zone/THRM
とよい
temperatureとか・・・ </description>
    </item>
    
    <item>
      <title>CUIでmp3等を再生</title>
      <link>https://yaasita.github.io/2010/12/10/5218/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5218/</guid>
      <description> mplayer で出来た
→　←　でseek
0 9 / * で音量操作
p　で一時停止
m　でミュート
q　で抜ける
I　でタイトル表示
mplayer -playlist hoge.lst
hoge.lstにはプレイリストを記述（一行に1ファイル） </description>
    </item>
    
    <item>
      <title>screenでウィンドウ番号を入れ替える</title>
      <link>https://yaasita.github.io/2010/12/10/5177/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5177/</guid>
      <description> Ctrl-a押してから:number [n]
で出来るらしい
参考リンク
http://d.hatena.ne.jp/riskn/20070430/1177961903 </description>
    </item>
    
    <item>
      <title>DebianのsqueezeにしたらUUIDでfstabが設定されてた</title>
      <link>https://yaasita.github.io/2010/12/04/5239/</link>
      <pubDate>Sat, 04 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/04/5239/</guid>
      <description> 以下UUIDの調べ方
1./devを見る
ls -l /dev/disk/by-uuid
2.blkidコマンドで見る
blkidvol_idは無くなったらしい
参考リンク
http://ankyo.blog.so-net.ne.jp/2010-01-26 </description>
    </item>
    
    <item>
      <title>Debian squeezeで音が出ない</title>
      <link>https://yaasita.github.io/2010/11/28/5283/</link>
      <pubDate>Sun, 28 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/28/5283/</guid>
      <description> alsaconfが無くなったらしい
alsactl initでできるらしい
参考リンク
http://d.hatena.ne.jp/toromoti/20100610/1276167033 </description>
    </item>
    
    <item>
      <title>Debian squeezeにtightvncをインストール</title>
      <link>https://yaasita.github.io/2010/11/28/5259/</link>
      <pubDate>Sun, 28 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/28/5259/</guid>
      <description> tightvncserver(vncserver)で起動
(XvncだけでXだけを起動することも出来るが普通は使用しない vncserverがラッパーになっている)
Xvncのオプションも使えるので
こんな感じで起動
tightvncserver :5 -geometry 1280x1024 -depth 16 -rfbport 6000ディスプレイ番号5番で画面は1280x1024、色深度16ビット、ポート6000で待機
終了はこんな感じ
tightvncserver -kill :5
パスワードはvncpasswd等で作成しておく
あとはつなげればOK 
ちなみにvncpasswdでパスワードを作る際に短すぎるとエラーになる
家で使うので1文字のパスワードでも良いというのなら
こんな感じで-fオプションを使って標準入力から受け取るようにすればOK
-fオプションで起動→aを入力後にCtrl-Dで終了
user@squeeze:~/.vnc$ vncpasswd -f  passwd a user@squeeze:~/.vnc$  </description>
    </item>
    
    <item>
      <title>smbclientで共有リストを表示させる</title>
      <link>https://yaasita.github.io/2010/11/23/5303/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/23/5303/</guid>
      <description> 192.168.0.11がsambaサーバだったとすると
smbclient -L 192.168.0.11
 </description>
    </item>
    
    <item>
      <title>XenをDebian squeezeにインストールしてみる</title>
      <link>https://yaasita.github.io/2010/11/23/5324/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/23/5324/</guid>
      <description>はやっている様なのでXenを使ってみた
基本的にはDebian Wikiの通りやればOK
1.必要なパッケージのインストール
amd64じゃなかったら686とか自分のPCに合わせる
bridge-utils debootstrapも忘れずに
aptitude -P install xen-hypervisor-4.0-amd64 linux-image-xen-amd64 xen-tools
2.grubの起動順位、設定の変更？
なんか知らんがこうするといいらしい
mv -i /etc/grub.d/10_linux /etc/grub.d/50_linux
update-grub2
echo &#34;&#34;  /etc/default/grub
echo &#34;# Disable OS prober to prevent virtual machines on logical volumes from appearing in the boot menu.&#34;  /etc/default/grub
echo &#34;GRUB_DISABLE_OS_PROBER=true&#34;  /etc/default/grub
update-grub2

3./etc/default/xendomainsを編集して状態保存を無効化
XENDOMAINS_RESTORE=false
XENDOMAINS_SAVE=&#34;&#34;

4.ネットワークブリッジの設定
/etc/xen/xend-config.sxpを編集
以下の行のコメントアウトを解除
(network-script network-bridge)

5.VMイメージ作成する際のデフォルト値を設定
今回はLVM上にイメージファイルを作らないのでdir を指定
ここで設定しなくても全部コマンドラインでやるのも可→参考リンク
pygrubっていうのはdom0からカーネルを一々VM上に持っていかなくても済む
仕組み　→　参考リンク
dir = /home/xen</description>
    </item>
    
    <item>
      <title>FLASH版のCookie Shared Objectの削除</title>
      <link>https://yaasita.github.io/2010/11/13/5345/</link>
      <pubDate>Sat, 13 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/13/5345/</guid>
      <description> こういうのとかYOU ONLY LIVE ONCEShared Objectを削除すれば最初からできる
Cookieを削除してもなぜか前回の情報を保持してる？と思ったときは試すといいかもしれない
参考リンク
http://enchanting.cside.com/security/flashcookie.html </description>
    </item>
    
    <item>
      <title>ありえない画像検索</title>
      <link>https://yaasita.github.io/2010/11/04/5365/</link>
      <pubDate>Thu, 04 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/04/5365/</guid>
      <description> 文字通りありえない画像を検索します
元はyahooの画像検索らしい
http://eroy.8-bit.jp/gazou/
あとTumblrとかいうのもあった
参考リンク
http://blog.livedoor.jp/darkm/archives/51088800.html </description>
    </item>
    
    <item>
      <title>Webプロキシ（初心者にでも出来る串より）</title>
      <link>https://yaasita.github.io/2010/11/02/5385/</link>
      <pubDate>Tue, 02 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/02/5385/</guid>
      <description> こんなん見つけた
http://anond.pha11.info/archives/5931
仕組みは分からんが凄そうだ
http://openlega.appspot.com/
追記
&#34;Google App Engine　Web　プロキシ&#34;でググると一杯出てきた
参考リンク
http://googles.hp2.jp/archives/525.html
http://suh45.blog9.fc2.com/blog-entry-92.html </description>
    </item>
    
    <item>
      <title>rsshでscp/sftp専用のアカウントを作る</title>
      <link>https://yaasita.github.io/2010/10/31/5405/</link>
      <pubDate>Sun, 31 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/31/5405/</guid>
      <description> rsshってソフトで実現できるらしい
基本的にはyum install rsshでインストール→/etc/rssh.confを編集でOKらしい
で、sftp,scp専用には出来たけどchroot環境を構築するためのスクリプトmkchroot.shが見つからなかった
yum whatprovides */mkchroot.shとかやっても駄目
とりあえずchrootは今回はあきらめた
他にもこんな方法があるらしい→http://d.hatena.ne.jp/hidde/20091215/1260872041
参考リンク
http://d.hatena.ne.jp/h2onda/?of=5
http://www.sdri.co.jp/rssh/faq.html </description>
    </item>
    
    <item>
      <title>簡単にRAIDが組めるHDDボックス</title>
      <link>https://yaasita.github.io/2010/10/31/5426/</link>
      <pubDate>Sun, 31 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/31/5426/</guid>
      <description> Drobo
というらしい
http://journal.mycom.co.jp/articles/2010/09/13/drobo/index.html </description>
    </item>
    
    <item>
      <title>プライベートIPアドレスの覚え方</title>
      <link>https://yaasita.github.io/2010/10/24/5446/</link>
      <pubDate>Sun, 24 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/24/5446/</guid>
      <description> 2進数で考えると覚えやすい
まずはクラスの覚え方
クラスA(最初が0で始まるのがAクラス)
10進数： 0.0.0.0-127.255.255.255
2進数： 00000000.00000000.00000000.00000000-01111111.11111111.11111111.11111111 クラスB(最初が10ならクラスB)
10進数： 128.0.0.0-191.255.255.255
2進数： 10000000.00000000.00000000.00000000-10111111.11111111.11111111.11111111 
クラスC(最初が110ならクラスC)
10進数： 192.0.0.0-223.255.255.255
2進数： 11000000.00000000.00000000.00000000-11011111.11111111.11111111.11111111 
でプライベートIP
クラスA
10進数： 10.0.0.0-10.255.255.255/8
2進数： 00001010.00000000.00000000.00000000-00001010.11111111.11111111.11111111 subnet： 11111111.00000000.00000000.00000000-11111111.00000000.00000000.00000000 
クラスB
10進数： 172.16.0.0-172.31.255.255/12
2進数： 10101100.00010000.00000000.00000000-10101100.00011111.11111111.11111111 subnet： 11111111.11110000.00000000.00000000-11111111.11110000.00000000.00000000 
クラスC
10進数： 192.168.0.0-192.168.255.255/16
2進数： 11000000.10101000.00000000.00000000-11000000.10101000.11111111.11111111
subnet： 11111111.11111111.00000000.00000000-11111111.11111111.00000000.00000000
 </description>
    </item>
    
    <item>
      <title>自分のIPアドレスを表示してくれるサイト</title>
      <link>https://yaasita.github.io/2010/10/17/5467/</link>
      <pubDate>Sun, 17 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/17/5467/</guid>
      <description> http://ipcheck.ieserver.net/ </description>
    </item>
    
    <item>
      <title>perlでルーターからWAN側のIPアドレスを取得してみる</title>
      <link>https://yaasita.github.io/2010/10/16/5527/</link>
      <pubDate>Sat, 16 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/16/5527/</guid>
      <description> このときに対象にしたルーターはNP-BBRM
#!/usr/bin/perl
use strict;
use warnings;
use LWP::UserAgent;
my $ua = LWP::UserAgent-new;
$ua-timeout(10);
my $req = HTTP::Request-new(GET = &#39;http://192.168.0.1/Status.htm&#39;);
$req-authorization_basic(&#39;admin&#39;,&#39;hoge&#39;);
my $response = $ua-request($req);
if ($response-is_success){
my $data = $response-content;
$data=~s///g;
$data=~s/\&amp;amp;nbsp;//g;
$data=~/IP.+?(\d{1,3}[\.\d]+)\s/;
print $1,&#34;\n&#34;;
}
else {
die $response-status_line;
}
 </description>
    </item>
    
    <item>
      <title>perlで一時ファイルを使用する</title>
      <link>https://yaasita.github.io/2010/10/16/5487/</link>
      <pubDate>Sat, 16 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/16/5487/</guid>
      <description> #!/usr/bin/perl
use strict;
use warnings;
use File::Temp;
my $temp = File::Temp-new(DIR=&#39;/tmp&#39;,SUFFIX=&#39;.tmp&#39;);
print $temp-filename;
print $temp &#34;hoge&#34;;
コンストラクタにDIRを指定すると一時ファイルを作るディレクトリを指定
SUFFIXは一時ファイルの末尾につける文字
UNLINK=0を指定するとプロうグラムが終了しても一時ファイルを削除しない
$temp-filenameでファイルネームを取得できる
ちなみに$tempはすでにファイルハンドルなのですぐに書き込みができる
※ちなみにnewdirというディレクトリ版のコンストラクタもあるこちらはCLEANUPで自動削除の有無を切り替えできる
参考リンク
http://perldoc.perl.org/File/Temp.html
http://isoya.at.webry.info/200812/article_3.html
http://haginov.blog35.fc2.com/blog-entry-141.html
あとopen関数の第3引数にundefを指定してもできるみたい
http://d.hatena.ne.jp/dayflower/20061225/1167041087 </description>
    </item>
    
    <item>
      <title>perlで読み書き両用でパイプをオープンしたい</title>
      <link>https://yaasita.github.io/2010/10/16/5507/</link>
      <pubDate>Sat, 16 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/16/5507/</guid>
      <description> イメージ的にはこんな感じ
例えば$dataの中にS-JISコードのデータがあってnkfでutf-8に直してまた$dataに戻したいと思ったところ
open (FH,&#34;|nkf -w8&#34;);
print FH $data;
とすればnkfに渡るが出力がキャッチできない
open (FH,&#34;|nkf -w8|&#34;);
とかは出来ない
これについてperlfaq8に載っていた
How can I open a pipe both to and from a command?
の部分
よく分からないがIPC::Open2を使うと良いらしい </description>
    </item>
    
    <item>
      <title>apt-fileについて</title>
      <link>https://yaasita.github.io/2010/10/11/5611/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5611/</guid>
      <description> コマンドからパッケージ名を検索するときに便利なコマンド
以下manの（適当な）翻訳
書式
apt-file [ options ] [ action ] [ pattern ]
apt-fileコマンドはAPTパッケージシステム中のファイルを探すことが出来ます。
action には以下の物を使用します
update
パッケージの情報からファイルのリストを再同期します。
パッケージリストの情報はsources.listから持ってきます。
search
ファイルがどのパッケージに含まれるかを検索します。
patternを含むファイルを持っているすべてのパッケージが出力されます。
find
searchのエイリアスです。
list
patternにマッチしているパッケージの中身を出力します。
dpkg -L と違ってインストールされていなくても良いという違いはありますが、
挙動はdpkg -L に非常に近いです。
show
listのエイリアスです。
purge
キャッシュディレクトリにある全てのContents-.gzファイルを削除します。
あと
apt-file list pattern
でpatternパッケージに含まれているファイル一覧を出力することができますが、
patternを含む全パッケージが出力されてしまうため、厳密にこのパッケージの
中身が見たいという場合はdpkg -L の方が良いかもしれません。
あとオプションに-xを指定すると正規表現が使えます
例）
apt-file find nslookup | grep bin # nslookupコマンドを含むパッケージ名を検索
apt-file -x list ^bittorrent$ #bittorrentパッケージ中のファイルを出力
参考リンク
http://d.hatena.ne.jp/rx7/20080830/p1
http://d.hatena.ne.jp/kiririmode/20081119/p1
http://d.hatena.ne.jp/rubikitch/20080406/1207420372 </description>
    </item>
    
    <item>
      <title>ddclientでワーニングが出る問題</title>
      <link>https://yaasita.github.io/2010/10/11/5567/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5567/</guid>
      <description> ddclientで
WARNING: unable to determine IP addressというエラーが出ていた
use=web, if=eth0を
use=webに直したらOK
参考リンク
http://royalwin.blog.so-net.ne.jp/archive/c2300401272-1
http://ubuntuforums.org/showthread.php?t=635409 </description>
    </item>
    
    <item>
      <title>Debianのbittorrentパッケージをインストール</title>
      <link>https://yaasita.github.io/2010/10/11/5589/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5589/</guid>
      <description> 以下マニュアル
名前
bittorrentダウンローダー - 分散ネットワークを使用したダウンロード
概要
btdownloadheadless [ option ... ] URL
btdownloadheadless [ option ... ] filename
btdownloadcurses [ option ... ] URL
btdownloadcurses [ option ... ] filename
btdownloadgui [ option ... ] URL
btdownloadgui [ option ... ] filename
説明
このマニュアルのページは、簡単に
btdownloadheadless,
btdownloadcurses,
btdownloadgui
オリジナルプログラムがマニュアルを持たないので、
このマニュアルはDebianディストリビューション用に書かれました。
上記のプログラムはP2Pプロトコルbittorrentを使用したファイルのダウンロードを行うものです。
上記すべてのプログラムは全て同じオプションが使えます。

で、この3コマンドの違いは何かと言うと端末の制御の仕方が違うだけ
btdownloadheadless ・・・端末に延々と出力し続ける（tail -f見たいな感じ)
btdownloadcurses　・・・Cursesを使った端末制御見やすい CUIなら通常はこれ
btdownloadgui　・・・GUIで使うならこれXが必要
※ちなみにDebianの場合btdownloadcurses.bittorrentとbtdownloadcursesは同じ（シンボリックリンク） </description>
    </item>
    
    <item>
      <title>バイオハザード4の参考リンク集</title>
      <link>https://yaasita.github.io/2010/10/11/5547/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5547/</guid>
      <description> 攻略チャート(謎解きの解答とかもあるので手っ取り早く進めたい人向け)
http://gamekouryaku.com/bio4/
攻略チャート(マップ付き)
http://www10.plala.or.jp/namikipatty/bio4gc/iegamebio4.html
武器
http://www10.plala.or.jp/namikipatty/bio4gc/bio4ps2/psbuki.html
お宝
http://www.xn--eckm0bye2ad62a.com/item3.html
Wikipedia(クリーチャー一覧等)
http://ja.wikipedia.org/wiki/%E3%83%90%E3%82%A4%E3%82%AA%E3%83%8F%E3%82%B6%E3%83%BC%E3%83%894
改造コード
http://www.unkar.org/read/game12.2ch.net/gameurawaza/1178132223
http://www6.ocn.ne.jp/~ps2/c/bio.html
使用した改造コード ※ちなみに試したのはベスト版
マスターコード
EC878560 1456E79B 敵一撃死
1C8BB504 3845089C
お金MAX
1CD56854 14BE598C HP減らない
1C8BB33C 1496D7C8 制限時間操作（Ｌ２＋〇で最大，Ｌ２＋Ｘでタイムアウト）
0CD69F8C 1456E625
4CD84450 1456B00C
0CD69F8C 1456E525
4CD84450 1456E7A5

※ちなみにU-3などの首折攻撃で死ぬ場合があります（レバガチャすれば大丈夫）
あと知っておくと良いパズル解説は
双子の墓→3⇒4⇒3⇒3⇒3⇒4⇒4
教会のライト→赤2回、緑3回、青1回操作
THE MERCENARIESの星5つの条件は6万点以上 </description>
    </item>
    
    <item>
      <title>bzrで知ってると便利なコマンド</title>
      <link>https://yaasita.github.io/2010/10/10/5631/</link>
      <pubDate>Sun, 10 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/10/5631/</guid>
      <description> bzr uncommit これでチェックインの取り消しが出来る
色付き差分表示
bzr cdiff
履歴付きmv（ただ管理下のファイルをmvしたときは対象フォルダの履歴がそこで終わってしまうため）
bzr mv 
前に書いた記事
参考リンク
http://bbs2ch.sourceforge.jp/?page=%B3%AB%C8%AF%BC%D4%B8%FE%A4%B1%BE%F0%CA%F3 </description>
    </item>
    
    <item>
      <title>crontabに書いてあるdomとdowは何の略？</title>
      <link>https://yaasita.github.io/2010/10/03/5652/</link>
      <pubDate>Sun, 03 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/03/5652/</guid>
      <description> dow・・・Day Of Week
dom・・・Day of Month </description>
    </item>
    
    <item>
      <title>pingで生存確認してからsmbmountする</title>
      <link>https://yaasita.github.io/2010/10/02/5673/</link>
      <pubDate>Sat, 02 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/02/5673/</guid>
      <description> 今まではsmbmountを試して駄目だったら後続の処理を止めてたけど
pingしてからsmbmountすればもっと早くできると思う
こんな感じ
#!/bin/bash
TargetIP=192.168.0.2
ping -c 1 -w 1 $TargetIP  /dev/null || exit 0
mount //$TargetIP/hoge /var/windows/ -o sec=none  /dev/null 2&amp;amp;1
if [ $? -eq 0 ]
then
rsync -a --delete /var/windows/ /var/samba/foo/
umount /var/windows/ || exit 1
else
exit 0
fi
exit
 </description>
    </item>
    
    <item>
      <title>init.d/とか各ランレベルごとの起動スクリプトについて</title>
      <link>https://yaasita.github.io/2010/09/26/5694/</link>
      <pubDate>Sun, 26 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/26/5694/</guid>
      <description>前回rep2の話でスタートアップとシャットダウン時に行うスクリプトについて書いた
今回は/etc/init.d/rcを使わずにやる（正式な？）方法で起動時、終了時のスクリプトを実行してみる
まず、Linuxは/etc/inittabの定義に従って、/etc/init.d/rcをランレベルを引数にして実行する。
その後、/etc/rc$runlevel.dの中にあるディレクトリを順番に実行する。$runlevelは0～6の数値
（たとえばrc1.d,rc2.d,rc3.d,rc4.d,rc5.d,rc6.d）
/etc/init.d/rcの中を読めば分かるが、大まかな挙動は以下の通り。
1.現在のランレベルと前回のランレベルを取得する。
2.現在のランレベルに対応するディレクトリのKで始まるスクリプトを探し、前回のランレベルで実行されているなら（頭文字がSで始まるスクリプトが存在しているのなら）それを止める。
3.次に、Sで始まるディレクトリを探し、前回のランレベルで起動していないと判明したらstart、もしくはstopをかける。
ちなみに0,6はstopを引数にしてSから始まるスクリプトを順次実行する。
実行する順番はSもしくはKから始まる次の2桁の数値の若い順。
SとKではKが最初に実行される。
前回のスクリプトをこの方法で実現するなら
下記のようなスクリプトを用意すればOK
init.d/my_script
rc0.d/K01my_script@
rc2.d/S99my_script@
rc6.d/K01my_script@
my_scriptの中身は↓
#! /bin/sh
### BEGIN INIT INFO
#
# Default-Start: 2
# Default-Stop: 0 6
# Short-Description: rep2
### END INIT INFO
#
PATH=/bin:/usr/bin:/sbin:/usr/sbin
case &#34;$1&#34; in
start)
# rep2 HDD -&amp;amp;gt; memory
mkdir /dev/shm/rep2mem
rsync -av --delete /var/www/rep2mem_bk/ /dev/shm/rep2mem/
;;
restart|force-reload)
# nothing to do
:
;;
stop)
#rep2 memory -&amp;amp;gt; HDD</description>
    </item>
    
    <item>
      <title>perlのエラーコードを参照したりする</title>
      <link>https://yaasita.github.io/2010/09/19/5715/</link>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/19/5715/</guid>
      <description> systemの結果コードは$?で参照できる
以下引用
変数 $@, $!, $^E, $? は Perl プログラムの実行中に
発生した、異なる種類のエラー情報を保持します。
変数はエラーを報告した副システムと Perl プロセスとの「距離」
の順番に並んでいます。
これらはそれぞれ、Perl インタプリタ、C ライブラリ、
オペレーティングシステム、外部プログラムによって検出された
エラーに対応しています。
$@　→　evalのエラー
@! → システムコールのエラー closeとか
@^E → システムコールでエラーになったときの詳細な内容が格納されているらしい
$? → system終了ステータスとかCloseとかの終了ステータスを保持する
参考リンク
http://www.perldoc.jp/docs/perl/5.10.0/perlvar.pod.pod </description>
    </item>
    
    <item>
      <title>こんなmanもあるんだ</title>
      <link>https://yaasita.github.io/2010/09/19/5735/</link>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/19/5735/</guid>
      <description> man ascii
アスキーコードの表示
man hier
ファイルヒエラルキーの説明
こういうTips的なもの
http://cb.vu/unixtoolbox.xhtml </description>
    </item>
    
    <item>
      <title>自宅サーバーとレンタルサーバーでメールの同期を図る</title>
      <link>https://yaasita.github.io/2010/09/19/5755/</link>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/19/5755/</guid>
      <description>私の環境は以下のようにレンタルサーバーと自宅サーバーそれぞれでメールを受信している
自宅サーバーは24時間動かしているわけではないため、自宅サーバーが電源OFFした場合はDynDNSのドメインのIPアドレスをレンタルサーバーに設定。逆に電源がONになった場合はその逆でドメインのIPを自宅サーバーへ向けるようにする。
つまりDNSを更新して現用系(自宅)と待機系(レンタルサーバー)でスイッチさせている

でその時に問題なるのはレンタルサーバーで受信したメールをどうやってこちらに移すか？
今回はsftpを使って同期する
userが対象のユーザ、hoge.netがレンタルサーバーのアドレスとする
#!/bin/bash
my_maildir=/home/user/Maildir/
{
cat /dev/null 2&amp;amp;1
cd ${my_maildir}/tmp
for i in $( ls ); do
dst=`echo $i | cut -d: -f 1`
if [ $i != $dst ] ; then
mv $i $dst
fi
chmod a+rw $dst
mv $dst ${my_maildir}/new
done

適当な解説
・sftpについて
sftpはバッチモードというのがあり、-bで指定してその後に命令の書かれたファイルを指定します。今回は標準入力から読み込むため-を指定。get rmはftpでおなじみのコマンドで、
最初に-がついてるのはエラーになっても続行すると言う意味です。（curなどにファイルが無い場合はエラーとなる）
ここら辺に具体的な説明が書かれていますが、-Pはポート指定では無いなどこちらの環境と少し違う箇所がありました。man sftpで見た方が良いかもしれません。
・Maildirのファイル名について
命名の規約は下記参考リンクを参照するとして今回はレンタルサーバーにたまっていた物を新着メールとして処理したいので、ファイル名の:（コロン）以降を取り外しています。
ファイル名は以下のような構造になっています
1234567890.ABCDEFGHI123456789.hostname:2,S
1234567890 → UNIX時間
ABCDEFGHI123456789 →　メールごとにユニークな識別文字
hostname → ホスト名</description>
    </item>
    
    <item>
      <title>OpenOfficeでクリップアートを追加する</title>
      <link>https://yaasita.github.io/2010/09/18/5776/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5776/</guid>
      <description> こちらから
OOOP-accessories-2.6.0.2.oxtをダウンロードした
参考リンク
クリップアートの追加
http://gigazine.net/index.php?/news/comments/20071031_oxygenoffice_professional/ </description>
    </item>
    
    <item>
      <title>rsyncで双方向同期するには</title>
      <link>https://yaasita.github.io/2010/09/18/5796/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5796/</guid>
      <description> --updateオプションで古い更新日で新しい更新日のものを上書きしないようにする
--existingですでに受信側にあるファイルのみを対象とします
これを指定してA→B,B→Aという2回rsyncすれば同期できるはず </description>
    </item>
    
    <item>
      <title>標準エラー出力のリダイレクト話</title>
      <link>https://yaasita.github.io/2010/09/18/5817/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5817/</guid>
      <description> 標準エラー出力と標準出力を混ぜたいときに使う
この文法
command &amp;amp;gt; hoge 2&amp;amp;gt;&amp;amp;amp;1なぜ↓の様に書いては駄目なのか解説する
command 2&amp;amp;gt;&amp;amp;amp;1 &amp;amp;gt; hoge ←これはうまく出ない
まず &amp;amp;1 の意味は標準出力の出力先を指す
つまり標準出力と同じ場所に出したいときにしていする
間違った例だとなぜ標準エラー出力が標準出力に出てしまうか順番に解説
1.リダイレクトを指定しない場合
デフォルトの画面に出力される　標準出力先：画面
標準エラー出力先：画面 
command
2.標準エラー出力先を標準出力と同じに指定
標準出力先は画面なのでエラー出力を同じに指定してもまた画面になる
標準出力先：画面
標準エラー出力先：画面（現在の標準出力先と同じ） 
command 2&amp;amp;gt;&amp;amp;amp;1
3.標準出力先を指定
標準出力先をリダイレクトによって指定する
標準出力先：hoge
標準エラー出力先：画面
command 2&amp;amp;gt;&amp;amp;amp;1 &amp;amp;gt; hoge
つまり 2&amp;amp;gt;&amp;amp;amp;1 という指定はその時点の標準エラー出力を参照するため、まだ標準出力先を変更していない内に変更しても意味がないということ
参考リンク
http://www.fireproject.jp/feature/bash/basic/redirect-pipe.html </description>
    </item>
    
    <item>
      <title>aptitudeのパッケージ検討の時のコマンド</title>
      <link>https://yaasita.github.io/2010/09/12/5837/</link>
      <pubDate>Sun, 12 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/12/5837/</guid>
      <description> r　→　その提案を拒否 (rejectの意味か？)
a　→　その提案を承認 (acceptの意味か？)
Enter → 詳細に表示
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html </description>
    </item>
    
    <item>
      <title>期待のファイルシステムNILFS2</title>
      <link>https://yaasita.github.io/2010/09/12/5857/</link>
      <pubDate>Sun, 12 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/12/5857/</guid>
      <description> NILFS2
ざっと調べたら以下の特徴があるらしい
・NTTが作ったらしい
・スナップショットが取れる
・パフォーマンスが良い
・まだ不安定かも
Btrfsも期待できるけど当面はこっちを使おうかな
http://www.nilfs.org/ja/index.html
http://www.kotodama.jp/blog/index.php/2008/03/12/nilfs2
http://plaza18.mbn.or.jp/~moriban/linux/FileSystemBenchmarkResults-02.html </description>
    </item>
    
    <item>
      <title>usermodでグループの所属と所属の解除</title>
      <link>https://yaasita.github.io/2010/08/31/5877/</link>
      <pubDate>Tue, 31 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/31/5877/</guid>
      <description> よく勘違いするのでメモ
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser)
~#usersermod -G floppy testuser (floppyグループに所属するように変更)
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser),25(floppy)
~#usrmousermousermod -G cdrom testuser (floppyグループからの所属を解除し、cdromグループへ)
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser),24(cdrom)
~#usermod -G testuser testuser (セカンダリグループを解除)
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser)
~#

-Gを指定してしまうと既存のグループも削除されてしまうので-aオプションを追加すると良い
↓既存に所属しているグループはそのままでadmにも所属する
usermod -G adm -a testuser
参考リンク
http://oshiete.goo.ne.jp/qa/2390264.html </description>
    </item>
    
    <item>
      <title>古いノートにXfce4をインストール</title>
      <link>https://yaasita.github.io/2010/08/31/5897/</link>
      <pubDate>Tue, 31 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/31/5897/</guid>
      <description> aptitudeでそれらしいパッケージをインストール
x-window-system
xfce4
ウィンドマネージャにはSlimを採用した
あと追加で↓をインストールするとデスクトップ環境らしくなるらしい
xfce4-goodies
#tasksel install xfce-desktop

あとXfceから一般ユーザーが電源を切れるようにsudoをインストール
visudoでエディタを立ち上げてから
ALL ALL=(ALL) NOPASSWD: /usr/sbin/xfsm-shutdown-helper
を追加 (こことかに書いてあった)
あとは適当にフォント等をインストール
ttf-kochi-gothic
ttf-kochi-mincho
ttf-mscorefonts-installer
ttf-mscorefonts-installerはcontribパッケージなのでsources.listを編集すること
ちなみにDebian Lennyではdefomaでフォントを管理しているためxorg.confにFontPathを書く必要はない
日本語入力の設定はscim-anthyをインストールすれば
/etc/X11/xinit/xinput.d/配下に適当にインストールしてくれるのでOK
参考リンク
Xfce wiki
Xfce FAQ </description>
    </item>
    
    <item>
      <title>DTIのやってるVPS ServersManを試した</title>
      <link>https://yaasita.github.io/2010/08/30/5917/</link>
      <pubDate>Mon, 30 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/30/5917/</guid>
      <description> 使用感はとりあえずいい感じ
WebからOSの初期化とかワンボタンで出来る
とりあえずやったこと
1. sshの設定(パスワード認証の無効化）
2. yum update
3. /etc/sysconfig/i18n を修正 LANG=&#34;ja_JP.UTF-8&#34;　に変更
4. yum install man-pages-ja.noarch </description>
    </item>
    
    <item>
      <title>インターネットの仕組み</title>
      <link>https://yaasita.github.io/2010/08/29/5938/</link>
      <pubDate>Sun, 29 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/29/5938/</guid>
      <description> インターネットのしくみ
∧＿∧
( ･ω･)
＿(__つ/￣￣￣/
＼/　/
￣￣￣＼　（エロ画像） （　ZIP　） （　exe　）　（個人情報）
＼┗(^o^ )┛┗(^o^ )┛┗(^o^ )┛　┗( ^o^)┛
＼┏┗　┏┗　┏┗　┛┓
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣

参考リンク
http://suiseisekisuisui.blog107.fc2.com/blog-entry-1406.html </description>
    </item>
    
    <item>
      <title>/etc/cron.daily/aptを使ってパッケージを自動更新</title>
      <link>https://yaasita.github.io/2010/08/25/5959/</link>
      <pubDate>Wed, 25 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/25/5959/</guid>
      <description> あれは日次でパッケージを自動更新するためのシェルスクリプトらしい
で使い方は
パッケージを自動更新したいのなら APT::Periodic::Update-Package-Lists &#34;1&#34;;という行を/etc/apt/apt.conf.d/70debconfの最後に記述すればOK
APT::Periodic::Download-Upgradeable-Packages &#34;3&#34;;を追加すれば３日おきにアップグレードできるパッケージをダウンロードだけするようになる
APT::Periodic::AutocleanInterval &#34;1&#34;;こうかけば自動的にキャッシュのクリアをしてくれる </description>
    </item>
    
    <item>
      <title>Debian でNFSを設定してみる</title>
      <link>https://yaasita.github.io/2010/08/25/5979/</link>
      <pubDate>Wed, 25 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/25/5979/</guid>
      <description> 1.nfs-kernel-serverをインストール
/etc/exportsを編集
/etc 192.168.0.0/255.255.255.0(ro)
※あとNFSのマウント側では同じUID同士でマッピングされるがrootだけはanonymousでマッピングされるため、no_root_squashをつける
詳しくは→man exports
2.リロード
exportfs -ra
showmount -e
3.クライアント側の設定
aptitudeとかでnfs-commonをインストール
4.マウント
mount 192.168.0.4:/tmp /mnt
5.アンマウント
umount /mnt
6.fstabに書く
192.168.0.4:/tmp /mnt nfs rw,user 0 0
mount -a
参考リンク
http://nawolets.blogspot.com/2009/11/debian-de-nfs.html
http://www.linux.or.jp/JF/JFdocs/NFS-HOWTO/server.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/367usenfs.html </description>
    </item>
    
    <item>
      <title>システムをRAID5へ移行したときのメモ</title>
      <link>https://yaasita.github.io/2010/08/24/5999/</link>
      <pubDate>Tue, 24 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/24/5999/</guid>
      <description> 1.まずRAID5を構築
※今回は/bootは別パーティションとします
2.作成したmd0へシステムを全コピー
rsync -aHx --exclude=&#39;/boot/*&#39; / /mnt
3.GRUBの設定
/boot/grub/menu.lstを編集
# kopt=root=/dev/sda2 ro
↓
# kopt=root=/dev/md0 ro
そんで
update-grubを実行
4./etc/fstabの編集
#/dev/sda2&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; ext3&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; defaults,errors=remount-ro 0&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; 1
/dev/md0&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; ext3&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; defaults,errors=remount-ro 0&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; 1
参考リンク
http://omake.accense.com/wiki/LinuxRAID1Transition </description>
    </item>
    
    <item>
      <title>ext3の設定値を変更する</title>
      <link>https://yaasita.github.io/2010/08/23/6018/</link>
      <pubDate>Mon, 23 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/23/6018/</guid>
      <description> tune2fsというコマンドを使うみたいです。
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/760ext3chk.html </description>
    </item>
    
    <item>
      <title>あなたのドメインの価値を教えてくれるサイト</title>
      <link>https://yaasita.github.io/2010/08/22/6038/</link>
      <pubDate>Sun, 22 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/22/6038/</guid>
      <description> ドメインを入れると値段を出してくれる
http://bizinformation.org/jp/
このブログだとこんな感じらしい
pageviewとかvisitorが大体あってるから凄い
Website Value $4,322.16
Daily Pageviews 150
Daily Visitors 30 
Your website value?
Gigazine記事
http://gigazine.net/index.php?/news/comments/20100821_bizinformation/ 
関連記事
BlogChartってサイトでこのBlogのレベルを測定してみる </description>
    </item>
    
    <item>
      <title>お気に入りのフォント</title>
      <link>https://yaasita.github.io/2010/08/19/6058/</link>
      <pubDate>Thu, 19 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/19/6058/</guid>
      <description> その名も
ふい字
http://hp.vector.co.jp/authors/VA039499/ 
http://www.forest.impress.co.jp/lib/offc/print/font/fuiji.html </description>
    </item>
    
    <item>
      <title>IS02を買ったからガラケーから電話帳の移行</title>
      <link>https://yaasita.github.io/2010/08/08/6100/</link>
      <pubDate>Sun, 08 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/08/6100/</guid>
      <description>W43K→からIS02への移行をした
１．W43KにマイクロSDを挿して電話帳を保存
２．スマートフォンアドレス帳移行ツールでIMPORTすればOK
ちなみにW43Kのアドレス帳はvcf形式になっていた
csvに変換してから適当に編集してからIS02にIMPORTした
vcf→csv
#!/usr/bin/perl
use feature qw(say);
use warnings;
use strict;
our %date;
our @order;
while (&amp;amp;lt;DATA&amp;amp;gt;){
chomp;
$date{$_}=1;
push (@order,$_);
print &#34;$_,&#34;;
}
print &#34;\n&#34;;
my $infile=shift || &#34;20100801.vcf&#34;;
open (FH,$infile) or die $!;
my %hash;
while (&amp;amp;lt;FH&amp;amp;gt;){
chomp;
my ($key,$value) = split (/:/);
&amp;amp;check($key);
unless (defined $hash{$key}){
$hash{$key}=$value;
}
elsif ($key eq &#34;EMAIL&#34;) {
$hash{&#34;EMAIL2&#34;}=$value;
}
else {
die &#34;Error!&#34;;
}
if ($key eq &#34;</description>
    </item>
    
    <item>
      <title>sshでポートフォワード専用アカウントの作成</title>
      <link>https://yaasita.github.io/2010/08/08/6078/</link>
      <pubDate>Sun, 08 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/08/6078/</guid>
      <description> 1.ログインシェルを/bin/falseのようにすると当然ログインできない
＝ポートフォワードできないと思われがちだが・・・
ssh -L 80:192.168.0.6:80 -i /tmp/id_rsa -l hoge 192.168.0.6 cat
こんな感じで指定するとログインシェルを実行する前にcatを実行して止まるので
ポートフォワード専用アカウントが出来るよ
ただし、chroot環境でbinとかコピーしてないと出来ないので
puttyの何もしないコマンドが最強だけどこれどうやってんだ？

追記
-Nオプションってやつを追加すればいいんだった
こんな感じでOK
ssh -N -L 80:192.168.0.6:80 -i /tmp/id_rsa -l hoge 192.168.0.6
あと関係ないけど
ServerAliveInterval ってやつを指定して定期的にパケットを投げると切れないらしい </description>
    </item>
    
    <item>
      <title>BlogChartってサイトでこのBlogのレベルを測定してみる</title>
      <link>https://yaasita.github.io/2010/08/01/6120/</link>
      <pubDate>Sun, 01 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/01/6120/</guid>
      <description> Lv3だそうだ
http://blogchart.jp/blog?url=http://rdt17.blogspot.com/
あとこのレベルを表示するブログパーツは表示が遅いので注意すること
関連記事
あなたのドメインの価値を教えてくれるサイト </description>
    </item>
    
    <item>
      <title>bzrでvimdiffを使う</title>
      <link>https://yaasita.github.io/2010/07/19/6202/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6202/</guid>
      <description> 前回はWindowsで使う方法を紹介したが、Linuxで使う方法を紹介。
1.最新のリポジトリからソースを取得
bzr branch lp:bzr-vimdiff
2.ディレクトリへインストール
mkdir -p ~/.bazaar/plugins/vimdiff/
cp bzr-vimdiff/__init__.py ~/.bazaar/plugins/vimdiff/
3.使い方
例）リビジョン18から19までの差分を表示
bzr vimdiff -r18..19 cron.daily/ore_ntpdate
公式サイト
https://launchpad.net/bzr-vimdiff </description>
    </item>
    
    <item>
      <title>squid3を試してみた</title>
      <link>https://yaasita.github.io/2010/07/19/6181/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6181/</guid>
      <description> * Debian で squid3を試す
aptitudeとかでsquid3をインストール
以下squid.confの設定
1.アクセスリストlocalnetを有効化
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network 
2.cachemgr3.cgiを見るための設定と普通のアクセス設定
http_access allow manager localnethttp_access allow localnet
いずれもdenyの前に置くこと
3.ポートの変更
http_port 8080
4.各種設定
cache_mem 20 MB maximum_object_size_in_memory 256 KB
cache_dir ufs /var/spool/squid3 4000 32 256
maximum_object_size 18000 KB #icp_port 3130 #無効化
forwarded_for off
5.あとcachemgr.confも変更したポートに合わせる
localhost:8080
なんかあったらとりあえずログを見ること
/var/log/messages
/var/log/syslog
/var/log/squid3/*
※あと注意点
NetBIOS名で指定しないことcachemgr3を操作しようとしないこと
↓は駄目
http://jitaku:8000/cgi-bin/cachemgr3.cgi
↓はおｋ
http://192.168.0.11:8000/cgi-bin/cachemgr3.cgi
使った感想は特に昔と変わんないかな・・・ </description>
    </item>
    
    <item>
      <title>sshポートフォワード専用アカウントを作成したときのメモ</title>
      <link>https://yaasita.github.io/2010/07/19/6140/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6140/</guid>
      <description>ここではそのポートフォワードだけのユーザ（制限ユーザをhoge）とする
1.ユーザの作成
useradd -s /bin/rbash -m hoge
passwd hoge
rbashを使うためには/etc/shellsに追加されていることを確認する
→参考
2.所有者,パーミッション,PATHの変更
cd /home/
chown -R root:root hoge/
chmod -R 755 hoge/
cd /home/hoge/
echo &#34;export PATH=&#39;&#39;&#34; &amp;amp;gt;&amp;amp;gt; .bashrc
3.chroot環境の構築
chroot環境のため必要なものをコピー
debian:/home/hoge# ls -l
合計 16
drwxr-xr-x 2 root root 4096 2010-07-19 17:49 bin
drwxr-xr-x 83 root root 4096 2010-07-19 17:48 etc
drwxr-xr-x 2 root root 4096 2010-07-19 17:49 lib
drwxr-xr-x 2 root root 4096 2010-07-19 17:50 lib64
4./etc/ssh/sshd_configを編集</description>
    </item>
    
    <item>
      <title>teratermでsshの自動ログインマクロ</title>
      <link>https://yaasita.github.io/2010/07/19/6161/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6161/</guid>
      <description> connect &#39;debian:22 /ssh /2 /user=hoge /passwd=hoge /auth=password /W=&#34;HOGE&#34;&#39;debianっている鯖にログインするとする
こんな感じで書いておけば良いらしい
userがログインユーザー
passwdがパスワード
authが認証方式
Wがウィンドウタイトル </description>
    </item>
    
    <item>
      <title>Bazaar Explorerでvimdiffを使えるようにする設定</title>
      <link>https://yaasita.github.io/2010/07/04/6223/</link>
      <pubDate>Sun, 04 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/04/6223/</guid>
      <description> 設定→ユーザー設定
・一般タブではエディタを指定（ここではgvimを指定）
※gvim.exeが使えるようPATHを通す必要があります・エイリアスにはgvimdiffを指定（コマンドラインでdiffした時に便利）

・差分には↓の様に設定するとGUIからもgvimdiffができる

ちなみに設定ファイルは
↓にあった
C:\Documents and Settings\&amp;amp;lt;user&amp;amp;gt;\Application Data\bazaar\2.0\bazaar.conf※GUIの設定はqbzr.confを編集すること
参考リンク
http://d.hatena.ne.jp/itsumo/ </description>
    </item>
    
    <item>
      <title>screenにウィンドウリストのタブを表示</title>
      <link>https://yaasita.github.io/2010/07/04/6244/</link>
      <pubDate>Sun, 04 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/04/6244/</guid>
      <description> .screenrcに以下を追記すればOKらしい
自分はcaptionよりもhardstatus alwayslastlineの方が良かったので
↓を使ってる(captionにするとバッファ毎にステータスラインができる)
hardstatus alwayslastline &#34;%{= wg} %-w%{=bu dr}%n %t%{-}%+w %= %{=b kw} %Y/%m/%d %0c&#34;

あと分割色を指定するために↓を書いておくといいかも
sorendition &#34;+rb .G&#34;

ちなみに自分の.screenrcはこんな感じ
 startup_message off
hardstatus alwayslastline &#34;%{= wg} %-w%{=bu dr}%n %t%{-}%+w %= %{=b kw} %Y/%m/%d %0c&#34;
sorendition &#34;+rb .G&#34;
vbell off

参考リンク
http://d.hatena.ne.jp/winebarrel/20070223/p4
http://www.tees.ne.jp/~sin-x/200406a.html#0102c
http://shyouhei.tumblr.com/post/313410522/screenrc </description>
    </item>
    
    <item>
      <title>NTT研究所の錯視紹介ページ</title>
      <link>https://yaasita.github.io/2010/07/03/6264/</link>
      <pubDate>Sat, 03 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/03/6264/</guid>
      <description>錯視、錯聴とか錯覚の世界
イリュージョンフォーラム
IllusionForum
錯視と錯聴を体験！Illusion Forum イリュージョンフォーラム</description>
    </item>
    
    <item>
      <title>Bazaarを使ってみたので分かった事のまとめ</title>
      <link>https://yaasita.github.io/2010/06/20/6285/</link>
      <pubDate>Sun, 20 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/20/6285/</guid>
      <description>Mercurialを使ったことがあるならすぐ慣れると思うけど
Mercurialは単一のリポジトリでブランチを管理できるけどbzrは切り離す必要があるということは注意
* マニュアル
公式マニュアル
http://doc.bazaar.canonical.com/ja/
Bazzar Wiki
http://www19.atwiki.jp/bazaar/pages/1.html
* Logの参照
1から3までのログを参照
bzr log -r 1..3今日の変更を参照
bzr log -r today最新の変更を参照
bzr log -r last:ちなみにbzr log -vとやると変更ファイル一覧が見れる
* 現在のリビジョンを確認
bzr revno
* リポジトリの情報を表示
bzr info
* ブランチからmerge
bzr merge /tmp/hoge
* push/pull
ブランチから変更を送信/取得
* ブランチを作成
mercurialと違ってブランチはリポジトリも切り離す
必要がある
bzr ./ /tmp/hogehttp://d.hatena.ne.jp/methane/20090825/1251175889
* 無視リスト
bzr ignore &#34;hoge&#34;これで.bzrignoreに追加される(手動で追加しても良い)
デフォルトでワイルドカードが有効
例) classの拡張子を無視
bzr ignore &#34;*.class&#34;!を最初につけると例外を追加できる
例）~で終わるファイルを無視しない (*~はデフォルトで無視リストに入っている)
!*~RE:をつけると正規表現が使える
例）libディレクトリは以下の.oファイルを無視
bzr ignore &#34;RE:lib/.*\.o&#34;ちなみにbzr ignoredで実際に無視しているファイルを確認できる
※一度管理下に置かれてしまったファイルは無視できないため、bzr rm --keepで一旦削除して下さい</description>
    </item>
    
    <item>
      <title>LWP::UserAgentを使ってみる</title>
      <link>https://yaasita.github.io/2010/06/20/6305/</link>
      <pubDate>Sun, 20 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/20/6305/</guid>
      <description> UserAgentとRefererを設定して診断君を取得する
参考リンク
http://search.cpan.org/~gaas/libwww-perl-5.836/lib/LWP/UserAgent.pm
#!/usr/local/bin/perl
use LWP::UserAgent;
use HTTP::Headers;
use feature qw(say);
$ua = LWP::UserAgent-&amp;amp;gt;new (
timeout =&amp;amp;gt; 5,
agent =&amp;amp;gt; &#39;Mozilla/5.0 (Windows; U; Windows NT 6.0; ja; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 ( .NET CLR 3.5.30729)&#39;
);
$ua-&amp;amp;gt;default_header(
&#39;Referer&#39; =&amp;amp;gt; &#34;hoge&#34;,
&#39;Accept-Language&#39; =&amp;amp;gt; &#34;no, en&#34;);
$res=$ua-&amp;amp;gt;get(&#39;http://taruo.net/e/&#39;);
if ($res-&amp;amp;gt;is_success){
say $res-&amp;amp;gt;code;
say $res-&amp;amp;gt;message;
say $res-&amp;amp;gt;content;
} </description>
    </item>
    
    <item>
      <title>モニタの電源をsettermでオフに出来ない場合</title>
      <link>https://yaasita.github.io/2010/06/18/6325/</link>
      <pubDate>Fri, 18 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/18/6325/</guid>
      <description> vbetool というのがあるらしい
https://forums.ubuntulinux.jp/viewtopic.php?id=3477
vbetool dpms offで画面消えた
普段はコンソールを使わないので/etc/init.d/rcの先頭に書いておいた
if [ &#34;$1&#34; = &#34;2&#34; ]
then
vbetool dpms off
fi

前回書いた方法でもできるけど場合によっては完全にきれないことがあるっぽい </description>
    </item>
    
    <item>
      <title>C/MigemoをMSVC 2010でコンパイルしてみる</title>
      <link>https://yaasita.github.io/2010/06/13/6407/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6407/</guid>
      <description> vimにインストールするためMSVC 2010でコンパイルしてみた
まずは↓からMicrosoft Visual Studio Express C++をダウンロード&amp;amp;amp;インストール
http://www.microsoft.com/japan/msdn/vstudio/express/
（ちなみにインストールするとメイリオフォントもインストールされる Firefoxとかだと文字がにじむサイトとかでるかも・・・）
そんでkaoriyaさんのHPから「ソースコード 1.3(予定) 開発版」をダウンロード解凍して cmigemo-1.3c\compile\vs2003のCMigemo.slnをMSVS 2010で開く→変換ウィザードでプロジェクトを変換
プロジェクトを開いたらReleaseに変更

そんでCMigemoを右クリック→リビルドすると cannot open include file &#39;afxres.h&#39;というエラーが出るのでこんな感じで直す
修正前 #include &#34;afxres.h&#34;
修正後 #include 
#define IDC_STATIC -1
あとはvs2003\CMigemo\Release\CMigemo.exeとvs2003\MigemoDLL\Release\migemo.dllを保存してvimにインストール
辞書ファイルはCygwinで作成するかkaoriyaさんの「バイナリ(DLL) 1.2 リリース版 for Windows 」をダウンロードしてもおｋ
ちなみにmigemo.vimは1.2版のを使った方が調子が良かった </description>
    </item>
    
    <item>
      <title>hg diffが見難いのでvimdiffに変更する</title>
      <link>https://yaasita.github.io/2010/06/13/6346/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6346/</guid>
      <description> .hgrcに以下を追記すればおｋ
[extdiff]
cmd.vimdiff = vimdiff

後はhg diffとやるところで
hg vimdiffと打ってみよう </description>
    </item>
    
    <item>
      <title>RAID1を利用してディスクコピー</title>
      <link>https://yaasita.github.io/2010/06/13/6366/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6366/</guid>
      <description> 例えば/dev/hdd1の内容を丸々/dev/hdd2にコピーしたいと思った場合
1.縮退モードでRAID1を構成する
mdadm -C /dev/md0 -l1 -n2 /dev/hdd1 missing
2.コピー先のhdd2をアレイに追加
mdadm /dev/md0 -a /dev/hdd2
3.アレイの再構築が終わるまで待つ
cat /proc/mdstat
4.アレイを停止
mdadm -S /dev/md0
5.super-blockを削除
mdadm --zero-superblock /dev/hdd[12]
ディスクコピー完了 </description>
    </item>
    
    <item>
      <title>sources.listを編集してunstableパッケージと混在させる</title>
      <link>https://yaasita.github.io/2010/06/13/6386/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6386/</guid>
      <description> http://mikilab.doshisha.ac.jp/dia/research/report/2005/0811/001/report20050811001.html
↑を参考にして/etc/apt/sources.listに下記2行を追加
deb http://ftp.jp.debian.org/debian/ sid main contrib non-free
deb-src http://ftp.jp.debian.org/debian/ sid main contrib non-free/etc/apt/apt.conf.d/70debconfに下記を追加
APT::Default-Release &#34;stable&#34;;apt-getでunstableのパッケージをインストールするにはパッケージ名の後ろに
バージョンも明記するか、こんな感じで-tオプションとかあるらしい
apt-get install -s -t unstable hoge
で、aptitudeでやるには
パッケージ一覧を更新→パッケージを選択→下の方を良く見ると選べるようになってるのでそれ選択して+とか押す
↓の例だと1.5がstableで1.6がunstable  </description>
    </item>
    
    <item>
      <title>胃の薬でよく効くやつは</title>
      <link>https://yaasita.github.io/2010/06/10/6429/</link>
      <pubDate>Thu, 10 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/10/6429/</guid>
      <description> セルベックスらしい
市販品だとセルベールというらしい </description>
    </item>
    
    <item>
      <title>googleの左うざいに関して</title>
      <link>https://yaasita.github.io/2010/06/06/6449/</link>
      <pubDate>Sun, 06 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/06/6449/</guid>
      <description> FirefoxのUser Agent Switcherをインストール
UAをIE6に設定この状態で
IE6のUAはこれ
Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
http://www.google.co.jp/
を開いてみよう

もとのGoogleが表示される
うざい左も表示されない
UAを変えなきゃいけないから実用性はなさそう </description>
    </item>
    
    <item>
      <title>FLVとかmp4とかを音楽ファイルに変換</title>
      <link>https://yaasita.github.io/2010/05/30/6470/</link>
      <pubDate>Sun, 30 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/30/6470/</guid>
      <description> 「Pazera Video Converters」
というソフト
インストールとか面倒な作業はいらなくて解凍すればすぐ使えて便利
ipodとかPSPとか選べる 
&amp;amp;nbsp;これが変換画面

参考リンク
http://www.forest.impress.co.jp/article/2008/02/15/pazeravideo2flash.html </description>
    </item>
    
    <item>
      <title>Googleのキーボードショートカット</title>
      <link>https://yaasita.github.io/2010/05/28/6491/</link>
      <pubDate>Fri, 28 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/28/6491/</guid>
      <description> かなり便利
Keyboard Shortcut
http://www.google.co.jp/webhp?esrch=BetaShortcuts
https版でも使える
https://www.google.com/webhp?esrch=BetaShortcuts 
その他の検索
http://www.google.com/experimental/
あと検索用プラグイン
参考リンク
Firefoxの検索プラグインをカスタマイズする方法
【2011/12/4】
今はAccessible Viewに変わったみたい⇒こちら参照 </description>
    </item>
    
    <item>
      <title>Google Analyticsで特定のCookieを持つクライアントを集計対象外にする</title>
      <link>https://yaasita.github.io/2010/05/23/6511/</link>
      <pubDate>Sun, 23 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/23/6511/</guid>
      <description> Googleのヘルプにはこのように書いてあるが、
そもそも↓を書いても
&amp;amp;lt;body onLoad=&#34;javascript:pageTracker._setVar(&#39;test_value&#39;);&#34;&amp;amp;gt;
pageTrackerオブジェクトが定義してなかったのでエラー履いてた
（Firefoxならツール→エラーコンソールでJavaScriptのエラーを確認できる）
で結局どうしたかというとここに書いてあるコードを追加してうまくいった
なんだか分かりにくい・・・
Cookieを見ると_utmvという名前でtest_valueを持つCookieが出来てたたぶん成功だろう
あとこのBloggerでこのクッキーをセットするページを作る手順は↓とか参考にするといいかも
http://markopee.blogspot.com/2008/02/google-analytics_10.html
参考サイト
http://rewish.org/tools/ga_js_cookie
http://wordpress.f-tools.net/wordpress-seo/773.html </description>
    </item>
    
    <item>
      <title>Debian LennyでSAMBAのnmbdが起動しない件</title>
      <link>https://yaasita.github.io/2010/05/22/6592/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6592/</guid>
      <description> Linuxでnmbdが起動しないときがある
でもsmbdは起動してる・・・・
/etc/init.d/sambaのスクリプトの中に
ps auxとか入れてみるとstart-stop-daemonは走ってるけどプロセスが始まらないみたい・・・
でいろいろ調べてるうちにこのフォーラムで話してたこれっぽい気がする
もうそういうことにしておこう面倒だし
Debianフォーラムでも話してるし
とりあえず
/etc/rc2.d/S99stop-bootlogd
の２０行目あたり（/etc/init.d/bootlogd stopの下）に
/etc/init.d/samba start
を追加しておいた </description>
    </item>
    
    <item>
      <title>Google Analyticsを使ってみる</title>
      <link>https://yaasita.github.io/2010/05/22/6531/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6531/</guid>
      <description> 昔ニンジャツール使ってて、なんか面白そうだからココロを使ってたが、
どうやら終了するみたいなので新しいアクセス解析ツールを探してた。
で有名なGoogle Analyticsを使ってみる
使い方は簡単でGoogleのアカウントを持っていればすぐ始められる。
解析のコードはheadタグの終了前に置けとのことなので、ブログサービスによっては設置できないところもあるかもしれない。
http://www.google.com/support/analytics/bin/answer.py?hl=ja_JP&amp;amp;answer=174090
あとリアルタイムにアクセス解析してくれる
Woopraというのもあるらしいので暇があったら使ってみるかも
GIGAZINE記事 </description>
    </item>
    
    <item>
      <title>init.dスクリプトの書き方</title>
      <link>https://yaasita.github.io/2010/05/22/6612/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6612/</guid>
      <description> http://surf.st.seikei.ac.jp/~nakano/linux/init.d.html </description>
    </item>
    
    <item>
      <title>Mercurialで変更ファイル一覧が見たいので1.5.2に上げてみた</title>
      <link>https://yaasita.github.io/2010/05/22/6572/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6572/</guid>
      <description> ここからダウンロード
dpkg -i mercurial_1.5.2-1_amd64.debでもいいけど依存関係とかめんどくさいので今回はリポジトリの変更でやってみる
/etc/apt/sources.list
を編集し
deb http://ftp.jp.debian.org/debian/ lenny main contrib non-free
deb-src http://ftp.jp.debian.org/debian/ lenny main contrib non-free
となっているのを
deb http://ftp.jp.debian.org/debian/ sid main contrib non-free
deb-src http://ftp.jp.debian.org/debian/ sid main contrib non-free
と変更あとは
aptitudeでアップデートかければ新しいMercurialを使える
新しいバージョンだとヘルプとかが翻訳されていていい感じ
変更されたファイルの一覧を見るコマンドとかも追加されている
http://d.hatena.ne.jp/Decchi/20100213/1266078355 </description>
    </item>
    
    <item>
      <title>スーパーボンバーマン5を100%クリアすると・・・</title>
      <link>https://yaasita.github.io/2010/05/22/6551/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6551/</guid>
      <description> 100%達成のご褒美？に秘密のパスワードを教えてくれる

100%達成のためのルート攻略はこちら
http://2nd.geocities.jp/donoidmosiyousareteta/3-11.htm </description>
    </item>
    
    <item>
      <title>無線LANを中継する機能の事をなんと言うか</title>
      <link>https://yaasita.github.io/2010/05/22/6632/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6632/</guid>
      <description> WDSというらしい
Wireless Distribution System
アクセスポイント間通信 </description>
    </item>
    
    <item>
      <title>スーパーボンバーマン5のチートコード</title>
      <link>https://yaasita.github.io/2010/05/17/6672/</link>
      <pubDate>Mon, 17 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/17/6672/</guid>
      <description> 改造コード
無敵
1P 7E15A205
2P 7E15A305
スピード
7E15D2FF
火力MAX
7E17CA0A
爆弾の数
7E4EBD0A
リモコン爆弾
7E4ED50F </description>
    </item>
    
    <item>
      <title>バックアップツールについてまとめてみた</title>
      <link>https://yaasita.github.io/2010/05/17/6652/</link>
      <pubDate>Mon, 17 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/17/6652/</guid>
      <description> 以下のバックアップツールがあるらしい
* dump/restore
dumpというext3しか対応してないがまとめてひとつのファイルにしてくれるツール
* afio
tar+gzipよりはいいかと・・・
* rsync
あるディレクトリと同期を取る
* unison
双方向同期に対応している
* pdumpfs
windows環境にもあってすぐ使えて便利
日付ごとに取るならこれが簡単
* rdiff-backup
diffして差分バックアップするときに使う
rsyncじゃだめなのかなぁ
* duplicity,
暗号化に対応したバックアップソフト
* amanda
よりシステマチックにバックアップしたいときに使うといいかも
最初の設定はめんどいかも
* bacula
amandaに似てるかも初期設定はちょっと敷居高いかも </description>
    </item>
    
    <item>
      <title>mdadmでメール送信メモ postfix</title>
      <link>https://yaasita.github.io/2010/05/16/6692/</link>
      <pubDate>Sun, 16 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/16/6692/</guid>
      <description> mdadmが動いているAサーバーからBサーバーに(relay)転送したい
とりあえず以下のように設定192.168.0.11が転送サーバーとする
relayhost = [192.168.0.11]:25
しかしsmtpd_helo_restrictionsが転送サーバーに設定されているため
Aサーバーのホスト名がFQDNでないため拒否されてしまう
1.↓のように設定する(中括弧を忘れずに)
mtp_helo_name = [192.168.0.5]
2.外部PGを使って動的に変更
参考リンク
milter_helo_macros
3.Bサーバーの方のsmtpd_helo_restrictionsを設定する
こことかここに書いてある
smtpd_helo_restrictions = permit_mynetworks,reject_non_fqdn_hostname
他にもcheck_helo_accessを設定する方法もある
ちなみにDebianの場合モニタモードで動いているプロセスは
ps aux | grep mdadm
で確認してみると分かる
/etc/init.d/mdadmの方を再起動すれば設定ファイルが読み込まれる
設定ができたら↓のコマンドで送信できるか試してみると良い
mdadm --monitor --scan --test -1 </description>
    </item>
    
    <item>
      <title>mdadmでRAID構築（まとめ)</title>
      <link>https://yaasita.github.io/2010/05/15/6713/</link>
      <pubDate>Sat, 15 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/15/6713/</guid>
      <description>RAIDの構築   fdisk等を用いてパーティションを作成
(このときのパーティションタイプはfd(Linux RAID)にしておくと分かりやすい)
 # mdadm -C /dev/md0 -l5 -n3 /dev/hdd[123]    -Cは新規作成時に指定するオプションで&amp;ndash;createと同じ意味
  /dev/md0は最終的に出来上がるRAIDデバイスを指定する（無くても勝手に作ってくれる）
  -l5はRAIDレベルを表す 0,1,5,6が指定可能 &amp;ndash;level=raid5と指定しても同じ意味
  -n3はデバイスの数(HDDの数) &amp;ndash;raid-devices=3と指定しても同じ
  /dev/hdd[123]はRAIDを構成するHDD この例では単一のHDDで構成しているが本当は/dev/hd[bcd]1みたいに物理的に違うデバイスを指定する
  スペアディスクの追加 # mdadm /dev/md0 --add /dev/hdd4  mdadm -D /dev/md0でスペアディスクが存在することを確認できる
RAIDの監視   procから見る
 cat /proc/mdstat (watch -n 1 cat /proc/mdstat　みたいにやると１秒ごとにこのコマンドを発行してくれるので便利)    詳細に見る
 mdadm -D /dev/md0    RAIDの再構築(HDD故障時の対処)   故障マークを付ける</description>
    </item>
    
    <item>
      <title>smbmountでWindowsの共有フォルダをマウントする</title>
      <link>https://yaasita.github.io/2010/05/09/6733/</link>
      <pubDate>Sun, 09 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/09/6733/</guid>
      <description> 想定する環境はSoukoドライブがフルアクセスで共有されている場合
コマンドラインからマウントするなら↓
smbmount //192.168.0.2/souko\ \(S\)/Linux/dump /mnt -o sec=none
/etc/fstabに書くなら↓
//192.168.0.2/souko\040(S)/Linux/dump /mnt smbfs rw,defaults,sec=none 0 0
ちなみに前回の時にはオプションに-o guestってやってたけどこれだと「Warning: mapping &#39;guest&#39; to &#39;guest,sec=none&#39;」というwarningが出るので直した
あとfstabのファイルパス中にスペースを入れる場合は\040と記述すればおｋ
man fstabより抜粋
 2 番目のフィールド (fs_file) は、ファイルシステムのマウントポイントを記
述する。スワップパーティションの場合、このフィールドは ‘none’ と明記 す
る必要がある。マウントポイントに含まれている空白は、‘\040’ のようにエス
ケープできる。

参考リンク
http://d.hatena.ne.jp/adsaria/20080114/1200328063
http://ksugita.blog62.fc2.com/blog-entry-23.html </description>
    </item>
    
    <item>
      <title>rsyncを（ほぼ）毎日やるのでスクリプトを書いた</title>
      <link>https://yaasita.github.io/2010/05/08/6754/</link>
      <pubDate>Sat, 08 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/08/6754/</guid>
      <description>最初にYYYYMMDDのディレクトリにフルバックアップする作業は手作業でやる必要がある
#!/usr/bin/perl
use feature qw(say);
use warnings;
use strict;
### INITIAL SETTING ##########
our $BACKUP_DIR=&#34;/mnt&#34;;
our $EXC_FILE=&#34;/mnt/exc.txt&#34;;
##############################
if ($BACKUP_DIR!~/\/$/){
$BACKUP_DIR.=&#34;/&#34;;
}
chdir $BACKUP_DIR or die $!;
my ($today,$target);
$today=`date +%Y%m%d`;
chomp $today;
say &#34;*** START BACKUP!!! ***&#34;;
system &#34;mkdir $today 2&amp;amp;gt; /dev/null&#34;;
{
#前回バックアップディレクトリの探索
opendir DIR,&#34;./&#34; or die $!;
my @list;
@list = readdir DIR;
close DIR;
@list = grep {-d $_ and !/\./} @list; $target=&#34;&#34;;
for (reverse sort @list){</description>
    </item>
    
    <item>
      <title>rsyncで差分バックアップ</title>
      <link>https://yaasita.github.io/2010/05/05/6794/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/05/6794/</guid>
      <description> rsyncで差分バックアップするにはcompare-dest、copy-dest、link-destのどれかを指定して前回のファイルを指定します。
たとえばしたのようにすると差分のあったファイルのみバックアップされます。
（なのでこのバックアップした時点のsorceフォルダを復元したいならdstにdst2を上書く）
rsync -av --delete-excluded --compare-dest=/root/dst/ /root/sorce/ /root/dst2/

↓のようにすると差分の無いファイルは転送を行わずに元ディレクトリdstからコピーします
ローカルコピーだとあまり意味はありません
rsync -av --delete-excluded --copy-dest=/root/dst/ /root/sorce/ /root/dst2/

↓のようにすると差分の無いファイルは前回のもののハードリンクになります
ディスク容量を節約できて便利です
rsync -av --delete-excluded --link-dest=/root/dst/ /root/sorce/ /root/dst2/

参考リンク
http://www.itmedia.co.jp/enterprise/articles/0804/25/news034.html </description>
    </item>
    
    <item>
      <title>サクラエディタのブックマークの設定はどこにあるか？</title>
      <link>https://yaasita.github.io/2010/05/05/6774/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/05/6774/</guid>
      <description> C:\Program Files\sakura\sakura.iniの
szMarkあたりがそれっぽい
サクラエディタ全終了→sakura.ini編集→該当ファイル読み込みでOK </description>
    </item>
    
    <item>
      <title>dumpコマンドで取ったバックアップをリストア</title>
      <link>https://yaasita.github.io/2010/05/04/6836/</link>
      <pubDate>Tue, 04 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/04/6836/</guid>
      <description> バックアップしたシステムディレクトリを丸ごとリストアするには
インストールディスクでboot→レスキューモードを選択（Advanced optionsから選択できます）→「インストール環境内でシェルを実行」
/targetに選択したシステムディレクトリがあります。
fsckとかフォーマットとかやる
/targetに該当のフォルダを展開
/restoresymtableを削除しておわり
ディレクトリを移すときはcp -aを指定することcp -prだけでは不十分ハードリンク処理が不十分なので・・・詳しくはこちら
参考リンク
http://chiji.atnifty.com/server/other/ext3backuprestore.html
http://debian.fam.cx/index.php?install </description>
    </item>
    
    <item>
      <title>rsyncでバックアップしてみる</title>
      <link>https://yaasita.github.io/2010/05/04/6815/</link>
      <pubDate>Tue, 04 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/04/6815/</guid>
      <description> 想定する環境はシステムディレクトリが/として/mntに他のHDDがマウントされているときです
何も考えずに
rsync -av --delete / /mnt/201005004/みたいにしてしまうと
/mntにファイルを書き込んだものをrsyncがまたバックアップして・・・というようになりディスクが無駄になります
rsync -av --delete-excluded --exclude=&#39;/mnt/*&#39; / /mnt/201005004/このようにするとうまくいきます。
除外ファイルを/mntと指定してもできますがその場合ディレクトリが作成されないので一応このようにしました。
delete-excludedオプションは除外されたファイルを送信側で削除するオプションです。今回は意味がないですが、前回はあったが、今回は除外したファイルを削除したい！といったときに便利です。
delete-excludedオプションはdeleteオプションも含んでいます
あとこちらの方などの方法を見るとsysとprocディレクトリはバックアップしなくても大丈夫そうです。
実際にdumpで取ったフルバックアップファイルを見てもそこは空になっていました。
まとめると↓のコマンドでおｋ
# today=`date +%Y%m%d`
# mkdir $today
# echo &#34;- /sys/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# echo &#34;- /proc/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# echo &#34;- /mnt/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# rsync -a --delete --delete-excluded --exclude-from=/mnt/exc.txt / /mnt/20100505/※この/mntなどは第一引数で指定したディレクトリを/とみなした相対パスです。rsync -av --exclude-from=exc.txt /mnt /hogeなどとした場合は/mnt/mntが除外対象となります参考リンク
http://www.infoscience.co.jp/technical/rsync/rsync.html </description>
    </item>
    
    <item>
      <title>dumpコマンドでバックアップ</title>
      <link>https://yaasita.github.io/2010/05/03/6856/</link>
      <pubDate>Mon, 03 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/03/6856/</guid>
      <description>まず、この辺を参考にするとシングルユーザーモード→fsckをかけてからやるのが恒例みたいなので、その通りにやる
起動していないのならGRUBメニューのSingle User Modeを選ぶ
起動してないのなら↓のコマンドでランレベルを1に設定
# init 1; exit
あとは適当にumountしていくdevと/(ルート)以外をumountしたら↓のコマンドでリードオンリーで再マウント
# mount -r -n -o remount / 終わったら書き込みありで再マウント
# mount -w -n -o remount /
テープデバイスが無いのでファイルにバックアップなんか適当なディスク装置を/mntにマウントしているとして
# cd /mnt
# dump -0 -uf dump0.dat /
※-uオプションをつけることによってバックアップした日次を/var/lib/dumpdatesに記録している
※対象ディレクトリを/としているが/dev/hda1などと指定してもOK
DUMP IS DONEが出たら終わり
次に差分バックアップをする　↓のコマンドを参照
dump -1 -uf dump1.dat /
差分なのでファイルサイズも小さいし、時間も短いはずです
あと覚えておくといいオプションとして-zという圧縮オプションがあります
こんな感じで使用します
dump -z6 -0uf dump0.dat /dev/hda1
リストアにはrestoreコマンドを使います↓のコマンドで
差分ファイルを眺めることが出来ます
restore -tvf dump1.dat
リストア　※restoresymtableが必要なので必ずレベル0（フルバックアップしたものから展開して下さい）
restore -rf dump0.dat
まとめ
dumpコマンドはバックアップしてひとつのファイルにまとめてくれるというツールです。同じようなバックアップツールにrsyncがありますが、こちらと違うのはアーカイブしていくれるということ（rsync+tarのような動作）。追加されたファイルまで同期しないということです。例えばrestoreコマンドでリストアするときに既にあり、バックアップファイルには無いファイルを消すことは無いです。（フルバックアップした後にありレベル1バックアップの時点で削除されたファイルなどをリストアした場合はちゃんと消えます）
リストアはこちら
参考リンク</description>
    </item>
    
    <item>
      <title>レジストリまで追跡して確実にアンインストール　Revo Uninstaller</title>
      <link>https://yaasita.github.io/2010/05/03/6876/</link>
      <pubDate>Mon, 03 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/03/6876/</guid>
      <description> Revo Uninstaller
というらしい
参考リンク
http://www.forest.impress.co.jp/article/2007/05/29/revouninst.html </description>
    </item>
    
    <item>
      <title>LGのM237WS-PMを買った</title>
      <link>https://yaasita.github.io/2010/05/02/6897/</link>
      <pubDate>Sun, 02 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/02/6897/</guid>
      <description> 液晶モニタで
フルHD　23インチ
外部入力を小さく表示するPIP機能搭載だそうです
結構いい感じ
http://www.yomiuri.co.jp/net/newproducts/related/20090721-OYT8T00183.htm </description>
    </item>
    
    <item>
      <title>スーパーマリオブラザーズ 3-1でやる無限増殖</title>
      <link>https://yaasita.github.io/2010/05/01/6917/</link>
      <pubDate>Sat, 01 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/01/6917/</guid>
      <description> なんで今更こんな投稿するか微妙だけど一応やり方
SFCのスーパーマリオコレクションでやってみた
１．まず二匹いるノコノコの最初を倒すかスルーして↓の画像のように待っている
待っている位置はどこでも良い

２．ノコノコがマリオが居た位置に落ちてくる直前で踏めるタイミングでジャンプする。
踏んだ後は続かないかもしれないのでBボタンを連射しておくと良いかもしれません

参考リンク
永井先生がやった無限増殖　8:55あたりから
【ニコニコ動画】永井兄弟のスーパーマリオブラザーズ Part1
【ニコニコ動画】永井兄弟のスーパーマリオブラザーズ Part2
【ニコニコ動画】永井兄弟のスーパーマリオブラザーズ Part3 </description>
    </item>
    
    <item>
      <title>Dovecotの認証方式をCRAM-MD5に変更する</title>
      <link>https://yaasita.github.io/2010/04/29/6938/</link>
      <pubDate>Thu, 29 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/29/6938/</guid>
      <description> dovecot.confを以下のように変更
auth default {
# Space separated list of wanted authentication mechanisms:
# plain login digest-md5 cram-md5 ntlm rpa apop anonymous gssapi
# NOTE: See also disable_plaintext_auth setting.
mechanisms = plain cram-md5
}

パスワードファイル指定
passdb passwd-file {
# Path for passwd-file
args = /etc/dovecot/cram-md5.pwd
}

あとは↑で指定した/etc/dovecot/cram-md5.pwdを作る
# dovecotpw Enter new password: password
Retype new password: password
{CRAM-MD5}26b633ec8bf9dd526293c5897400bddeef9299fad

↑で出たものを参考にし、/etc/dovecot/cram-md5.pwdを作成
usename:{CRAM-MD5}26b633ec8bf9dd526293c5897400bddeef9299fad

参考リンク
公式Wiki </description>
    </item>
    
    <item>
      <title>rep2をオンメモリーにして高速化2</title>
      <link>https://yaasita.github.io/2010/04/25/6959/</link>
      <pubDate>Sun, 25 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/25/6959/</guid>
      <description> タイトルはrep2の話ですが起動時、終了時のスクリプトの実行方法を書きます。
シャットダウンスクリプト、スタートアップスクリプトとも呼ばれます。
Linuxの起動、終了時の処理は/etc/inittabに書かれています。
例えばshutdown -r nowと再起動コマンドを実行した場合
ランレベルは6になりPCの電源が落ち、立ち上がったときに2になりますつまり
inittabの↓のが有効になり（書式についてはman inittab参照)
/etc/init.d/rc 6が実行されます(6という引数とともにrcスクリプトが実行されるという意味）
l6:6:wait:/etc/init.d/rc 6
次に2になった場合は
↓が有効になり/etc/init.d/rc 2が実行されます
l2:2:wait:/etc/init.d/rc 2
再起動の場合は6→2という遷移
停止の場合は0になって電源ボタンを押した後に2になります
停止の前にHDDにデータ（rep2）を退避し、
起動後にHDDからメモリに展開すればよさそうです
今回は/etc/init.d/rcの先頭に以下のスクリプトを仕込みました
if [ &#34;$1&#34; = &#34;0&#34; ] || [ &#34;$1&#34; = &#34;6&#34; ]
then
rsync -av --delete /dev/shm/rep2mem/ /var/www/rep2_bk/
elif [ &#34;$1&#34; = &#34;2&#34; ]
then
mkdir /dev/shm/rep2mem
rsync -av --delete /var/www/rep2_bk/ /dev/shm/rep2mem/
fi
/etc/init.d/rcに書かないでやる方法はこちら
参考リンク
http://wikiwiki.jp/disklessfun/?exec-cmd </description>
    </item>
    
    <item>
      <title>rep2をオンメモリーにして高速化</title>
      <link>https://yaasita.github.io/2010/04/24/6979/</link>
      <pubDate>Sat, 24 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/24/6979/</guid>
      <description> rep2をメモリ上に配置することによって高速化してみた (例のごとくDebian Lennyで・・・)
手順は/dev/shmにrep2をインストールする（インストール手順はこちら）
1.インストールしてdataフォルダ作る＋.htaccessを配置＋外部リンク設定
2.前回やったみたいにログ整理のスクリプトを設定
3./var/wwwがドキュメントルートなので/dev/shmにシンボリックリンクを張る（apache設定ファイルのOptionsにFollowSymLinksが設定されている必要がある）
4.rsyncでローカルディレクトリにバック日次で同期させる↓の様なスクリプトを書いた
#!/bin/bash
rsync -av --delete /dev/shm/rep2mem /var/www/rep2mem_bk5.システム終了時も行いたいので
/etc/init.d/rcの先頭にも↑の行を書いておく（参考リンク）
この起動時と終了時のメモリ退避＆戻しの話は長くなるのでこちらで話します
---
メモリに配置させるためあんまり容量がないためログ整理はやらなくてはならないので3の手順が必要
また、/dev/shmはメモリなのでPCが再起動などしてしまうと内容が消えてしまうため4からの手順が必要 </description>
    </item>
    
    <item>
      <title>重複ファイルを削除するfdupesというソフト</title>
      <link>https://yaasita.github.io/2010/04/05/6999/</link>
      <pubDate>Mon, 05 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/05/6999/</guid>
      <description> Debian Lennyで試した
↓で重複ファイルのリスト出力
$ fdupes -r /var/samba/tyouhuku/

↓で重複ファイルを自動削除
$ fdupes -d -N -r /var/samba/tyouhuku/

参考リンク
http://ubulog.blogspot.com/2009/01/ubuntu.html
その他重複ファイル探すソフト
http://en.wikipedia.org/wiki/List_of_duplicate_file_finders </description>
    </item>
    
    <item>
      <title>/procなどの情報ファイルを定期的に見るには</title>
      <link>https://yaasita.github.io/2010/03/14/7020/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7020/</guid>
      <description> ↓コマンドを打つと1秒毎に自動的にコマンドを発行し、フルスクリーンで実行してくれる。
watch -n 1 
たとえばこんな感じでRAID情報を見るとか
watch -n 1 cat /proc/mdstat </description>
    </item>
    
    <item>
      <title>Firefox3.6でタブを開くときに一番右に開くようにする</title>
      <link>https://yaasita.github.io/2010/03/14/7040/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7040/</guid>
      <description> about:config
↓
browser.tabs.insertRelatedAfterCurrent
をFalseにする </description>
    </item>
    
    <item>
      <title>mdadmでRAID1を構築</title>
      <link>https://yaasita.github.io/2010/03/14/7060/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7060/</guid>
      <description> 基本的に↓に書いてあるとおりにやればできた
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/a060raid1.html
1.aptitudeでインストール
2.↓のコマンドでRAIDを構築（上記とは違いパーティション指定じゃなくてデバイス指定でやってみた）
mdadm --create /dev/md0 --level=raid1 --raid-devices=2 /dev/hdb /dev/hdd
3.md0は普通のデバイスなのでfdiskなりmkfsなり好きなようにする
4.↓のコマンドで停止
mdadm --misc --stop /dev/md0↓のコマンドで再構成
mdadm --assemble /dev/md0 /dev/hdb /dev/hdd
5.ここで
dd if=/tmp/crash.dat of=/dev/hdbと打ってHDDを破壊
6.下記コマンドでhdbに不良マークをつける
mdadm --manage /dev/md0 -f /dev/hdbそんでアレイから削除
mdadm --manage /dev/md0 -r /dev/hdbそんで（実際には交換して）アレイに追加
mdadm --manage /dev/md0 --add /dev/hdb
7.次回起動時も有効にするには？
なんかいろいろなサイトで/etc/mdadm/mdadm.confを手動で更新してたけど
バージョンの違いか分からないが勝手に編集されていた
今回試したバージョンは↓
mdadm - v2.6.7.2 - 14th November 2008
※watchコマンドを駆使すればcat /proc/mdstatが見やすくなる詳しくはこちら
参考リンク
http://masy.families.jp/diary/?20080815
http://hellokitty68.main.jp/wiki/Mdadm
http://www.ioss.jp/sohodiy/mdadm8-1_5.html </description>
    </item>
    
    <item>
      <title>root→一般ユーザにsuで入ったときにscreenが動かない</title>
      <link>https://yaasita.github.io/2010/03/10/7081/</link>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/10/7081/</guid>
      <description> なんでかは知らないけど
そういうものらしいです下記のエラーが出ます
Cannot open your terminal &#39;/dev/pts/0&#39; - please check.
こうやってSHLVLを上げると解決するらしい
script /dev/null
参考リンク
http://d.hatena.ne.jp/reboot66/20090612/p1 </description>
    </item>
    
    <item>
      <title>UNIXで空ファイルを作る方法いろいろ</title>
      <link>https://yaasita.github.io/2010/03/10/7101/</link>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/10/7101/</guid>
      <description> touch以外にもこんなにあった
http://d.hatena.ne.jp/japanrock_pg/?of=3 </description>
    </item>
    
    <item>
      <title>MPC HC デュアルディスプレイで動画再生すると真っ黒になる</title>
      <link>https://yaasita.github.io/2010/03/07/7121/</link>
      <pubDate>Sun, 07 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/07/7121/</guid>
      <description> &amp;amp;nbsp;なんか知らんがこうすると直った
参考リンク
http://tools4hack.blog21.fc2.com/blog-entry-2.html
Google検索 </description>
    </item>
    
    <item>
      <title>スーパーπをVistaマシンで試してみる</title>
      <link>https://yaasita.github.io/2010/03/07/7142/</link>
      <pubDate>Sun, 07 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/07/7142/</guid>
      <description> 
こんな感じな結果になった
スペックは以下のとおり
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; </description>
    </item>
    
    <item>
      <title>Googleの公開DNS</title>
      <link>https://yaasita.github.io/2010/03/06/7183/</link>
      <pubDate>Sat, 06 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/06/7183/</guid>
      <description> 設定してみた
プライマリが8.8.8.8
セカンダリが8.8.4.4
だそうです

GIGAZINE記事 </description>
    </item>
    
    <item>
      <title>Super π (スーパーパイ)をPhenomⅡで</title>
      <link>https://yaasita.github.io/2010/03/06/7204/</link>
      <pubDate>Sat, 06 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/06/7204/</guid>
      <description> AMD Phenom II X4 945 Box (Socket AM3)で計ってみた
スペックは前に書いたとおり
 </description>
    </item>
    
    <item>
      <title>WindowsXPで自動再生を無効化する</title>
      <link>https://yaasita.github.io/2010/03/06/7163/</link>
      <pubDate>Sat, 06 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/06/7163/</guid>
      <description> CDを入れたときの自動再生を無効化するには
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer]
&#34;NoDriveTypeAutoRun&#34;=dword:000000b5
参考リンク
http://www.mnet.ne.jp/~angie/kbase/xp-autorun.html </description>
    </item>
    
    <item>
      <title>mercurialのGUIクライアントTortoiseHgの日本語化</title>
      <link>https://yaasita.github.io/2010/03/05/7226/</link>
      <pubDate>Fri, 05 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/05/7226/</guid>
      <description> 前回の記事からずいぶんたったけどWindows版をインストールしたのでメモ
1.ダウンロード・インストール
ここからtortoisehg-0.9.3-hg-1.4.3.exe all-in-one installer with TortoiseHg 0.9.3 and Mercurial 1.4.3 っていうのをダウンロード＆インストール＆再起動
2.日本語化
C:\Program Files\TortoiseHg\cmenu_i18n\thg-cmenu-ja.regを実行レジストリ書き換え→ログオフしてからログインで反映
3.外部ツールの導入
http://www.02.246.ne.jp/~torutk/mercurial/intro.html
↑とか見るとWinMergeとか便利そうだなKdiff3とかは元からはいってるっぽい
今日はここまで </description>
    </item>
    
    <item>
      <title>PCを新調したので恒例のFFベンチをやってみる</title>
      <link>https://yaasita.github.io/2010/02/27/7246/</link>
      <pubDate>Sat, 27 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/27/7246/</guid>
      <description> 前回とどのくらい変わってるか試した
スコアは4307だった
ちなみにこのマザーでBIOS(Winbond 25X80AVA1Z 0924)の更新しようとしたら吹っ飛んだんで、業者にお願いして交換した
ソケットタイプ（PDIP）なので交換できます。
【 .CPU.　】 AMD Phenom II X4 945 Box (Socket AM3)
【 Mem 】 KVR1333D3N9K2/4G (DDR3 2G x 2)
【　M/B　】ASRock M3A770DE
【　VGA 】XIAiAF4850-512XD3 Green
【VGAﾄﾞﾗｲﾊﾞ】
【　DirectX....】 DirectX9.0c
【　Sound 】
【 OS 】Windows XP SP3 professional
【 HDD 】WD5000AAKS
【 Ver . 】
▼スコア
【　.Low　】
【　High　.】4307
リンク
FINAL FANTASY XI for Windowsオフィシャルベンチマークソフト3のスコアについて </description>
    </item>
    
    <item>
      <title>よく戸惑うThunderbirdのメール形式(HTMLかプレーンテキストか)</title>
      <link>https://yaasita.github.io/2010/02/23/7266/</link>
      <pubDate>Tue, 23 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/23/7266/</guid>
      <description> Mozilla公式によると
Thunderbird のメッセージ作成ウィンドウはメッセージの内容に応じて自動的にテキスト形式と HTML 形式を切り替えます。手動でメッセージの形式を変更する場合は [オプション] &amp;amp;gt; [書式] から変更できます。
また Thunderbird 上のメールツールバーにある [作成] ボタンを Shift キーを押しながらクリックするとテキスト形式しか利用できないメッセージ作成ウィンドウが表示されます。常にテキスト形式のメッセージしか使用しない場合は、メニューバーの [ツール] &amp;amp;gt; [アカウント設定] を開きます。そしてテキスト形式でのみ使用したいアカウントの名前を選択し、[編集とアドレス入力] 内の [HTML 形式でメッセージを編集する] のチェックを外し、[アカウント設定] ダイアログの [OK] ボタンを押します。
だそうでShift押しながら作成ボタンとかで切り替えが可能みたいです。
あと注意しなければならないのは「アカウントの設定」からHTML形式でメッセージを編集するのチェックをはずした場合作成ウィンドウに「オプション」－＞「表示」が表示されません
※またはオプション→送信形式を見てください </description>
    </item>
    
    <item>
      <title>ライブカメラを検索する</title>
      <link>https://yaasita.github.io/2010/02/21/7286/</link>
      <pubDate>Sun, 21 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/21/7286/</guid>
      <description> inurl:ViewerFrame?Mode=で検索
2ch記事
ちょｗグーグルで「inurl:ViewerFrame?Mode= 」って検索してみｗｗｗ </description>
    </item>
    
    <item>
      <title>ドラゴンを操作して敵を倒すシューティングゲーム</title>
      <link>https://yaasita.github.io/2010/02/14/7308/</link>
      <pubDate>Sun, 14 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/14/7308/</guid>
      <description>FLASHで出来てる
マウスで操作、スペースでボム
http://armorgames.com/play/4720/skyfyre
参考記事
http://himatubu.seesaa.net/article/130955400.html</description>
    </item>
    
    <item>
      <title>HTML5でペイントソフト</title>
      <link>https://yaasita.github.io/2010/02/11/7328/</link>
      <pubDate>Thu, 11 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/11/7328/</guid>
      <description> これは凄い
http://mugtug.com/sketchpad/
参考リンク
http://yebo-blog.blogspot.com/2010/02/html5.html </description>
    </item>
    
    <item>
      <title>マリオペイントのハエ叩きは何週目まであるか？</title>
      <link>https://yaasita.github.io/2010/02/07/7348/</link>
      <pubDate>Sun, 07 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/07/7348/</guid>
      <description> ハエ叩きは1面→2面→3面と難易度が上がり、3面をクリアすると1面に戻ります。
戻った際には何週クリアしたかを表すマークが画面左上に出ます。
これは1週クリアした場合は星、2周目ならマリオ、3周目ならピーチという様に毎回違うマークが表示されます。 
このマークは何周目まで出るかというと15周目まで出ます。

15周目以降はマークが消えて、また1面からやり直しになります。

周回数を重ねるごとにライフ（手の形をしたアイテム）が手に入りにくくなります。
チートコード無しに15周クリアするのは難しいかもしれません。 </description>
    </item>
    
    <item>
      <title>muttでキーバインドを変更するには？</title>
      <link>https://yaasita.github.io/2010/02/01/7369/</link>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/01/7369/</guid>
      <description> .muttrcを以下のように編集するとよい
bind &amp;amp;lt;map&amp;amp;gt; &amp;amp;lt;key&amp;amp;gt; &amp;amp;lt;function&amp;amp;gt;
&amp;amp;lt;map&amp;amp;gt; ... いつ使うかを記述 index,pagerなどを指定します。その状態の画面で？（ヘルプ）画面を出せばそこがどの画面か分かります。（ちなみにヘルプ画面はpagerです）
&amp;amp;lt;key&amp;amp;gt; ... 設定するキーを指定。指定方法はヘルプ画面と同様
&amp;amp;lt;function&amp;amp;gt; ... 実行する機能を記述。ヘルプ画面と同様。(next-line,previous-line等を指定)
で実際にはこんな感じで設定してる
vimみたいにjkで画面を上下させたいので・・・
.muttrc
 set folder=&#34;~/Maildir&#34;
set spoolfile=&#34;~/Maildir&#34;
set keep_flagged=yes
set mbox=&#34;&#34;
set postponed=&#34;/tmp/postponed&#34;
set sort=&#34;reverse-date-received&#34;
#スクロールして最後までいっても次のメッセージに飛ばない
set pager_stop=yes
#PAGERを変えたくなったらここに指定
#set pager=lv
#key bind setting
bind pager j next-line
bind pager k previous-line
bind pager J next-undeleted
bind pager K previous-undeleted
#Ctrl-Dで半ページスクロール下
bind pager &#34;\Cd&#34; half-down
#Ctrl-Uで半ページスクロール上
bind pager &#34;\Cu&#34; half-up

参考リンク
http://www12.atwiki.jp/linux2ch/pages/107.html </description>
    </item>
    
    <item>
      <title>youtubeで全自動作業用BGM作成</title>
      <link>https://yaasita.github.io/2010/01/26/7390/</link>
      <pubDate>Tue, 26 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/26/7390/</guid>
      <description> ↓に歌手、グループを入れる
http://www.youtube.com/disco
ワラノート記事 </description>
    </item>
    
    <item>
      <title>原寸画像検索</title>
      <link>https://yaasita.github.io/2010/01/23/7410/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/23/7410/</guid>
      <description> 原寸大で画像検索が出来るサイト
http://gensun-images.com/ </description>
    </item>
    
    <item>
      <title>TightVNCをインストールしてみた</title>
      <link>https://yaasita.github.io/2010/01/11/7430/</link>
      <pubDate>Mon, 11 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/11/7430/</guid>
      <description> Windows版のTightVNCを試してみた
公式サイトから「Self-installing package for Windows」を落としてみてインストール使用した感じはRealVNCより軽い感じがする・・・
使い方１　サービスとして起動する
スタートメニュー⇒ TightVNC ⇒ Administration　⇒ Install VNC Serviceを選んでクリック
コンパネの管理ツール⇒サービスを見てVNC Serverがあるのを確認する（制御はここで行う）

で設定はスタートメニュー⇒ TightVNC ⇒ Administration ⇒　Show Default Settingsからどうぞ
ちなみに設定でログを採取する設定にした際に作られる場所はC:\WINDOWS\system32の中のWinVNC.log
注意）上記の設定で手動で起動した場合タスクトレイに表示されないが再起動すると表示される

使い方２　ユーザーモードで起動する
スタートメニュー⇒ TightVNC ⇒ Launch TightVNC Serverで起動
ユーザーモードならタスクトレイにアイコンが出るのでそこを右クリックして設定を開いても良いし、
TightVNCの中にあるShow User Settingsで設定を開いても良い。
ちなみにログを採取するように設定した場合の吐き出される場所はC:\Program Files\TightVNCの中のWinVNC.log
あとWindows版のVNCはUNIXのようなconfファイルを使用しないので以下のレジストリに設定を保存する
HKEY_LOCAL_MACHINE\Software\ORL\WinVNC3
HKEY_CURRENT_USER\Software\ORL\WinVNC3 </description>
    </item>
    
    <item>
      <title>SE出世双六</title>
      <link>https://yaasita.github.io/2010/01/08/7451/</link>
      <pubDate>Fri, 08 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/08/7451/</guid>
      <description> SEの出世を目指すすごろく
http://www.seshop.com/detail.asp?pid=8557
日立記事
http://www.hitachi-system.co.jp/press/2007/pr071217.html
スラド
http://slashdot.jp/comments.pl?sid=383856&amp;amp;threshold=1&amp;amp;commentsort=3&amp;amp;mode=thread&amp;amp;pid=1267369 </description>
    </item>
    
    <item>
      <title>Windows VistaのインデックスDBの場所は？</title>
      <link>https://yaasita.github.io/2010/01/03/7491/</link>
      <pubDate>Sun, 03 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/03/7491/</guid>
      <description> C:\ProgramData\Microsoft\Search\Data\Applications\Windows
の
Windows.edb
がそれっぽい
http://d.hatena.ne.jp/hideakii/20091206/1260060928
http://allabout.co.jp/computer/windows/closeup/CU20080414A/ </description>
    </item>
    
    <item>
      <title>“元”エンジニアの告白辞めたワケと今のキモチ</title>
      <link>https://yaasita.github.io/2010/01/03/7471/</link>
      <pubDate>Sun, 03 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/03/7471/</guid>
      <description> SEから他業種に転職した人の話
http://rikunabi-next.yahoo.co.jp/tech/docs/ct_s03600.jsp?p=000846 </description>
    </item>
    
    <item>
      <title>最近、Mercurial について勉強しているのでメモ</title>
      <link>https://yaasita.github.io/2009/12/26/7511/</link>
      <pubDate>Sat, 26 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/26/7511/</guid>
      <description> リンクメモ
日本語チュートリアル
GUIツールのTortoiseHg
TortoiseHgの日本語Wiki
オラ本のPDFを配布してるとこ </description>
    </item>
    
    <item>
      <title>Bingで萌えキャンペーン</title>
      <link>https://yaasita.github.io/2009/12/24/7551/</link>
      <pubDate>Thu, 24 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/24/7551/</guid>
      <description> http://campaign.live.jp/bing/
検索しまくるとなんか壁紙とかもらえるらしい </description>
    </item>
    
    <item>
      <title>Debian でIPアドレスを固定にする</title>
      <link>https://yaasita.github.io/2009/12/24/7531/</link>
      <pubDate>Thu, 24 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/24/7531/</guid>
      <description> /etc/network/interfacesを編集する
下みたいになっているのを
# The loopback network interface
auto lo
iface lo inet loopback
# The primary network interface
allow-hotplug eth0
iface eth0 inet dhcp
↓の様に直す（192.168.0.11）にする場合
# The loopback network interface
auto lo
iface lo inet loopback
# The primary network interface
allow-hotplug eth0
iface eth0 inet static
address 192.168.0.11
netmask 255.255.255.0
gateway 192.168.0.1
直したら
#ifdown eth0
#ifup eth0
でおｋ
# /etc/init.d/networking restart
でもいけるがその場合は↓を書いておくこと(ifup -aの対象となる)
auto eth0
※VirtualPCではallow-hotplugはコメントアウトしておいた方がよさげ
参考リンク
http://asaasa.tk/wiki/?Debian%2FSettings%2FStaticIP </description>
    </item>
    
    <item>
      <title>mp3のエンコードが出来るプレイヤーみたいなソフトって？？</title>
      <link>https://yaasita.github.io/2009/12/23/7572/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/23/7572/</guid>
      <description> SCMPXです </description>
    </item>
    
    <item>
      <title>screenで開始するときの初期画面を表示しない</title>
      <link>https://yaasita.github.io/2009/12/23/7592/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/23/7592/</guid>
      <description> 免責事項とかCopyrightとかを表示しないようにするには
~/.screenrcに
startup_message offと書いておく </description>
    </item>
    
    <item>
      <title>bashで端末ロック機能を解除する</title>
      <link>https://yaasita.github.io/2009/12/20/7613/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7613/</guid>
      <description> Ctrl+Sを押すと端末がロックしてしまうのが不便だと感じたら
↓を.bashrcなどに書いておく
stty stop undef
参考リンク
http://www.mazn.net/blog/2007/12/17/42.html </description>
    </item>
    
    <item>
      <title>Debian LennyをVirtualPC2007へインストール</title>
      <link>https://yaasita.github.io/2009/12/20/7654/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7654/</guid>
      <description> 試した環境は以下の通り
VirtualPC 6.0.156.0
Debian Lenny 最小のCDイメージ　バージョンは5.0.3
↓のサイトとかを参考にするとどうやらインストール時にパラメータを追加しないといけないらしいので
http://hiro-system.blog.ocn.ne.jp/blog/2009/03/debian_lennyvir_5b2e.html
インストール時にquit を取ってから&#34;noreplace-paravirt vga=791 clock=pit&#34;を追加する
（インストール時はまだ日本語配列ではないので=イコールのタイプには注意する）
参考リンクには/boot/grub/menu.lstを編集、update-grubするようなことが書いてあるけどなんかインストール時に指定したパラメータが有効になって既にmenu.lstに反映されていたので省く。あとGUIも使わないのでそこら辺も無視した。
参考リンク
Debian Wiki </description>
    </item>
    
    <item>
      <title>rep2の過去ログをtmpreaperを使って整理</title>
      <link>https://yaasita.github.io/2009/12/20/7633/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7633/</guid>
      <description>OpenJaneとかにはDAT落ちしたものを整理（削除）する機能があるけどrep2にはないのでtmpreaperで実装する
やり方はrep2/data直下にあるファイルはお気に入りとかなんで削除しない
それ以外は削除するっていう方法で行う
↓みたいなのをcronとかに保存しておけばいいんじゃないかな
#!/usr/bin/perl
use strict;
use warnings;
#### Initial Setting ###############
our $DAT_DIR=&#34;/var/www/rep2/data&#34;;
####################################
chdir ($DAT_DIR) or die $!;
unless ($DAT_DIR=~/\/$/){
$DAT_DIR.=&#34;/&#34;; #最後が/で終わってなかったら付け足す
}
opendir (DIR,$DAT_DIR) or die $!;
my @dir=readdir DIR;
my @fdir;
for (@dir){
push (@fdir,$_) if -f $_;
}
closedir DIR;
my $command;
$command = &amp;amp;lt;&amp;amp;lt; &#39;PRE&#39;;
nice -n10 tmpreaper --delay=30 --mtime-dir --symlinks 7d \
--showdeleted \
--mtime \
PRE
for (@fdir){
$command.=&#34;--protect &#39;$DAT_DIR&#34;.$_.&#34;&#39; \\\n&#34;</description>
    </item>
    
    <item>
      <title>Thunderbird3も出たことなのでコレクションを作っておく</title>
      <link>https://yaasita.github.io/2009/12/13/7696/</link>
      <pubDate>Sun, 13 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/13/7696/</guid>
      <description> Thunderbirdの方のコレクション
俺のアドオン（雷鳥）
Firefoxの方のコレクション
俺のアドオン（火狐） </description>
    </item>
    
    <item>
      <title>天気予報をical形式で配信してるところ</title>
      <link>https://yaasita.github.io/2009/12/13/7676/</link>
      <pubDate>Sun, 13 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/13/7676/</guid>
      <description> iCal天気
通常のicsの他にGoogle用とMac用も配ってる </description>
    </item>
    
    <item>
      <title>携帯でrep2見てるときに外部リンクを通勤ブラウザ以外に設定する</title>
      <link>https://yaasita.github.io/2009/12/12/7717/</link>
      <pubDate>Sat, 12 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/12/7717/</guid>
      <description>通勤ブラウザは重いしイマイチ使い勝手が良くなかったのでGoogleのGWT(Google Wireless Transcoder)を使う
rep2/lib/ShowThreadK.php を編集すればおｋ
650行目あたりの
// 通勤ブラウザ
if ($_conf[&#39;k_use_tsukin&#39;]) {
$tsukin_url = &#39;http://www.sjk.co.jp/c/w.exe?y=&#39; . urlencode($url);
if ($_conf[&#39;through_ime&#39;]) {
$tsukin_url = P2Util::throughIme($tsukin_url);
}
$ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; . hs($tsukin_url) . &#39;&#34;&amp;amp;gt;通&amp;amp;lt;/a&amp;amp;gt;&#39;;
}
↑を↓の様に変更
// 通勤ブラウザ
if ($_conf[&#39;k_use_tsukin&#39;]) {
// $tsukin_url = &#39;http://www.sjk.co.jp/c/w.exe?y=&#39; . urlencode($url);
$tsukin_url = &#39;http://www.google.co.jp/gwt/x?u=&#39; . urlencode($url);
if ($_conf[&#39;through_ime&#39;]) {
$tsukin_url = P2Util::throughIme($tsukin_url);
}
// $ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; . hs($tsukin_url) . &#39;&#34;&amp;amp;gt;通&amp;amp;lt;/a&amp;amp;gt;&#39;;
$ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; .</description>
    </item>
    
    <item>
      <title>DovecotのTrashフォルダはどこにあるのか？</title>
      <link>https://yaasita.github.io/2009/12/06/7759/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7759/</guid>
      <description> それぞれ~/Maildirの中のドットファイルでしたls -aしたら見つかります
/Maildir/.Sent
/Maildir/.Trash
/Maildir/.Drafts
/Maildir/.Junk </description>
    </item>
    
    <item>
      <title>perlモジュールを作るための雛形を作る h2xs コマンド</title>
      <link>https://yaasita.github.io/2009/12/06/7820/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7820/</guid>
      <description>↓みたいな感じで雛形を作る
h2xs -X -A HogeModule
参考リンク
http://torus.jp/memo/x200311/PerlModule.rd.html
モジュールの最後にPODも追加してくれて便利
__END__
# Below is stub documentation for your module. You&#39;d better edit it!
=head1 NAME
HogeModule - Perl extension for blah blah blah
=head1 SYNOPSIS
use HogeModule;
blah blah blah
=head1 DESCRIPTION
Stub documentation for Okyama, created by h2xs. It looks like the
author of the extension was negligent enough to leave the stub
unedited.
Blah blah blah.
=head2 EXPORT
None by default.</description>
    </item>
    
    <item>
      <title>Windowsのコマンドプロンプト(DOS窓)でディレクトリコピー</title>
      <link>https://yaasita.github.io/2009/12/06/7800/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7800/</guid>
      <description> フォルダの再帰的なコピーには
xcopyを使いましょう
xcopy /?で詳しくみれます
例）E:ppmというディレクトリを再帰的に全部コピー
xcopy /E /I /Y E:\ppm D:\ppm_backup\ppm2
参考リンク
http://www5.ocn.ne.jp/~m-shin/windows/windows-bat-xcopy.html </description>
    </item>
    
    <item>
      <title>Windowsのコマンドプロンプト(DOS窓)でディレクトリ削除</title>
      <link>https://yaasita.github.io/2009/12/06/7780/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7780/</guid>
      <description> ディレクトリごと再帰的に削除するには
rmdirコマンドを使います
UNIXでいうところのrm -rみたいな
rmdir /S /Q hogedir
参考リンク
http://sonic64.com/2006-04-05.html </description>
    </item>
    
    <item>
      <title>メールをCUIで読むソフト mutt</title>
      <link>https://yaasita.github.io/2009/12/06/7738/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7738/</guid>
      <description> インストールはDebian Lennyならaptitudeで簡単に入る
そんで使い方
基本的な使い方とかはこことか見れば大体分かる
Maildirを指定して
mutt -f ~/Maildirこれでとりあえず見れる
メールボックスとかは一々指定するのは面倒なので~/.muttrcを作成して
set folder=&#34;~/Maildir&#34;
set spoolfile=&#34;~/Maildir&#34;
set keep_flagged=yes
set mbox=&#34;&#34;
set postponed=&#34;/tmp/postponed&#34;
set sort=&#34;reverse-date-received&#34;
↑みたいなのを書いておく意味はここら辺を見るとわかるかも
設定ファイルを書けば以降はmuttのみで起動できる
mutt操作方法
PageUpとPageDownで次とか後のメールを選択（vim風にjkでもできるけど削除が選択できない）
?でヘルプ
mで新規メール作成
参考リンク
http://www.emaillab.org/mutt/whatis.html </description>
    </item>
    
    <item>
      <title>postfixでOP25B対策</title>
      <link>https://yaasita.github.io/2009/12/05/7861/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/05/7861/</guid>
      <description> OP25Bを実施しているISPの場合、25番ポートへの出力が制限されているからリレーしてもらうように設定する
/etc/postfix/main.cfを編集 (hoge.ne.jpがSMPTサーバーだとする）
ispauthはユーザー名とパスワードを書くファイル名前はなんでもOK
relayhost = [hoge.ne.jp]:587
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/ispauth
smtp_sasl_security_options = noanonymous
smtp_sasl_mechanism_filter = cram-md5,login,plain
ispauthには以下のようなものを書く
[プロバイダのSMTPサーバー]:587 プロバイダのユーザーID:プロバイダのパスワード
サーバーがhoge.ne.jp、ログインIDがfoobar、パスワードがbuzzだった場合は以下のように書く
[hoge.ne.jp]:587 foobar:buzz

そんで以下のコマンド投入
chmod 640 /etc/postfix/ispauth
postmap /etc/postfix/ispauth
/etc/rc.d/init.d/postfix restart
参考リンク
http://centos.server-manual.com/postfix_op25b.html
smtp_sasl_mechanism_filterはそのSMPTサーバーが使っているものにあわせるのでそれを確認する
telnet hoge.ne.jp 587
EHLO hoge.ne.jp
↓みたいなのが出たら↑の設定でOK
250-AUTH CRAM-MD5 PLAIN LOGIN
参考リンク
http://www.aconus.com/~oyaji/mail2/op25b.htm
※注意 SMTP認証を使う場合はlibsasl2-modulesがインストールされていることを確認してください

どうしても出来なかったら↓みたいな感じでパケットキャプチャー→Wiresharkで見て考える感じで
tcpdump -s 1500 ip host ?.?.?.? -w out.cap
 </description>
    </item>
    
    <item>
      <title>定期的に/tmpを掃除してくれるソフトtmpreaper</title>
      <link>https://yaasita.github.io/2009/12/05/7840/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/05/7840/</guid>
      <description> Debian Lennyで試した。
Red hat系だとtmpwatchとかあるみたいだけど無いのでこれを使う
まずはaptitudeでインストール
インストールすると/etc/cron.daily/tmpreaperが作成される
これによって毎日cronで実行される
設定はこれをいじってもできるが基本的には
/etc/tmpreaper.confをいじる
まずはワーニングが出るので13行目あたりにあるSHOWWARNINGをコメント化する
#SHOWWARNING=true

次にオプションを設定する各オプションの意味は以下の通り
TMPREAPER_TIME・・・どのくらいアクセスがないファイルを削除するか？設定値はデフォルトで7dつまり7d以上アクセスがないと削除
TMPREAPER_PROTECT_EXTRA・・・削除しては駄目な名前を指定
TMPREAPER_DIRS・・・削除の対象とするディレクトリ　デフォルトは/tmpのみ 複数指定するときはスペースで区切る　例）TMPREAPER_DIRS=&#39;/tmp/. /var/tmp/.&#39;
TMPREAPER_DELAY・・・実行するまで待つ時間　デフォルトは256秒
TMPREAPER_ADDITIONALOPTIONS・・・他に指定したいオプションがある場合はこここに入れる他のオプションはmanを参照
あと/etc/cron.daily/tmpreaper見れば分かるけど
デフォルトで
以下のオプションが設定されている。ヤバイファイルは消えないようにしているようだ
--protect &#39;/tmp/.X*-{lock,unix,unix/*}&#39; \
--protect &#39;/tmp/.ICE-{unix,unix/*}&#39; \
--protect &#39;/tmp/.iroha_{unix,unix/*}&#39; \
--protect &#39;/tmp/.ki2-{unix,unix/*}&#39; \
--protect &#39;/tmp/lost+found&#39; \
--protect &#39;/tmp/journal.dat&#39; \
--protect &#39;/tmp/quota.{user,group}&#39; \

※注意
デフォルトのシェルだと--ctimeが設定されています↓みたいに
nice -n10 tmpreaper --delay=$TMPREAPER_DELAY --mtime-dir --symlinks $TMPREAPER_TIME \
$TMPREAPER_ADDITIONALOPTIONS \
--ctime \
これだとcronでlocateのDBを作っているので、アクセスタイムが更新され
いつまで経っても削除されません。（ctimeオプションはatime+ctimeのチェックをします）
用途によってはここを--mtimeに変更してもいいと思います
 </description>
    </item>
    
    <item>
      <title>dovecotでQuota設定</title>
      <link>https://yaasita.github.io/2009/12/01/7882/</link>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/01/7882/</guid>
      <description> メールの容量を制限する（クォータの設定）するには？
Plugin settingsの部分に以下を追記
↓がグローバルなクォータ設定（ユーザー個別に設定すればそちらが優先される）
参考リンク→http://wiki.dovecot.org/Quota/1.0
plugin {
quota = maildir:storage=10240:messages=1000
}
上記の設定後
protocol imapに次の文を追記
参考リンク→http://wiki.dovecot.org/Quota/1.0
protocol imap {
mail_plugins = quota imap_quota
}
Thunderbirdで試すとクォータが有効なら↓のようなメッセージが出る

で、クォータ当てただけじゃ不便だから古いメッセージから自動で削除してくれるように設定するにはTrashプラグインを使う
protocol imap {
mail_plugins = quota imap_quota trash
}
plugin {
quota = maildir:storage=10240:messages=1000
trash = trash = /etc/dovecot/dovecot-trash.conf
}
さっき指定したdovecot-trash.conf　(無ければ作る）　を編集する
↓はTrashだけ削除の対象とする例
1 Trash
↑のファイルを1行つくればOK </description>
    </item>
    
    <item>
      <title>Windowsのソースコードのステップ数（目安）</title>
      <link>https://yaasita.github.io/2009/11/30/7904/</link>
      <pubDate>Mon, 30 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/30/7904/</guid>
      <description> こんな感じらしい
Windows NT⇒400万行
Windows 95⇒1,500万行
Windows XP⇒3,500万行
Windows Vista⇒5,000万行http://blog.development-network.net/ung/2006/10/post_54.html </description>
    </item>
    
    <item>
      <title>ブラウザで動くvi</title>
      <link>https://yaasita.github.io/2009/11/28/7944/</link>
      <pubDate>Sat, 28 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/28/7944/</guid>
      <description> jsviというらしい
http://gpl.internetconnection.net/vi/
参考リンク
http://yebo-blog.blogspot.com/2009/11/emacs.html </description>
    </item>
    
    <item>
      <title>各種言語のソースコードからStepを計算してくれるソフト</title>
      <link>https://yaasita.github.io/2009/11/28/7924/</link>
      <pubDate>Sat, 28 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/28/7924/</guid>
      <description> Blue Step Counter
http://bluecard.no-ip.com/freeware/bluestepcounter/ </description>
    </item>
    
    <item>
      <title>IMAPを使ってメールを送受信するときOutlookとThunderbirdで使用フォルダが違う</title>
      <link>https://yaasita.github.io/2009/11/23/8004/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/23/8004/</guid>
      <description> IMAPで送受信するとそれが違う風になってしまう
使用しているフォルダは下の設定画面の購読するフォルダを管理するから確認できる

↓がその画面


Thunderbird以外のメーラーで不要なディレクトリができてしまった場合は
最初の画面から不要なフォルダを右クリック→削除で削除できる </description>
    </item>
    
    <item>
      <title>vim7の新機能omni補完について</title>
      <link>https://yaasita.github.io/2009/11/23/7964/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/23/7964/</guid>
      <description> インサートモードでCtrl+X Ctrl+Oでomni補完が出来るらしい
omnifuncってところで設定してるみたいだけどこれはファイルタイププラグイン呼ばれた時に設定されるらしいからあえてautocmdで呼ぶ必要もないみたい・・・
とりあえず今はサポートは以下の言語しかないみたい
C
(X)HTML with CSS
JavaScript
PHP
Python
Ruby
SQL
XMLヘルプは以下のコマンドでどうぞ
:h new-omni-completion
とりあえず参考リンク
http://kaede.to/~canada/doc/vimeperlephpinoadhie
http://amix.dk/blog/viewEntry/19021 </description>
    </item>
    
    <item>
      <title>vimの日本語ドキュメント</title>
      <link>https://yaasita.github.io/2009/11/23/7984/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/23/7984/</guid>
      <description> 香り屋さんのは有名だけど
他の人もヘルプの和訳をしているみたい
http://www.ac.cyberhome.ne.jp/~yakahaira/vimdoc/ </description>
    </item>
    
    <item>
      <title>perlでWindows内のファイル属性の変更</title>
      <link>https://yaasita.github.io/2009/11/22/8026/</link>
      <pubDate>Sun, 22 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/22/8026/</guid>
      <description> 使用方法はこんな感じで
#!/usr/bin/perl
use Win32::File;
Win32::File::SetAttributes(&#34;hoge.txt&#34;,READONLY);
使える関数は以下の通り
GetAttributes
SetAttributes
使える値は↓みたいなのがあるらしい（下はデフォルトでExport）
ARCHIVE
COMPRESSED
DIRECTORY
HIDDEN
NORMAL
OFFLINE
READONLY
SYSTEM
TEMPORARY
以下参考リンク
CPAN
http://search.cpan.org/~jdb/Win32-File-0.06/File.pm
紹介Blog
http://memo.freedom-lite.com/?p=187 </description>
    </item>
    
    <item>
      <title>スーパーマリオ63？っていうFLASHゲーム</title>
      <link>https://yaasita.github.io/2009/11/22/8047/</link>
      <pubDate>Sun, 22 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/22/8047/</guid>
      <description> これはすごいと思った
音楽とかはスーパーマリオ64のまんま
Super Mario63
http://www.freeworldgroup.com/games8/gameindex/supermario.htm </description>
    </item>
    
    <item>
      <title>sshのポートフォワード専用アカウントを作ろう</title>
      <link>https://yaasita.github.io/2009/11/19/8067/</link>
      <pubDate>Thu, 19 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/19/8067/</guid>
      <description> まあ基本的にはrbashで制限付シェルのアカウントを作るだけ
参考リンク
http://blog.recyclebin.jp/archives/555 </description>
    </item>
    
    <item>
      <title>ニコニコ動画の音楽をmp3として抽出するサイト</title>
      <link>https://yaasita.github.io/2009/11/18/8088/</link>
      <pubDate>Wed, 18 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/18/8088/</guid>
      <description> にこ☆さうんど
http://nicosound.anyap.info/ </description>
    </item>
    
    <item>
      <title>Google検索のイースターエッグ</title>
      <link>https://yaasita.github.io/2009/11/15/8129/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/15/8129/</guid>
      <description> Answer to Life the Universe and Everything
で検索すると42と出てくる以外の奴があった
http://www.adlize.com/blog/archives/246 </description>
    </item>
    
    <item>
      <title>Linuxで電卓コマンド bc とは</title>
      <link>https://yaasita.github.io/2009/11/15/8108/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/15/8108/</guid>
      <description> 結構便利です
参考リンク
http://x68000.q-e-d.net/~68user/unix/pickup?bc
http://www.linux.or.jp/JM/html/GNU_bc/man1/bc.1.html </description>
    </item>
    
    <item>
      <title>起動するデーモンの調整　sysv-rc-conf</title>
      <link>https://yaasita.github.io/2009/11/11/8149/</link>
      <pubDate>Wed, 11 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/11/8149/</guid>
      <description> sysv-rc-confというパッケージを使えば
起動するデーモンのON/OFF切り替えがGUIで可能です
perlのライブラリに依存しているようです・・・
Debian Lennyで試した </description>
    </item>
    
    <item>
      <title>Vistaでよく使うガジェット</title>
      <link>https://yaasita.github.io/2009/11/04/8169/</link>
      <pubDate>Wed, 04 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/04/8169/</guid>
      <description> サーチ＆ニュース
http://app.laborat.net/sng/ </description>
    </item>
    
    <item>
      <title>JavaScriptで作られたスライドパズル</title>
      <link>https://yaasita.github.io/2009/11/03/8189/</link>
      <pubDate>Tue, 03 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/03/8189/</guid>
      <description> これはすごいと思った
http://www.geocities.jp/recyclebin5385/slidepuzzle.html
ブログ
http://recyclebin5385.blog13.fc2.com/blog-entry-7.html </description>
    </item>
    
    <item>
      <title>エア参拝</title>
      <link>https://yaasita.github.io/2009/10/29/8209/</link>
      <pubDate>Thu, 29 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/29/8209/</guid>
      <description> 参拝しなくても京都に行って参拝したような気になるような感じがする
http://air-sampai.jp/ </description>
    </item>
    
    <item>
      <title>今日見つけた便利なソフト</title>
      <link>https://yaasita.github.io/2009/10/24/8229/</link>
      <pubDate>Sat, 24 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/24/8229/</guid>
      <description> CLISM
クリップボードの履歴機能を追加（つーかそれだけ。シンプルで良い）
http://ringonoki.net/tool/clip/cli.php
MDIE
タブ型ファイラー
http://cres.s28.xrea.com/soft/mdie.html </description>
    </item>
    
    <item>
      <title>IT業界のお話をしているサイト</title>
      <link>https://yaasita.github.io/2009/10/23/8249/</link>
      <pubDate>Fri, 23 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/23/8249/</guid>
      <description> だいたい合ってると思う
http://www.mars.dti.ne.jp/~hirok/xp/index.html </description>
    </item>
    
    <item>
      <title>motdとmotd.tailの関係について（Debian Lenny）</title>
      <link>https://yaasita.github.io/2009/10/18/8290/</link>
      <pubDate>Sun, 18 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/18/8290/</guid>
      <description> /etc/motdは/var/run/motdへのシンボリックリンクです。
システムのboot時に/etc/init.d/bootmisc.shによって
uname -snrvm  /var/run/motd
[ -f /etc/motd.tail ] &amp;amp;&amp;amp; cat /etc/motd.tail  /var/run/motdと、上書きされます。
つまり、再起動後も有効にしたい場合は/etc/motd.tailを直しましょう
http://www.debian.org/releases/etch/hppa/release-notes/ch-information.ja.html </description>
    </item>
    
    <item>
      <title>vsftpdをinetd経由で動かす</title>
      <link>https://yaasita.github.io/2009/10/18/8269/</link>
      <pubDate>Sun, 18 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/18/8269/</guid>
      <description> なんかネット探してもみんなxinetdで動かしてるからinetdでの動かし方をメモ
１．/etc/vsftpd.confを以下のように変更
listen=NO

２．/etc/inetd.confに以下の記述を追加　※&amp;amp;lt;args&amp;amp;gt;の項は不要みたい

ftp stream tcp nowait root /usr/sbin/vsftpd

３．下記コマンドでinetdを再起動
/etc/init.d/openbsd-inetd restart
再起動／起動スクリプトの名前はopenbsd-inetdなので注意　前も書いたかも

あと最近はxinetdの方が主流みたいなので次はxinetdでやろうかな・・・
xinetdは単体でinetd + TCP wrapper(tcpd)の機能を持っているそうです
http://www.aconus.com/~oyaji/suse/vsftpd_suse.htm
http://www.express.nec.co.jp/linux/distributions/knowledge/network/xinetd.html </description>
    </item>
    
    <item>
      <title>/etc/crontabを修正したらcronデーモンの再起動は必要なの？</title>
      <link>https://yaasita.github.io/2009/10/17/8310/</link>
      <pubDate>Sat, 17 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/17/8310/</guid>
      <description> 必要ないそうです。
さらに cron は 1 分ごとにスプールディレクトリ(または /etc/crontab ファイル)の最終修正時刻(modtime)をチェックし、もし変更されていれば、すべての crontab ファイルの最終修正時刻をチェックし、変更された crontab ファイルを読み直す。よって crontab ファイルを修正するたびに cron を再起動する必要はない。 crontab(1) コマンドは、crontab ファイルが変更されたかどうかにかかわらず、スプールディレクトリの最終修正時刻を更新することに注意せよ。 
http://www.linux.or.jp/JM/html/cron/man8/cron.8.html </description>
    </item>
    
    <item>
      <title>バックスラッシュが表示されるフォント「さざなみフォント」</title>
      <link>https://yaasita.github.io/2009/10/17/8350/</link>
      <pubDate>Sat, 17 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/17/8350/</guid>
      <description> ↓からどうぞ（sazanami）
http://sourceforge.jp/projects/efont/releases/ </description>
    </item>
    
    <item>
      <title>既定のプログラムを設定するupdate-alternativesコマンド</title>
      <link>https://yaasita.github.io/2009/10/17/8330/</link>
      <pubDate>Sat, 17 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/17/8330/</guid>
      <description> 例えばデフォルトのエディターを指定するには
update-alternatives --config editor
って打ってリストから選択すればいいだけ
参考リンク
http://axela5004.blog74.fc2.com/blog-entry-298.html </description>
    </item>
    
    <item>
      <title>Linux(Debian)でログイン時に色々とメッセージを出す</title>
      <link>https://yaasita.github.io/2009/10/12/8411/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8411/</guid>
      <description> ・ログイン前の「login:」が出る時に表示されるメッセージを変更する場合→/etc/issue
・ログイン後に表示されるメッセージ（固定）を変更する場合→/etc/motd
・ログイン後に動的に表示したり設定を変更する場合→/etc/profile </description>
    </item>
    
    <item>
      <title>sambaでゴミ箱を設定する</title>
      <link>https://yaasita.github.io/2009/10/12/8370/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8370/</guid>
      <description>http://www.atmarkit.co.jp/flinux/rensai/linuxtips/734recycle3.html
↑を見ればだいたい分かるけど
[global]
vfs objects = recycle
[hoge]
recycle:repository = /var/samba/gomibako/
recycle:keeptree = yes
recycle:touch = yes
recycle:versions = yes
recycle:maxsize = 0
hide files = /var/samba/gomibako/
※hide filesは隠しフォルダにするオプション
↑みたいに追加すればOK
後はゴミ箱のパーミッションを777にする
でも自動的に削除されないので・・・
削除できるようにする必要がある
cronとかに適当に↓とか登録しとけばいいんじゃないかな
#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
#### Initial Setting #######################
our $gomibako_dir=&#34;/var/samba/gomibako/&#34;;
############################################
say &#34;--- REMOVE GOMIBAKO (DIR = $gomibako_dir) ---&#34;;
chdir &#34;/var/samba/gomibako/&#34; or die $!;
system &#34;du -cah $gomibako_dir&#34;;
system &#34;rm -rf *&#34;</description>
    </item>
    
    <item>
      <title>手軽で便利な画面キャプチャソフト</title>
      <link>https://yaasita.github.io/2009/10/12/8391/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8391/</guid>
      <description> Rapture
http://www.geocities.jp/knystd/rapture.html </description>
    </item>
    
    <item>
      <title>perlの難読化ツール２ ppencode</title>
      <link>https://yaasita.github.io/2009/10/11/8431/</link>
      <pubDate>Sun, 11 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/11/8431/</guid>
      <description> 前回の投稿では記号だけで表すってモジュールを紹介したけど、予約語だけでプログラミングってのもある
ソースとか説明は↓
http://namazu.org/~takesako/ppencode/
JavaScriptによるデモは↓
http://www.namazu.org/~takesako/ppencode/demo.html
動作原理についての説明は↓
http://d.hatena.ne.jp/masutaro/20080128/1201507016 </description>
    </item>
    
    <item>
      <title>perlの難読化モジュールAcme::EyeDrops</title>
      <link>https://yaasita.github.io/2009/10/11/8451/</link>
      <pubDate>Sun, 11 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/11/8451/</guid>
      <description> perlは記号だけでプログラミングが可能です。どうやるかはevalと論理演算を駆使すればできるらしい・・・
例えば・・・
「H」という文字列を作りたい場合は
&amp;amp;nbsp;`←バッククォート　16進数では60
(←括弧　16進数では28
をXORですると・・・
16進数の48になります。。。
こんな感じでプログラミングしていくみたいです
print &#34;`&#34; ^ &#34;(&#34;,&#34;\n&#34;;
↑をやればHと表示されるはず
参考記事
http://d.hatena.ne.jp/shinichiro_h/20061107
そんで、本題Acme::EyeDropsについて
これは上記のテクニックを使ってプログラムを難読化してくれるモジュールみたい
さっそく試す
１．ActivePerlならPPMでAcme-EyeDropsを検索してインストール
２．適当にperlソースを書く（ここではhoge.plとする）
３．以下のようにして吐き出させる
#!/usr/bin/perl
use Acme::EyeDrops qw(sightly);
print sightly( { Shape&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; =&amp;amp;gt; &#39;camel&#39;,
SourceFile&amp;amp;nbsp; =&amp;amp;gt; &#39;hoge.pl&#39; ,
Compact =&amp;amp;gt; 1
} ); このモジュールのすごいところはバイナリファイルだってAA化できちゃうってこと
詳しくはこちら
好きなShapeは
map_japan
map_world3
mongers
music
writing_perl
tpr
camel
あたり </description>
    </item>
    
    <item>
      <title>2本のアームを使って敵を挟む→倒すゲーム</title>
      <link>https://yaasita.github.io/2009/10/10/8492/</link>
      <pubDate>Sat, 10 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/10/8492/</guid>
      <description> http://www.kongregate.com/games/xpndsprt/the-tickler
ザイーガ記事
http://www.zaeega.com/archives/50893498.html </description>
    </item>
    
    <item>
      <title>Linuxのイースターエッグ</title>
      <link>https://yaasita.github.io/2009/10/10/8471/</link>
      <pubDate>Sat, 10 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/10/8471/</guid>
      <description> 参考記事とかみて分かった。
aptitude -v moo
aptitude -vv moo
みたいにvを足していくと変なのが出る
あとはapt-get mooとか </description>
    </item>
    
    <item>
      <title>vimで画面のリフレッシュ（再描画）をするには？</title>
      <link>https://yaasita.github.io/2009/10/07/8512/</link>
      <pubDate>Wed, 07 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/07/8512/</guid>
      <description> http://www.hondarer-soft.com/japan/pubwiki.cgi?vi
↑によるとCtrl+l（エル）だそうです
コマンドだと:redrかな </description>
    </item>
    
    <item>
      <title>アニソンに合わせてタイピング練習するゲーム</title>
      <link>https://yaasita.github.io/2009/10/03/8532/</link>
      <pubDate>Sat, 03 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/03/8532/</guid>
      <description> タイピングマニア
http://www10.atpages.jp/mania/
http://sonbura.hp.infoseek.co.jp/self/typingmania4.html
追記
どうやらこれは自分で作るタイプのFLASHゲームだそうです。。。
以下参考リンク
公式サイト
TYPINGMANIA Wiki
タイピングマニアまとめサイト </description>
    </item>
    
    <item>
      <title>2chのスレ中にどのレスが一番アンカーが付けられたか検索する</title>
      <link>https://yaasita.github.io/2009/09/27/8552/</link>
      <pubDate>Sun, 27 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/27/8552/</guid>
      <description> こんな感じでどうでしょうか？
単純に&amp;amp;gt;&amp;amp;gt;1をgrepすると&amp;amp;gt;&amp;amp;gt;10や&amp;amp;gt;&amp;amp;gt;100も引っかかることに注意
#!/usr/bin/perl
use feature qw(say);
open (FH,&#34;input.txt&#34;) or die $!;
@list=&amp;amp;lt;FH&amp;amp;gt;;
close FH;
@list = grep {/\&amp;amp;gt;\&amp;amp;gt;\d+/} @list; for (1..1000){
$num=$_;
$num=&#39;&amp;amp;gt;&amp;amp;gt;&#39;.$num;
$coun{$num} = grep {/\&amp;amp;gt;\&amp;amp;gt;\d+/ and ($num eq $&amp;amp;amp;)} @list;
}
for (sort {$coun{$b} &amp;amp;lt;=&amp;amp;gt; $coun{$a}} keys %coun){
printf (&#34;%-5s =&amp;amp;gt; %03d\n&#34;,$_,$coun{$_});
last if $i++&amp;amp;gt;=10;
} </description>
    </item>
    
    <item>
      <title>転送量を測ってくれるソフト NetWorx</title>
      <link>https://yaasita.github.io/2009/09/27/8572/</link>
      <pubDate>Sun, 27 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/27/8572/</guid>
      <description> 使用感は後日投稿
GIGAZINE記事
http://gigazine.net/index.php?/news/comments/20090926_networx/ </description>
    </item>
    
    <item>
      <title>rep2 機能拡張パックをLinux(Debian)にインストール</title>
      <link>https://yaasita.github.io/2009/09/26/8593/</link>
      <pubDate>Sat, 26 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/26/8593/</guid>
      <description>インストールはrep2と同じ
違うとところは「PEAR 詰め合わせ」を入れるくらい
やり方は↓
pear フォルダの中にある includes フォルダを rep2 フォルダに置く。
詳細なインストール方法はココを参照すれば分かる
その他　拡張版でのはまり所は↓
・AASを使うにはそれだけ有効にしても意味が無い　アクティブモナーも有効にすること
有効にする箇所は以下のとおり（行の順番は適当）
/var/www/rep2ex/conf/conf_admin_ex.inc.php
// AAS による AA プレビュー（off:0, on:1）
$_conf[&#39;expack.editor.with_aas&#39;] = 1; // (0)
// AAS（off:0, on:1）
$_conf[&#39;expack.aas.enabled&#39;] = 1; // (0)
// {{{ アクティブモナー
// AA 補正（off:0, on:1）
$_conf[&#39;expack.am.enabled&#39;] = 1; // (0)
// }}}
// {{{ 入力支援
// ActiveMona による AA プレビュー（off:0, on:1）
$_conf[&#39;expack.editor.with_activemona&#39;] = 1; // (0)
// AAS による AA プレビュー（off:0, on:1）</description>
    </item>
    
    <item>
      <title>ライフルで狙撃するゲーム</title>
      <link>https://yaasita.github.io/2009/09/26/8614/</link>
      <pubDate>Sat, 26 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/26/8614/</guid>
      <description> FLASHゲーム　マテリアルスナイパー
http://nextframe.jp/flash/matsnp/matsnp.html
ザイーガ紹介記事
http://www.zaeega.com/archives/50885912.html </description>
    </item>
    
    <item>
      <title>Excel上でviの操作感を再現</title>
      <link>https://yaasita.github.io/2009/09/09/8634/</link>
      <pubDate>Wed, 09 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/09/8634/</guid>
      <description> vixcelというらしい
http://www.vector.co.jp/soft/winnt/business/se453991.html </description>
    </item>
    
    <item>
      <title>SQLの解説サイト</title>
      <link>https://yaasita.github.io/2009/09/07/8655/</link>
      <pubDate>Mon, 07 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/07/8655/</guid>
      <description> ためになりそうだからメモ
http://www.techscore.com/tech/sql/ </description>
    </item>
    
    <item>
      <title>ここら辺で自分が使ってるエミュレータをまとめる</title>
      <link>https://yaasita.github.io/2009/09/06/8675/</link>
      <pubDate>Sun, 06 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/06/8675/</guid>
      <description> スーパーファミコン（SNES）
ZSNES
ファミコン（NES）
VirtuaNES
ゲームボーイ、ゲームボーイカラー（GB）
TGB Dual
あとROMサイト </description>
    </item>
    
    <item>
      <title>なんか知らないがROM配ってるサイト</title>
      <link>https://yaasita.github.io/2009/09/06/8695/</link>
      <pubDate>Sun, 06 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/06/8695/</guid>
      <description> http://ja.nitroroms.com/roms </description>
    </item>
    
    <item>
      <title>カードのイカサマテクニック</title>
      <link>https://yaasita.github.io/2009/09/05/8716/</link>
      <pubDate>Sat, 05 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/05/8716/</guid>
      <description> すげーと思った
http://www.onlinecasinofan.com/cheatingtechnique-29aug09.php </description>
    </item>
    
    <item>
      <title>大きな画面で四川省</title>
      <link>https://yaasita.github.io/2009/08/30/8736/</link>
      <pubDate>Sun, 30 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/30/8736/</guid>
      <description> http://www.karakusa-lab.com/gallery/flash/mj/fs-big.html </description>
    </item>
    
    <item>
      <title>演奏してみた系の動画を探す</title>
      <link>https://yaasita.github.io/2009/08/29/8756/</link>
      <pubDate>Sat, 29 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/29/8756/</guid>
      <description> ジャスコタグで検索するといいかも
http://www.nicovideo.jp/tag/%E3%82%B8%E3%83%A3%E3%82%B9%E3%82%B3
あとお気に入りのマイリス
http://www.nicovideo.jp/mylist/2964530
http://www.nicovideo.jp/mylist/1916621
http://www.nicovideo.jp/mylist/9250099 </description>
    </item>
    
    <item>
      <title>静森さんディフェンス（精子から守るゲーム）</title>
      <link>https://yaasita.github.io/2009/08/29/8777/</link>
      <pubDate>Sat, 29 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/29/8777/</guid>
      <description>https://www.ppwks.net/fp/sd.html
&amp;ndash;裏技&amp;ndash;
zを押す･･･1回押す毎に金が500増える
xを押す･･･1回押す毎に敵の種類はそのままでエネミーレベルが1上がる
cを押す･･･1回押す毎に次の敵を強制的に出現させる
vを押す･･･1回押す毎にライフ（受精まで）のカウントが1増える</description>
    </item>
    
    <item>
      <title>Firefox3.5にしたら最後のタブを閉じた時の挙動が変わった</title>
      <link>https://yaasita.github.io/2009/08/23/8857/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8857/</guid>
      <description> 前までは最後のタブを閉じてもウィンドウ自体は閉じられなかったのに、3.5にしてから閉じるようになってしまったようだ・・・
直し方は
about:config→browser.tabs.closeWindowWithLastTabの値をFalseに設定すればおｋ
あと設定したのはタブの閉じるボタンを非表示にする設定↓
browser.tabs.closeButtonsを2にする
参考サイト
http://d.hatena.ne.jp/takayukis/20090707/1246973796
3.5の新機能
http://mozilla-remix.seesaa.net/article/122559921.html
目玉の位置情報
http://mozilla.jp/firefox/features/geolocation/ </description>
    </item>
    
    <item>
      <title>Firefoxでタブのフォーカスを制御</title>
      <link>https://yaasita.github.io/2009/08/23/8797/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8797/</guid>
      <description> リンクを中クリックで開いた時にフォーカスを移すかどうかの設定
browser.tabs.loadInBackground
これをボタンで切り替えてくれる拡張ないかなぁ・・・ </description>
    </item>
    
    <item>
      <title>Firefoxの拡張「Add N Edit Cookies」が3.5に対応してない</title>
      <link>https://yaasita.github.io/2009/08/23/8837/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8837/</guid>
      <description> 待てない人は暫定的に↓のアドオンを使いましょう
https://addons.mozilla.org/ja/firefox/addon/13793 </description>
    </item>
    
    <item>
      <title>JavaScript/JavaのON/OFFボタンを追加(Firefox)</title>
      <link>https://yaasita.github.io/2009/08/23/8877/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8877/</guid>
      <description> その名もQuickJava
https://addons.mozilla.org/ja/firefox/addon/1237
参考リンク
http://paranoids.sakura.ne.jp/kaworu/2008-04-02-1.php </description>
    </item>
    
    <item>
      <title>なんか面白いシューティングゲーム</title>
      <link>https://yaasita.github.io/2009/08/23/8817/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8817/</guid>
      <description> ポイントためてパワーアップも出来る
http://www.kongregate.com/games/x_boost/pixelvader </description>
    </item>
    
    <item>
      <title>ワリオランドシェイクのやつ（youtube）</title>
      <link>https://yaasita.github.io/2009/08/22/8897/</link>
      <pubDate>Sat, 22 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/22/8897/</guid>
      <description> youtubeのレイアウトがぶっ壊れる奴
http://www.youtube.com/wariolandshakeit2008 </description>
    </item>
    
    <item>
      <title>ICQの音を思い出す</title>
      <link>https://yaasita.github.io/2009/08/16/8918/</link>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/16/8918/</guid>
      <description> そんなFLASHがあった
http://iiaccess.net/upload/view.php/000736.swf </description>
    </item>
    
    <item>
      <title>いろいろなフォーマットの動画をいろいろ変換するソフト</title>
      <link>https://yaasita.github.io/2009/08/16/8959/</link>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/16/8959/</guid>
      <description> Pazera Video Converters Suite 1.2
ってやつです
http://www.pazera-software.com/
参考リンク
http://www.forest.impress.co.jp/article/2008/02/15/pazeravideo2flash.html </description>
    </item>
    
    <item>
      <title>働くモノニュース</title>
      <link>https://yaasita.github.io/2009/08/16/8939/</link>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/16/8939/</guid>
      <description> 転職の参考になるかもしれない
http://workingnews.blog117.fc2.com/ </description>
    </item>
    
    <item>
      <title>幽霊に光を当てて倒すゲーム</title>
      <link>https://yaasita.github.io/2009/08/02/8979/</link>
      <pubDate>Sun, 02 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/02/8979/</guid>
      <description> http://www.girlsgames123.com/misc-game/graveyard-panic.html </description>
    </item>
    
    <item>
      <title>質問に答えるだけでキャラを当ててくれるサイトらしい</title>
      <link>https://yaasita.github.io/2009/07/25/8999/</link>
      <pubDate>Sat, 25 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/25/8999/</guid>
      <description> http://en.akinator.com/
http://blog.livedoor.jp/himasoku123/archives/51284785.html </description>
    </item>
    
    <item>
      <title>phaのニート日記</title>
      <link>https://yaasita.github.io/2009/07/24/9019/</link>
      <pubDate>Fri, 24 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/24/9019/</guid>
      <description> というサイト
ただのNEETじゃなくてすごいNEETです
http://d.hatena.ne.jp/pha/
あー仕事やめてぇ・・・ </description>
    </item>
    
    <item>
      <title>なんか宇宙でやるゴルフゲーム？</title>
      <link>https://yaasita.github.io/2009/07/21/9039/</link>
      <pubDate>Tue, 21 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/21/9039/</guid>
      <description>http://armorgames.com/play/4171/gravitex-2</description>
    </item>
    
    <item>
      <title>FLASHの面白いゲームを紹介するブログ</title>
      <link>https://yaasita.github.io/2009/07/13/9059/</link>
      <pubDate>Mon, 13 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/13/9059/</guid>
      <description> 暇をつぶす音がする
http://himatubu.seesaa.net/ </description>
    </item>
    
    <item>
      <title>Firefoxのテーマを手軽に頻繁に変えたい</title>
      <link>https://yaasita.github.io/2009/07/12/9100/</link>
      <pubDate>Sun, 12 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/12/9100/</guid>
      <description> そんなときは↓のアドオンが便利かも
Personas for Firefox
http://people.mozilla.com/~cbeard/personas/ja/about/ </description>
    </item>
    
    <item>
      <title>Personas for Firefoxのペルソナ（テーマ）を自作してみる</title>
      <link>https://yaasita.github.io/2009/07/12/9079/</link>
      <pubDate>Sun, 12 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/12/9079/</guid>
      <description> ↓に書いてあった
http://people.mozilla.com/~cbeard/personas/designers/
ヘッダー画像(横3000px、縦200px）
フッター画像(横3000px、縦100px)
ならなんでもいいみたい
試しにけいおんのヘッダー画像作ってみた


参考リンク
窓の杜記事 </description>
    </item>
    
    <item>
      <title>背景実写のFLASHシューティングゲーム</title>
      <link>https://yaasita.github.io/2009/07/11/9120/</link>
      <pubDate>Sat, 11 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/11/9120/</guid>
      <description> Toon Crisis 1
http://www.tooncrisis.com/
Toon Crisis 2
http://killerviral.com/site/games/561/Toon+Crisis+2
ザイーガ記事
http://www.zaeega.com/archives/50832040.html </description>
    </item>
    
    <item>
      <title>人生オワタの大冒険ゲーム</title>
      <link>https://yaasita.github.io/2009/07/05/9140/</link>
      <pubDate>Sun, 05 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/05/9140/</guid>
      <description> 
途中まで出来たからパスワードをメモっておく
http://blog-imgs-18.fc2.com/k/i/n/king75/owata.html </description>
    </item>
    
    <item>
      <title>うさぎ（ウサギ）のベル鳴らし＋新海探検</title>
      <link>https://yaasita.github.io/2009/07/04/9181/</link>
      <pubDate>Sat, 04 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/04/9181/</guid>
      <description> うさぎ
http://www.ferryhalim.com/orisinal/g3/bells.htm
深海ワンダー
http://www.mext.go.jp/wonder/shinkai/ </description>
    </item>
    
    <item>
      <title>ほっこり廃墟ツアー</title>
      <link>https://yaasita.github.io/2009/07/04/9161/</link>
      <pubDate>Sat, 04 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/04/9161/</guid>
      <description> http://talkintrash.fc2web.com/index.html </description>
    </item>
    
    <item>
      <title>Mozilla Firefoxがやってる新サービスコレクションを試した</title>
      <link>https://yaasita.github.io/2009/06/21/9201/</link>
      <pubDate>Sun, 21 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/21/9201/</guid>
      <description> 前回のコレクションを試してみた。
コレクションの作成はアドオンコレクターという拡張で自動同期、自動作成みたいなのが出来るらしいが、日本語に対応していないためリンク先が英語版Mozillaになるのでやめて手動で作った。
https://addons.mozilla.org/ja/firefox/collection/6c3bd701-a85e-0ab0-45de-1a484a974cac?sortby=name
↑のアドオン集に含まれてないものとして
ニコニコ動画ダウンローダーがある </description>
    </item>
    
    <item>
      <title>PerlのIDEで有名なもの</title>
      <link>https://yaasita.github.io/2009/06/20/9221/</link>
      <pubDate>Sat, 20 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/20/9221/</guid>
      <description> * EPIC
* PerlBuilder
* PerlComposer
* Perl Editor
* Perl Express
* Open Perl IDE
* OptiPerl
* Zeus
Perl ExpressはApacheとの連携とか出来て良い感じだった。
日本語回りは駄目だが・・・
http://japan.zdnet.com/news/devsys/story/0,2000056182,20361311,00.htm </description>
    </item>
    
    <item>
      <title>あなたの社畜度を測るサイト</title>
      <link>https://yaasita.github.io/2009/06/17/9241/</link>
      <pubDate>Wed, 17 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/17/9241/</guid>
      <description> だそうです
http://www.syachiku.com/ </description>
    </item>
    
    <item>
      <title>Firefoxの新サービス　コレクション</title>
      <link>https://yaasita.github.io/2009/06/16/9261/</link>
      <pubDate>Tue, 16 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/16/9261/</guid>
      <description> 窓の杜記事
自分のお気に入り拡張をまとめて公開できるみたなサービスだそうです。
ちなみにMozillaのサイトでユーザー登録してアカウントを取得しないと作成できないみたいです。→公式サイト </description>
    </item>
    
    <item>
      <title>perlのourについて</title>
      <link>https://yaasita.github.io/2009/06/15/9281/</link>
      <pubDate>Mon, 15 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/15/9281/</guid>
      <description> ちょっとあやふやにしてる部分があったのでメモ
１．ourを使うとそのレキシカルスコープ内では完全修飾を
しなくてもアクセス可能（use strict時の話ね)
２．結局はグローバル変数の定義です
３．ourの有効範囲はレキシカルスコープなんでパッケージも越えてしまう
#!/usr/bin/perl -l
use strict;
use warnings;
{
my $test=10;
print $test;
{
our $test=20;
print $test;
}
print $test;
}
print $main::test;
参考リンク
http://perldoc.jp/docs/perl/5.10.0/perlfunc.pod </description>
    </item>
    
    <item>
      <title>sonb32drv.dllってウィルスに感染してた</title>
      <link>https://yaasita.github.io/2009/06/14/9342/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/14/9342/</guid>
      <description> ／(＾o＾)＼ナンテコッタイ
つーことで対処法
とりあえずC:\WINDOWS\system32\sonb32drv.dllを削除
つーかこの話って2008年の6月くらいの話です・・・
どんだけウィルススキャンさぼってたんだ(；・∀・)
↓はググって分かったこと
・感染経路は？
どうもXREAの広告らしい
感染はFlash Playerの脆弱性により行われる
バージョンが9．0．124より古いと危ないとのこと
http://d.hatena.ne.jp/soundwing/20080614
・ウィルスの活動は？
IEの場合
C:\Documents and Settings\ユーザー名\Local Settings\Temporary Internet Files\
あたりにtaa.gifを作成後orz.exeという実行ファイルに展開されるそうです
場所は%Temp%\orz.exeかな？
http://www.symantec.com/ja/jp/security_response/writeup.jsp?docid=2008-052714-3021-99&amp;amp;amp;tabid=2
→対処方はtaa.gif、orz.exeを消す
sonb32drv.dllを作成されます
→対処方はsonb32drv.dllを消す
C:\WINDOWS\system32\drivers\etc\hostsを削除されます
→対処方はhosts.msnをコピーしhostsにリネームする
まあhostsファイルはデフォルトでlocalhostしか書いてないので以下の内容のファイルでもok
127.0.0.1 localhost
以下のレジストリを追加されます
HKEY_CLASSES_ROOT\CLSID\{F60A0B68-AF3A-C1D2-CD09-5A81AE36D2BA}
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ShellExecuteHooks\{F60A0B68-AF3A-C1D2-CD09-5A81AE36D2BA}
→対処方は上記のレジストリを削除
http://www.trendmicro.co.jp/vinfo/virusencyclo/default5.asp?VName=TROJ_GAMETHIEF.M&amp;amp;VSect=Sn
・被害は？
このプログラムはキーロガーのようです
プレイオンライン、mixi、Windowsメッセンジャーなどのアカウントハック
に遇うかもしれません・・・・
・その他の情報
カスペでは
Trojan-PSW.Win32.Nilage.djl
という名前らしい
Flashのバージョンを上げると勝手に削除してくれるぽい
sonb32drv.dllを削除してくれる場合があるらしい
http://qanda.rakuten.ne.jp/qa4097191.html
その所為なのか自分の環境には↓のレジストリが既に無かった
HKEY_CLASSES_ROOT\CLSID\{F60A0B68-AF3A-C1D2-CD09-5A81AE36D2BA}
↓はあった（汗
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ShellExecuteHooks\{F60A0B68-AF3A-C1D2-CD09-5A81AE36D2BA} まあ直接は関係ないけど
レジストリの掃除にクリーンアップセンターを使うとかね
(上記のレジストリは削除できませんでしたｗ)
http://onecare.live.com/site/ja-jp/center/cleanup.htm </description>
    </item>
    
    <item>
      <title>Windows Liveのサービスの一つ</title>
      <link>https://yaasita.github.io/2009/06/14/9322/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/14/9322/</guid>
      <description> クリーンアップセンター
http://onecare.live.com/site/ja-jp/center/cleanup.htm
結構早くなったような気がする
※ファイルの圧縮系はチェックを外したほうがよさげ </description>
    </item>
    
    <item>
      <title>今日みつけたvimサイト</title>
      <link>https://yaasita.github.io/2009/06/14/9301/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/14/9301/</guid>
      <description> http://sites.google.com/site/fudist/Home
いつか読む </description>
    </item>
    
    <item>
      <title>vimで開いたファイルに日本語が無かった場合の挙動を制御</title>
      <link>https://yaasita.github.io/2009/06/11/9363/</link>
      <pubDate>Thu, 11 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/11/9363/</guid>
      <description> vimで
set fileencodings=utf-8,ucs-bom,cp932,ucs-2,euc-jp
↑を書いておくと上から順に判定してくれる。ただしこう書いておくと困ることがある
日本語を含まないファイルを開くとUTF-8でfencしてしまう。（:eで新規作成するファイルはencの値を使われるので問題ない）
つーわけでスクリプトで解決する。
ずんwikiに日本語判定スクリプトがあったので参考にする
ただし、このスクリプトには問題があってsearch関数はカーソル以下を検索するのでカーソル前に日本語があっても見逃してしまう
例えば下記の例で3行目にカーソルがあると日本語なしと判断してしまう
aaa
ああああ
hogehoge←カーソル

こんな感じで書くといいんじゃないでしょうか
&#34; 日本語を含まない場合は fileencoding に encoding を使うようにする
function! AU_ReCheck_FENC()
let l:c=line(&#34;.&#34;)
normal gg
if search(&#34;[^\x01-\x7e]&#34;, &#39;n&#39;) == 0
&#34;let &amp;amp;fileencoding=&amp;amp;encoding
set fenc=cp932
call cursor(l:c,1)
endif
endfunction
autocmd BufReadPost * call AU_ReCheck_FENC() </description>
    </item>
    
    <item>
      <title>perlで定数を宣言するには？</title>
      <link>https://yaasita.github.io/2009/06/10/9383/</link>
      <pubDate>Wed, 10 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/10/9383/</guid>
      <description> １．use constantモジュールを使う
#!/usr/bin/perl
use constant TEISU =&amp;amp;gt; 777;
use constant {
HOGE =&amp;amp;gt; &#39;あああ&#39;,
HAGE =&amp;amp;gt; &#39;いいい&#39;
};

２．型グロブとリファレンスを駆使して上書き禁止の変数にする
#!/usr/bin/perl -l
*TEISU=\777;
*KENSAKU=\(quotemeta &#39;てすと&#39;);
print $TEISU;

参考リンク
http://www2u.biglobe.ne.jp/~MAS/perl/waza/const.html
http://chaichan.web.infoseek.co.jp/perlnote/perlnote2008-03-153.htm
http://www.rfs.jp/sb/perl/02/02.html#TRY!%20%E5%AE%9A%E6%95%B0%E3%81%AE%E5%AE%A3%E8%A8%80 </description>
    </item>
    
    <item>
      <title>Linux(Debian Lenny)で電源ボタン押下時の設定をする</title>
      <link>https://yaasita.github.io/2009/06/09/9402/</link>
      <pubDate>Tue, 09 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/09/9402/</guid>
      <description> ふと、Debian稼動中に電源ボタンを押したらキチンとしたシーケンスでシャットダウンされたのでそこら辺の設定ってどうなってるのよー？って思ったのでメモ
/etc/acpi/events/powerbtn
ってファイルで設定できるみたいね
詳しくは以下のサイトを参照下さい
http://www.watanet.org/~chihiro/index.cgi/linux/ubuntu/20090210_ubuntu-powerbtn-hibernate.html </description>
    </item>
    
    <item>
      <title>mmfの着メロを作ってダウンロードしたい</title>
      <link>https://yaasita.github.io/2009/06/08/9422/</link>
      <pubDate>Mon, 08 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/08/9422/</guid>
      <description> 以下、やり方
１．適当に音楽を選びwavファイルを作成
２．ここからSSC-MA3-SMAFをダウンロード＆インストール
３．えせ着うたフロントエンドSMAF版をダウンロード＆インストール
４．適当に作成する
５．サーバーにアップロードする　最近の機種はObjectタグが使えるのでめんどくさいCGIを用意しなくてもいいみたい　↓あたり参考にどぞ
http://www.au.kddi.com/ezfactory/tec/dlcgi/download_1.html
http://www.au.kddi.com/ezfactory/tec/spec/wap_tag5.html
６．サーバにmmfをアップロード
ファイルへのリンクはこんな感じで
&amp;amp;lt;object data=&#34;data/keion.mmf&#34; type=&#34;application/x-smaf&#34; copyright=&#34;no&#34; standby=&#34;down&#34;&amp;amp;gt;
&amp;amp;lt;param name=&#34;disposition&#34; value=&#34;dev4anm&#34; valuetype=&#34;data&#34; /&amp;amp;gt;
&amp;amp;lt;param name=&#34;size&#34; value=&#34;134669&#34; valuetype=&#34;data&#34; /&amp;amp;gt;
&amp;amp;lt;param name=&#34;title&#34; value=&#34;タイトル名&#34; valuetype=&#34;data&#34; /&amp;amp;gt;
&amp;amp;lt;/object&amp;amp;gt;
あと.htaccessにこんなの書いとくといいのかな
AddType application/x-smaf .mmf
ちなみにW43Kは目標サイズを150にするといいみたいだ </description>
    </item>
    
    <item>
      <title>今更ながらYankRingを入れてみた</title>
      <link>https://yaasita.github.io/2009/06/07/9442/</link>
      <pubDate>Sun, 07 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/07/9442/</guid>
      <description> 長いことvim使ってるくせに知らなかった・・・OTZ
つーことでインストールしてみる　－＞　YankRing
基本的な使い方は
１．適当にyyとかでコピーする
２．適当にyyとかでコピーする（以下省略
３．pで貼り付け前の履歴を貼り付けたかったらCtrl-Pを押す、次の履歴を貼り付けたかったらCTRL-Nを押す
知らなきゃ駄目そうなコマンドは以下の通り
YRClear →　ヤンクリストのクリア
YRShow　→　ヤンクリストの表示
YRToggle　→　YankRingの有効／無効の切り替え
設定しておくべき変数は以下の通り
g:yankring_max_history　→　ヤンクリストの履歴保持数
g:yankring_ignore_duplicate　→　ヤンクしたときに重複行を追加するか否か　1は重複した行を追加しない
g:yankring_clipboard_monitor →　クリップボードをモニタリングするかどうか　これが1だとCtrl-Pとか押した時に&#34;*バッファの内容も表示される
参考リンク
http://nanasi.jp/articles/vim/yankring_vim.html </description>
    </item>
    
    <item>
      <title>MPC(Media Player Classic)についてのまとめ</title>
      <link>https://yaasita.github.io/2009/05/31/9482/</link>
      <pubDate>Sun, 31 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/31/9482/</guid>
      <description> 派生とかいろいろ分からなくなるのでここでまとめておく
・本家本元（ただしもう更新されなくなっているので原則使わない）
http://sourceforge.net/projects/guliverkli/
・本家からちょっと修正された版（DownLoad→Media Player Classic6.4.9.1をどうぞ）
http://sourceforge.net/projects/guliverkli2/
・MPC Home Cinemaという派生版　いろいろ機能追加されている
http://mpc-hc.sourceforge.net/
オマケ　便利なコーデックパック→CCCP </description>
    </item>
    
    <item>
      <title>サクラエディタを起動時に常駐したくなった</title>
      <link>https://yaasita.github.io/2009/05/31/9462/</link>
      <pubDate>Sun, 31 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/31/9462/</guid>
      <description> そんなときは
スタートアップに
&#34;C:\Program Files\sakura\sakura.exe&#34; -NOWIN
を追加しておくと良いでしょう </description>
    </item>
    
    <item>
      <title>新人プログラマーがプロのプログラマーとして独り立ちするための7つの条件</title>
      <link>https://yaasita.github.io/2009/05/30/9502/</link>
      <pubDate>Sat, 30 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/30/9502/</guid>
      <description> http://d.hatena.ne.jp/aureliano/20090423/1240454590 </description>
    </item>
    
    <item>
      <title>perlでランダムな文字列を生成するモジュール</title>
      <link>https://yaasita.github.io/2009/05/18/9522/</link>
      <pubDate>Mon, 18 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/18/9522/</guid>
      <description> その名もString::Random
参考リンク
http://d.hatena.ne.jp/fbis/20080114/1200307393 </description>
    </item>
    
    <item>
      <title>クレジットカードのフェイスを気にする人へ</title>
      <link>https://yaasita.github.io/2009/05/10/9542/</link>
      <pubDate>Sun, 10 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/10/9542/</guid>
      <description> クレジットカードのフェイスを気にする人へ
http://www.eposcard.co.jp/campaign/100designcards/index.html
http://card.sakuratan.com/index.html </description>
    </item>
    
    <item>
      <title>2chの発言数まとめ</title>
      <link>https://yaasita.github.io/2009/05/09/9562/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/09/9562/</guid>
      <description> すずめ
http://stats.2ch.net/suzume.cgi </description>
    </item>
    
    <item>
      <title>Perlパッケージに含まれる便利なツール郡</title>
      <link>https://yaasita.github.io/2009/05/09/9602/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/09/9602/</guid>
      <description> http://www.linux.or.jp/JF/JFdocs/LFS-BOOK/appendixa/perl.html
これに加えWindows版のPerlにはpl2batというperlスクリプトをbatファイルにするツールがあります </description>
    </item>
    
    <item>
      <title>vim7.2にしてからExploreの様子がおかしい</title>
      <link>https://yaasita.github.io/2009/05/09/9582/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/09/9582/</guid>
      <description> なんかx:execが使えないことに気づいた
↓
よく分からないので昔使ってたvim7.1（香り屋版）で試す
↓
使える
↓
オプションを見直す
↓
どうやらset shellslashが悪さしてるっぽいのでsyntax/netrw.vimの頭にsetlocal noshellslash
を追加して直す
んーvim7.1ではshellslashを有効にしてても使えたのになんでだろう・・・
まあ直ったからいいか </description>
    </item>
    
    <item>
      <title>なんかよく分からないけどほめてくれるサイト</title>
      <link>https://yaasita.github.io/2009/05/08/9623/</link>
      <pubDate>Fri, 08 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/08/9623/</guid>
      <description> ほめられサロン
http://kakula.jp/homeSalon/ </description>
    </item>
    
    <item>
      <title>なんか面白いgifアニメを置いてあるとこ</title>
      <link>https://yaasita.github.io/2009/05/05/9644/</link>
      <pubDate>Tue, 05 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/05/9644/</guid>
      <description> http://www.creepygif.com/ </description>
    </item>
    
    <item>
      <title>NetTransportを入れるとIEのダウンロードの挙動が変わる</title>
      <link>https://yaasita.github.io/2009/04/26/9684/</link>
      <pubDate>Sun, 26 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/26/9684/</guid>
      <description> Q.IEのダウンロードを横取りしてしまうのですがどうすればいいのですか？
A.ドロップウィンドウかタスクトレイのアイコン右クリックして
ブラウザの監視のチェック外せばいいだけです。
だそうです
参考リンク
http://www.wikihouse.com/windows/index.php?Net%20Transport </description>
    </item>
    
    <item>
      <title>perlでDBMファイルを取り扱う</title>
      <link>https://yaasita.github.io/2009/04/26/9664/</link>
      <pubDate>Sun, 26 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/26/9664/</guid>
      <description> 最近はtieという関数を使うらしい・・・
#!/usr/bin/perl
use feature qw(say);
use SDBM_File;
use Fcntl;
tie (%HA,&#39;SDBM_File&#39;,&#34;test&#34;,O_RDWR|O_CREATE,0644);
%HA=(one=1,two=2,three=3);
while ( ($a,$b)=each %HA){
say &#34;$a - $b&#34;;
}
untie %HA;
参考リンク
http://www.lr.pi.titech.ac.jp/~abekawa/perl/perl_bigdata.html
http://perldoc.jp/docs/perl/5.10.0/perltie.pod
http://www.ecopig.jp/comucale/dbm.htm
http://search.cpan.org/~nwclark/perl-5.8.9/ext/SDBM_File/SDBM_File.pm </description>
    </item>
    
    <item>
      <title>PDFのパスワードを解析するソフトpdfcrack</title>
      <link>https://yaasita.github.io/2009/04/19/9704/</link>
      <pubDate>Sun, 19 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/19/9704/</guid>
      <description> Debian(lenny)のレポジトリにありました。
aptで簡単インストール。
使い方は
pdfcrack hoge.pdf
みたいに使う
途中でCtrl+Cで止めてもカレントディレクトリにsavedstate.savが出来るから
また再開したいときには
pdfcrack -l savedstate.sav hoge.pdf
みたいな感じで
参考リンク
http://gigazine.net/index.php?/news/comments/20090219_pdfcrack/ </description>
    </item>
    
    <item>
      <title>スライドパズル by ハンゲーム</title>
      <link>https://yaasita.github.io/2009/04/18/9725/</link>
      <pubDate>Sat, 18 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/18/9725/</guid>
      <description> http://flashweb.hangame.co.jp/play.nhn?gameid=fpbswitch </description>
    </item>
    
    <item>
      <title>ネコを囲むFLASHゲーム</title>
      <link>https://yaasita.github.io/2009/04/16/9745/</link>
      <pubDate>Thu, 16 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/16/9745/</guid>
      <description> http://www.gamedesign.jp/flash/chatnoir/chatnoir_jp.html </description>
    </item>
    
    <item>
      <title>オラバウトが閉鎖されちゃうよー｡･ﾟ･(ﾉд`)･ﾟ･｡</title>
      <link>https://yaasita.github.io/2009/04/15/9765/</link>
      <pubDate>Wed, 15 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/15/9765/</guid>
      <description> そんなあなたに
シナバウト
http://www.alabout.com/
オラバウトNEXT
http://gazouch.net/allabout/
ヨロバウト
http://reafin.net/
オラバウト跡地
http://www.genie.x0.com/alabout/closed.phtml </description>
    </item>
    
    <item>
      <title>MFCのログイン時Cookie</title>
      <link>https://yaasita.github.io/2009/04/11/9787/</link>
      <pubDate>Sat, 11 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/11/9787/</guid>
      <description> 
 </description>
    </item>
    
    <item>
      <title>HTTP::Liteモジュール</title>
      <link>https://yaasita.github.io/2009/04/04/9828/</link>
      <pubDate>Sat, 04 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/04/9828/</guid>
      <description> Net::HTTPより簡単なHTTPモジュールあったよー
＼(^O^)／
参考リンク
http://perldoc.jp/docs/modules/HTTP-Lite-2.1.4/HTTP/Lite.pod </description>
    </item>
    
    <item>
      <title>新しい構文上の機能を有効にするプラグマ（perl)</title>
      <link>https://yaasita.github.io/2009/04/04/9808/</link>
      <pubDate>Sat, 04 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/04/9808/</guid>
      <description> use featureってやつだな
sayとか便利
参考リンク
http://perldoc.jp/docs/modules/feature-1.11/feature.pod </description>
    </item>
    
    <item>
      <title>perlで良く使うモジュールNet::HTTP</title>
      <link>https://yaasita.github.io/2009/03/30/9848/</link>
      <pubDate>Mon, 30 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/30/9848/</guid>
      <description> ここでメモっておく
 use Net::HTTP;
my $s = Net::HTTP-new(Host = &#34;www.perl.com&#34;) || die $@;
$s-write_request(GET = &#34;/&#34;, &#39;User-Agent&#39; = &#34;Mozilla/5.0&#34;);
my($code, $mess, %h) = $s-read_response_headers;
while (1) {
my $buf;
my $n = $s-read_entity_body($buf, 1024);
die &#34;read failed: $!&#34; unless defined $n;
last unless $n;
print $buf;
}
CPANリンク
http://search.cpan.org/~gaas/libwww-perl-5.825/lib/Net/HTTP.pm </description>
    </item>
    
    <item>
      <title>Cookieを編集できるFirefoxアドオン</title>
      <link>https://yaasita.github.io/2009/03/24/9868/</link>
      <pubDate>Tue, 24 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/24/9868/</guid>
      <description> https://addons.mozilla.org/ja/firefox/addon/573 </description>
    </item>
    
    <item>
      <title>flvをサーバー側で再生する</title>
      <link>https://yaasita.github.io/2009/03/22/9889/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9889/</guid>
      <description> JW FLV MEDIA PLAYERというのがおすすめ
↓みたいなウィザード形式でコードも出してくれる親切設計
http://www.longtailvideo.com/support/jw-player-setup-wizard?example=1 </description>
    </item>
    
    <item>
      <title>perlのモジュール・・・名前空間の話</title>
      <link>https://yaasita.github.io/2009/03/22/9951/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9951/</guid>
      <description> ちょっとウヤムヤにしておいたけどここで理解しておこう
まあつまり
use Module::hoge (LIST)
ってやってLISTにインポートしたい関数を書いておきなさいというわけですな
参考リンク
http://adiary.blog.abk.nu/0148
http://d.hatena.ne.jp/perlcodesample/20090205/1232879205
http://perldoc.jp/docs/perl/5.10.0/perlmod.pod </description>
    </item>
    
    <item>
      <title>smbmountの話</title>
      <link>https://yaasita.github.io/2009/03/22/9930/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9930/</guid>
      <description> Debianだとそのものずばりのコマンド名のパッケージはないので
smbfsをインストールする
http://www.millionwaves.com/200604140613.html
そんで適当にマウント
smbmount //192.168.0.2/ボリューム\ \(D\)/bakup /mnt/ -o guest
guestを指定してやればパスワードのプロンプトが出ない
http://www9.samba.gr.jp/project/translation/3.0/htmldocs/smbmount.8.html
パスワードがあってプロンプトを出さない方法は↓
ユーザー名が smb パスワードが hoge
なら
smb%hoge
あるいは
username=smb,password=hoge
http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.php?topic=21439&amp;amp;forum=10&amp;amp;2 </description>
    </item>
    
    <item>
      <title>vimのtips2</title>
      <link>https://yaasita.github.io/2009/03/22/10012/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/10012/</guid>
      <description>&amp;ldquo;自動整形の実行方法を決める
&amp;ldquo;改行後もコメントとするかとか
&amp;ldquo;set formatoptions?
&amp;ldquo;コマンド結果をリダイレクト
&amp;ldquo;:h :redir
&amp;ldquo;キーコード(特殊文字) Ctrl+k 押してからキー押すと
&amp;ldquo;名前を挿入できる
&amp;ldquo;:h key-codes
&amp;ldquo;タブをスペースに変更
&amp;ldquo;set expandtab
&amp;ldquo;retab
&amp;quot; テキストファイルに固有の設定を
&amp;quot; 残す
&amp;ldquo;h modeline
&amp;ldquo;プラグイン、固有の設定ファイル
&amp;ldquo;boxes
&amp;ldquo;diff.exe
&amp;ldquo;all colors pack
&amp;ldquo;txt.vim -&amp;gt; $VIMRUNTIME/syntax/txt.vim
&amp;ldquo;MRU.vim
&amp;ldquo;skeleton.html
&amp;ldquo;テキストに対し固有の設定を書く
&amp;ldquo;マッピングなどはmodeline使えないため
&amp;ldquo;autocmd BufRead ~/デスクトップ/kara.txt set nonu |
&amp;quot; \nnoremap j gj| nnoremap k gk
&amp;ldquo;ステータスラインを長さによって表示項目変更
&amp;ldquo;:function STline()
&amp;ldquo;if winwidth(0) &amp;amp;gt;= 120
&amp;quot; set statusline=%&amp;amp;lt;%f\ %m%r%h%w%=%{&#39;[&#39;.(&amp;amp;fenc!=&amp;rsquo;&#39;?&amp;amp;fenc:&amp;amp;enc).&#39;][&#39;.&amp;amp;ff.&#39;]&#39;}\ \ %2*%y%0*%6l,%c%V%1*%8P
&amp;ldquo;else
&amp;quot; set stl&amp;amp;
&amp;ldquo;endif
&amp;ldquo;:endfunction
&amp;quot;
&amp;ldquo;autocmd VimResized * call STline()</description>
    </item>
    
    <item>
      <title>WebDAVの設定をDebian lennyでやってみる</title>
      <link>https://yaasita.github.io/2009/03/22/9991/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9991/</guid>
      <description> 前回とちょっと違う部分があったので補足を含め書きます。
１．a2enmodで必要なモジュール読み込む
a2enmod dav
a2enmod dav_fs
２．httpd.confに↓みたいに書いとけばok
そんでまあcalってディレクトリ作ってパーミッションとか777にしとけば
まあ間違いないだろう
Dav On
Options Indexes
AuthType Basic
AuthName &#34;input webdav password!&#34;
AuthUserFile &#34;/etc/apache2/passwd&#34;
Require valid-user
Order allow,deny
allow from all

３．ロックファイルやらうんちゃらは
/etc/apache2/mods-enabled
にある
dav_fs.conf
で定義してあるから別に書かなくてもおｋ
3.5．Windowsのネットワークプレースでの確認方法は
ネットワークプレースの追加→ウィザード開く→基本次へで進む→アドレスに↓を記述してOK

http://hogehoge.com:8000/cal/
↑アドレス　↑WebDAVが有効なディレクトリ

４．thunderbirdにlightningって拡張いれて
新しいカレンダーでも作ってごにょごにょすれば良いですよ 参考リンク
休日カレンダーICS
http://www.mozilla-japan.org/projects/calendar/holidays.html </description>
    </item>
    
    <item>
      <title>Windowsの共有ファイルにperlでアクセスするには</title>
      <link>https://yaasita.github.io/2009/03/22/9971/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9971/</guid>
      <description> 普通にopen,opendirが使えるみたい

open (FH,&#34;//192.168.0.11/share/hoge.txt&#34;);
opendir (DIR,&#34;192.168.0.11/share&#34;);

まあ目的はローカルにあるファイルを共有フォルダへコピーだったので
こんな感じで

use File::Copy;
$dir=&#39;//192.168.0.11/share/&#39;;
copy $backup_filename,$dir; </description>
    </item>
    
    <item>
      <title>コンソールの設定をする setterm</title>
      <link>https://yaasita.github.io/2009/03/22/9910/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9910/</guid>
      <description> 前回も話したけどその続き、
前回までの課題はログインしないとsettermを実行できないこと
実行前にsettermするにはDebianだと&#34;/etc/console-tools/config&#34;を修正する

BALNK_TIME=N (N:0-60: 放置してから画面を暗転させるまでの分数)
BLANK_DPMS=on (画面の省電力モードをサスペンドモードにセット *1)
POWERDOWN_TIME=N (N:0-60: 暗転してからモニタの電源を切るまでの分数)
(*1 BLANK_DPMS=powerdown とした場合サスペンドモードを経由せずBLANK_TIMEで設定した時間でモニタの電源断)

だそうです。
参考リンク
http://blogs.yahoo.co.jp/debilman01/860916.html </description>
    </item>
    
    <item>
      <title>TMTOWTDIの話</title>
      <link>https://yaasita.github.io/2009/03/21/10032/</link>
      <pubDate>Sat, 21 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/21/10032/</guid>
      <description> there&#39;s more than one way to do it 略して
TMTOWTDI
perlのスローガン
意味は「やり方はいくらでもある」みたいな
うーんためになる
よくアドレスを忘れるからメモ
努力、忍耐、謙遜　(Larry Wall)
http://www.oreilly.co.jp/BOOK/osp/OpenSource_Web_Version/chapter10/chapter10.html </description>
    </item>
    
    <item>
      <title>gvim (vim)で半透明にしたり、常に前面ウィンドウにしたり</title>
      <link>https://yaasita.github.io/2009/03/20/10054/</link>
      <pubDate>Fri, 20 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/20/10054/</guid>
      <description> っていうのはVimTweakっていうDLLを使えばいいらしい
透明度の調整
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;SetAlpha&#34;, 200)
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;SetAlpha&#34;, 255) 常に前面ウィンドウ
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;EnableTopMost&#34;, 1)
常に前面ウィンドウの解除
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;EnableTopMost&#34;, 0)
参考リンク
http://liosk.blog103.fc2.com/blog-entry-148.html </description>
    </item>
    
    <item>
      <title>perlでリターンキーを待たずにキーのデータを一つ読み取るには?</title>
      <link>https://yaasita.github.io/2009/03/08/10095/</link>
      <pubDate>Sun, 08 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/08/10095/</guid>
      <description> Term::ReadKeyを使えばいいらしい
使い方：
ReadModeで読み方を指定　引数は0～5のどれか
0・・・元々の設定に戻す
1・・・普通のモード
2・・・1と同じだがechoされない（自分が入力したものが見れないからパスワード入力などに使える）
3・・・cbreakモード　Ctrl＋Cで止めるとかできる
4・・・rowモード　Ctrl＋Cで止めるとか無理。改行コード変換はしてくれる。
5・・・4と同じだが改行コード変換はしてくれない。（Windows環境では4と5は同じ）
ReadKeyで読み込む　引数は0、-1、0より大きい値のどれか
0・・・getc見たいに1文字よみます（引数省略時のデフォルト）
-1・・・ノンブロッキングリード
引数0・・・引数秒だけwaitし、時間になったらundefを返す
例
#!/usr/bin/perl
use Term::ReadKey;
print $Term::ReadKey::VERSION;
print &#34;\n&#34;;
ReadMode 3;
while (1){
$char = ReadKey(5);
last if not defined $char;
printf (&#34;%1s is %X &#34;,$char,ord $char);
print &#34;\n&#34;;
}
参考サイト
http://search.cpan.org/~stsi/TermReadKey/ReadKey.pm
http://perldoc.jp/docs/perl/5.10.0/perlfaq8.pod
http://www.jp-z.jp/perlmemo/IF_Term-ReadKey.html </description>
    </item>
    
    <item>
      <title>squidを設定する時に気をつけること・・・</title>
      <link>https://yaasita.github.io/2009/03/08/10074/</link>
      <pubDate>Sun, 08 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/08/10074/</guid>
      <description> なんか色々みたけど難しくてよー分からん。
↓くらい気にしとけばいいんでないの
・メモリ領域 (cache_mem)
・メモリに置くオブジェクトサイズ　（maximum_object_size_in_memory)
・HDDに置くサイズ　（cache_dir）
・HDDに置くオブジェクトサイズ（maximum_object_size）
・オブジェクトサイズの平均値（store_avg_object_size）
・速いDNSサーバー( dns_nameservers )
あとはcachemgr.cgiとか参照してください(debianだとsquid-cgiパッケージに同梱） </description>
    </item>
    
    <item>
      <title>perldoc.jp</title>
      <link>https://yaasita.github.io/2009/03/07/10115/</link>
      <pubDate>Sat, 07 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/07/10115/</guid>
      <description> http://perldoc.jp/docs/perl/5.10.0/ </description>
    </item>
    
    <item>
      <title>squidをweb経由で設定する</title>
      <link>https://yaasita.github.io/2009/03/02/10135/</link>
      <pubDate>Mon, 02 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/02/10135/</guid>
      <description> squid-cgiをaptかなんかでインストールしてください
そんでsquid.confにある
cachemgr_passwd
あたりを参照して適当に設定してください
あとは
http://自分の鯖/cgi-bin/cachemgr.cgi
あと/etc/squid/のなかにあるcachemgr.confのポート番号も直すこと
あとアクセスリストとか・・・↓参照で・・・
でおｋ
参考リンク
http://swkoji.blog63.fc2.com/blog-category-8.html
http://perltips.twinkle.cc/server/squid_cachemgr.php </description>
    </item>
    
    <item>
      <title>sambaの設定でmaskがうまくいかない</title>
      <link>https://yaasita.github.io/2009/03/01/10157/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/01/10157/</guid>
      <description> create mask = 777
ってしても実行権限が外れてしまう・・・
でも、そういう仕様らしい
↓参考
http://roserogue.blogspot.com/2007/08/create-mask775.html </description>
    </item>
    
    <item>
      <title>perlのワンライナー</title>
      <link>https://yaasita.github.io/2009/02/28/10178/</link>
      <pubDate>Sat, 28 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/28/10178/</guid>
      <description>よく忘れるのでメモ
↓は普通の使い方
perl -e &#39;print &amp;quot;hello&amp;quot;&#39;  ↓test.txtの中身を表示 -nオプションは
こんな感じの意味
perl -ne &#39;print&#39; test.txt while (&amp;lt;&amp;gt;) { ... # your program goes here }  ↓test.txtの中身を表示 -pオプションは
-nの最後にプリント文をかます様なイメージ
perl -pe &#39;&#39; test.txt while (&amp;lt;&amp;gt;) { ... # your program goes here print; }  ライン処理を追加する（print文の後に改行＋&amp;lt;&amp;gt;後にchmop）
perl -lpe &#39;&#39; test.txt  -iオプションは対象のファイルを上書きする
注意するのは-iはその後に変更前のファイル名を取るので
まとめないこと（-ipleは駄目）
上がtest.txtの頭に行番号を付加する
下が変更前のtest.txtをtest.txt.backとして残す
perl -i -ple &#39;s/^(.*$)/$.$1/&#39; test.txt perl -i.back -ple &#39;s/^(.*)/$. \: $1/&#39; test.txt  参考リンク
 http://blog.</description>
    </item>
    
    <item>
      <title>debian lennyを入れたらpstreeどっかいった</title>
      <link>https://yaasita.github.io/2009/02/22/10218/</link>
      <pubDate>Sun, 22 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/22/10218/</guid>
      <description>つpsmisc</description>
    </item>
    
    <item>
      <title>ちょっとsshの鍵認証についてまとめておこうか</title>
      <link>https://yaasita.github.io/2009/02/22/10198/</link>
      <pubDate>Sun, 22 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/22/10198/</guid>
      <description> 設定は/etc/ssh/sshd_config
下は推奨設定
AllowUsers hogehoge
Port 443
PasswordAuthentication no
PermitRootLogin no
PermitEmptyPasswords no
ssh-keygen -t rsa
で作る
/home/hogehoge/.ssh/id_rsaに保存
パスフレーズも決める
id_rsa 秘密鍵
id_rsa.pub 公開鍵
公開鍵(id_rsa.pub)は
~/.ssh/authorized_keys
にリネームする
秘密鍵はクライアントに転送
クライアントがLinuxの場合は
~/.ssh/id_rsa
と置く
クライアントがWindowsの場合は
puttygen.exeを起動Loadを押して
id_rsaを読み込ませパスフレーズを入力→
変換後はprivatkeyとして保存（ppkファイル）
ログインの際は
ssh -p 2200 hogehoge@hoge.com
みたいな感じ
id_rsa（秘密鍵）を指定する場合は
ssh -p 2200 -i hoge.rsa hogehoge@hoge.com
みたいにする
参考URL
http://www.jitaku-server.net/ssh_crypto.html
http://kazmax.zpp.jp/linux/lin_sshrsa.html </description>
    </item>
    
    <item>
      <title>コンソール環境でモニタの電源を切るには</title>
      <link>https://yaasita.github.io/2009/02/22/10238/</link>
      <pubDate>Sun, 22 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/22/10238/</guid>
      <description> Debian Lennyで試した
ディスプレイを自動的にきる設定
$ setterm -powersave on -powerdown 1
とかしておくといいらしい
あと↓も必要だと思う
$ setterm -blank 1
起動時に自動的にこの設定をするにはこちら
参考リンク
http://osdir.com/ml/linux.debian.jp.user/2004-02/msg00035.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/251stopconsuspnd.html </description>
    </item>
    
    <item>
      <title>HttpWatch Basic Edition</title>
      <link>https://yaasita.github.io/2009/02/21/10278/</link>
      <pubDate>Sat, 21 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/21/10278/</guid>
      <description> 公式サイト
機能多くて全部使い切れないけどなんかすごい
参考サイト
http://gigazine.net/index.php?/news/comments/20090218_httpwatch/ </description>
    </item>
    
    <item>
      <title>perlの数値回りのはなしー</title>
      <link>https://yaasita.github.io/2009/02/21/10258/</link>
      <pubDate>Sat, 21 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/21/10258/</guid>
      <description> printf &#34;%u\n&#34;,~0;
チルダ＋0で上限値が出る？みたいね
まあCOBOLで言うところのHIGH-VALUEみたいなもんか
追記
上限値が出るっていうかあれです
ビット演算のビット反転効果があったみたいですね
http://www.rfs.jp/sb/perl/02/bit.html
参考リンク
http://questionbox.jp.msn.com/qa2174949.html
http://perldoc.jp/docs/perl/5.8.8/perlop.pod </description>
    </item>
    
    <item>
      <title>perlでプログレスバー的なものを作る</title>
      <link>https://yaasita.github.io/2009/02/15/10300/</link>
      <pubDate>Sun, 15 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/15/10300/</guid>
      <description> ポイントは$lと\rです。
$|・・・出力をバッファリングするかどうか（0以外はバッファリングしない。つまりprint文は直ぐ出すということ）
\r・・・キャリッジリターンまあ頭にカーソル戻すよーみたいな意味

#!/usr/bin/perl
$max=125;
$split=50;
$| = 1;
$ps=int($max/$split+1);
for (1..$split){
print &#34;[&#34;,&#34;=&#34; x $_,&#34; &#34; x ($split-$_),&#34;]&#34;;
print &#34;\r&#34;;
sleep 1;
if ($_==$split){
print &#34;[&#34;,&#34;=&#34; x $split,&#34;]\n&#34;;
exit;
}
}

参考リンク
http://perl.g.hatena.ne.jp/bosh/20080107/p1
http://www.geocities.co.jp/SiliconValley-Sunnyvale/6128/perl/evalue.html </description>
    </item>
    
    <item>
      <title>人を燃やして連鎖を狙うゲーム</title>
      <link>https://yaasita.github.io/2009/02/11/10320/</link>
      <pubDate>Wed, 11 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/11/10320/</guid>
      <description> http://www.bubblebox.com/play/skill/1257.htm </description>
    </item>
    
    <item>
      <title>perlでSJISマッチング</title>
      <link>https://yaasita.github.io/2009/02/07/10340/</link>
      <pubDate>Sat, 07 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/07/10340/</guid>
      <description> /\Qあああああ\E/
みたいに\Qと\Eで挟むと良いらしい・・・
まあ何でかと言うと\Qと\Eの間はメタ文字を打ち消す効果があるからだけど
http://saboten009.blogspot.com/2008/02/perl.html </description>
    </item>
    
    <item>
      <title>perlで今実行しているファイル名を調べる</title>
      <link>https://yaasita.github.io/2009/02/07/10360/</link>
      <pubDate>Sat, 07 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/07/10360/</guid>
      <description> 実行中のプログラム名（ファイル名）
を参照する特殊変数は？
$0っていう変数で出来るお

#!/usr/bin/perl
print $0,&#34;\n&#34;;
 </description>
    </item>
    
    <item>
      <title>lessとかページャーの設定メモ</title>
      <link>https://yaasita.github.io/2009/02/02/10380/</link>
      <pubDate>Mon, 02 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/02/10380/</guid>
      <description> lessのエンコードを指定する変数LESSCHARSET
例
export LESSCHARSET=dos
そんでデフォルトのページャーを変更する
export PAGER=less
参考サイト
http://d.hatena.ne.jp/n-kaneshige/20081202/1228194177 </description>
    </item>
    
    <item>
      <title>NetTransportでwebラジオ（ストリーミング）ダウンロード</title>
      <link>https://yaasita.github.io/2009/01/24/10400/</link>
      <pubDate>Sat, 24 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/24/10400/</guid>
      <description> mms://hoge.com/003h.wsx
↑みたいなURLを探す
1.新規ダウンロード
2.スレッド分割数を1に設定
3.その他の設定→ストリーミングタブ→HTTPストリームにチェック
ちなみにリジュームできるよ </description>
    </item>
    
    <item>
      <title>vim　特定のファイルだけファイルタイプの検出を無効化する</title>
      <link>https://yaasita.github.io/2009/01/12/10421/</link>
      <pubDate>Mon, 12 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/12/10421/</guid>
      <description> 特定のファイルが検査されないようにするには、g:ft_ignore_pat 変数を使います。こ
の変数はデフォルトで次のように設定されています。 
:let g:ft_ignroe_pat = &#39;\.\(Z\|gz\|bz2\|zip\|tgz\)$&#39;
この設定は圧縮ファイルを検査しないようにしています。
だそうです。 </description>
    </item>
    
    <item>
      <title>perlでファイルハンドルを切り替えたいとか</title>
      <link>https://yaasita.github.io/2009/01/11/10461/</link>
      <pubDate>Sun, 11 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/11/10461/</guid>
      <description>そういことがたまにあるはず
そんな時はuse FileHandle;が良いですよ
こんな感じで使うんだ
#!/usr/local/bin/perl
use FileHandle;
print &#34;Which write file? (a or b)\n&#34;;
$in=&amp;amp;lt;STDIN&amp;amp;gt;;
chomp $in;
my $fh = new FileHandle;
if ($in eq &#34;a&#34;){
$fh -&amp;amp;gt; open(&#34;&amp;amp;gt;a.txt&#34;);
}
elsif ($in eq &#34;b&#34;){
$fh -&amp;amp;gt; open(&#34;&amp;amp;gt;b.txt&#34;);
}
else{
print &#34;No File!!\n&#34;;
exit 0;
}
print $fh &#34;foo bar!\n&#34;;
$fh -&amp;amp;gt; close();
STDOUTとファイルぐらいの切り替えならこんな感じでselect使うのもありかもね
print &#34;Write Result? (y or n)\n&#34;;
$input_keyboard2=&amp;amp;lt;STDIN&amp;amp;gt;;
chomp $input_keyboard2;
if ($input_keyboard2 eq &#34;y&#34;){
open (FH2 ,&#34;&amp;amp;gt;res.txt&#34;);</description>
    </item>
    
    <item>
      <title>vim tipsとか見るといいな</title>
      <link>https://yaasita.github.io/2009/01/11/10441/</link>
      <pubDate>Sun, 11 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/11/10441/</guid>
      <description> そんなわけでなんか今日調べたtipsを書いておく
そのライン全てを小文字/大文字に変換
guu
gUU
カーソル下にあるファイルを開く
gf
vimrcの環境変数
$MYVIMRC
$MYGVIMRC
なんか計算結果を挿入したいとき以下は5x5の結果を挿入
挿入モードで以下のように入れる
Ctrl-R=5*5
合字をいれるときに使う(挿入モードで)
&amp;amp;lt;C-K&amp;amp;gt;&amp;amp;lt;S-Space&amp;amp;gt;(キー2つ)と入力することで、文字列&#34;&amp;amp;lt;S-Space&amp;amp;gt;&#34;が入る
Ctrl-k
参考リンク
http://labs.gmo.jp/blog/ku/2007/05/vimorg_tips.html
http://vim.wikia.com/wiki/Best_Vim_Tips </description>
    </item>
    
    <item>
      <title>よくCMでみかける会社のキャッチコピー</title>
      <link>https://yaasita.github.io/2009/01/04/10481/</link>
      <pubDate>Sun, 04 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/04/10481/</guid>
      <description> 日立　Inspire the Next
東芝　Leading Innovation
松下　idea for life
三菱電機　Changes for the Better </description>
    </item>
    
    <item>
      <title>apache2 なんかのファイルをダウンロードさせたいとき</title>
      <link>https://yaasita.github.io/2009/01/02/10501/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10501/</guid>
      <description> .htaccessにこう書けば良いんじゃないかな
↓はbatファイルをダウンロードさせる場合
当然ブラウザ依存ですハイ
 AddType application/octet-stream .bat </description>
    </item>
    
    <item>
      <title>foobarでIcecast2に音楽配信→でも音割れ</title>
      <link>https://yaasita.github.io/2009/01/02/10522/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10522/</guid>
      <description> どうする？
答え）
Library→Configureから下の画面のPrempのdBを変更すればいいんだよ～(＝ω＝、)
 </description>
    </item>
    
    <item>
      <title>ubuntu8.10のsambaについて</title>
      <link>https://yaasita.github.io/2009/01/02/10564/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10564/</guid>
      <description> なんか/etc/samba配下の設定漁ってもGUIで設定した箇所について書かれてないなーと思ったら
/var/lib/samba配下にあった
なんでだろうね　まあそういうことです </description>
    </item>
    
    <item>
      <title>このBlogのテンプレートを変更するには？</title>
      <link>https://yaasita.github.io/2009/01/02/10544/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10544/</guid>
      <description> Blogger使って長いけどテンプレート（CSS(どこで編集すんだろなーってことでちょっと調べたら出来たのでメモ
そんで
１．上のバーからカスタマイズ
２．HTMLの編集
３．テンプレートを編集
４．中にある↓の辺を注目
/* Posts
-----------------------------------------------
*/
５．.post blockquote {に下の2行を追加
background: #a2c2e6;
border: outset thin #d8e0d0;
おしまい
ほらね引用文の見た目が変わったよ↓
てｓｔ
てｓｔ
あああああ
いいいいい </description>
    </item>
    
    <item>
      <title>iptablesで設定したルールを再起動後も反映したい</title>
      <link>https://yaasita.github.io/2008/12/31/10585/</link>
      <pubDate>Wed, 31 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/31/10585/</guid>
      <description>どこに書けばいいのでしょうか？　＞ Debian , Ubuntu
正解は/etc/network/if-pre-up.d
iptables-restoreコマンドをうまいこと駆使してやってください
まあ後はiptablesのメモ
最初に決めるルールINPUTは入ってくパケットOUTPUTは出て行くパケット
FORWARDは転送するパケット
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
全てのルールをクリア
iptables -F
すべてのユーザー定義もクリア
iptables -X
パケットカウンタもクリアしたいなら
iptables -Z iptables -A INPUT -p tcp --dport 4000:4999 -s ! 192.168.0.0/24 -j DROP
↑の例だと192.168.0.0/24以外のネットワークから来たパケットで4000から4999ポートを指定
しているものを削除
※注意 --dportは-p tcpが指定されていない場合は使えない（udpでも良いけど)
現在のルールを表示
iptables -L
最終的にはこんな感じで
#!/bin/bash
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -F
#iptables -A INPUT -p tcp --dport 4000:4999 -s !</description>
    </item>
    
    <item>
      <title>携帯端末以外のIPを制限するhtaccessを簡単生成</title>
      <link>https://yaasita.github.io/2008/12/31/10607/</link>
      <pubDate>Wed, 31 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/31/10607/</guid>
      <description> http://www.dspt.net/tools/mobile_ip/ </description>
    </item>
    
    <item>
      <title>Drupalをubuntu8.10にインストール</title>
      <link>https://yaasita.github.io/2008/12/25/10628/</link>
      <pubDate>Thu, 25 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/25/10628/</guid>
      <description> １．環境設定
LAMP入れとけばおｋ
２．mySQLでテーブル作成
# mysql -u root -p
mysql&amp;amp;gt; create database drupal;
↑データベース名
mysql&amp;amp;gt; grant select,insert,update,delete,create,drop,index,alter,create temporary　tables,lock tables on drupal.* to root@localhost identified by &#39;drupal&#39;;
↑の例だとrootってユーザーでパスワードはdrupal
mysql&amp;amp;gt; flush privileges;
３．webからごにょごにょ設定
http://drupal.jp/drupal6/quick_start </description>
    </item>
    
    <item>
      <title>auのUA</title>
      <link>https://yaasita.github.io/2008/12/24/10650/</link>
      <pubDate>Wed, 24 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/24/10650/</guid>
      <description> 携帯のUserAgentを知りたいなーってときにすぐ出てこないのでメモ
KDDI-KC37 UP.Browser/6.2.0.11.1.2.2e (GUI) MMP/2.0 </description>
    </item>
    
    <item>
      <title>WMP11でWindows Live Messengerに再生曲表示</title>
      <link>https://yaasita.github.io/2008/12/24/10671/</link>
      <pubDate>Wed, 24 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/24/10671/</guid>
      <description>なんか手順が変わってた
Windows Live Messenger は、現在、自分の聞いている曲をメンバーにお知らせできる機能があります。
しかし、Messenger の設定で表示するようにしたつもりなのですが、表示されていないのに気がつきました。
iTunesでは自動的に再生している曲を表示してくれますが、Windows XP のWindows Media Playerの場合は、Windows Live Messenger だけでなく、Windows Media Playerでも設定する必要があります。
まずは、Windows Live Messenger を下記のように設定します。
1. 「メニューを表示します」アイコンをクリックして表示されるメニューより「ツール」の 「オプション」をクリックします。
2. 「オプション」が表示されるので、左側の欄にある「個人設定」をクリックします。
3. 「表示名」の下にある「Windows Media Player の音楽情報を表示メッセージで公開する」にチェックをつけます。
4. 「OK」をクリックします。
Windows Live Messenger の設定が完了したら、Windows Media Player と Windows Live Messenger を連携させましょう。
Windows Media Player で下記のように設定します。なお、Windows Media Playerのバージョンによって、少し設定方法が違いますので、ご注意ください。
Windows Media Player 11の場合
1. Windows Media Player を起動します。
2. 「プレイビュー」の下の▼ボタンをクリックし、「プラグイン」から「オプション」をクリックします。
3. 左側の欄にある「バックグラウンド」をクリックします。
4. 右側に「Windows Live Messenger ミュージック プラグイン」が表示されますので、チェックをつけます。</description>
    </item>
    
    <item>
      <title>決済用普通預金ってのがあるらしい</title>
      <link>https://yaasita.github.io/2008/12/23/10691/</link>
      <pubDate>Tue, 23 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/23/10691/</guid>
      <description> 利息はつかないけど、全額保障されるらしい
ペイオフで保障されるのは1000万までだから金持ちの人はいいんじゃないかな </description>
    </item>
    
    <item>
      <title>.bashrcを作っても読み込まないよー＞＜</title>
      <link>https://yaasita.github.io/2008/12/21/10753/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10753/</guid>
      <description>そんなときは.profileを作ればいいのさ
こんな感じで・・・
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.
# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022
# if running bash
if [ -n &#34;</description>
    </item>
    
    <item>
      <title>ubuntu8.10にはgnump3dパッケージが無いんだ</title>
      <link>https://yaasita.github.io/2008/12/21/10732/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10732/</guid>
      <description> やあ （´・ω・｀) ようこそ、Ubuntu8.10へ。
うん、「また」なんだ。
つーわけでgnump3dを入れるとなると自分でソースからビルドするか、debパッケージを探すかになります。
http://packages.ubuntu.com/
しょうがないので↑から適当に選ぶ「Search package directories」にgnump3dを入れて、Distributionは一個前のhardyを選択
一個前だとあるんだね・・・なんでレポジトリから消えたかは知らないけど・・・・
http://packages.ubuntu.com/hardy/gnump3d
まあダウンロードしたらGUIからでもdebファイルをインストールすると良いよ。GUI無い人はこんな感じでインストールすると良いんじゃない？
# dpkg -i gnump3d_3.0-2_all.deb
参考リンク
debパッケージをインストールする </description>
    </item>
    
    <item>
      <title>ここら辺でsquidのconfをまとめようか</title>
      <link>https://yaasita.github.io/2008/12/21/10711/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10711/</guid>
      <description>acl all src all
acl manager proto cache_object
acl localhost src 127.0.0.1/32
acl to_localhost dst 127.0.0.0/8
acl localnet src 10.0.0.0/8 # RFC1918 possible internal network
acl localnet src 172.16.0.0/12 # RFC1918 possible internal network
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network
acl SSL_ports port 443 # https
acl SSL_ports port 563 # snews
acl SSL_ports port 873 # rsync
acl Safe_ports port 80 # http
acl Safe_ports port 21 # ftp</description>
    </item>
    
    <item>
      <title>manコマンドの出力をtxtにする</title>
      <link>https://yaasita.github.io/2008/12/19/10793/</link>
      <pubDate>Fri, 19 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/19/10793/</guid>
      <description> man uptime | col -bfx &amp;amp;lt; uptime.txt
こんな感じでおｋ </description>
    </item>
    
    <item>
      <title>なんか軽くて良い音楽プレイヤーがあるらしい</title>
      <link>https://yaasita.github.io/2008/12/19/10773/</link>
      <pubDate>Fri, 19 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/19/10773/</guid>
      <description> 今までMPC使ってたけどこれもいいかもね
Fittle
まとめwiki </description>
    </item>
    
    <item>
      <title>FLASH版CookieみたいなSharedObjectについて</title>
      <link>https://yaasita.github.io/2008/12/14/10834/</link>
      <pubDate>Sun, 14 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/14/10834/</guid>
      <description> とあるゲームをやっていたときにふと思ったのでメモ。
ゲームをプレイしてある面で止める→次にブラウザ立ち上げてみる→続きからPLAYできる→Cookieを消してみる→続きから出来る
なぜ？それはFLASHのSharedObjectというデータを読み込んでいるからなのさ
どこに保存されているの？
WindowsXPなら
C:\Documents and Settings\＜ユーザー名＞\Application Data\Macromedia\Flash Player\#SharedObjects
とかだな多分
Linuxなら
/home/username/.macromedia/Flash_Player/とか探せばいいみたいね
参考リンク
http://www.gravity-works.jp/gravica/web/000077.shtml </description>
    </item>
    
    <item>
      <title>今日覚えた四字熟語</title>
      <link>https://yaasita.github.io/2008/12/14/10814/</link>
      <pubDate>Sun, 14 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/14/10814/</guid>
      <description> ・朝三暮四
目先のことしか見えてないこと
・八面六臂
なんかすごい活躍
参考リンク
http://contest2004.thinkquest.jp/tqj2004/70237/t/tyousan.html </description>
    </item>
    
    <item>
      <title>cshの限界について</title>
      <link>https://yaasita.github.io/2008/12/07/10856/</link>
      <pubDate>Sun, 07 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/07/10856/</guid>
      <description>配列を参照するのにforeach文というものがあります
これはperlとかphpにあったりします。そんでcshにもあるのですが・・・
なぜかcshのforeach文に指定できる配列数の上限は997なのです
この997配列がMAXというのはOSやハードウェアの仕様によらずに、どの環境でも同じでした。
つまりcshの言語仕様ってことらしい。なぜ？？なんでだろーなんでだろー
いろいろなシェル（一部perlで検証してみた）
イナバの物置風にforeachの捌ける配列MAXを探す
※スクリプト中に使われるファイル（list.txt,list2.txt)は複数行あるテキストファイルです。このファイルに例えば3行あれば3個の配列を用意します（空行は除く）。
つまりcshが997が限界なのかを検証するには997行のファイルと998行のファイルを用意すればいいのです。
まずはbash　全然平気

#!/bin/bash
array=(`cat list.txt`)
for line in ${array[@]}
do
echo $line
done
echo &#34;やっぱりbash ${#array[@]} 人のっても大丈夫&#34;

続いてzsh　まあbashの強化版だし平気みたい

#!/usr/bin/zsh
array=(`cat list.txt`)
for line in ${array[@]}
do
echo $line
done
echo &#34;やっぱりzsh ${#array[@]} 人のっても大丈夫&#34;

cshとは違うのだよcshとは　みたいな感じで余裕でクリア

#!/bin/tcsh
set array=`cat list.txt`
foreach i ($array)
echo $i
end
echo &#34;やっぱりtcsh ${#array} 人乗っても大丈夫&#34;

流石perlだどんな配列でもなんとも無いぜ！

#!/usr/bin/perl
open (FH,&#34;</description>
    </item>
    
    <item>
      <title>Firefoxの拡張 backword を試す</title>
      <link>https://yaasita.github.io/2008/12/06/10876/</link>
      <pubDate>Sat, 06 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/06/10876/</guid>
      <description> backwordはなんかホップアップで単語の意味を表示してくれる拡張みたいです。
Googleツールバーにも同様の機能があるらしいけど分からん・・・・
ココからインストールして
適当に設定する。
アドオンから設定→DictionaryをGoogle - Japaneseに設定
さらに検索するにはホップアップから虫眼鏡マークをクリックするんだけどそれにつかうサイトをSearch Webに書くエキサイトが良いと思うので
http://www.excite.co.jp/dictionary/english_japanese/?search=
と書いておこうか
そういやこの拡張いれればDictionarySearchいらんな
**一応設定メモ
Setting Ⅰ
Dictionary → 表示に使う辞書
Show phonetics(rarely hang on Firefox) → 読み方？を示すのかな？なんかたまにFirefoxがハングするとか書いてあるので触らない
Search Web → 虫眼鏡マークのなんとか・・・↑の方に既に書いた
Setting Ⅱ
Use Storage →　検索した単語をローカルにキャッシュするかどうかC:\Documents and Settings\Admin\Application Data\Mozilla\Firefox\Profiles\hogehoge.default\backwordの中に保存されてるみたいよ あと右下の有効、無効を切り替えるマークを右クリック→Pages→
Review Page of Local Storageで自分のキャッシュが見れるお
Automatically back word and context　→　ポップアップにあらわれるメニューがごちゃごちゃと増える
あとは良く分からん
参考リンク
発音も分かる無料マウスオーバー辞書なFirefox拡張「backword」 </description>
    </item>
    
    <item>
      <title>VirtualPCの設定ファイルとかの場所は？</title>
      <link>https://yaasita.github.io/2008/11/30/10916/</link>
      <pubDate>Sun, 30 Nov 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/11/30/10916/</guid>
      <description> ・使用しているバーチャルHDDは？
VirtualPCコンソール→設定(T)→ハードディスクのバーチャルハードディスクファイルってのを見れば分かると思う
・使用してるVirtualマシンは？（その他、復元ファイルなどは？）
\Documents and Settings\ユーザー名\Application Data\Microsoft\Virtual PC\Virtual Machines
を見ればいける </description>
    </item>
    
    <item>
      <title>％COMSPEC％→がcmd.exeを示すように・・・</title>
      <link>https://yaasita.github.io/2008/11/30/10896/</link>
      <pubDate>Sun, 30 Nov 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/11/30/10896/</guid>
      <description> 環境変数を列挙したページがあったようだ
cd %APPDATA%
とかやるとアプリケーションデータに行くと思うよ
http://www.atmarkit.co.jp/fwin2k/win2ktips/267swchos/swchos.html </description>
    </item>
    
    <item>
      <title>ゲーム</title>
      <link>https://yaasita.github.io/2008/11/28/10937/</link>
      <pubDate>Fri, 28 Nov 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/11/28/10937/</guid>
      <description> 切って進めるゲーム(splitter)
http://www.kongregate.com/games/EvgenyKarataev/splitter/
ニコニコメーカー
http://nm.dabun-doumei.com/
splitter 解答
http://jp.youtube.com/watch?v=PHF6WKd1MyU </description>
    </item>
    
    <item>
      <title>FFベンチをやってみた</title>
      <link>https://yaasita.github.io/2008/11/26/10958/</link>
      <pubDate>Wed, 26 Nov 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/11/26/10958/</guid>
      <description> 結果は3000くらい
２ｃｈのテンプレに習って報告してみる
構成
【 .CPU.　】 AMD Athlon 64 3200+
【 Mem 】 1GB DDR400
【　M/B　】Albatron K8X890 Pro
【　VGA 】GeForce 7300GS (AL-GF7300GS)
【VGAﾄﾞﾗｲﾊﾞ】
【　DirectX....】 DirectX9.0c
【　Sound 】
【 OS 】
【 Ver . 】
▼スコア
【　.Low　】
【　High　.】
http://www.playonline.com/ff11/download/media/benchmark01.html </description>
    </item>
    
    <item>
      <title>apache2でWebDAV設定→Thunderbirdのカレンダー公開</title>
      <link>https://yaasita.github.io/2008/10/26/10979/</link>
      <pubDate>Sun, 26 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/26/10979/</guid>
      <description> 環境はDebian etch - apache2.2を想定
１．a2enmodで必要なモジュール読み込む
a2enmod webdav
a2enmod dav_fs
２．httpd.confに↓みたいに書いとけばok
そんでまあcalってディレクトリ作ってパーミッションとか777にしとけば
まあ間違いないだろう
&amp;amp;lt;Directory /var/www/cal/&amp;amp;gt;
Dav On
Options Indexes
AuthType Basic
AuthName &#34;input webdav password!&#34;
AuthUserFile &#34;/etc/apache2/pass&#34;
Require valid-user
Order allow,deny
allow from all
&amp;amp;lt;/Directory&amp;amp;gt;
３．ロックファイルやらうんちゃらは
/etc/apache2/mods-enabled
にある
dav_fs.conf
で定義してあるから別に書かなくてもおｋ
４．thunderbirdにlightningって拡張いれて
新しいカレンダーでも作ってごにょごにょすれば良いですよ </description>
    </item>
    
    <item>
      <title>ファイルの関連付けを行う時にgvimが追加できなくなる事象について</title>
      <link>https://yaasita.github.io/2008/10/26/11000/</link>
      <pubDate>Sun, 26 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/26/11000/</guid>
      <description> レジストリの
[HKEY_CLASSES_ROOT￥Applications￥gvim.exe]のフルパスが間違ってるとからしいです。
直すのが面倒ならそのキーごと削除→再登録でおｋ
参考リンク
「ファイルを開くプログラムの選択」でプログラムを参照しても一覧に追加されずに選択できない </description>
    </item>
    
    <item>
      <title>ガンダノイドSEED</title>
      <link>https://yaasita.github.io/2008/10/25/11040/</link>
      <pubDate>Sat, 25 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/25/11040/</guid>
      <description> http://nameall.cosotto.com/gundanoids/ </description>
    </item>
    
    <item>
      <title>何か衝突とか破裂する瞬間をスローで見るFLASH</title>
      <link>https://yaasita.github.io/2008/10/25/11020/</link>
      <pubDate>Sat, 25 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/25/11020/</guid>
      <description> http://dsc.discovery.com/tv/time-warp/video/interactive/interactive.html </description>
    </item>
    
    <item>
      <title>sshのダイナミック転送でSOCKSプロキシ</title>
      <link>https://yaasita.github.io/2008/10/24/11082/</link>
      <pubDate>Fri, 24 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/24/11082/</guid>
      <description> １．まあ普通にsshダイナミック転送する
２．Firefoxの接続設定でSOCKS v5 プロキシに設定
３．名前解決はローカルでやろうとするので
about:configからnetwork.proxy.socks_remote_dnsをtrueにする
でおｋ
参考リンク
SSH のダイナミック転送ってすごいんですよ </description>
    </item>
    
    <item>
      <title>解析テンプレ</title>
      <link>https://yaasita.github.io/2008/10/24/11060/</link>
      <pubDate>Fri, 24 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/24/11060/</guid>
      <description> 定番解析ソフトと解析勉強サイト
●デバッガ OllyDbg
Digital Travesiaで再配布
●プロセスメモリエディタ兼デバッガ スペシャルねこまんま57号
http://www.vector.co.jp/soft/win95/hardware/se254476.html
●プロセスメモリエディタ兼デバッガ うさみみハリケーン
http://hp.vector.co.jp/authors/VA028184/
●ヘキサエディタ Stirling
http://www.vector.co.jp/soft/win95/util/se079072.html
●PCゲーム解析指南+OllyDbg日本語化パッチ Digital Travesia
http://hp.vector.co.jp/authors/VA028184/
参考書
・解析魔法少女美咲ちゃん マジカル・オープン!
ISBN:4-7980-0853-2 2,730円 A5判 280 頁
・クラッカー・プログラム大全―禁断のシリアルナンバー解析テクニック
ISBN:4-88718-746-7 2625円 A5判 304頁
・はじめて読む8086
ISBN:4871482456 1,682円 286頁
購入回避推奨
ゲーム解析スレ・書評サイト等で酷評されている参考書
・いまどきのアセンブラプログラミング [橋本和明(著)]
・いまどきのアセンブラの教科書 [橋本和明(著)]
・アセンブラ読本 for Game ゼロからはじめるゲーム改造 [橋本和明(著)] </description>
    </item>
    
    <item>
      <title>葛飾北斎ジェネレーター</title>
      <link>https://yaasita.github.io/2008/10/22/11103/</link>
      <pubDate>Wed, 22 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/22/11103/</guid>
      <description> http://www.adgame-wonderland.de/type/hokusai/ </description>
    </item>
    
    <item>
      <title>Project Cartoon</title>
      <link>https://yaasita.github.io/2008/10/14/11123/</link>
      <pubDate>Tue, 14 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/14/11123/</guid>
      <description> ITプロジェクトの現状を木で表現したあれ
http://www.projectcartoon.com/ </description>
    </item>
    
    <item>
      <title>最近流行の崩壊系</title>
      <link>https://yaasita.github.io/2008/10/04/11143/</link>
      <pubDate>Sat, 04 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/04/11143/</guid>
      <description> http://www.nicovideo.jp/watch/nm4801333
http://jp.youtube.com/experiencewii </description>
    </item>
    
    <item>
      <title>vimのtips</title>
      <link>https://yaasita.github.io/2008/10/02/11164/</link>
      <pubDate>Thu, 02 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/02/11164/</guid>
      <description>カーソルラインを表示
set cursorline
カーソルコラムを表示（縦線）
set cursorcolumn
コマンドを続けるには縦棒を使う
command Pw w | !perl %
自動整形の実行方法を決める
改行後もコメントとするかとか
set formatoptions?
コマンド結果をリダイレクト
:h :redir
キーコード(特殊文字) Ctrl+k 押してからキー押すと
名前を挿入できる
:h key-codes
タブをスペースに変更
set expandtab
retab
テキストファイルに固有の設定を残す
h modeline
マークした箇所をTodoハイライト
h group-name でどんなハイライトがあるか分かるよ
syntax match Todo /%&amp;lsquo;a.*/ containedin=ALL
プラグイン、固有の設定ファイル
boxes
diff.exe
color sampler pack
txt.vim -&amp;gt; $VIMRUNTIME/syntax/txt.vim
MRU.vim
skeleton.html
eregex.vim -&amp;gt; $VIMRUNTIME/plugin/eregex.vim
$VIMRUNTIME/plugin/eregex_e.vim
検索は:M/hogeで　それ以外は大文字で
テキストに対し固有の設定を書く
マッピングなどはmodeline使えないため
autocmd BufRead ~/デスクトップ/kara.txt set nonu |
\nnoremap j gj| nnoremap k gk</description>
    </item>
    
    <item>
      <title>aptitudeコマンドまとめ</title>
      <link>https://yaasita.github.io/2008/09/21/11184/</link>
      <pubDate>Sun, 21 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/21/11184/</guid>
      <description> http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html </description>
    </item>
    
    <item>
      <title>なんか早いOpenDNSっていうDNSがあるらしい</title>
      <link>https://yaasita.github.io/2008/09/21/11205/</link>
      <pubDate>Sun, 21 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/21/11205/</guid>
      <description> ここに書いてあるみたいに
優先DNSを「208.67.222.222」にして、代替DNSを「208.67.220.220」
に設定すればよろし
検証はまた後で・・・
公式サイト </description>
    </item>
    
    <item>
      <title>apache2のインデックスにヘッダとかフッタとか付ける</title>
      <link>https://yaasita.github.io/2008/09/16/11245/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11245/</guid>
      <description> #
# ReadmeName is the name of the README file the server will look for by
# default, and append to directory listings.
#
# HeaderName is the name of a file which should be prepended to
# directory indexes.
ReadmeName README.html
HeaderName HEADER.html
autoindexモジュールの
この辺の設定を変える。README.htmlの内容がファイルインデックスの欄の前か後ろに出るはずさ </description>
    </item>
    
    <item>
      <title>ettercapでDHCP Spoof</title>
      <link>https://yaasita.github.io/2008/09/16/11287/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11287/</guid>
      <description>ettercap -i eth0 -M dhcp:/255.255.255.0/192.168.0.2 -T</description>
    </item>
    
    <item>
      <title>New Live Wall! 通称ぬりかべって？</title>
      <link>https://yaasita.github.io/2008/09/16/11265/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11265/</guid>
      <description> なんかWebページにコメントを残せるみたいです
現在は新しい開発者により九尾というものになっている
ようです。

リンク
公式サイト
まとめwiki </description>
    </item>
    
    <item>
      <title>面白いコピペ</title>
      <link>https://yaasita.github.io/2008/09/16/11225/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11225/</guid>
      <description> 

1 名前：Socket774[sage] 投稿日：2008/09/09(火) 17:00:33 ID:AVvI1x3R
|㍑㍍||l㌔㍍l|
|㌧㌦||l㌻㍊l|
| ||l㍗㌍l|　┏━━━━━━━━━━┓
| ||　|　┃┌――――――――┐┃
| ||　|　┃｜　＼　.｜┃
／￣￣￣￣￣ﾌ.┃｜　n.∧∧＼　.｜┃コﾆl
㌢㍍㌘㌶㌧.／...┃｜　l (^Д^)/)､ﾍ,,∧　｜┃ .＿　＿＿
／／! ┃｜　｀ｰ,　`(`ﾐﾟヮﾟ,,ミ　｜┃/ ./／　／l
＿＿＿／.／　.┃｜　ﾉ　|´\　とソ .｜┃￣|三三／
＿＿＿|／ .┃｜　し&#39;`J　＾|　|　.｜┃⊂⊃
┃└─―――――――┘┃ |　|
┗━━━━━━━━━━┛ ｀ｰ´
人は何かの犠牲なしに何も得ることは出来ない
パソコンを得るためには相応の代価が必要になる
それが自作PCにおける自己責任の原則だ
このスレに来るまで 僕等はそれが世界の真実だと信じていた．．．


多分↑をJaneとかにコピペすりゃーズレないだろう </description>
    </item>
    
    <item>
      <title>rep2の過去ログ（DAT）を整理するには</title>
      <link>https://yaasita.github.io/2008/09/15/11308/</link>
      <pubDate>Mon, 15 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/15/11308/</guid>
      <description> rep2/data以下にある2channelフォルダごと削除すればよろし
machibbs.com/は町BBSのDAT保存フォルダらしい </description>
    </item>
    
    <item>
      <title>postfixで設定されている環境変数を列挙する</title>
      <link>https://yaasita.github.io/2008/09/07/11349/</link>
      <pubDate>Sun, 07 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/07/11349/</guid>
      <description> postconf
でおｋ
デフォルトの設定値は↓で確認
postconf -d </description>
    </item>
    
    <item>
      <title>telnetでSMTPコマンド叩いてメール送信</title>
      <link>https://yaasita.github.io/2008/09/07/11328/</link>
      <pubDate>Sun, 07 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/07/11328/</guid>
      <description> ↓を参考にどうぞ
http://ash.jp/net/telnet_smtp.htm </description>
    </item>
    
    <item>
      <title>bashでCtrl-S押すと端末がロックされる</title>
      <link>https://yaasita.github.io/2008/09/06/11370/</link>
      <pubDate>Sat, 06 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/06/11370/</guid>
      <description>Ctrl-Qで解除だそうで</description>
    </item>
    
    <item>
      <title>OSたんのやつ</title>
      <link>https://yaasita.github.io/2008/09/01/11390/</link>
      <pubDate>Mon, 01 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/01/11390/</guid>
      <description> 共有フォルＤＡ！
http://www.dejavuartworks.com/os/index.html </description>
    </item>
    
    <item>
      <title>ddclientでDynDNSのIPをアップデートしてみようか</title>
      <link>https://yaasita.github.io/2008/08/24/11411/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/24/11411/</guid>
      <description> aptでインストールして初期設定して
まだ足りないとこあるから
dpkg-reconfigure ddclient
打って再設定。デーモンで動かさないようにする。
そんで/etc/ddclient.confを編集
use=if
になってるけどこれだと自分のIPアドレス（プライベートアドレス）を通知してしまうので、
use=web
にして回避させる。
あとは普通に
ddclient
と打てばアップデートされる
cronか何かに登録しておくといいかも
参考サイト
http://tinstoy.jugem.jp/?eid=13 </description>
    </item>
    
    <item>
      <title>ファイル、ディレクトリの新規作成時のデフォルトのパーミッションを変更するには</title>
      <link>https://yaasita.github.io/2008/08/24/11433/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/24/11433/</guid>
      <description> umaskってコマンドを使います。
引数なしの
umask
で現在のパーミッションの確認
umask 0027
のように打つことで次回以降のファイルやディレクトリ作成時のデフォルトパーミッションの変更が出来ます
上記の例だと
ディレクトリだと下記のように
drwxr-x---
ファイルだと下記のようになります
-rw-r-----
※ファイルの場合は最初から実行権限を付与しません
参考リンク
http://linuxtips.biz/030/post_19.html </description>
    </item>
    
    <item>
      <title>Firefoxの面白いテーマ</title>
      <link>https://yaasita.github.io/2008/08/14/11453/</link>
      <pubDate>Thu, 14 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/14/11453/</guid>
      <description> マリオ
https://addons.mozilla.org/ja/firefox/addon/7921 </description>
    </item>
    
    <item>
      <title>lsofでどのプロセスがどのファイルシステムを使用中か調べる</title>
      <link>https://yaasita.github.io/2008/07/30/11473/</link>
      <pubDate>Wed, 30 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/30/11473/</guid>
      <description> lsof /media/cdrom
みたいに
プロセスが使用中のファイルも見れる 参考リンク
http://d.hatena.ne.jp/hogem/20070223/1172221315 </description>
    </item>
    
    <item>
      <title>x11vncのリバースコネクトについて</title>
      <link>https://yaasita.github.io/2008/07/27/11493/</link>
      <pubDate>Sun, 27 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/27/11493/</guid>
      <description>http://www.karlrunge.com/x11vnc/#faq-reverse-connect</description>
    </item>
    
    <item>
      <title>ジャンボ宝くじ模擬実験室</title>
      <link>https://yaasita.github.io/2008/07/26/11516/</link>
      <pubDate>Sat, 26 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/26/11516/</guid>
      <description> http://homepage2.nifty.com/nif/takara.html </description>
    </item>
    
    <item>
      <title>puttyで起動時の引数を指定してすぐにコンソールを開く</title>
      <link>https://yaasita.github.io/2008/07/20/11536/</link>
      <pubDate>Sun, 20 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/20/11536/</guid>
      <description> -load　オプションを起動時の引数に与えてやればいいと思います。
詳しくはこちらの 3.8.1 Starting a session from the command line
を見てもらえれば分かると思います。

参考サイト
http://p0t.jp/archives/2006/09/1.html </description>
    </item>
    
    <item>
      <title>ナイナイのANN（オールナイトニッポン）</title>
      <link>https://yaasita.github.io/2008/07/19/11559/</link>
      <pubDate>Sat, 19 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/19/11559/</guid>
      <description> 【ニコニコ動画】ナイナイのANN </description>
    </item>
    
    <item>
      <title>zshを使おうか</title>
      <link>https://yaasita.github.io/2008/07/12/11579/</link>
      <pubDate>Sat, 12 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/12/11579/</guid>
      <description> まずzshの強力な補完機能を有効にする

autoload -U compinit
compinit

そんでキーバインドをvi風にする

bindkey -v

あとプロンプトを変えておく

PROMPT=&#34;%/%%&#34;

テトリスもできるらしい

zsh
autoload -U tetris
zle -N tetris
bindkey &#39;^T&#39; tetris

Control-T を押せばゲーム開始。zsh最強。 </description>
    </item>
    
    <item>
      <title>最近、気になったソフト</title>
      <link>https://yaasita.github.io/2008/07/10/11599/</link>
      <pubDate>Thu, 10 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/10/11599/</guid>
      <description> IgRemote・・・すげー早いVNCだって
Social IME・・・みんなで育てるIMEだって </description>
    </item>
    
    <item>
      <title>perlの出力、入力関係</title>
      <link>https://yaasita.github.io/2008/07/06/11620/</link>
      <pubDate>Sun, 06 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/06/11620/</guid>
      <description> STDIN 標準入力：キーボードからの入力。 STDOUT 標準出力：ディスプレー (コンソール)。
STDERR 標準エラー出力：ディスプレー (コンソール)。
だそうですよ
print STDERR &#34;Erorr&#34;;
でエラー出力されるぽい
WindowsでもUNIXでもエラー出力をリダイレクトする際は
route 2 route.txt
みたいに2をつければおｋ </description>
    </item>
    
    <item>
      <title>＠wikiのデータバックアップをperlで自動化してみる</title>
      <link>https://yaasita.github.io/2008/07/05/11641/</link>
      <pubDate>Sat, 05 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/05/11641/</guid>
      <description>まず、ブラウザから保存までの過程を行い、パケットをキャプチャします。
今回、対象とするサイトはこちらです。キャプチャはWiresharkなどでも良いですが、今回はTCPのフローまで見る必要はありません。HTTPのリクエストヘッダさえ分かれば大丈夫なので、Live HTTP Headersなどで見たほうが便利です。（このソフトを使えばHTTPリクエストをGUI上で自由に変更できます。どのヘッダが必要か不要かも分かるので便利です）で、キャプチャしたものが以下のものです↓
Content-Length以下にはwikiidとpassというパスワードを送っています。submitのURLエンコードは「ダウンロード」という文字列を表しています。
ちなみにwikiidの項とpassの項とCookieは適当です。
POST /_mng/backup.php HTTP/1.1
Host: www34.atwiki.jp
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.9) Gecko/2008052906 Firefox/3.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: ja,en-us;q=0.7,en;q=0.3
Accept-Encoding: gzip,deflate
Accept-Charset: Shift_JIS,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Referer: http://www34.atwiki.jp/_mng/backup2.php
Cookie: PHPSESSID=5684723debae48752efea5555565acdd
Content-Type: application/x-www-form-urlencoded
Content-Length: 93
wikiid=***********&amp;amp;amp;pass=*******&amp;amp;amp;submit=%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89


次にLive HTTP Headersのリプレイ機能を使って必要なヘッダが何かを判断します。まずCookieが必須かどうかを調べる必要があります。なぜならCookieが必要だった場合はCookie取得の処理が追加されるからです。いらなそうなヘッダを削除→リプレイで目的の結果になるかを確認　を繰り返してください。で、調べた結果、不要だということが分かりました。つまりPerlスクリプトではCookieヘッダは発行しません。ちなみにこの鯖はContent-Typeを指定しないとトップに戻されるようです。
-------------- wiki_back.pl ----------------------------------
#!/usr/bin/perl
use Net::HTTP;
### Initial Setting ###########################
$server =&#34;www34.atwiki.jp&#34;;
###############################################
$header{&#39;Host&#39;} = &#34;$server&#34;;
$header{&#39;User-Agent&#39;} = &#39;Mozilla/5.0 (Windows; U; Windows NT 5.</description>
    </item>
    
    <item>
      <title>vimだとCtrl&#43;Hでバックスペースが入るお</title>
      <link>https://yaasita.github.io/2008/07/04/11663/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/04/11663/</guid>
      <description> :h i_^Hで確認してみよう
bashのキーバインドをviにしている人も試してみてください
あと
追記：なんか世間一般的にそうなってるみたいです。なにもvimに限った事ではないのかも
Ctrl+M・・・Enter
Ctrl+H・・・BackSpace
Ctrl+I・・・Tab </description>
    </item>
    
    <item>
      <title>必要ないモジュールをアンロードしてみてはいかが？</title>
      <link>https://yaasita.github.io/2008/07/04/11684/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/04/11684/</guid>
      <description> 必要ないモジュールはアンロードしておくのが吉ですよ
たとえばUSBのohci_hcdはなぜだかwakeupを繰り返しカーネルのログに吐き出し
やたらリソースを食っていました。
/etc/modprobe.d/blacklistに以下を追加しました。
blacklist trident
blacklist ac97_codec
blacklist joydev
blacklist gameport
blacklist ohci_hcd
blacklist usbcore
blacklist ide_cd
blacklist cdrom
blacklist pcspkr
blacklist psmouse
blacklist parport_pc
blacklist parport
blacklist snd_ali5451
blacklist snd_ac97_codec
blacklist snd_ac97_bus
blacklist snd_pcm
blacklist snd_timer
blacklist snd
blacklist soundcore
blacklist snd_page_alloc
※注意
参考サイトに書いてあったのですが書いただけではなく
update-initramfs -u
コマンドでロードイメージを更新する必要があるようです

モジュールのロード、アンロードについては前回書きました。
参考
Debianインストール覚え書き </description>
    </item>
    
    <item>
      <title>Firefox3にむけて入れる拡張おさらい</title>
      <link>https://yaasita.github.io/2008/07/03/11725/</link>
      <pubDate>Thu, 03 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/03/11725/</guid>
      <description> Last Change:2008/06/28 20:43:08.
前回も書いたけど付け足した拡張とかあるのでまたまとめ
(＊はFirefox3対応済み)
Dictionary Search＊
Cache Viewer＊
Fast Video Download
Go Up＊
Scrap Book＊
Switch Proxy Tool
Web Developer＊ 日本語版
テキストリンク＊
ニコニコ動画ダウンローダ
refspoof
User Agent Switcher＊
Live HTTP Headers＊ 使い方
ViewSourceWith＊
Fasterfox
QuickProxy＊
Multiproxy Switch＊
---暫定---
Fast Dial＊ 紹介
Video DownloadHelper＊
Download Embedded 0.5
Embedded Objects 1.1
New Live Wall </description>
    </item>
    
    <item>
      <title>WindowsXPでファイル共有するとき詳細にアクセスコントロールするには</title>
      <link>https://yaasita.github.io/2008/07/03/11704/</link>
      <pubDate>Thu, 03 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/03/11704/</guid>
      <description> WindowsXP Professional限定ですけど
フォルダオプションから次のチェックを外すといけるはずです

参考
http://pcsupport.happy-ritaiya.net/2007/10/windowsxp_prolan.php </description>
    </item>
    
    <item>
      <title>sambaで接続が切れる問題</title>
      <link>https://yaasita.github.io/2008/06/30/11786/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11786/</guid>
      <description> socket options = IPTOS_LOWDELAY SO_RCVBUF=1000 SO_SNDBUF=1000
バッファリングが多すぎたみたい
低スペックなPCだとNODELAYは辛いようだ
socketオプションは↓を参照
http://www.linux.or.jp/JM/html/LDP_man-pages/man7/socket.7.html </description>
    </item>
    
    <item>
      <title>sysctlでカーネルパラメータのチューニング</title>
      <link>https://yaasita.github.io/2008/06/30/11745/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11745/</guid>
      <description> 前回、前々回でバッファが重要みたいなことを言いました。
個々のソフトでバッファサイズを調整するのは煩わしいので今度はカーネル側でやろうと思います。つーか本当の動機はvsftpdではバッファサイズの調整が出来ないっぽいからですけど・・・
/etc/sysctl.confを編集します
net.ipv4.tcp_rmem=500 1500 5000
net.ipv4.tcp_wmem=500 1500 5000
↑の2行を追加します。上が受信バッファ、下が送信バッファです多分
なんで3つの値を渡しているかはこちらを参照してください
そんで書いたらこんな感じでパラーメータを設定して下さい
sysctl -p
でおｋね
まあ/proc以下をechoで飛ばして設定しても良いんですが再起動すると戻ってしまうので・・・・ </description>
    </item>
    
    <item>
      <title>自宅鯖のapache2をチューニング</title>
      <link>https://yaasita.github.io/2008/06/30/11765/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11765/</guid>
      <description> Sambaの件でバッファリングが大きすぎてサーバー側で処理できなくなる→切断となっていることに気づいたのでもしかするとapache2で大きいファイルを落とすときに切れる現象も同じなんじゃないかなと思ってチューニングしてみる。
受信バッファサイズと送信バッファサイズを調整して鯖が落ちるのを止める。
俺はhttpd.confに↓を書いた。でおｋだった。
SendBufferSize 4000
ReceiveBufferSize 1500
具体的にどうコネクションが切れるか検証してないけど多分こんな感じだと思う
クライアント「オラオラ・・・もっとパケット送るぜー！ウィンドサイズはでかいからなーｗ」
サーバー「ちょｗｗｗおまｗｗｗ待ってくれそんな処理しきれｗｗｗ」
（ただいまサーバーがシーケンシャルナンバーの整理などしておりますしばしお待ちください）
クライアント「おかしいな？返事がない・・・しかたないコネクション切るか」
サーバー「ふう・・・終わったぜ！さあパケット返そうかな・・・ってコネクション切れてるしｗｗｗｗ」
みたいなノリだと思う
まあバッファの調整はマシンのスペックを見て調整しましょってことで </description>
    </item>
    
    <item>
      <title>aptitudeでインストールすると推奨パッケージも入れてしまう</title>
      <link>https://yaasita.github.io/2008/06/29/11869/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11869/</guid>
      <description> apt-get installだとインストールしなんだよね・・・なんかお節介でヤダ
上のほうのメニューから外せるそうですよ

 </description>
    </item>
    
    <item>
      <title>aptitudeのフラグの意味</title>
      <link>https://yaasita.github.io/2008/06/29/11890/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11890/</guid>
      <description> ここに書いてあった
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s02s02.html
ちなみにAは自動的にインストールされたか動画を表すんだって </description>
    </item>
    
    <item>
      <title>Firefox3のウィルススキャンいらね</title>
      <link>https://yaasita.github.io/2008/06/29/11807/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11807/</guid>
      <description>about:configからbrowser.download.manager.scanWhenDoneをfalseに設定。</description>
    </item>
    
    <item>
      <title>LinuxでS.M.A.R.T情報を表示する</title>
      <link>https://yaasita.github.io/2008/06/29/11910/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11910/</guid>
      <description>aptかなんかでsmartmontoolsをインストール
# smartctl -a /dev/hda  これで見れるらしい↓の方が見やすいかも
# smartctl -A /dev/hda  参考サイト
項目の詳しい説明は下記のwkipedia参照
http://ja.wikipedia.org/wiki/Self-Monitoring,_Analysis_and_Reporting_Technology
Windowsだとこんなものもあるらしい
CrystalDiskInfo</description>
    </item>
    
    <item>
      <title>Linuxでログイン時に表示されるメッセージを変える</title>
      <link>https://yaasita.github.io/2008/06/29/11827/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11827/</guid>
      <description>ここ
に書いてありました
/etc/motdを編集すればいいだけです簡単ですね
CJKにしないとモナーとかズレるからどうしようかなーと思って
boxesからAAを拝借こんなのいれてみた
boxes -d mouseね
 .--, .--, ( ( \.---./ ) ) &#39;.__/o o\__.&#39; {= ^ =} &amp;amp;gt; - &amp;amp;lt; __.&amp;quot;&amp;quot;`-------`&amp;quot;&amp;quot;.__ / \ \ Debian / / \ \___________________/ ___)( )(___ (((__) (__)))  </description>
    </item>
    
    <item>
      <title>sambaを入れてみよう</title>
      <link>https://yaasita.github.io/2008/06/29/11847/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11847/</guid>
      <description> aptかなんかでインストール
/etc/samba/smb.confを直そうか
[global]
unix charset = UTF-8
dos charset = CP932
display charset = UTF-8
まず↑の設定を確認unix charsetは環境に合わせてどうぞ
workgroup = MSHOME
次にワークグループを合わせて
security = share
セキュリティをshareにした。パスワード求められるとウザイので・・・
でもこれだとvistaとかだと問題になるそうです　XPの場合は大丈夫らしいけど
guest account = ageftp
あとはゲストアカウントを誰にするかを決める。
[upload]
path = /var/www/upload/
available = yes
browsable = yes
public = yes
writable = yes
read only = no
create mask = 0777
printable = no
guest ok = yes
あとは適当にどうぞ
ここで別にゲストアカウントを誰々って決めなくても良いんですが、
じつはこの/var/www/uploadディレクトリはftpのanonymousログインを
許可しているのでotherのパーミッションに書き込みを与える事が出来ないのです </description>
    </item>
    
    <item>
      <title>Linuxでよく使われるscreenを今更使ってみた</title>
      <link>https://yaasita.github.io/2008/06/27/11951/</link>
      <pubDate>Fri, 27 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/27/11951/</guid>
      <description> つーわけでメモ
aptかなんかでサクッとインストールしてscreenで起動します。
まずコマンドはプレフィックスキー（コマンド前に毎回入力するキー）がいります。そんでデフォルトのプレフィックスキーはCtrl+aです。
Ctrl+a ?でヘルプ見れます。
コマンド一覧　プレフィックスキーは省略
c　新しい端末を開く
&#34;　画面リストの表示
n　次の画面へ
p　前の画面へ
n nの端末へ移動(nは端末番号)
S 画面分割 大文字のSなのでshiftと共に押す！
\　バックスラッシュ　全てを破棄してscreenを終了
Ctrl＋i　ウィンド間の移動
X　ウィンドウのクローズ　大文字のX！
[　コピーモードの開始　開始地点、終了地点でエンターかスペース
]　ペースト
:resize -10　ウィンドのリサイズ。-10だと縮める10広げるみたいな感じ
d　デタッチ
screen -r でデタッチした端末をアタッチ
screen -ls　で端末一覧表示 </description>
    </item>
    
    <item>
      <title>Linuxコマンド　ログイン関連　faillog,lastlog</title>
      <link>https://yaasita.github.io/2008/06/27/11931/</link>
      <pubDate>Fri, 27 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/27/11931/</guid>
      <description> faillog・・・何回ログインをミスったか
lastlog・・・最後にログインした時間はいつか？ </description>
    </item>
    
    <item>
      <title>リダイレクトについて</title>
      <link>https://yaasita.github.io/2008/06/23/11972/</link>
      <pubDate>Mon, 23 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/23/11972/</guid>
      <description> command  hoge 2&amp;amp;amp;1
エラー出力を標準出力先と同じにするこれを使えば
$gunzip_message = qx/gunzip -f $unixtime.dat.gz 2&amp;amp;amp;1/;
↑のようにエラー出力を捕らえることも可能になる
command &amp;amp;amp; hoge
参考
http://www.fireproject.jp/feature/bash/basic/redirect-pipe.html
 </description>
    </item>
    
    <item>
      <title>Firefoxの拡張ViewSourceWith使う時の注意点</title>
      <link>https://yaasita.github.io/2008/06/22/12012/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/22/12012/</guid>
      <description> 例えばこのBloggerの入力フォームはUTF-8です。
Kaoriya版のvimだとsjisがデフォルトなので文字化けします。下のように起動時にエンコーディングを変えておくと良いかもしれません。

シンタックスを当てたいときはこんな感じでオプションを追加していけば良いんじゃないでしょうか
 </description>
    </item>
    
    <item>
      <title>kaoriya版vimでは便利なコマンドが用意されているよ</title>
      <link>https://yaasita.github.io/2008/06/22/12034/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/22/12034/</guid>
      <description> http://nanasi.jp/articles/vim/cmdex_vim.html
↑に書いてありました
/vim71-kaoriya-w32j/runtime/plugin/cmdex.vim
↑に置かれているので見てみると良いんじゃないでしょうか
HTMLConvertは中で2html.vimを呼んでるみたいですね
TOhtmlコマンドがあるのになんでこんなコマンドあるんだろ・・・ </description>
    </item>
    
    <item>
      <title>クレジットカードの使えるコンビニ</title>
      <link>https://yaasita.github.io/2008/06/22/11992/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/22/11992/</guid>
      <description> サークルKサンクス
ローソン
ミニストップ </description>
    </item>
    
    <item>
      <title>vimでマークを視覚的に表示する</title>
      <link>https://yaasita.github.io/2008/06/16/12054/</link>
      <pubDate>Mon, 16 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/16/12054/</guid>
      <description> http://nanasi.jp/articles/vim/showmarks_vim.html
http://www.vim.org/scripts/script.php?script_id=152
他にもマークにマッチする正規表現があるのでそれでもおｋです。
たとえばaマークをTodoハイライトするには
syntax match Todo /.*\%&#39;a.*/ containedin=ALL
を$VIM/runtime/syntax/txt.vimというファイルを作り入れておきます。
自分はtxtにそのハイライトを当てているので_gvimrcの中で
autocmd BufRead,BufNewFile *.txt setfiletype txt
を追加してファイルタイプを設定しています。 </description>
    </item>
    
    <item>
      <title>aptitudeよく使うコマンドとか・・・</title>
      <link>https://yaasita.github.io/2008/06/15/12074/</link>
      <pubDate>Sun, 15 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/15/12074/</guid>
      <description> uでパッケージの一覧の更新
Uですべてのパッケージをアップグレード
あとは↓みて
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch01s01s04.html
コマンド一覧はこちら
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html#id2533999 </description>
    </item>
    
    <item>
      <title>Firefox3拡張の強制インストール</title>
      <link>https://yaasita.github.io/2008/06/15/12094/</link>
      <pubDate>Sun, 15 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/15/12094/</guid>
      <description> http://d.hatena.ne.jp/periwnkl/20080611/p1 </description>
    </item>
    
    <item>
      <title>ActivePerlでyahooにメールを送ろうか</title>
      <link>https://yaasita.github.io/2008/06/14/12134/</link>
      <pubDate>Sat, 14 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/14/12134/</guid>
      <description>Net::SMTPモジュールを使います。ただデフォルトでauthメソッドを使おうとしてもパケットを投げてくれないので、下のモジュールを新たにppmか何かでインストールして下さい。

次にコーディングに入ります。Net::SMTPについての説明はこちらを参照してください。
メールヘッダについてはTo:だけでいいかと思ったらうまく送信できなかったので、Thunderbirdのパケットをキャプチャしたものを丸パクリします。
Dataヘッダについては何でもいいかと思いますが、一応現在時を取得する方が親切設計でしょう。どれが必要なヘッダか不要なヘッダかは面倒なので調べていません。
Message-IDですがこちらを見る限り何でもいいそうです。好きな命名規則で良いでしょう。
＊参考
yahooの鯖はSMTPを拡張したESMTPで運用されています。ESMTPではグリーティングの際にEHLOコマンドを用います。（SMTPではHELOコマンド）
EHLOコマンドでは自分のホストを通知します。Thunderbirdでは
EHLO [192.168.0.6]
とグリーティングしますが、Net::SMTPでは
EHLO localhost.localdomain
とグリーティングします。まあどっちでも構いませんが、、、
http://www.atmarkit.co.jp/fnetwork/rensai/netpro06/netpro01.html
#!/usr/local/bin/perl
use Net::SMTP;
$user=&#34;??????&#34;;
$passwd=&#34;?????????????&#34;;
$maildata=Date: Sat, 14 Jun 2008 09:59:39 +0900
From: uesugi 
User-Agent: Thunderbird 2.0.0.14 (Windows/20080421)
MIME-Version: 1.0
To: yahoo 
Subject: This Mail Make Perl
Content-Type: text/plain; charset=ISO-2022-JP
Content-Transfer-Encoding: 7bit
END
$smtp = Net::SMTP-new(&#39;smtp.mail.yahoo.co.jp&#39;,Timeout=30,Debug=1);
$smtp-auth($user, $passwd) or die &#34;Auth Fail\n&#34;;
$smtp-mail(&#39;????????????????????@yahoo.co.jp&#39;);
$smtp-to(&#39;????????????????????@yahoo.co.jp&#39;);
$smtp-data();
$smtp-datasend(&#34;$maildata&#34;);
$smtp-datasend(&#34;\n&#34;);
$smtp-datasend(&#34;A simple test message\n&#34;);</description>
    </item>
    
    <item>
      <title>Debian(etch)でcpan設定</title>
      <link>https://yaasita.github.io/2008/06/14/12155/</link>
      <pubDate>Sat, 14 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/14/12155/</guid>
      <description>まずCPANを使う上で必要なソフトは下記のとおりです。先にインストールしておきます。
gzip,tar,unzip,make,lynx,wget,ncftpget(ncftpでインストール)
#cpan
で初回起動時の設定が入る。基本的にEnterでデフォルトの設定で問題ないと思います。
The next option deals with the charset your terminal supports. In
general CPAN is English speaking territory, thus the charset does not
matter much, but some of the aliens out there who upload their
software to CPAN bear names that are outside the ASCII range. If your
terminal supports UTF-8, you say no to the next question, if it
supports ISO-8859-1 (also known as LATIN1) then you say yes, and if it</description>
    </item>
    
    <item>
      <title>シェルの環境変数で前回コマンドの終了ステータスを確認する</title>
      <link>https://yaasita.github.io/2008/06/14/12114/</link>
      <pubDate>Sat, 14 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/14/12114/</guid>
      <description> $?に入っているそうですよ
http://www.geocities.jp/geo_sunisland/exit_status.html </description>
    </item>
    
    <item>
      <title>aptitudeのよく使うコマンドとか</title>
      <link>https://yaasita.github.io/2008/06/12/12198/</link>
      <pubDate>Thu, 12 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/12/12198/</guid>
      <description> 検索時には正規表現が使えます
lで検索すると制限できていいかも・・・
~d説明
正規表現説明にパッケージ説明がマッチするパッケージにマッチします。 ~d&#34;test&#34;
みたいな感じで
検索パターン </description>
    </item>
    
    <item>
      <title>pearのコマンドとか・・・</title>
      <link>https://yaasita.github.io/2008/06/12/12177/</link>
      <pubDate>Thu, 12 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/12/12177/</guid>
      <description> phpのライブラリ管理のpear
よく使うコマンド備忘録
pear
PEARコマンド一覧表示
pear help command_type
command_typeの説明を表示
pear list
現在インストールされているパッケージ一覧
pear list-upgrades
更新ライブラリの確認
pear upgrade package
パッケージのアップグレード前述のpear list-upgradeで出てきたPACKAGE欄を
packageに入れる </description>
    </item>
    
    <item>
      <title>scimとgvimは相性悪いみたい</title>
      <link>https://yaasita.github.io/2008/06/08/12219/</link>
      <pubDate>Sun, 08 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/08/12219/</guid>
      <description> http://d.hatena.ne.jp/silverintegral/20071115
こんな感じでどーぞ </description>
    </item>
    
    <item>
      <title>Linux版のvim7に日本語ヘルプを入れてみる</title>
      <link>https://yaasita.github.io/2008/06/07/12261/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/07/12261/</guid>
      <description> なんかkaoriyaさんのとこに
http://www.kaoriya.net/vimdoc_j/
という日本語ヘルプがあったので落としてくるそんで解凍とかする。
解凍したものを/usr/share/vim/vim71に放り込んでも拡張子が.jaxとかなっててうまくいかない
しょうがないから拡張子を.jax→.txtにする
一括変換とかシェルスクリプトでできそうだけど分からないからPerlで書く
#!/usr/local/bin/perl
$newdir=&#34;.&#34;;
chdir $newdir or die &#34;$newdir is not found!\n&#34;;
opendir(DIR, &#34;.&#34;);
@file = readdir(DIR);
closedir(DIR);
@file = sort {(stat ($a))[8]  (stat ($b))[8]} @file;
foreach(@file){
if($_=~/^\.$|^\.\.$|^rename\.pl$/){ next;
}
if ($_=~/\.jax$/){
$moto=$_;
$_=~s/\.jax$//;
system &#34;mv $moto $_.txt&#34;;
#print &#34;$moto $_.txt\n&#34;;
}
# print $_,&#34;\n&#34;;
# `mv $moto `;
} </description>
    </item>
    
    <item>
      <title>定期的に文章をバックアップする</title>
      <link>https://yaasita.github.io/2008/06/07/12240/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/07/12240/</guid>
      <description> なんか大事な文章を日付順にバックアップしておきたいときに書くシェルスクリプトとか・・・
#! /bin/bash
var=`LANG=C date +&#39;%Y%m%d%a&#39;`
cp /media/taihi1/komando.txt /media/taihi1/komando-bak/$var.txt </description>
    </item>
    
    <item>
      <title>telnetのポート番号を変更したりとか・・・</title>
      <link>https://yaasita.github.io/2008/05/17/12282/</link>
      <pubDate>Sat, 17 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/17/12282/</guid>
      <description> /etc/servicesあたりかなあと
/etc/inetd.confとかも・・・ </description>
    </item>
    
    <item>
      <title>apache2にDirectoryIndexの設定項目が無い件</title>
      <link>https://yaasita.github.io/2008/05/06/12324/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12324/</guid>
      <description> /etc/apache2/mods-enabledのdir.confにあるそうです
参考リンク
http://www.maocat.jp/?p=10 </description>
    </item>
    
    <item>
      <title>expectを使って自動的にPCをシャットダウンさせる</title>
      <link>https://yaasita.github.io/2008/05/06/12303/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12303/</guid>
      <description> こんな感じで書くと良いですよ
WebからやりたいならPerlならsystem関数とかで呼べば良いんじゃないでしょうか
#!/usr/bin/expect
set timeout 10
spawn telnet 192.168.0.2
expect &#34;login:&#34;
send &#34;root\n&#34;
expect &#34;Password:&#34;
send &#34;hogehoge\n&#34;
send &#34;shutdown -h now\n&#34;
send &#34;exit\n&#34;
interact </description>
    </item>
    
    <item>
      <title>squidでユーザー認証を行う(Ubuntu8.04)</title>
      <link>https://yaasita.github.io/2008/05/06/12366/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12366/</guid>
      <description>まずhtpasswdでユーザー名とパスワードのMD5値のペアtxtを用意します。
# htpasswd -c /etc/squid/passwd hogehoge
New password:
Re-type new password: できたら↓のように指定します。
auth_param basic children は認証プロセスの為のプロセス数を指定します。
auth_param basic realm はBASIC認証時に現われるメッセージを指定します。この場合は&#34;Squid proxy-caching web server&#34;と表示されます。
auth_param basic credentialsttl はパスワードの生存時間を指定します。（HTTPアクセスヘッダに付随させるBASIC認証で生存時間があるのはよく分からないですが・・・）
auth_param basic casesensitive は大文字小文字を区別するかどうかです（多分）offなので区別します。最後にacl kusi proxy_auth REQUIREDでアクセスリストkusiを定義
ローカルネットの後にhttp_access allow kusiを入れているので
LAN内のホストなら無条件で通し、WAN側からの要求にはBASIC認証を要求します。
auth_param basic program /usr/lib/squid/ncsa_auth /etc/squid/passwd
auth_param basic children 5
auth_param basic realm Squid proxy-caching web server
auth_param basic credentialsttl 2 hours
auth_param basic casesensitive off
acl kusi proxy_auth REQUIRED
http_access allow localnet</description>
    </item>
    
    <item>
      <title>vsftpdでanonymousログインを許可させる場合の注意点</title>
      <link>https://yaasita.github.io/2008/05/06/12345/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12345/</guid>
      <description> /etc/vsftpd.confを編集して
anonymous_enable=YESを追加する
↓のようにanonymousユーザーのディレクトリを決定させる
anon_root=/var/www/upload/
この時の注意点としてはパーミッションにその他ユーザが書き込めないような設定にしておくこと（これをしないとログインできない）
例：rwxr-xr-xやrwxrwxr-xなど </description>
    </item>
    
    <item>
      <title>Linuxでモジュールの確認と削除を行う</title>
      <link>https://yaasita.github.io/2008/05/04/12449/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12449/</guid>
      <description> 主にDebian系での話です
lsmod・・・ロードされているモジュールを確認（miiがNICか？）
modinfo・・・lsmodに表示されている各モジュール名を引数に取り、詳しい情報を表示する
rmmod・・・モジュールをアンロードする
insmod・・・モジュールをロードする
modprobe・・・依存関係を処理しながらロードしてくれる
/etc/modprobe.d/blacklistに項目を追加すれば再起動してもモジュールをアンロードできる
参考
http://markun.cs.shinshu-u.ac.jp/learn/linux/h_05-05.html </description>
    </item>
    
    <item>
      <title>Linuxでリッスン(Listen)してるポートの確認</title>
      <link>https://yaasita.github.io/2008/05/04/12429/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12429/</guid>
      <description> lsof -iで
でも微妙に分かりにくいので
netstat -anp | grep LISTEN | less
こんな感じで
あとは
netstat -tap
とかやって
詳しく見たい場合は
lsof -i:5900 </description>
    </item>
    
    <item>
      <title>Linux版FirefoxとWindows版Firefoxの挙動の差異</title>
      <link>https://yaasita.github.io/2008/05/04/12387/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12387/</guid>
      <description> about:configから
browser.urlbar.clickSelectsAllをtrueにすると
URLバーをクリックした際にすべて選択されます。
browser.backspace_actionを0にするとバックスペースで履歴を一つ前に辿れます。
1ならスクロールアップ。2なら何もしないです。
↓はよく設定する箇所です（Mailtoタグの無効化と検索時のbeep音の無効化）
network.protocol-handler.external.mailto
false
accessibility.typeaheadfind.soundURL
空文字列 </description>
    </item>
    
    <item>
      <title>ubuntu8.04のネットワーク設定が何かローミングモードとかなってて嫌な感じになる</title>
      <link>https://yaasita.github.io/2008/05/04/12408/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12408/</guid>
      <description> ローミングモードを一つのNICだけ無効にしてもなんか意味ないみたい
IPアドレスも複数持てたりしちゃって嫌なので
/etc/network/interfaces
に
auto lo
iface lo inet loopback
iface eth0 inet dhcp
auto eth0
iface eth2 inet dhcp
iface eth3 inet dhcp
iface eth4 inet dhcp
と記述しておく
autoを付けなければ立ち上がらないので・・・・
前に書いたロードモジュール名をblacklistに入れる方法だと/etc/init.d/networking をリスタートかけるごとにロードされてしまうみたい </description>
    </item>
    
    <item>
      <title>Ubuntu8.04のxorg.conf設定を行う</title>
      <link>https://yaasita.github.io/2008/05/03/12469/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12469/</guid>
      <description>なんか色々自動でやってくれるのはいいけどCPU切替器を挟むと表示がおかしくなるため手動で設定する。
１.Section &#34;Screen&#34;にサブセクションを作って解像度と色深度を設定
SubSection &#34;Display&#34;
Depth 24
Modes &#34;1280x1024&#34;
EndSubSection
２.xvidtuneコマンドで位置を調整する。GUIメニューのshowボタンを押せば
&#34;1280x1024&#34; 108.00 1280 1344 1456 1688 1024 1025 1028 1066 +hsync +vsync
のようにコンソールに表示されるのでメモる。
3.Section &#34;Monitor&#34;に水平同期周波数と垂直同期周波数とさっきメモったパラメータをModeLineと共に指定する。
Section &#34;Monitor&#34;
Identifier &#34;Configured Monitor&#34;
HorizSync 31.5 - 81
VertRefresh 56 - 76
ModeLine &#34;1280x1024&#34; 108.00 1280 1344 1456 1688 1024 1025 1028 1066 +hsync +vsync
EndSection
参考リンク
http://linux.kororo.jp/cont/tips/display_tune.php
で最終的に出来上がったxorg.confが↓
Section &#34;InputDevice&#34;
Identifier &#34;Generic Keyboard&#34;
Driver &#34;kbd&#34;
Option &#34;XkbRules&#34; &#34;xorg&#34;
Option &#34;XkbModel&#34; &#34;jp106&#34;</description>
    </item>
    
    <item>
      <title>x2vncについて・・・・・</title>
      <link>https://yaasita.github.io/2008/05/03/12509/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12509/</guid>
      <description> デュアルスクリーンハック - MS-Windows と X ディスプレイをリンク
このプログラムは x2x と vncviewer の機能をマージします。 X ディスプレイを起動したマシンとメインスクリーンで VNC サーバを起動したマシン が、あたかも一つのマシンに結合された二つのディスプレイであるかのように振る舞う ことを可能にします。マウスポインタを選択した方にある画面から外すと、ポインタ がもう一つの画面に現れます。
だそうですいつか調べます </description>
    </item>
    
    <item>
      <title>Xの画面位置を調整する</title>
      <link>https://yaasita.github.io/2008/05/03/12489/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12489/</guid>
      <description>xvidtuneコマンドからどうぞ</description>
    </item>
    
    <item>
      <title>ASCIIコードで\x0cって何を表すか？</title>
      <link>https://yaasita.github.io/2008/04/29/12531/</link>
      <pubDate>Tue, 29 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/29/12531/</guid>
      <description> ASCIIコード
改ページだそうです
参考リンク
http://www12.plala.or.jp/mz80k2/electronics/ascii/ascii.html </description>
    </item>
    
    <item>
      <title>KNOPPIXを外付けHDDなどにインストール</title>
      <link>https://yaasita.github.io/2008/04/26/12551/</link>
      <pubDate>Sat, 26 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/26/12551/</guid>
      <description> USBメモリでKNOPPIX v5.01を起動
ひろちゃん帝国　ココログ村
USB-Knoppixではじめよう
この辺を参考にどうぞ
あとfdiskでパーティションをアクティブにするのを忘れないように・・・ </description>
    </item>
    
    <item>
      <title>NTPで時刻あわせ　Linux</title>
      <link>https://yaasita.github.io/2008/04/20/12571/</link>
      <pubDate>Sun, 20 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/20/12571/</guid>
      <description> こんな感じでcronに登録しておくといいです
#!/bin/bash
ntpdate ntp.jst.mfeed.ad.jp
またハードウェアクロックとの同期も取る必要があります
ハードウェアクロックがずれていると再起動した時におかしな時間になってしまいます。
hwclock --systohc
と打てばおｋです。
hwclock
と打てば現在のハードウェアクロックを見れます
hwclock --adjust
と打てば前回の差分から進む（または遅れる）時間を計測していい感じに調整してくれます
cronとかには↓のように登録しておくといいかも
#!/bin/bash
ntpdate ntp.jst.mfeed.ad.jp  /dev/null
hwclock --adjust
hwclock --systohc </description>
    </item>
    
    <item>
      <title>COBOL符号付数値の表記方法</title>
      <link>https://yaasita.github.io/2008/04/19/12592/</link>
      <pubDate>Sat, 19 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/19/12592/</guid>
      <description> 10の位以上 &amp;amp;h3x 0 1 2 3 4 5 6 7 8 9
プラスの1の位 &amp;amp;h4x @ A B C D E F G H I
マイナスの1の位 &amp;amp;h5x p q r s t u v w x y 参考リンク </description>
    </item>
    
    <item>
      <title>squidでプロキシーサーバーを立てる</title>
      <link>https://yaasita.github.io/2008/04/13/12612/</link>
      <pubDate>Sun, 13 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/13/12612/</guid>
      <description> まず、
apt-get install squid
などでインストールする。
次に/etc/squid/squid.confを編集する
http_port 8080
visible_hostname 192.168.0.11
http_portで接続ポートを設定、visible_hostnameで自分自身のホスト名を設定
acl localnet src 192.168.0.0/255.255.255.0
http_access allow manager localhostの下あたりに
http_access allow localnet
forwarded_for off
アクセス元のIPを隠す
via off
viaヘッダを隠す
header_access Cache-Control deny all
キャッシュコントロールヘッダの無効化
cache_dir ufs /var/spool/squid 1500 64 1024
キャッシュディレクトリサイズの変更とか
ufs --&amp;amp;gt; なんかこれ指定しとけてきなあれ
/var/spool/squid --&amp;amp;gt; キャッシュディレクトリ
1500 --&amp;amp;gt; なんメガバイトのサイズを上限とするかこの例だと1500MB
64 --&amp;amp;gt; キャッシュディレクトリの最初の階層のフォルダ数
1024 --&amp;amp;gt; キャッシュディレクトリの2番目の階層のフォルダ数
参考
http://tech.ckme.co.jp/proxy.shtml
http://squid.robata.org/squid2.0-conf.html </description>
    </item>
    
    <item>
      <title>SSLで利用するポート</title>
      <link>https://yaasita.github.io/2008/04/03/12633/</link>
      <pubDate>Thu, 03 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/03/12633/</guid>
      <description>443だそうです</description>
    </item>
    
    <item>
      <title>nmapを使う</title>
      <link>https://yaasita.github.io/2008/03/31/12673/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/31/12673/</guid>
      <description> nmap -sS -P0 -T2 -p 1-65535 -oN kaons.txt -r -v -sV hoge.co.jp
-sS　ステルススキャン
-P0 ホストの発見を省略する（確実にそのホストが存在していると分かっている場合はこれを使用する）
-T2 スキャン速度。T1、T2、T3、T4、T5と早くなっていく。T5は高速回線が望ましい。
-p ポートスキャンする範囲↑の例では1から65535番まで(全部)
-oN 出力するファイル
-r ランダムにスキャンしない
-v 冗長オプション。多くの情報を出力する。
-sV そのポートで使用されているアプリを特定する
-O OSを特定する
※注意
家庭用のブロードバンドルーターを使っている人はスキャン速度をT3以下にしないと落ちる場合があります。 </description>
    </item>
    
    <item>
      <title>端末を終了しても（ログアウトしても）処理し続ける</title>
      <link>https://yaasita.github.io/2008/03/31/12653/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/31/12653/</guid>
      <description> nohupコマンドを使用します。
http://www.linux.or.jp/JM/html/gnumaniak/man1/nohup.1.html
http://itpro.nikkeibp.co.jp/article/COLUMN/20060228/231191/?ST=oss
例）
nohup nmap -sS -P0 -T2 -p 1-65000 -oN kaons.txt -r -v -sV hogehoge.info &amp;amp; nohup.txt
こんな感じで・・・&amp;amp;はエラー出力と標準出力を同じファイルに出す </description>
    </item>
    
    <item>
      <title>Linuxでスワップ頻度を調整する</title>
      <link>https://yaasita.github.io/2008/03/29/12694/</link>
      <pubDate>Sat, 29 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/29/12694/</guid>
      <description> swappinessという値を変更する。これは0～100までの値で大きいほどスワップし、
小さいほどアプリケーションに割り当てるメモリを多く取り結果スワップが減る。
現在の値を表示する（デフォルトは60）
cat /proc/sys/vm/swappiness
一時的に40に変更する（再起動後はデフォルトに戻る）
echo 40  /proc/sys/vm/swappiness
永続的に変更する
/etc/sysctl.confを編集し
vm.swappiness=40
を付け加える
その後
# sysctl -p
で適用
参考リンク
ITmediahttp://www.itmedia.co.jp/enterprise/articles/0712/10/news011_4.html

http://www.linuxmagic.org/tips02.html </description>
    </item>
    
    <item>
      <title>apacheの.htaccessでユーザーアクセスする人を絞る</title>
      <link>https://yaasita.github.io/2008/03/22/12714/</link>
      <pubDate>Sat, 22 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/22/12714/</guid>
      <description> AuthType Basic
AuthUserFile &#34;/etc/apache2/pass&#34;
AuthName &#34;Enter pass word&#34;
Require user hogehoge
Require user　の後にhogehogeという人なら許すという設定 </description>
    </item>
    
    <item>
      <title>ブロードバンドルータの設定や確認をperlで行う1</title>
      <link>https://yaasita.github.io/2008/03/18/12734/</link>
      <pubDate>Tue, 18 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/18/12734/</guid>
      <description> 市販されているブロードバンドルーターの多くがブラウザから設定を行うタイプだと思います。これはGUIにより容易に設定が行えますが、ポートの開閉やIPアドレスの定期的な確認などがしたいときには煩わしくプログラムで自動化したいと思うことがあります。
まずは下図の様な場合を想定し、目的のスクリプトを作成したいと思います。

ルーターはNP-BBRPでWAN側はPPPoE接続されています。今回は例としてNP-BBRPを想定しますが、どのルーターでも出来るように説明します。
まず、認証方法を確認します。ブラウザからログインして設定画面に行きます。
この場合http://192.168.0.1/にアクセスしログインします。下図のような画面が出てきました。ユーザー名、パスワード欄に適切なワードを入れてログインします。
 </description>
    </item>
    
    <item>
      <title>analog  /etc/analog.cfg以外のコンフィグファイルを使う</title>
      <link>https://yaasita.github.io/2008/03/15/12757/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/15/12757/</guid>
      <description> analog -G +g/var/www/hoge/foo.cfg.txt
のように書きます。+gの後にスペースを入れないように注意します。
また-Gをつけるのを忘れないで下さい。 </description>
    </item>
    
    <item>
      <title>analogを使ってログ解析</title>
      <link>https://yaasita.github.io/2008/03/15/12777/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/15/12777/</guid>
      <description>analogはログ解析ソフトです。
Debianならaptで簡単にインストールできます。
インストールしたらまず/etc/analog.cfgを編集します。
ログファイルの指定
LOGFILE /var/log/apache2/access.log
古いログファイルの指定 (gzで圧縮されていても大丈夫です)
LOGFILE /var/log/apache2/access.log.*
出力HTMLの指定
OUTFILE /var/www/hoge/Report.html
HOSTEXCLUDE・・・このホストからのログは対象としない
リモートホストでの指定ではワイルドカード（*）を省略しないこと
HOSTINCLUDE・・・このホストを集計の対象とする
FILEEXCLUDE・・・このファイル（ディレクトリ）を集計の対象としない
DNSFILE・・・IPの逆引き結果をキャッシュするファイル
DNS WRITE・・・キャッシュを参照、新しいIPはキャッシュする詳しくはこちら
DNSGOODHOURS・・・キャッシュの有効期限　詳しくはこちら

LANGUAGE japanese-utf
HOSTEXCLUDE 192.168.0.*
HOSTEXCLUDE *.point.ne.jp
HOSTEXCLUDE *.ezweb.ne.jp
#FILEINCLUDE /upload/*
FILEEXCLUDE /icons/*
DNSFILE /var/www/kaiseki/dnscache.txt
DNS WRITE
DNSGOODHOURS 679
BROWSER ON
DAILYREP ON
DAILYSUM ON
FAILHOST ON
FAILREF ON
FAILURE ON
FAILUSER ON
FIVEREP ON
FIVESUM ON
FULLBROWSER ON
HOST ON
HOURLYREP ON
HOURLYSUM ON
ORGANISATION ON</description>
    </item>
    
    <item>
      <title>apacheのログにリモートホストを表示する</title>
      <link>https://yaasita.github.io/2008/03/14/12797/</link>
      <pubDate>Fri, 14 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/14/12797/</guid>
      <description> /etc/apache2/apache2.conf
に
HostnameLookups Off
という項があるので
HostnameLookups On
に変更する。 </description>
    </item>
    
    <item>
      <title>puttyでsftp/scp (psftp/pscp)</title>
      <link>https://yaasita.github.io/2008/03/10/12817/</link>
      <pubDate>Mon, 10 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/10/12817/</guid>
      <description> sftpはputtyの中にある
psftpを実行します。
実行するとコンソールが開くので
open hogeuser@bar.test.jp 22
と入力します。
また鍵認証をした場合はputtyに登録してあるセッション名でもログインできます。
open sessionname
ログインしたあとはhelpコマンドによってコマンド一覧を見れます。
一つ一つのコマンドの詳細はhelp によって見れます。
ローカルのファイルを確認する場合はWindowsの場合
!dir
と入力します。
put test.txt 
でtest.txtをリモートへ送信します。
注意
ftpといってもsshのポートを利用します。
scpは
pscp.exeをDOS窓から実行します
例
C:\pscp.exe foo.txt user@bar.test.jp:
Using keyboard-interactive authentication.
Password:
foo.txt | 14 kB | 14.1 kB/s | ETA: 00:00:00 | 100%
注意
pscpにpathが通っていること
user@bar.test.jp:←のコロンを忘れないこと
参考リンク
PSFTPの利用 </description>
    </item>
    
    <item>
      <title>vimでタブをスペースに変換する</title>
      <link>https://yaasita.github.io/2008/03/07/12837/</link>
      <pubDate>Fri, 07 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/07/12837/</guid>
      <description> :set expandtab で今後入力されるタブがスペースに変換される。
:retab 既存のタブはこのコマンドで変換される。
:set tabstop=4
としていれば4つのスペースに変換される。 </description>
    </item>
    
    <item>
      <title>Apacheのautoindexモジュールが文字化けする</title>
      <link>https://yaasita.github.io/2008/03/05/12857/</link>
      <pubDate>Wed, 05 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/05/12857/</guid>
      <description> ApacheのautoindexはデフォルトエンコーディングでUTF-8を指定しているにも関わらず、
インデックスをリクエストしたときにレスポンスヘッダに
charset=ISO-8859-1
が付いてしまいます。
回避するためにはautoindexのconfのIndexOptionsに
Charset=UTF-8
を追加します。 </description>
    </item>
    
    <item>
      <title>2chのスレを自動保存</title>
      <link>https://yaasita.github.io/2008/02/27/12879/</link>
      <pubDate>Wed, 27 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/27/12879/</guid>
      <description>2chのスレを自動で保存する方法を考えます。
スレの進行が早いところはすぐにDAT落ちしてしまいます。プログラムによって定期的にDATを取得できたら便利です。
いきいきwikiによるとUser-AgentをMonazilla/1.00 (ブラウザ名/バージョン)にするといいようです。
また鯖の転送量を減らす目的でgzipを推奨しています。
例としてJaneviewのリクエストヘッダを見て見ます。

こんな感じです。
これよりどこにアクセスし、DATを取得しているか分かります。
取得したdatはgzipに圧縮されているのでgunzipで展開します。（gunzipコマンドのあるLinux環境を想定しています）
ここで注意して欲しいのは必ずgzipで返ってくるとは限らない点です。gzipではなく生のDATが送られてきても対応できるようにします。
例としてDATを取得するスクリプトをいかに示します。定期的に取得する場合はcronなどで回して下さい。
#!/usr/bin/perl
use Net::HTTP;
### Initial Setting ###########################
$server =&#34;namidame.2ch.net&#34;;
$category =&#34;campus&#34;;
$unixtime =&#34;1234567890&#34;;
$backup_directory =&#39;/var/www/&#39;;
###############################################
unless($backup_directory=~/\/$/){
$backup_directory.=&#39;/&#39;;
}
$s = Net::HTTP-new(Host = &#34;$server&#34;) || die $@;
$s-max_line_length(0);
$s-keep_alive(300);
$s-write_request(GET = &#34;/$category/dat/$unixtime.dat&#34;, &#39;User-Agent&#39; = &#34;Monazilla/1.00 (perl/1.3)&#34; , &#39;Accept-Encoding&#39; = &#34;gzip&#34; );
($code, $mess, %h) = $s-read_response_headers;
unless($code eq &#34;200&#34;){
print &#34;Thread not found!\n&#34;;
exit;
}
open (FH,&#34;$backup_directory$unixtime.dat.gz&#34;) or die $!</description>
    </item>
    
    <item>
      <title>Debian(etch)の日本語環境設定</title>
      <link>https://yaasita.github.io/2008/02/18/12901/</link>
      <pubDate>Mon, 18 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/18/12901/</guid>
      <description> $ sudo dpkg-reconfigure locales
こんな感じでおｋ簡単ですね
参考リンク
http://wiki.debian.org/JapaneseEnvironment </description>
    </item>
    
    <item>
      <title>x11vncよく使いそうなオプション（追加）</title>
      <link>https://yaasita.github.io/2008/02/13/12921/</link>
      <pubDate>Wed, 13 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/13/12921/</guid>
      <description> 前回の他に見つけた良く使いそうなオプション
-allow
リモートアクセスを許可するホストを設定する。
例）192.168.0.5からだけアクセスを許可する
-allow 192.168.0.5
例）192.168.0.0/24からのアクセスを許可する
-allow 192.168.0.
-nopw
パスワードファイルが無くても警告を出さない
＊その他のx11vnc関連の投稿
x11vnc端末から実行した際に出るエラー出力が邪魔
x11vncの設定を保存するには 
Ubuntu7.04 にx11vncをインストールする  </description>
    </item>
    
    <item>
      <title>x11vnc端末から実行した際に出るエラー出力が邪魔</title>
      <link>https://yaasita.github.io/2008/02/13/12942/</link>
      <pubDate>Wed, 13 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/13/12942/</guid>
      <description> ~$ x11vnc &amp;amp;amp; /dev/null &amp;amp;amp;
こんな感じでnullへ捨てる。最後の&amp;amp;amp;はバックグラウンドで実行するという意味。 </description>
    </item>
    
    <item>
      <title>ダウソ板で良く使われる隠語</title>
      <link>https://yaasita.github.io/2008/02/08/12963/</link>
      <pubDate>Fri, 08 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/08/12963/</guid>
      <description> 葱→Negies
PG→peerguardian </description>
    </item>
    
    <item>
      <title>School Days LxHの動画を抽出する</title>
      <link>https://yaasita.github.io/2008/01/20/12983/</link>
      <pubDate>Sun, 20 Jan 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/01/20/12983/</guid>
      <description> まずDVDの読めるPCでディスクを検索します。
次にMV.AFSという1.15GBくらいのファイルがあるのでHDDにコピーします。
この中にpssファイルがアーカイブされているので抽出します。
こちらで配布されているAFS Cutter Ver.1.00を使ってPSSファイルを抽出します。抽出したファイルはbinという拡張子になっていますがPSSファイルです。再生はVLCプレイヤーなどで出来ます。
ゲームで使われていないムービーは
AFS_0836・・・niceboatと書かれた延々と続くスタッフロール
AFS_0855・・・工事中でちゅ!と書かれた世界の落書き
参考
http://freeuse.ddo.jp/contents/game/ps2/ps2mov.html </description>
    </item>
    
    <item>
      <title>ProxomitronをLinuxで・・・</title>
      <link>https://yaasita.github.io/2008/01/07/13004/</link>
      <pubDate>Mon, 07 Jan 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/01/07/13004/</guid>
      <description> １．wineで動かす
２．Privoxyで頑張る </description>
    </item>
    
    <item>
      <title>perlでURLデコード</title>
      <link>https://yaasita.github.io/2008/01/02/13025/</link>
      <pubDate>Wed, 02 Jan 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/01/02/13025/</guid>
      <description> #!/usr/local/bin/perl
open (FH,&#34;access.log&#34;);
open (FH2,&#34;kekka.txt&#34;);
while(){
s/%([0-9A-Fa-f][0-9A-Fa-f])/pack(&#39;H2&#39;,$1)/eg;
print FH2;
}
close FH;
close FH2;
s置換演算子のオプションeは置換後の文字列（ここではpack(&#39;H2&#39;,$1)）の評価を行う。
gオプションは繰り返しマッチさせる。 </description>
    </item>
    
    <item>
      <title>昔、流行った地下ゲーム</title>
      <link>https://yaasita.github.io/2007/12/31/13045/</link>
      <pubDate>Mon, 31 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/31/13045/</guid>
      <description> ブラックユーモア溢れるゲームたちです。
倉庫番はHDDがフォーマットされる可能性があります。
WindowsXP環境では平気でした。
http://www.hehehe.net/game/ </description>
    </item>
    
    <item>
      <title>Linuxでメモリの使用状況を把握する</title>
      <link>https://yaasita.github.io/2007/12/25/13066/</link>
      <pubDate>Tue, 25 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/25/13066/</guid>
      <description> free
vmstat
cat /proc/meminfo
cat /proc/swaps
などなど・・・ </description>
    </item>
    
    <item>
      <title>Linuxでパーティションのアクティブフラグをセットするには</title>
      <link>https://yaasita.github.io/2007/12/11/13086/</link>
      <pubDate>Tue, 11 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/11/13086/</guid>
      <description> # sfdisk -A1 /dev/hda
hdaのパーティション1番をアクティブにし、他のアクティブフラグを削除する。 </description>
    </item>
    
    <item>
      <title>GRUBをUSBメモリにインストールする</title>
      <link>https://yaasita.github.io/2007/12/10/13107/</link>
      <pubDate>Mon, 10 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/10/13107/</guid>
      <description>まず、パーティションを切るFATでフォーマットしアクティブフラグをセットする。
mkdir /mnt/usb/grub cp /boot/grub/stage* /boot/grub/fat_stage1_5 /mnt/usb/grub/ umount /mnt/usb  とし
grub grub&amp;gt; device (hd0) /dev/sda grub&amp;gt; root (hd0,0) grub&amp;gt; setup (hd0) grub&amp;gt; quit  と入力する。（USBメモリを/dev/sdaとする）
参考リンク
 http://opentechpress.jp/developer/article.pl?sid=07/06/18/0135208&amp;amp;amp;pagenum=3 http://d.hatena.ne.jp/kamopapa/20071118  </description>
    </item>
    
    <item>
      <title>mkfs,fdisk,parted,mkswap使い方</title>
      <link>https://yaasita.github.io/2007/12/10/13106/</link>
      <pubDate>Mon, 10 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/10/13106/</guid>
      <description>fdisk パーティションの切り直しにはfdiskを使います。
例えば、/dev/sdaのパーティションを編集するとします
fdisk /dev/sda  で起動
Command (m for help):  と表示されます。
pでパーティションテーブルの表示
dを押して次にパーティション番号を入力してパーティションの削除
nで新しいパーティションの作成
tでパーティションタイプの編集（FAT32のパーティションタイプは0b）
lでパーティションタイプ一覧表示
wで編集したパーティションを書き込み終了
aでブートフラグの設定
参考リンク  swapパーティションの作成 パーティションタイプ一覧  parted fdiskの機能に加えてパーティションのリサイズが行えます。
# parted /dev/sda  のように起動します
(parted)  と表示されます。
printでパーティションテーブルの表示
resize 番号　でパーティションのリサイズ
例）/dev/sda上のswapパーティションを縮小する
# parted /dev/sda GNU Parted 1.7.1 Using /dev/sda Welcome to GNU Parted! Type &#39;help&#39; to view a list of commands. (parted) print Disk /dev/sda: 4326MB Sector size (logical/physical): 512B/512B Partition Table: msdos Number Start End Size Type File system Flags 1 32.</description>
    </item>
    
    <item>
      <title>96KBの3Dゲーム</title>
      <link>https://yaasita.github.io/2007/12/09/13148/</link>
      <pubDate>Sun, 09 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/09/13148/</guid>
      <description> http://www.4gamer.net/patch/demo/kkrieger/kkrieger.html </description>
    </item>
    
    <item>
      <title>vsftpdへIEを使ってログインする</title>
      <link>https://yaasita.github.io/2007/12/09/13126/</link>
      <pubDate>Sun, 09 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/09/13126/</guid>
      <description> IEは標準でftpクライアントを持っています。
ログインした際は通常のファイルのようにドラッグ＆ドロップによるアップロードやダウンロード。右クリックで削除、パーミッションの設定も出来ます。
ftp://hoge.jp/という風にアドレスバーに入れてもvsftpdの場合は下図の様なエラーになります。

iswebやgeocitiesのFTPサーバーへは上のようなエラーは出ず、この後にユーザー名とパスワードの入力を求められます。
vsftpdのサーバーへログインする際にはアドレスの前にユーザー名を書いてください。例えばfoobarというユーザーでログインしたいのなら
ftp://foobar@hoge.jp/
のようにアドレスバーに入力してください。この次にパスワードの入力を求められます。
パスワードも同時に入力したいのなら（例としてパスワードをpasswdとします）
ftp://foobar:passwd@hoge.jp/
と入力します。ログインした後にお気に入りに追加した場合、ftp://hoge.jp/としてお気に入りに追加されてしまうため、お気に入りの項目を右クリック→プロパティから上記アドレスに書き換えてください。 </description>
    </item>
    
    <item>
      <title>DebianでFNW-3600-Tを使うとインターフェイスが落ちる問題</title>
      <link>https://yaasita.github.io/2007/12/05/13168/</link>
      <pubDate>Wed, 05 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/05/13168/</guid>
      <description>PLANEXのFNW-3600-Tを使用している際にインターフェイスが勝手にリブートする問題があります。dmesgを見ると以下のようなログが確認できます。

eth0: NE2000 (DL10019 rev 05): io 0x300, irq 3, hw_addr 00:E0:98:00:BE:63
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected
eth0: no IPv6 routers present
eth0: lost link beat
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected
eth0: lost link beat
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected
eth0: lost link beat
eth0: interrupt(s) dropped!
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected</description>
    </item>
    
    <item>
      <title>Debianにnslookupが無い件</title>
      <link>https://yaasita.github.io/2007/12/01/13209/</link>
      <pubDate>Sat, 01 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/01/13209/</guid>
      <description>#apt-get install dnsutils</description>
    </item>
    
    <item>
      <title>Debianコマンドラインからのパッケージアップデート</title>
      <link>https://yaasita.github.io/2007/12/01/13189/</link>
      <pubDate>Sat, 01 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/01/13189/</guid>
      <description> # apt-get update
新しいパッケージリストの取得
# apt-get upgrade -s アップデートされるパッケージの確認
# apt-get upgrade アップグレードの適用 </description>
    </item>
    
    <item>
      <title>Apacheのパスワード制御をサブディレクトリだけ外すには</title>
      <link>https://yaasita.github.io/2007/11/30/13229/</link>
      <pubDate>Fri, 30 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/30/13229/</guid>
      <description> そのディレクトリ中に.htaccessを作り
Satisfy Any
Allow from all
と書く
またあるディレクトリだけBASIC認証の挙動を変えたい場合は以下のような.htaccessファイルをつくる。
AuthType Basic
AuthUserFile &#34;/etc/apache2/pass&#34;
AuthName &#34;Enter passwd&#34;
Require user hoge
 </description>
    </item>
    
    <item>
      <title>Debian(etch)にtelnetdをインストール</title>
      <link>https://yaasita.github.io/2007/11/30/13249/</link>
      <pubDate>Fri, 30 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/30/13249/</guid>
      <description> apt-get install telnetd
その後
/etc/init.d/openbsd-inetd start
で起動します。
telnetでのrootログインを許可したいなら
/etc/pam.d/login
にある
auth required/lib/security/pam_securetty.so
Debian Lennyの場合は
auth [success=ok ignore=ignore user_unknown=ignore default=die] pam_securetty.so
をコメントアウトしてください
また動いているプロセスは/usr/sbin/inetdです
参考
http://www.itmedia.co.jp/help/tips/linux/l0370.html </description>
    </item>
    
    <item>
      <title>Thunderbirdの表示名がメールアドレス前に入ってしまう</title>
      <link>https://yaasita.github.io/2007/11/28/13270/</link>
      <pubDate>Wed, 28 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/28/13270/</guid>
      <description> 例えば表示名を「hogehoge」としてアドレス帳に登録しておき、example@test.comに送ろうとしたときにToヘッダは
To:hogehoge &amp;amp;lt;yamaooo310@yahoo.co.jp&amp;amp;gt;
となり表示名が入ってしまいます。
これを止めるにはアドレス帳に登録する際に表示名には登録せず姓名の欄に名前を登録します。このようにした場合、アドレス帳がメールアドレスが表示されて見にくくなるのでアドレス帳→表示→名前の表示→姓　名前を選択します。 </description>
    </item>
    
    <item>
      <title>rep2をLinuxにインストール</title>
      <link>https://yaasita.github.io/2007/11/25/13311/</link>
      <pubDate>Sun, 25 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/25/13311/</guid>
      <description>インストール 公式サイトからrep2をダウンロード
以下パッケージのインストール
apt-get install php5 php-http-request php5-gd php-pear php-compat  ※公式にはこう書いてある
 aptitude install apache2-mpm-prefork php5 php-pear php-compat php-http-request php-pager php-file php5-curl curl unzip
 必要なpearパッケージも
pear install Net_UserAgent_Mobile  ※なかったらpear search Net_UserAgent_Mobileとかで検索してみる
リポジトリにPHP_Compatが無かった場合は追加で以下のコマンド
pear install PHP_Compat  それ以外は公式サイト見てやる
公式サイトの説明文
  サーバを立ち上げて、PHPが動くようにする。PEARも忘れずに（下記参照） rep2ディレクトリをサーバからアクセスできる所（「~/Sites」とか）へ置く。 rep2ディレクトリの中にデータ保存用のディレクトリを作成する。（デフォルトでは「data」ディレクトリ） データ保存用ディレクトリのパーミッションを「707」（または777）にする。 必要に応じて、 conf/conf_admin.inc.php などのconfファイルをテキストエディタで開いて設定編集。 ブラウザから、
http://127.0.0.1/~(ユーザ名)/rep2/index.php
てな具合にrep2ディレクトリへアクセス。  ※PHPが確かに動いていることを確かめたい時は？
http://127.0.0.1/~(ユーザ名)/rep2/phpinfo.php
てなとこにアクセスしてみて下さい。
ずらずらーっとPHPの環境情報が表示されたならば、PHPは正常に動作しています。
（確認ができましたら、phpinfo.php はもう必要ないので削除しても構いません）
これで動くはずです。動かなかった場合はエラーを見て判断してください。
 設定 conf/conf_hostcheck.php
を編集してグローバルIP側からの接続でもrep2を利用できるようにします。
29行目付近 customを1に設定
// ユーザー設定 &#39;custom&#39; =&amp;gt; 1,  36行目付近を以下のように設定</description>
    </item>
    
    <item>
      <title>URLの書式</title>
      <link>https://yaasita.github.io/2007/11/25/13290/</link>
      <pubDate>Sun, 25 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/25/13290/</guid>
      <description>
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>MinGWをWindowsにインストールする</title>
      <link>https://yaasita.github.io/2007/11/24/13332/</link>
      <pubDate>Sat, 24 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/24/13332/</guid>
      <description>フリーのC/C++コンパイラのインストールメモです。
まず http://www.mingw.org/ に行きダウンロードします。
ダウンロードは sourceforge から行ってください。現時点で最新版のAutomated MinGW InstallerのMinGW-5.1.3をダウンロードします。このダウンロードしたexeを実行すると自動的にダウンロードとインストールが行えます。

途中、↑のようにダウンロードするバージョンを聞かれますが、currentを選択すればいいでしょう。
インストールを C:\MinGW\ にした場合は C:\MinGW\bin にPATHを設定します。この時、PATH=C:\MinGW\bin;%system%....
の様に先頭にしておけば検索が早くなり結果的に早くコンパイルできるはずです。
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>x11vncの設定を保存するには</title>
      <link>https://yaasita.github.io/2007/11/18/13354/</link>
      <pubDate>Sun, 18 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/18/13354/</guid>
      <description> 前回の設定では長いオプションをいちいち入力する必要がありましたが
rcファイルを作りオプションを保存することができます。
設定ファイルは~/.x11vncrcとして保存します。
前回の設定を保存するなら
-forever
-rfbauth /home/hogehoge/.vnc/passwd
-rfbport 5000
-display :00
のように書いて保存します。#を入れるとそれ以降の文字はコメントとして扱われます。
もし.x11vncrcを読み込みたくないなら
-norc
オプションを付けて下さい。 </description>
    </item>
    
    <item>
      <title>Linuxでビープ音を消す</title>
      <link>https://yaasita.github.io/2007/11/17/13375/</link>
      <pubDate>Sat, 17 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/17/13375/</guid>
      <description> コンソールを含めて、いかなる場合もビープ音を鳴らしたくない場合は、次のコマンドを実行します。
$ sudo rmmod pcspkr
再起動後もビープ音を鳴らしたくなければ、/etc/modprobe.d/blacklistに次の行を加えます。

blacklist pcspkr
だそうです
https://wiki.ubuntulinux.jp/UbuntuTips/Hardware/StopBeepSound </description>
    </item>
    
    <item>
      <title>中国系P2Pテレビを視聴するには？</title>
      <link>https://yaasita.github.io/2007/11/12/13395/</link>
      <pubDate>Mon, 12 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/12/13395/</guid>
      <description> https://wiki.ubuntulinux.jp/UbuntuTips/Application/P2Ptv </description>
    </item>
    
    <item>
      <title>ubuntu7.10にApache2を入れる</title>
      <link>https://yaasita.github.io/2007/11/11/13417/</link>
      <pubDate>Sun, 11 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/11/13417/</guid>
      <description> ファイル名が日本語の場合、Indexが文字化けする場合は/etc/apache2/conf.d/charset をUTF-8がデフォルトになるように書き換える。
Indexの細かい指定は/etc/apache2/mods-available/autoindex.conf で設定する。 </description>
    </item>
    
    <item>
      <title>Ubuntu7.10に制限付きドライバをインストールする</title>
      <link>https://yaasita.github.io/2007/11/04/13438/</link>
      <pubDate>Sun, 04 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/04/13438/</guid>
      <description> http://albertomilone.com/nvidia_scripts1.html
↑のリンクからenvy_0.9.8-0ubuntu10_all.debをダウンロード
⇒実行してインストール
Ctrl+Alt+F1を押してコンソールにする⇒envyと打ってドライバのインストール </description>
    </item>
    
    <item>
      <title>kxmameでLinuxでもアーケードゲームを遊ぶ</title>
      <link>https://yaasita.github.io/2007/10/29/13480/</link>
      <pubDate>Mon, 29 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/29/13480/</guid>
      <description> ubuntuのaptでインストールしたら
アプリケーションー＞ゲームー＞kxmameを選択して起動
その後
Settings-Directoriesを選択して
そこら辺のタブにある
/usr/lib/games/xmameを
/usr/share/games/xmameに変える
次にFileー＞Propertiesから
Controllersを選んで
ジョイスティックデバイスを/dev/input/js0にする。
ROMイメージはzipのままで解凍しないでおく。ROMイメージ場所の設定はSettings-Directories...からMame/Mess basic pathタブの Mame ROMS path:で指定する。
ゲームを起動したらTabで諸々の設定ができる。
ROMは下記サイトで探す
http://www.romnation.net/srv/roms/mame.html </description>
    </item>
    
    <item>
      <title>Windows版のapache2.2</title>
      <link>https://yaasita.github.io/2007/10/29/13458/</link>
      <pubDate>Mon, 29 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/29/13458/</guid>
      <description>Windows版の Apache は2.0系とは違いIndexオプションを指定しても下のように殺風景なものになります。

ファイルサイズや更新日時を表示する下図のような従来の見え方にするには

httpd.confにInclude conf/extra/httpd-autoindex.confを追加します。Index表示の細かい指定は
C:\Program Files\Apache Software Foundation\Apache2.2\conf\extra\httpd-autoindex.conf  で設定します。
http://www.geocities.jp/uesssu/soft/apache.htm
Apacheのバイナリをダウンロードするにはこちらからどうぞ
http://www.apache.org/dist/httpd/binaries/win32/
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>Firefoxでニコニコ動画へ改行を入力する</title>
      <link>https://yaasita.github.io/2007/10/27/13523/</link>
      <pubDate>Sat, 27 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/27/13523/</guid>
      <description> Alt押しながらテンキーで10押してAltを離せば入力できます。
他にもAlt押しながら対応する10進数のASCIIコードを押せば入力できます。 </description>
    </item>
    
    <item>
      <title>アイコンを偽装できる拡張子はexeとsrcだけ</title>
      <link>https://yaasita.github.io/2007/10/27/13502/</link>
      <pubDate>Sat, 27 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/27/13502/</guid>
      <description> ウイルスの拡張子をtxtにするともとのアイコンに戻るのはそのためです。
よって下の記事は正確ではないようです。
http://www.atmarkit.co.jp/fsecurity/special/90winny/winny05.html
参考リンク
http://www.tokix.net/txt/WinnyVirus.html </description>
    </item>
    
    <item>
      <title>Firefox入れた拡張まとめ</title>
      <link>https://yaasita.github.io/2007/10/17/13544/</link>
      <pubDate>Wed, 17 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/17/13544/</guid>
      <description> Go Up
tagiri toolbar
CacheViewer
テキストリンク
nicoDownloader
scrapbook </description>
    </item>
    
    <item>
      <title>vim　ウィンドサイズと位置の記憶と復帰</title>
      <link>https://yaasita.github.io/2007/10/15/13584/</link>
      <pubDate>Mon, 15 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/15/13584/</guid>
      <description>&#34; Window位置の保存と復帰
if 1 &amp;amp;amp;&amp;amp;amp; has(&#39;gui_running&#39;)
let s:infofile = &#39;~/.window.vim&#39;
function! s:WinPosSizeSave(filename)
redir @a
winpos
redir END
let px = substitute(@a, &#39;.*X \(\d\+\).*&#39;, &#39;\1&#39;, &#39;&#39;) + 0
let py = substitute(@a, &#39;.*Y \(\d\+\).*&#39;, &#39;\1&#39;, &#39;&#39;) + 0
execute &#39;redir! &#39;.a:filename
if px  0 &amp;amp;amp;&amp;amp;amp; py  0
echo &#39;winpos &#39;.px.&#39; &#39;.py
endif
echo &#39;set lines=&#39;.&amp;amp;amp;lines.&#39; columns=&#39;.&amp;amp;amp;columns
redir END
endfunction
augroup WinPosSizeSaver
autocmd!
augroup END
execute &#39;autocmd WinPosSizeSaver VimLeave * call s:WinPosSizeSave(&#34;</description>
    </item>
    
    <item>
      <title>なんとか動画の保存方法</title>
      <link>https://yaasita.github.io/2007/10/15/13564/</link>
      <pubDate>Mon, 15 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/15/13564/</guid>
      <description> ニコニコ動画のように動画にコメント出来るサイトなんとか動画の保存方法
なんとか動画
上のような動画の場合
http://familia.rsn.ne.jp/
movie/upload/harukakka/movie/20070906065015.flv
からflvファイルを取得しているようです。
なので動画の投稿日を見てく判断してください。
この例だと、
2007/09/06 18:50:15投稿　となっているのでflv本体は上記URLになります。
/upload/後のID？が分からないため保存する際はFirefoxの拡張CacheViewerなどを使ってフ20070906を検索→URL末尾の投稿日を見て判断した方が早いかもしれません。
またサムネイルのjpg画像もfamilia.rsn.ne.jpから取得しているため
http://familia.rsn.ne.jp/
movie/upload/harukakka/movie/20070906065015.jpg
というアドレスの末尾jpgをflvに変えることでもダウンロードできます。
まとめwiki </description>
    </item>
    
    <item>
      <title>初音ミクを描いてみた</title>
      <link>https://yaasita.github.io/2007/10/15/13604/</link>
      <pubDate>Mon, 15 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/15/13604/</guid>
      <description> うまいですねぇ
http://doubleegg.blog89.fc2.com/ </description>
    </item>
    
    <item>
      <title>AudacityのVSTプラグインのインストール</title>
      <link>https://yaasita.github.io/2007/10/14/13624/</link>
      <pubDate>Sun, 14 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/14/13624/</guid>
      <description>
 http://audacityteam.org/vst/に行ってVSTイネーブラーをダウンロードして下さい。
（zipではなくexeのインストーラー形式なら簡単です） http://www.kjaerhusaudio.com/download.phpからプラグインをダウンロードします。
今回はClassic Reverbをダウンロードします。 先ほどダウンロードしたzipの中にあるClassic Reverb.dllをAudacityのプラグインフォルダに移動します。（例：C:\Program Files\Audacity\Plug-Ins） Audacityを再起動すると↑の画像のようにClassi Reverbが使えるようになります。  Classic Reverbはコンサートホールにいるような残響音を作れます。
AC９７のサウンドエフェクトコンサートホールを参考にパラメータを決定するといいかもしれません。

※VST=Virtual Studio Technology
参考リンク
http://blog.livedoor.jp/mugen_blog/archives/cat_50030024.html
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>Linuxで動画編集</title>
      <link>https://yaasita.github.io/2007/10/13/13645/</link>
      <pubDate>Sat, 13 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/13/13645/</guid>
      <description> kino
AviDemux
FFmpeg
など。。。。
 </description>
    </item>
    
    <item>
      <title>各Webページにどれくらい時間を費やしているか計るFirefoxの拡張</title>
      <link>https://yaasita.github.io/2007/10/13/13666/</link>
      <pubDate>Sat, 13 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/13/13666/</guid>
      <description> https://addons.mozilla.org/ja/firefox/addon/5168 </description>
    </item>
    
    <item>
      <title>Thunderbirdの引用記号を&amp;gt;にする</title>
      <link>https://yaasita.github.io/2007/10/07/13686/</link>
      <pubDate>Sun, 07 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/07/13686/</guid>
      <description> 引用記号の色や表示の仕方を変更できます。
https://addons.mozilla.org/ja/thunderbird/addon/170
 </description>
    </item>
    
    <item>
      <title>Linuxでマイク入力から録音する</title>
      <link>https://yaasita.github.io/2007/10/05/13706/</link>
      <pubDate>Fri, 05 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/05/13706/</guid>
      <description>Audacity
http://www.xucker.jpn.org/pc/audacity/record.html
あとaumixが必要</description>
    </item>
    
    <item>
      <title>Ubuntuプリンタ共有設定</title>
      <link>https://yaasita.github.io/2007/10/02/13727/</link>
      <pubDate>Tue, 02 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/02/13727/</guid>
      <description> Ubuntuのメニューから
システム＞システム管理＞プリンタを選択
全般の設定＞LANプリンタの検出、共有プリンタにチェック
Windows側では
たとえばHOGEというホスト名、DeskJet_955Cだと
\\HOGE\DeskJet_955Cです
で指定してあとはドライバ設定で終わりです
/etc/cups/に設定ファイルがあります
/etc/init.d/cupsys restartでリスタートします </description>
    </item>
    
    <item>
      <title>WindowsXPで自動ログイン</title>
      <link>https://yaasita.github.io/2007/09/28/13769/</link>
      <pubDate>Fri, 28 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/28/13769/</guid>
      <description> WinodwsXPパスワード無しで自動ログインするには
１．自動ログインしたいアカウントのパスワードを設定
２．↓のソフトを使って自動ログイン設定
http://www.microsoft.com/technet/sysinternals/Security/Autologon.mspx
３．アカウントのパスワードを削除
ちなみに、暫くするとアカウント選択画面に戻りますがこれを止める場合は
デスクトップ壁紙右クリック→プロパティ→スクリーンセーバータブ→再開時にようこそ画面に戻るのチェックを外す </description>
    </item>
    
    <item>
      <title>ロックマンX2　パスワード</title>
      <link>https://yaasita.github.io/2007/09/28/13748/</link>
      <pubDate>Fri, 28 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/28/13748/</guid>
      <description> 
ライフアップ＆サブタンク＆パーツ＆ゼロパーツ全部取得したパスワード
最初の8ボスは全員倒しています </description>
    </item>
    
    <item>
      <title>vimで文字コードをステータスラインに表示するスクリプト</title>
      <link>https://yaasita.github.io/2007/09/27/13789/</link>
      <pubDate>Thu, 27 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/27/13789/</guid>
      <description> http://www.geocities.jp/uesssu/soft/vim/asciicode.txt </description>
    </item>
    
    <item>
      <title>vimでバイナリエディットする</title>
      <link>https://yaasita.github.io/2007/09/26/13830/</link>
      <pubDate>Wed, 26 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/26/13830/</guid>
      <description> :%!xxd
で文字にする
:%!xxd -r
でバイナリに変換
(※バイナリへ変換した時に元のファイル末尾が0Aじゃなかった場合
vim側が勝手に0Aを付与するので注意) </description>
    </item>
    
    <item>
      <title>山田ウィルスの挙動とバイナリ</title>
      <link>https://yaasita.github.io/2007/09/26/13809/</link>
      <pubDate>Wed, 26 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/26/13809/</guid>
      <description> ●山田オルタナティブ（WORM_ANTINNY.BI、W32.Yawmo）
【主な被害】
・2段階の画質でSSを出力し、他の（´・ω・） ｶﾜｲｿｽな香具師へ相互リンク
・アップロードらしきフォームで、コンピュータ上の全HDD上の全ファイルのHTTPでのダウンロードを可能にする
【主な活動】
・Windowsシステムフォルダ内に以下のファイルを作成
* ya_wmp.exe
* winsocks.dll
・&#34;C:\RECYCLER\explorer.exe&#34; というファイルを作成
・C:ドライブ内に &#34;Up&#34; というフォルダを作成
・レジストリ値&#34;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run&#34;の中に
YA_WMP = &#34;\ya_wmp.exe -update&#34;を追加
・ポート80、ポート8080の空き領域を使う
（そのほかのポートを使う場合もある模様）
【感染確認方法（とりあえず安心程度）】
・タスクマネージャでya_wmp.exeの有無を確認。存在すれば（´・ω・） ｶﾜｲｿｽ
・C:\RECYCLER\にexplorer.exeが存在すれば（´・ω・） ｶﾜｲｿｽ
・コマンドプロンプトからnetstat -anoと打ち込み
Local Addressに80、8000、8080の有無を確認。存在すれば（´・ω・） ｶﾜｲｿｽ
【感染確認方法（ほぼ確実）】
ttp://www.excite.co.jp/world/english/web/等のウェブページ翻訳可能な翻訳サイトで
以下を入力して翻訳
http://(自分のIP)/C:/
http://(自分のIP):8080/C:/
http://(自分のIP):1080/C:/
http://(自分のIP):8000/C:/
翻訳不可能＝見えない（´・ω・） ｽ
翻訳可能＝外部から見える＝（´・ω・） ｶﾜｲｿｽ
あと山田砲について調べる予定
http://ycanon.memebot.com/cgi-bin/YCanon.cgi
http://www.geocities.jp/uesssu/siryou/virus.html
http://www.nurs.or.jp/~jisatsu/bbs/bbs.txt
http://yamada.xxxxxxxx.jp/capture.htm#view
Mell-1-0.11 &#34;1&#34;
Backdoor.Win32.Agent.xs
対処法
→ファイル名を指定して実行→msconfig→スタートアップからそれらしいものを探しチェックを外す
バイナリファイルへ戻すにはvimなどでできます。
流失企業まとめ </description>
    </item>
    
    <item>
      <title>Ubuntu7.04 にx11vncをインストールする</title>
      <link>https://yaasita.github.io/2007/09/22/13850/</link>
      <pubDate>Sat, 22 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/22/13850/</guid>
      <description> Ubuntuに標準にインストールされているvinoはGUIで設定が行えて、手軽で良いのですがポートの変更など細かい設定が出来ません。そこでx11vncを使ってみます。
まずaptでx11vncをインストールします。
インストールしたら
$ x11vnc -storepasswd を実行してパスワードファイルを作ります。実行すると ~/.vnc/passwdにパスワードファイルが作成されます。
次に、vncサーバーを起動させます。
$ x11vnc -forever -rfbauth ~/.vnc/passwd -rfbport 5000 -display :0.0各オプションの説明は以下の通りです。
-forever このオプションを付けないと誰かがVNCサーバーに接続し、切断した後に自動的にx11vncが終了してしまいます。
-rfbauth　このオプションの後に作成したpasswdファイルまでのパスを記述します。
-rfbport　VNCサーバーが待ち受けるポート番号を指定します。デフォルトは5900番です。
-display　このオプションの後に端末番号を指定します。端末番号はwhoコマンドなどで確認できます。
他にも下記のオプションがあります。
-viewonly クライアントには画面を見せるだけでキーボード、マウスによる入力を受け付けません。
x11vncは接続までの時間はvinoより長い気がしますが、ウィンドリサイズ時や処理を行っている際にマウスポインタが変形するところまで再現できるので接続した後はvinoよりも使い勝手が良いと思います。
自動起動させる場合は~/.vnc/passwdをフルパスにして（例：/home/hoge/.vnc/passwd）gnomeのシステム＞セッションのところから登録してください。 </description>
    </item>
    
    <item>
      <title>rep2をWindowsにインストールする</title>
      <link>https://yaasita.github.io/2007/09/20/13871/</link>
      <pubDate>Thu, 20 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/20/13871/</guid>
      <description> http://akid.s17.xrea.com/p2puki/index.phtml?Windows%C8%C7Apache%A4%C8curl%A4%CE%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB%A1%CA%A1%FC%A4%E2OK%A1%CBApache2.0.59%2BPHP5.2.3 </description>
    </item>
    
    <item>
      <title>ActivePerlとLinuxのPerlで挙動が違う</title>
      <link>https://yaasita.github.io/2007/09/16/13892/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/16/13892/</guid>
      <description> ブロードキャストアドレスを指定したsend関数で挙動の違いがあります。
たとえばUDPパケットを送ろうと、次のようなsocketを作ります。
socket(SOCKET, PF_INET, SOCK_DGRAM, 0) ;
そして次のように送ろうとします。
send(SOCKET, $data, 0, $sock_addr) ;この時もし$sock_addrがブロードキャスアドレスだった場合
WindowsのActivePerlなら問題なくブロードキャストできます。
LinuxのPerlだった場合はSocketの生成後に
setsockopt(SOCKET, SOL_SOCKET, SO_BROADCAST,1) ;としてソケットオプションSO_BROADCASTを指定しなければエラーを返し、送信できません。
ソケットについては以下を参照して下さい。
Socket(2)
Socket(7) </description>
    </item>
    
    <item>
      <title>Thunderbirdのアカウントフォルダの並び替えるには</title>
      <link>https://yaasita.github.io/2007/09/15/13914/</link>
      <pubDate>Sat, 15 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/15/13914/</guid>
      <description> https://addons.mozilla.org/ja/thunderbird/addon/258 </description>
    </item>
    
    <item>
      <title>Firefoxでニコニコ動画、Youtubeを保存する拡張</title>
      <link>https://yaasita.github.io/2007/09/08/13934/</link>
      <pubDate>Sat, 08 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/08/13934/</guid>
      <description> ニコニコ動画
http://miniturbo.org/product/extension/nicodownloader/
youtube
https://addons.mozilla.org/ja/firefox/addon/2390
http://tagiri.jp/toolbar/download.html </description>
    </item>
    
    <item>
      <title>Irvineで画像ダウンロードできない場合の対処</title>
      <link>https://yaasita.github.io/2007/09/05/13954/</link>
      <pubDate>Wed, 05 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/05/13954/</guid>
      <description> Irvineで画像をまとめて落とそうとしても落とせない場合があります。
もし、普通のブラウザで画像を表示できるのならリクエストヘッダを書き換えることでダウンロードできるはずです。
まず、フォルダ設定→HTTP(2)からUserAgentを
Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.8.1.1) Gecko/20061204 Firefox/2.0.0.1
などそれらしいものに変えます。
それでもダウンロードできない場合はその下で設定できるRefererやCookieを変えてください。
ここまで設定しても出来ない場合は
フォルダ設定→スクリプト→イベントのOnHttpRequest→HTTPヘッダの変更にチェックし編集ボタン
でリクエストヘッダを書き換えます。
headers[&#39;Accept&#39;] = &#39;image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/msword, */*&#39;;
このようなヘッダを追加するとうまくいくかも知れません。 </description>
    </item>
    
    <item>
      <title>WikiScannerを使う</title>
      <link>https://yaasita.github.io/2007/09/03/13975/</link>
      <pubDate>Mon, 03 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/03/13975/</guid>
      <description> WikiScannerを使う場合その組織のIPアドレス範囲を知る必要があります。
そのIPアドレス範囲を特定→WikiScannerでの指定までの手順を説明します。
ここでは例としてクラスBのアドレスを１つ取得している中央大学で説明します。
まず、JPNIC Whoisに行き、検索タイプを上から3つ目の「ネットワーク情報(組織名、Organization)」にチェックし中央大学を検索します。Network Information: [ネットワーク情報]
a. [IPネットワークアドレス] 133.91.0.0/16
b. [ネットワーク名] CHUO-NET
f. [組織名] 中央大学
この様な結果が出ると思います。これよりIPアドレス範囲が分かったので、
WikiScannerのIP Rangeで特定してくださいに133.91.0.0-133.91.255.255と入力して検索をかければ中央大学から編集したページ一覧が表示されると思います。
以下参考
中央大学
東京電機大学
神奈川大学
東海大学
明治大学
早稲田大学
 </description>
    </item>
    
    <item>
      <title>CPU切替器は何が良いか</title>
      <link>https://yaasita.github.io/2007/08/30/13995/</link>
      <pubDate>Thu, 30 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/30/13995/</guid>
      <description> coregaのCG-PC2KVMAS
切替は早いけどたまにマウスのポインタが引っかかる
キーボードのレスポンスが悪い気がする
サンワサプライのSW-KVM2CPA
マウスが引っかかる事は無いし、キーボードのレスポンスも良いかもしれない </description>
    </item>
    
    <item>
      <title>ポートマッピングでブロードキャストアドレスを指定できるルーター</title>
      <link>https://yaasita.github.io/2007/08/29/14015/</link>
      <pubDate>Wed, 29 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/29/14015/</guid>
      <description> WOLをインターネット越しに使おうとしたときに気になるのは
そのポート転送先アドレスにブロードキャストアドレスを指定できるかどうかだと思います。
コレガのCG-WLBARGPは192.168.0.255を転送先に選ぶとエラーが出てしまい
IO-DATAのNP-BBRPはブロードキャストアドレスを指定はできますが、
192.168.0.255を探すARP要求を出してしまいうまくいきませんでした。
NETGEARのWGU624も駄目でした。
NECのAtermシリーズは出来るみたいです。PA-BR1500Hは確認しました。 </description>
    </item>
    
    <item>
      <title>MACアドレスを任意のものに変える</title>
      <link>https://yaasita.github.io/2007/08/15/14036/</link>
      <pubDate>Wed, 15 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/15/14036/</guid>
      <description> WindowsXPでは
コントロールパネル→システム→ハードウェアタブのデバイスマネージャをクリック
→ネットワークアダプタの項を展開し変更するNICを選び右クリック→プロパティ
→詳細設定タブのNetworkaddressをクリックし変更する。
（NICによっては使用できないかもしれません）
Linuxでは
ifconfig LANインタフェース名 hw ether MACアドレス
例）
# ifdown eth0
# ifconfig eth1 hw ether aa:aa:aa:aa:aa:aa
# ifup eth0 </description>
    </item>
    
    <item>
      <title>ノートPCのHDD交換方法</title>
      <link>https://yaasita.github.io/2007/08/15/14059/</link>
      <pubDate>Wed, 15 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/15/14059/</guid>
      <description> http://www.iodata.jp/support/service/hd/sotec/wb3/wb3.html </description>
    </item>
    
    <item>
      <title>幽遊白書2裏技</title>
      <link>https://yaasita.github.io/2007/08/10/14079/</link>
      <pubDate>Fri, 10 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/10/14079/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>Beryl,Compiz環境でGNOME付箋紙をクリックするとデスクが回ってしまう</title>
      <link>https://yaasita.github.io/2007/08/09/14100/</link>
      <pubDate>Thu, 09 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/09/14100/</guid>
      <description>
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; for(var i=0;i </description>
    </item>
    
    <item>
      <title>Winodws環境でFTPサーバーを立てるとき</title>
      <link>https://yaasita.github.io/2007/08/08/14121/</link>
      <pubDate>Wed, 08 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/08/14121/</guid>
      <description> nekosogiftpdが良いらしいです。NAPT越えが出来ます。
NAPT超えをするためにはグローバルIPの確認が必要です。
このソフトはグローバルIP確認のために起動時に
http://nekosogi.sytes.net/regist/check_ip.cgi
を見に行きます。
リクエストがGETではなくPOSTで
POST /regist/check_ip.cgi HTTP/1.0
User-Agent: nekosogiftpd
Content-Length: 23
Host: nekosogi.sytes.net
Connection: close
ma=0003FF18E38F&amp;amp;amp;ver=205というデータを送ってました。ブラウザでリクエスト（当然GET）すると
global_ip�222.225.115.51�dialog�nekosogiftpd ver2.05がリリースしています。 アップデートをお願いいたします。�と出たので、バージョン情報でも送っているのかもしれません。多分、ver=205がそれでしょう。
ma=0003FF18E38Fは謎です。
もしドメインを取得しているのならPitifulNatというプラグインで名前解決によるグローバルIPの取得が可能です。
 </description>
    </item>
    
    <item>
      <title>vsftpdのレジューム機能について</title>
      <link>https://yaasita.github.io/2007/08/06/14142/</link>
      <pubDate>Mon, 06 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/06/14142/</guid>
      <description> vsftpdはproftpdのように明示的にレジューム機能の可否を書けません。
レジューム機能はデフォルトで有効になっていて無効には出来ません。
アップロード、ダウンロード、アスキーモード、バイナリモード
に関わらずレジュームが出来ます。 </description>
    </item>
    
    <item>
      <title>Firefoxでリファラを遮断したり、任意の文字列にするには</title>
      <link>https://yaasita.github.io/2007/08/05/14162/</link>
      <pubDate>Sun, 05 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/05/14162/</guid>
      <description> リファラの送信するかしないかの設定はabout:configから
network.http.sendRefererHeader
を変更する。値は0,1,2のいずれか。
0→リファラを一切送信しない
1→リンクを辿ってきた場合にのみリファラを送信
2→デフォルトの設定。画像読み込み時もリファラを送信
リファラを任意の文字列に設定するにはrefspoofという拡張をインストールすればいい。 </description>
    </item>
    
    <item>
      <title>Blogger に忍者TOOLSを設置する</title>
      <link>https://yaasita.github.io/2007/08/04/14224/</link>
      <pubDate>Sat, 04 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/04/14224/</guid>
      <description> カスタマイズ→テンプレートタブのページ要素→ページ要素の追加
→HTML/JavaScript追加ボタン→コピペ </description>
    </item>
    
    <item>
      <title>sshの認証ログの名前がFedora4とDebianだと違う</title>
      <link>https://yaasita.github.io/2007/08/04/14204/</link>
      <pubDate>Sat, 04 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/04/14204/</guid>
      <description> Fedora4→/var/log/messages
Debian→/var/log/auth.log </description>
    </item>
    
    <item>
      <title>もしWindowsメッセンジャーが盗聴されていたら</title>
      <link>https://yaasita.github.io/2007/08/04/14183/</link>
      <pubDate>Sat, 04 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/04/14183/</guid>
      <description> パスワードは暗号化されているので漏れる事はないです。
メアドはばれます。また、会話内容は平文なので読まれます。
キャラクターセットはUTF-8です。
通常の会話だけなら相手側のIPは分かりません。
MSの鯖を介してテキストを送受するためです。
ファイルの送受はP2Pで行うため、ファイルの送受信をすると
相手のIPが分かります。 </description>
    </item>
    
    <item>
      <title>vimの検索について</title>
      <link>https://yaasita.github.io/2007/08/03/14244/</link>
      <pubDate>Fri, 03 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/03/14244/</guid>
      <description> 対象単語の上にカーソルを置いて * を押すとその単語を前方検索します。
# は後方検索です。
最後に検索した文字列をhogeとします。ファイル中に含まれるhogeをhageに変えたい場合は
:%s//hage/gと省略できます。（意味は:%s/hoge/hage/g）
つまり:s/{pattern}/{string}/の{pattern}を省略した場合、最後に検索した
文字列になります。
検索履歴はq/で見れます。 </description>
    </item>
    
    <item>
      <title>物理ディスク デバイスを識別する方法</title>
      <link>https://yaasita.github.io/2007/07/30/14265/</link>
      <pubDate>Mon, 30 Jul 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/07/30/14265/</guid>
      <description> Windowsのイベントビューワで以下のような警告が出る場合があります
ドライバはデバイス \Device\Harddisk0\DR0 が失敗する可能性があることを発見しました。 すぐにデータのバックアップを作成し、ハード ディスクを置き換えてください。 すぐにも障害が起きる可能性があります。この\Device\Harddiskｘ\DRｙ　はｘ番目のHDDのy番目パーティションを指しているみたいです。
どのHDDが何番目に位置しているか確認するには
ファイル名を指定して実行→diskmgmt.msc
で、ここで表示されるディスクxが該当のHDDだとわかります。 </description>
    </item>
    
    <item>
      <title>シムシティ2000</title>
      <link>https://yaasita.github.io/2007/07/29/14285/</link>
      <pubDate>Sun, 29 Jul 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/07/29/14285/</guid>
      <description> やる事無いからシムシティ2000をやってみる。
なんかスゲー遅いし。ゲーム途中で止める方法が見つからない。 </description>
    </item>
    
    <item>
      <title>メモ帳代わりにブログを初めてみる</title>
      <link>https://yaasita.github.io/2007/07/29/14306/</link>
      <pubDate>Sun, 29 Jul 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/07/29/14306/</guid>
      <description>blogger.comはgoogleアカウント持ってればすぐできるからこれにしよう</description>
    </item>
    
  </channel>
</rss>