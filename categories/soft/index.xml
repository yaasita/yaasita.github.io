<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>soft on # cd ~yaasita</title>
    <link>https://yaasita.github.io/categories/soft/</link>
    <description>Recent content in soft on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 24 Dec 2019 17:58:35 +0900</lastBuildDate>
    
	<atom:link href="https://yaasita.github.io/categories/soft/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>再度hugoアップデート</title>
      <link>https://yaasita.github.io/2019/12/24/hugo-update2/</link>
      <pubDate>Tue, 24 Dec 2019 17:58:35 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/24/hugo-update2/</guid>
      <description>前回からまたアップデート
hugoのバージョンを 0.56.3 =&amp;gt; v0.62.0 まで上げた
注意点としては, v0.58.0 から .Pagesの挙動が変わっているので
以下の通り、.Site.RegularPages に変更する必要がある
Building sites … WARN 2019/12/23 17:34:34 In the next Hugo version (0.58.0) we will change how $home.Pages behaves. If you want to list all regular pages, replace .Pages or .Data.Pages with .Site.RegularPages in your home page template. あとインラインのHTMLがデフォルトで削除されるので使ってたらコレもconfig.tomlへ追記
[markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true hardWraps = true なんか最近hugoのアップデートがめんどくさくなってきたな。。。</description>
    </item>
    
    <item>
      <title>on_ac_powerコマンドについて</title>
      <link>https://yaasita.github.io/2019/08/16/on-ac-power/</link>
      <pubDate>Fri, 16 Aug 2019 04:45:45 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/16/on-ac-power/</guid>
      <description>debian10にした関係でLinuxネタが続く
PCがバッテリーで動いてるかどうか判定するのにon_ac_powerってコマンドがある
そんで、バッテリー駆動の場合は電力を節約したいので、anacronとかを動かなくする制御がはいってる
例えば、/etc/cron.daily/mlocate の場合
if which on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then ON_BATTERY=0 on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || ON_BATTERY=$? if [ &amp;quot;$ON_BATTERY&amp;quot; -eq 1 ]; then exit 0 fi fi  こんな感じでon_ac_powerが1を返したらバッテリー駆動と判断しすぐに処理を止めてしまう
んで LB-C110B っていうひと昔前のノートPCだとこの判定が狂ってしまい常にバッテリー駆動と判定されてしまった
このままだと永遠にlocateコマンドが使えないので、divertで退避させた
dpkg-divert --divert /sbin/on_ac_power.disable --rename /sbin/on_ac_power ln -s /bin/true /sbin/on_ac_power  おしまい</description>
    </item>
    
    <item>
      <title>各種サーバの中間証明書の扱い</title>
      <link>https://yaasita.github.io/2019/08/14/ssl-capath/</link>
      <pubDate>Wed, 14 Aug 2019 10:20:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/14/ssl-capath/</guid>
      <description>中間証明書をどう設定するか問題
postfix smtpd_tls_cert_file = /etc/letsencrypt/live/example.net/cert.pem smtpd_tls_key_file = /etc/letsencrypt/live/example.net/privkey.pem smtpd_tls_CAfile = /etc/letsencrypt/live/example.net/chain.pem  Let&#39;s Encryptの場合こんな感じ
smtpd_tls_CAfileに中間証明書を指定する
smtpd_tls_cert_fileにfullchain.pemを指定するやり方はNG
dovecot 10-ssl.conf
ssl_ca = &amp;lt;/etc/letsencrypt/live/example.net/chain.pem  これはダメ
この設定はクライアント証明書用ですので
正しくは、こんな感じに、まとめたやつを指定すればOK
ssl_cert = &amp;lt;/etc/letsencrypt/live/example.net/fullchain.pem  apache SSLCACertificateFileという設定はクライアント証明書用なのでここに入れない
SSLCertificateFile /etc/letsencrypt/live/example.net/fullchain.pem  dovecot同様に中間証明書もまとめて指定する
まとめ この問題はスマホのK-9 Mailでメール読もうとしたときに判明した
(突然CertPathValidatorExceptionって怒られた)
thunderbirdでメール読んでた時には発生しなかったのでなんだろなーと思ったんだけどこっちは多めにroot証明書入ってるみたいね

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   サーバー設定後はこんな感じで中間証明書まで確認したほうが良いかも
openssl s_client -connect example.org:465 -showcerts  thunderbirdだけで確認すると痛い目を見るよと言うお話でした</description>
    </item>
    
    <item>
      <title>hugoアップデート</title>
      <link>https://yaasita.github.io/2019/03/12/hugo-update/</link>
      <pubDate>Tue, 12 Mar 2019 23:00:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/03/12/hugo-update/</guid>
      <description>久々にhugoをアップデート v0.41 =&amp;gt; v0.54まで上げた
ワーニング潰し アップデートに伴い
.Prev と .Nextが非推奨になったぽい マニュアル, コミット
なのでこれはそれぞれ以下のように修正すればOK(意味が逆なので分かりにくいけど)
 .Prev =&amp;gt; .NextPage .Next =&amp;gt; .PrevPage  OGP設定 某会社でこのブログのRSSフィードをSlackに流していると聞いたので設定してみました
上手く表示できてますか？
修正箇所
themes/hugo-theme-geppaku/layouts/partials/header.html
 {{ if .IsHome }} &amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{{ .Site.Title }}&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;website&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ .Site.BaseURL }}&amp;quot; /&amp;gt; {{ else }} &amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{{ .Title }}&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;article&amp;quot; /&amp;gt; &amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ .Site.BaseURL }}{{ .Page.Dir }}&amp;quot; /&amp;gt; {{ end }} &amp;lt;meta property=&amp;quot;og:site_name&amp;quot; content=&amp;quot;{{ .</description>
    </item>
    
    <item>
      <title>最近使ってる集中アプリ</title>
      <link>https://yaasita.github.io/2019/02/08/concentration/</link>
      <pubDate>Fri, 08 Feb 2019 00:52:50 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/02/08/concentration/</guid>
      <description>いろいろ試してみた
 Forest: 広告が邪魔 Focus To-Do: 複雑でよく分からなかった ブロックタイマー: なんか画面が付きっぱなしになる FLIP: 勉強用かな操作がむずい Studyplus: なんかポモドーロぽいの使えなかった  で結局Focus To-DoのWindowsアプリ版を使ってる</description>
    </item>
    
    <item>
      <title>skypeのログフォーマットが変わってた</title>
      <link>https://yaasita.github.io/2018/12/02/skype2json/</link>
      <pubDate>Sun, 02 Dec 2018 01:28:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/12/02/skype2json/</guid>
      <description>のでちょっとスクリプト修正した
https://github.com/yaasita/skype2json
修正点  yarnじゃなくても良いと聞いたのでnpmにだけにした フォーマットが歴代合わせて3つあったので、3つスクリプト書いた(年代は適当) libに共通関数をまとめた  なんか新しいフォーマットだと
nsp_dataってカラムにjsonで突っ込んでるみたいね。json型が無いSQLiteのツライところ
まとめ ころころフォーマットが変わるけどSQLiteになってるからSkypeは簡単にバックアップ出来て良い
LINEはどうしたもんか</description>
    </item>
    
    <item>
      <title>vimとtranslate-shellを連携する</title>
      <link>https://yaasita.github.io/2018/11/23/translate/</link>
      <pubDate>Fri, 23 Nov 2018 00:54:50 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/23/translate/</guid>
      <description>translate-shellが便利だ
vimrcにこんな感じに書く
 英単語の意味をちょっと調べる  翻訳  なんか微妙に画面がバグってるけど、本当はちゃんと表示されてる
まとめ こういうちょっとした改善大事</description>
    </item>
    
    <item>
      <title>mitmproxyが便利</title>
      <link>https://yaasita.github.io/2018/11/10/mitmproxy/</link>
      <pubDate>Sat, 10 Nov 2018 03:22:31 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/11/10/mitmproxy/</guid>
      <description>とっても便利なmitmproxyを使ってみた
概要 こんな感じでHTTPSなサイトも中間に入りこんでくれる
（root証明証を予め信頼しておく必要がある)
browser &amp;lt;---(指定のCA鍵で再署名)---- mitmproxy &amp;lt;---(HTTPSを一旦解く)----- web server  インストール apt install mitmproxy  設定 プライベートCAをやってるなら
 /etc/ssl/demoCA/private/cakey.pem /etc/ssl/demoCA/cacert.pem  この２ファイルを結合する
こんな感じで mitmproxy-ca.pem って名前でどっかのディレクトリに置く
-----BEGIN ENCRYPTED PRIVATE KEY----- ... -----END ENCRYPTED PRIVATE KEY----- -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- 実行 こんな感じで実行できる &amp;ndash;view-filter で表示させたいURLを絞れる
(hogedirの中にmitmproxy-ca.pemが入ってる)
mitmproxy --set confdir=/path/to/hogedir --view-filter m3u  画面中ではVimぽいキーバインドで色々操作できる
リクエストを選んで、wでストリームを保存できる
dump mitmproxyだけだと長いURLとかは省略されちゃったりするので、完全なものを見る場合にmitmdumpを使う
# getだけ抽出 mitmdump -nr /tmp/save -w outfile &amp;quot;~m get&amp;quot; # リクエスト一覧 mitmdump -nr /tmp/save  まとめ HTTPSのデバッグ時にめっちゃ便利</description>
    </item>
    
    <item>
      <title>全文検索n-gram</title>
      <link>https://yaasita.github.io/2018/09/29/n-gram/</link>
      <pubDate>Sat, 29 Sep 2018 04:25:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/29/n-gram/</guid>
      <description>N-gramについて
検索とインデックスについて作った
検討資料用にどうぞ
https://gist.github.com/yaasita/ea31d7bbfc839fc859fd7d713800088b</description>
    </item>
    
    <item>
      <title>skypeの会話ログをjsonに</title>
      <link>https://yaasita.github.io/2018/09/25/skype-log/</link>
      <pubDate>Tue, 25 Sep 2018 00:56:22 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/25/skype-log/</guid>
      <description>skypeの会話履歴をJSONにしておくやつ作った
https://github.com/yaasita/skype2json
logはsqliteで保存されている
こちらによるとskype for windows 10とskype for windows desktopの保存場所が違う

こっちが最近のやつ
場所: %localappdata%\Packages\Microsoft.SkypeApp_kzf8qxf38zg5c\LocalState

昔のやつ
場所: C:\Users\username\AppData\Roaming\Skype\username\main.db
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;skype1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;skype1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;skype2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;skype2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>SSL証明書のchain検証</title>
      <link>https://yaasita.github.io/2018/09/23/verify-certificate-chain/</link>
      <pubDate>Sun, 23 Sep 2018 01:02:54 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/23/verify-certificate-chain/</guid>
      <description>以下のようなチェインを検証したい時
AddTrust |_ ca1 |_ ca2 |_ hoge  こんな感じにコマンドを打つ
openssl verify -trusted /etc/ssl/certs/AddTrust_External_Root.pem \ -untrusted ca/ca1.pem \ -untrusted ca/ca2.pem \ hoge.pem*  verify -CAfileを指定して検証する例を見るけど、
インストールされてるデフォルトのrootCAも見ちゃうから
-no-CAfile, -no-CApathで無効化しなきゃだったりするのでこっちの方が良さそう</description>
    </item>
    
    <item>
      <title>Hugoをアップデート</title>
      <link>https://yaasita.github.io/2018/09/16/hugo-new-version/</link>
      <pubDate>Sun, 16 Sep 2018 15:48:27 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/09/16/hugo-new-version/</guid>
      <description>なんかこんなプルリクも来てたのでthemeもちょいと修正
たまにはhugoのbuild logみてwarning潰してかないとだな</description>
    </item>
    
    <item>
      <title>ubuntu18.04でDKIM設定</title>
      <link>https://yaasita.github.io/2018/08/18/dkim/</link>
      <pubDate>Sat, 18 Aug 2018 17:40:23 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/08/18/dkim/</guid>
      <description>インストール apt install opendkim opendkim-tools  opendkim設定 mkdir /etc/postfix/dkim/ opendkim-genkey -D /etc/postfix/dkim/ -d example.com -s mail # -d ドメイン # -s セレクタ chgrp opendkim /etc/postfix/dkim/* chmod g+r /etc/postfix/dkim/*  /etc/opendkim.conf
Syslog	yes LogWhy Yes UMask	007 Canonicalization	relaxed/relaxed Mode	sv Socket inet:8891@localhost PidFile /var/run/opendkim/opendkim.pid OversignHeaders	From TrustAnchorFile /usr/share/dns/root.key UserID opendkim KeyTable file:/etc/postfix/dkim/keytable SigningTable file:/etc/postfix/dkim/signingtable  /etc/postfix/dkim/keytable
mail._domainkey.example.net example.net:mail:/etc/postfix/dkim/mail.private  /etc/postfix/dkim/signingtable
example.net mail._domainkey.example.net  反映
systemctl restart opendkim.service  postfix設定 以下追記</description>
    </item>
    
    <item>
      <title>クライアント証明書&#43;HTTP2</title>
      <link>https://yaasita.github.io/2018/07/29/h2-plus-client-auth/</link>
      <pubDate>Sun, 29 Jul 2018 16:36:57 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/07/29/h2-plus-client-auth/</guid>
      <description>SSLRequire は 非推奨みたいなので
クライアント証明書とIP制限を今風に書き直す
あとCNとかも検証するようにした
こんな感じ
&amp;lt;Directory /var/www&amp;gt; Options Indexes FollowSymLinks MultiViews ExecCGI SSLVerifyClient optional &amp;lt;RequireAny&amp;gt; Require ip 192.168.100.0/24 &amp;lt;RequireAll&amp;gt; Require ssl-verify-client Require expr &amp;quot;%{SSL_CLIENT_S_DN_CN} == &#39;hogeclient&#39;&amp;quot; &amp;lt;/RequireAll&amp;gt; &amp;lt;/RequireAny&amp;gt; &amp;lt;/Directory&amp;gt;  あと
Protocols http/1.1 h2  のようにhttp/1.1を先にしないと
curl: (92) HTTP/2 stream 1 was not closed cleanly: HTTP_1_1_REQUIRED (err 13)  こんなエラーになるので注意
参考リンク
 reqexprの説明 mod_ssl変数一覧  </description>
    </item>
    
    <item>
      <title>PerlでElasticsearch</title>
      <link>https://yaasita.github.io/2018/07/04/es-perl/</link>
      <pubDate>Wed, 04 Jul 2018 03:06:02 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/07/04/es-perl/</guid>
      <description>perlでElasticsearch
mojoliciousでの例
 </description>
    </item>
    
    <item>
      <title>クライアント証明書とIP制限</title>
      <link>https://yaasita.github.io/2018/05/26/client-auth/</link>
      <pubDate>Sat, 26 May 2018 03:49:43 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/05/26/client-auth/</guid>
      <description>外からはクライアント証明書を要求して、中からは素通しさせたいケース
Apache2.4ならこんな感じ
SSLCACertificateFile /etc/apache2/ssl/example.crt &amp;lt;Directory /var/www&amp;gt; Options Indexes FollowSymLinks MultiViews ExecCGI Require ip 192.168.100.0/24 SSLVerifyClient require Satisfy any &amp;lt;/Directory&amp;gt;  curlで確認
curl https://example.net --key client.key --cert cert.crt --http1.1  作るときは /usr/lib/ssl/misc/CA.pl -newreq とかで適当に作る
鍵とセットなら良いのでcommon nameとかは適当
参考リンク プライベートCA作るまで</description>
    </item>
    
    <item>
      <title>vimのterminalモード</title>
      <link>https://yaasita.github.io/2018/05/19/vim-terminal/</link>
      <pubDate>Sat, 19 May 2018 05:16:04 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/05/19/vim-terminal/</guid>
      <description>メモ
  tmuxパカパカ開くよりは良い気がする
  以下のマッピング追加してペーストできるようにした
 if has(&#39;terminal&#39;) tnoremap &amp;lt;C-T&amp;gt; &amp;lt;C-W&amp;gt;&amp;quot;&amp;quot; tnoremap &amp;lt;C-Q&amp;gt; &amp;lt;C-W&amp;gt;N endif    ubuntu18.04でもちょい古くてなんか挙動が少し違うから手動で入れた方が良い
  ビルド
 apt-get build-dep vim apt-get install libperl-dev python-dev python3-dev ruby-dev git clone --depth 1 git@github.com:vim/vim.git cd vim make make install    参考リンク
【(Neo)Vim】terminal mode のマッピングについての闇とその解決法
結論：すごく便利だと思います</description>
    </item>
    
    <item>
      <title>Apacheでリバースプロキシ</title>
      <link>https://yaasita.github.io/2018/02/04/apache-header/</link>
      <pubDate>Sun, 04 Feb 2018 16:27:56 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/02/04/apache-header/</guid>
      <description>Apacheでリバースプロキシするときこんな感じに書いた方が良いよという話
&amp;lt;VirtualHost *:443&amp;gt; ServerName example.net &amp;lt;Proxy *&amp;gt; Require all granted &amp;lt;/Proxy&amp;gt; ProxyRequests Off ProxyPreserveHost On ProxyPass / http://192.168.0.1:8080/ keepalive=On ProxyPassReverse / http://192.168.0.1:8080/ RequestHeader set X-Forwarded-Proto &amp;quot;https&amp;quot; RequestHeader unset X-Forwarded-For RequestHeader unset X-Forwarded-Server RequestHeader unset X-Forwarded-Host Include /path/to/common.conf &amp;lt;/VirtualHost&amp;gt;  X-Forwarded-Forとかを一旦unsetしないと、
X-Forwarded-Forとかをクライアント側から指定されると、追加されて判別が困難になる
curl -H &amp;quot;X-Forwarded-For: 1.2.3.4&amp;quot;  みたいな感じで指定されると
 x-forwarded-for: &amp;quot;1.2.3.4, 192.168.0.100&amp;quot;  こんな感じに追加されて http://192.168.0.1:8080 側にわたってしまう</description>
    </item>
    
    <item>
      <title>プライベートCA作るまで</title>
      <link>https://yaasita.github.io/2018/01/31/private-ca/</link>
      <pubDate>Wed, 31 Jan 2018 18:04:22 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/01/31/private-ca/</guid>
      <description>Debian9でやってみた
cd /etc/ssl /usr/lib/ssl/misc/CA.pl -newca /usr/lib/ssl/misc/CA.pl -newreq /usr/lib/ssl/misc/CA.pl -sign # /tmp/ca.pemを入れてもらう openssl x509 -outform PEM -in demoCA/cacert.pem -out /tmp/ca.pem # 変換 openssl x509 -outform PEM -in newcert.pem -out /etc/nginx/ssl/hogehoge.crt # パスフレーズ解除 openssl rsa -in newkey.pem -out /etc/nginx/ssl/hogehoge.key  データベースおかしくなったら
index.txt空っぽすればOK
rm demoCA/index.txt touch demoCA/index.txt  /etc/ssl/openssl.cnf は こんな感じ
証明書の管理は
chromeなら設定 =&amp;gt; 詳細設定 =&amp;gt; SSLの管理からやる
windowsの場合はファイル名を指定して実行 =&amp;gt; certlm.msc と同じこと
あと注意点として、chromeはsubjectAltNameを見るので注意
(EnableCommonNameFallbackForLocalAnchorsってやつを設定するとできるようだけど)</description>
    </item>
    
    <item>
      <title>GoogleHomeでPCつける</title>
      <link>https://yaasita.github.io/2018/01/14/google-home/</link>
      <pubDate>Sun, 14 Jan 2018 03:41:21 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/01/14/google-home/</guid>
      <description>Mojoliciousで受けてコマンド叩くだけ
IFTTTはこんな感じにして


Mojolicious側のコントローラはこんな感じで受けた
 喋りたくない時もあるので、JavaScriptでも叩けるようにした(適当な場所にHTML置いておいた)
function hogeop(){ postjson({key: &#39;huga&#39;}) } function postjson(j) { fetch(&amp;quot;/google&amp;quot;, { method: &amp;quot;POST&amp;quot;, headers: { &#39;Content-Type&#39;: &#39;application/json&#39; }, body: JSON.stringify(j) }).then(res =&amp;gt; res.json()).then(res =&amp;gt; { console.log(res) }); }  結論: こうやって家電を操作できるのは楽しい
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>systemd-nspawnアドベントカレンダー</title>
      <link>https://yaasita.github.io/2017/12/19/systemd-nspawn-adcal/</link>
      <pubDate>Tue, 19 Dec 2017 04:34:55 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/19/systemd-nspawn-adcal/</guid>
      <description>書きました
https://qiita.com/advent-calendar/2017/systemd-nspawn</description>
    </item>
    
    <item>
      <title>gpgでサブキーを指定して暗号化</title>
      <link>https://yaasita.github.io/2017/12/04/gpg-specify-subkey/</link>
      <pubDate>Mon, 04 Dec 2017 23:27:01 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/04/gpg-specify-subkey/</guid>
      <description>gpgで副鍵(subkey)を新しく作ったとする(addkey)
でいざ使うと思ったら、やむ負えない事情により古い副鍵で暗号化しなきゃいけなくなったとする
こんな感じの状態ね
pub rsa2048 2017-04-09 [SC] XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX uid [ultimate] yamasita &amp;lt;yamasita@example.net&amp;gt; sub rsa2048 2017-04-09 [E] sub elg2048 2017-12-04 [E] んで、普通にgpg -e で暗号化すると新しい elg2048 の方が使われてしまう
rsa2048を使いたくなったらこんな感じでrsa2048の方のIDを指定して暗号化する
gpg --recipient BBBBBBBBBBB12345! -v -e memo  IDは&amp;ndash;edit-keysとかやれば見れるお
あと、注意点として副鍵は追加しても古い鍵はしばらく残しておくこと
送信側がすぐ、新しい鍵を入れてくれるとも限らないし古い鍵で暗号化されたものを復号化できなくなる
主鍵は、副鍵を署名するだけのものであって、副鍵の秘密鍵は取っておかなきゃいけないのです</description>
    </item>
    
    <item>
      <title>TeratermからConEmuへ移行した</title>
      <link>https://yaasita.github.io/2017/12/02/teraterm-to-conemu/</link>
      <pubDate>Sat, 02 Dec 2017 04:36:08 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/12/02/teraterm-to-conemu/</guid>
      <description>長年使ってたTeratermからConEmuへ移行した
SSHクライアントはputtyを使ってる
WSL経由でも良かったんだけど、なんかVimのvisualモードで背景色が変わらなかったり表示が微妙だったので結局putty使った
良かった点  絵文字も表示できる タブが便利(TeratermもCollectorで出来るけどこっちの方が使いやすい) F1キーをリモート側に送るとかそういう設定がしやすい  微妙な点  Alt-Vでペーストしてたけどこれが使えない(設定方法が分からない)  まとめ ConEmu入れた後putty設定したり、微妙に面倒だけど使いやすい</description>
    </item>
    
    <item>
      <title>Teratermでreject clipbordのエラー</title>
      <link>https://yaasita.github.io/2017/11/16/teraterm-copy/</link>
      <pubDate>Thu, 16 Nov 2017 06:33:07 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/11/16/teraterm-copy/</guid>
      <description>teraterm + Tmuxでコピーをすると
Reject clipboard write access from remoteのエラーが出る
これはOSC52っていう制御文字を使ってリモートからOSのクリップボードを書き込むことができる機能がブロックされてるよって事
直すには Setup -&amp;gt; Addtional settings -&amp;gt; Control Sequenceタブ
と進んで該当箇所を設定すればOK
その下にNotifyの設定もある

参考リンク  リモートの tmux でコピーした内容のローカルのクリップボードへの反映   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>s3fsとIPアドレス制限だけのpublic bucket</title>
      <link>https://yaasita.github.io/2017/11/07/s3fs-public-bucket/</link>
      <pubDate>Tue, 07 Nov 2017 01:36:51 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/11/07/s3fs-public-bucket/</guid>
      <description>s3fsを使ってこんな感じのバケットポリシーのs3をマウントするときのやつ
(hogehogeバケットとその中身を特定IPアドレスの人に開放する)
{ &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;, &amp;quot;Id&amp;quot;: &amp;quot;Policy1509977001523&amp;quot;, &amp;quot;Statement&amp;quot;: [ { &amp;quot;Sid&amp;quot;: &amp;quot;Stmt1509976998204&amp;quot;, &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Principal&amp;quot;: &amp;quot;*&amp;quot;, &amp;quot;Action&amp;quot;: &amp;quot;s3:*&amp;quot;, &amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:s3:::hogehoge&amp;quot;, &amp;quot;Condition&amp;quot;: { &amp;quot;IpAddress&amp;quot;: { &amp;quot;aws:SourceIp&amp;quot;: &amp;quot;203.0.113.1&amp;quot; } } }, { &amp;quot;Sid&amp;quot;: &amp;quot;Stmt1509976998204&amp;quot;, &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Principal&amp;quot;: &amp;quot;*&amp;quot;, &amp;quot;Action&amp;quot;: &amp;quot;s3:*&amp;quot;, &amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:s3:::hogehoge/*&amp;quot;, &amp;quot;Condition&amp;quot;: { &amp;quot;IpAddress&amp;quot;: { &amp;quot;aws:SourceIp&amp;quot;: &amp;quot;203.0.113.1&amp;quot; } } } ] }  んでs3fsはこんな感じ
s3fs -o public_bucket=1,rw,allow_other,umask=0022,endpoint=ap-northeast-1,default_acl=public-read hogehoge /mnt  public_bucketがポイント</description>
    </item>
    
    <item>
      <title>S/MIMEの設定</title>
      <link>https://yaasita.github.io/2017/08/12/smime/</link>
      <pubDate>Sat, 12 Aug 2017 17:25:39 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/08/12/smime/</guid>
      <description>StartSSL CSR作る
emailaddressにS/MIME設定したいアドレスを入れる
openssl req -newkey rsa:2048 -keyout yourname.key -out yourname.csr  証明書が送られてくるのでこんな感じでまとめて
-----BEGIN PRIVATE KEY----- ... -----END PRIVATE KEY----- -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  pkcs12に変換してthunderbirdにインポートする
openssl pkcs12 -export -in sakusei.pem -out email.pfx  なんか送られてきた中間証明書がCRLFとLFが混在してるので直した
チェーンはこんな感じになってた
StartCom Certification Authority |_ StartCom Certification Authority ECC |_ StartCom CC2 ICA |_ 自分のメールアドレス  そういやCAAレコードを検証しなかったけどいいのかね？
でここまでやって気づいたんだけどStartComの証明書が失効扱いで全然検証通らなかった
これはGmailも同じなのでStartCom使うのは中止
COMODO 今度COMODOを使うことになったんだけど既にChromeだとKEYGEN要素が使えないらしくFirefoxでアクセスするしかない
(コードもselect[_moz-type=&amp;rdquo;-mozilla-keygen&amp;rdquo;]になってるし)
こっちはフォームから申請して、リンククリックすればすぐに証明書がFirefoxに入るのでそれをエクスポートしてthunderbirdに入れればOK
チェーンはこんな感じ
COMODO RSA Certification Authority |_COMODO RSA Client Authentication and Secure Email CA |_ 自分のメールアドレス  まとめ Let&#39;s EncryptがS/MIME対応してほしい</description>
    </item>
    
    <item>
      <title>apacheのログフォーマット</title>
      <link>https://yaasita.github.io/2017/07/22/apache-log/</link>
      <pubDate>Sat, 22 Jul 2017 17:53:24 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/07/22/apache-log/</guid>
      <description>apacheのログフォーマットはJSONにしておいた方がパースが楽という話
こんな感じにする
LogFormat &amp;quot;\ { \ \&amp;quot;host\&amp;quot;:\&amp;quot;%V\&amp;quot;, \ \&amp;quot;method\&amp;quot;:\&amp;quot;%m\&amp;quot;, \ \&amp;quot;port\&amp;quot;:\&amp;quot;%p\&amp;quot;, \ \&amp;quot;processingTime\&amp;quot;:\&amp;quot;%D\&amp;quot;, \ \&amp;quot;protocol\&amp;quot;:\&amp;quot;%H\&amp;quot;, \ \&amp;quot;query\&amp;quot;:\&amp;quot;%q\&amp;quot;, \ \&amp;quot;referer\&amp;quot;:\&amp;quot;%{Referer}i\&amp;quot;, \ \&amp;quot;remoteIP\&amp;quot;:\&amp;quot;%a\&amp;quot;, \ \&amp;quot;request\&amp;quot;:\&amp;quot;%U\&amp;quot;, \ \&amp;quot;responseByte\&amp;quot;:\&amp;quot;%B\&amp;quot;, \ \&amp;quot;status\&amp;quot;:\&amp;quot;%&amp;gt;s\&amp;quot;, \ \&amp;quot;time\&amp;quot;:\&amp;quot;%t\&amp;quot;, \ \&amp;quot;unixtime\&amp;quot;:\&amp;quot;%{%s}t\&amp;quot;, \ \&amp;quot;userAgent\&amp;quot;:\&amp;quot;%{User-agent}i\&amp;quot;, \ \&amp;quot;user\&amp;quot;:\&amp;quot;%u\&amp;quot; \ }&amp;quot; \ leapache  吐き出し
CustomLog ${APACHE_LOG_DIR}/access-json.log leapache  https://blog.logentries.com/2014/08/json-logging-in-apache-and-nginx-with-logentries/</description>
    </item>
    
    <item>
      <title>gpg鍵を変えた</title>
      <link>https://yaasita.github.io/2017/04/09/update-gpg-key/</link>
      <pubDate>Sun, 09 Apr 2017 23:28:13 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/04/09/update-gpg-key/</guid>
      <description>https://keybase.io/yaasita
有効期限を付けて1年毎に交換するのは止めよう
keybase.ioの更新がめんどくさすぎる
失効証明書だけ取っておいてどっか保存しておけば十分な気がしてきた
ちなみに一回鍵消してもう一回連携やりなおしたら、Invitations が 24 まで増えたんだけどこれ無限増殖できるのでは・・・</description>
    </item>
    
    <item>
      <title>Vimの副ファイル</title>
      <link>https://yaasita.github.io/2017/03/30/vim-alternate-file/</link>
      <pubDate>Thu, 30 Mar 2017 01:46:13 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/03/30/vim-alternate-file/</guid>
      <description>なんか検索に引っかからないのでメモ
英語で the alternate file ってやつを取るときは Ctrl-^コマンドでやる
日本語配列だとCtrl-6かな
日本語ヘルプだと代替ファイルって訳になってるけど
E23: 副ファイルはありません  のエラーになるんだよな
というわけで
alternate file = 代替ファイル = 副ファイル
という認識で</description>
    </item>
    
    <item>
      <title>DockerでAUFSを使わない</title>
      <link>https://yaasita.github.io/2017/03/21/do-not-use-aufs/</link>
      <pubDate>Tue, 21 Mar 2017 23:06:46 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/03/21/do-not-use-aufs/</guid>
      <description>AUFSっていうか/var/lib/dockerに置きたくないとかそういう話
Dockerでもsystemd-nspawnよろしくそのディレクトリで即座にコンテナ上げたいとき
 要するに /proc, /dev, /sys, /net あたりを外して全部bindしちゃえばよかった</description>
    </item>
    
    <item>
      <title>Vimのエンコード周り</title>
      <link>https://yaasita.github.io/2017/02/17/vim-encodeing/</link>
      <pubDate>Fri, 17 Feb 2017 23:56:59 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/02/17/vim-encodeing/</guid>
      <description>下図参照
https://yaasita.tumblr.com/post/157354717792



 function callback(data){ gdata = data.response.posts[0].photos; var photos = data.response.posts[0].photos; for(var i=0;i </description>
    </item>
    
    <item>
      <title>ansibleで作ったロール</title>
      <link>https://yaasita.github.io/2017/01/09/my-ansible-role/</link>
      <pubDate>Mon, 09 Jan 2017 16:24:41 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/01/09/my-ansible-role/</guid>
      <description>成果物  ec2でスワップファイル置くとかするやつ  https://github.com/yaasita/ansible_role_amazon-ec2   aptのproxy設定  https://github.com/yaasita/ansible_role_apt-proxy   ブラックホールメールサーバ作るときの設定  https://github.com/yaasita/ansible_role_blackhole-postfix   adminユーザ作るとき  https://github.com/yaasita/ansible_role_admin-server   centosでよくやる設定  https://github.com/yaasita/ansible_role_common_centos   Ubuntuでよくやる設定  https://github.com/yaasita/ansible_role_common_ubuntu   Dockerコンテナにするときによくやる設定  https://github.com/yaasita/ansible_role_docker-care   munin-node入れるとき  https://github.com/yaasita/ansible_role_munin   mysql  https://github.com/yaasita/ansible_role_mysql   nagios nrpe  https://github.com/yaasita/ansible_role_nagios-nrpe   ネットワーク設定  https://github.com/yaasita/ansible_role_network   proxy設定(主にaptの)  https://github.com/yaasita/ansible_role_proxy   railsの初期設定  https://github.com/yaasita/ansible_role_rails   rbenv  https://github.</description>
    </item>
    
    <item>
      <title>smplayerでリピート再生</title>
      <link>https://yaasita.github.io/2016/08/27/smplayer/</link>
      <pubDate>Sat, 27 Aug 2016 14:33:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/08/27/smplayer/</guid>
      <description>ずっとループして再生
 再生(P) → A-Bセクション(A) → 繰り返し(R)  </description>
    </item>
    
    <item>
      <title>s3fs使う</title>
      <link>https://yaasita.github.io/2016/06/22/s3fs/</link>
      <pubDate>Wed, 22 Jun 2016 13:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/06/22/s3fs/</guid>
      <description>s3fsはamazon S3をファイルしすてむのように使うやつ
ただ遅い
基本ここ見てやる
https://github.com/s3fs-fuse/s3fs-fuse/wiki/Installation-Notes
今回はCeontOS6を対象
# paco入れておく yum install paco # コンパイルに必要なもの入れる yum install -y gcc libstdc++-devel gcc-c++ curl-devel libxml2-devel openssl-devel mailcap # fuse wget https://github.com/libfuse/libfuse/releases/download/fuse_2_9_4/fuse-2.8.5.tar.gz ./configure make paco -lD &#39;make install&#39; # /usr/local/lib 追記 vi /etc/ld.so.conf ldconfig # s3fs wget http://s3fs.googlecode.com/files/s3fs-1.74.tar.gz tar xvaf s3fs-1.74.tar.gz cd s3fs-1.74/ autoreconf --install export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure --prefix=/usr make paco -lD &#39;make install&#39; # mount s3fs hoge-bucket /s3 -o rw,allow_other,uid=501,gid=501,default_acl=public-read su - apps cd /s3 date &amp;gt; date.</description>
    </item>
    
    <item>
      <title>リアルタイム監視ソフトnetdata</title>
      <link>https://yaasita.github.io/2016/04/25/netdata/</link>
      <pubDate>Mon, 25 Apr 2016 23:24:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/04/25/netdata/</guid>
      <description>https://github.com/firehol/netdata
インストール
https://github.com/firehol/netdata/wiki/Installation
# 起動 /usr/sbin/netdata # 見てみる http://192.168.0.38:19999/  </description>
    </item>
    
    <item>
      <title>ファイル同期ソフトSyncthing</title>
      <link>https://yaasita.github.io/2016/04/25/syncthing/</link>
      <pubDate>Mon, 25 Apr 2016 23:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/04/25/syncthing/</guid>
      <description>ファイル同期ソフトSyncthingを試してみる
公式
https://syncthing.net/
Go言語で出来ていてクロスプラットフォーム
Androidでも動く
同様のソフトにBitTorrent Syncがあるみたいだけどこっちのほうが良さそう
（同期ディレクトリに上限がないため）
こんな感じ
./syncthing -gui-address=&amp;quot;192.168.0.10:3184&amp;quot; -no-browser  </description>
    </item>
    
    <item>
      <title>Git-itやってみた</title>
      <link>https://yaasita.github.io/2016/04/24/git-it/</link>
      <pubDate>Sun, 24 Apr 2016 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/04/24/git-it/</guid>
      <description>日本語も選択できるElectron製のアプリで
ステップバイステップで勉強できる
ここのリリースページからバイナリを落として実行する
https://github.com/jlord/git-it-electron
結果
http://yaasita.github.io/patchwork/
参考リンク
 Git-it – 手を動かしながら習得できる日本語対応のGit/GitHub学習アプリ  http://www.softantenna.com/wp/review/git-it/   プルリク練習用のリポジトリ  https://github.com/jlord/patchwork   結果確認  http://jlord.us/patchwork/    </description>
    </item>
    
    <item>
      <title>素因数分解の話</title>
      <link>https://yaasita.github.io/2016/01/11/factor/</link>
      <pubDate>Mon, 11 Jan 2016 02:20:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/01/11/factor/</guid>
      <description>素因数分解してくれるサービス
http://factordb.com/
自分のSSH鍵がリストされてないか確認してみる
# 公開鍵の modulus ssh-keygen -m PKCS8 -e -f authorized_keys &amp;gt; kagi openssl rsa -pubin -inform PEM -text -noout &amp;lt; kagi &amp;gt; modulus # 秘密鍵の modulus とか prime1, prime2の確認 openssl rsa -text -noout -in ~/.ssh/id_rsa  こんな感じのスクリプトで10進数にすればOK
perlで大きめの数値計算する例も
 載ってない一安心
  http://goo.gl/Qqaed5
  http://goo.gl/yKVyUH
  参考リンク
 TeslaCrypt（vvvウイルス）によって暗号化されたファイルの復号手順メモ    </description>
    </item>
    
    <item>
      <title>docker composeインストール</title>
      <link>https://yaasita.github.io/2015/12/31/compose/</link>
      <pubDate>Thu, 31 Dec 2015 18:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/12/31/compose/</guid>
      <description>docker-composeもcheckinstallでdebパッケージにしといた
https://goo.gl/MKXvhm
Makefile
install: chmod +x bin/docker-compose cp bin/docker-compose /usr/local/bin/ cp bash/docker-compose /etc/bash_completion.d/  </description>
    </item>
    
    <item>
      <title>checkinstallでdocker-machineをパッケージに</title>
      <link>https://yaasita.github.io/2015/12/30/checkinstall/</link>
      <pubDate>Wed, 30 Dec 2015 03:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/12/30/checkinstall/</guid>
      <description>debパッケージにするとアンインストールが楽になる
 https://github.com/docker/machine https://goo.gl/X5Njaz  以下のMakefileを作ってcheckinstallコマンドでおｋ
bash補完はこの辺
docker-machine-0.5.5/ ├── Makefile ├── docker-machine ├── docker-machine-prompt.bash ├── docker-machine-wrapper.bash └── docker-machine.bash  Makefile
 </description>
    </item>
    
    <item>
      <title>handbrakeでISOをエンコード</title>
      <link>https://yaasita.github.io/2015/08/25/handbrake/</link>
      <pubDate>Tue, 25 Aug 2015 00:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/08/25/handbrake/</guid>
      <description>Linuxで動画のエンコード/リッピングするとき
apt-get handbreak  handbrake-gtk
で起動して、左側のソース選んで
開始でOK
あんま難しくない
http://yaasita.tumblr.com/post/127482624497 </description>
    </item>
    
    <item>
      <title>saslauthd-debian</title>
      <link>https://yaasita.github.io/2015/07/26/saslauthd-debian/</link>
      <pubDate>Sun, 26 Jul 2015 02:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/07/26/saslauthd-debian/</guid>
      <description>なんか Debian Jessie(8.1)のsaslauthdのsystemd定義が書かれてない気がする
なので自動起動に設定したかったら自分で書く感じで
/etc/systemd/system/saslauthd.service
 みたいな定義を書いて
systemctl daemon-reload systemctl enable saslauthd.service systemctl start saslauthd.service  </description>
    </item>
    
    <item>
      <title>MySQLの地図情報</title>
      <link>https://yaasita.github.io/2015/05/31/mysql-gis/</link>
      <pubDate>Sun, 31 May 2015 01:58:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/05/31/mysql-gis/</guid>
      <description>MySQLのGIS回り
こんな感じで使うぽい
# インサート insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;旭鮨総本店 新宿住友ビル50F店&#39; ,GeomFromText(&#39;POINT(35.691421 139.692595)&#39;) ); insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;久兵衛 京王プラザホテル店&#39; ,GeomFromText(&#39;POINT(35.689685 13 9.694664)&#39;) ); insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;白金寿司&#39; ,GeomFromText(&#39;POINT(35.693417 139.687282)&#39;) ); insert into `gis_tbl` ( `shop_name` , `latlng` ) values ( &#39;喜与し&#39; ,GeomFromText(&#39;POINT(35.692192 139.742396)&#39;) ); # 現在の位置から近い順に表示 コンシェリア西新宿= 35.692777 139.687362 select shop_name, GLength( GeomFromText( concat(&#39;LineString(35.</description>
    </item>
    
    <item>
      <title>Meteor チュートリアル 01</title>
      <link>https://yaasita.github.io/2015/05/10/meteor-tutorial01/</link>
      <pubDate>Sun, 10 May 2015 00:28:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/05/10/meteor-tutorial01/</guid>
      <description>話題のMeteorを触ってみた
discovermeteorっていうチュートリアル本があるのでやってみる
なんか原文は有料になってる気がするけど翻訳版は読めるみたい
http://ja.discovermeteor.com/
とりあえず最初の方だけ
Getting Started インストール
途中でsudoするので出来るようにしておく
curl https://install.meteor.com | sh  最初に以下のコマンドを発行して作る
meteor create microscope  ちなみにこの.meteor/.gitignoreに書かれてる
.meteor/.local/の中を消せばリセットされる
パッケージの追加
meteor add mizzao:bootstrap-3 meteor add underscore  ディレクトリ追加
mkdir server client public lib  実行について
 server =&amp;gt; サーバ上でのみ実行 client =&amp;gt; クライアント上でのみ実行 それ以外はどちらでも動く publicには静的ファイルを置く libはどのファイルよりも先に実行される main.*というファイル名は一番最後に実行される  CSSを追加
mkdir client/stylesheets vi client/stylesheets/style.css  https://github.com/yaasita/meteor-microscope/tree/88cc746c372b13dae6a669c014c764320a8e776e
Deployment deployしてみる
meteor deploy yaasita.meteor.com  なんかこれでできるぽい
modulusというのを使うのがいいらしい
npm install -g modulus ndenv rehash modulus login modulus project create  modulusでmongodb使うにはダッシュボードからDATABASESを選んでいける</description>
    </item>
    
    <item>
      <title>Linuxでスクリーンショット取る</title>
      <link>https://yaasita.github.io/2015/04/18/linux-screenshot/</link>
      <pubDate>Sat, 18 Apr 2015 02:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/18/linux-screenshot/</guid>
      <description>shutterというのがよさ気
apt-get install shutter  http://www.xmisao.com/2014/02/07/get-screenshot-on-linux-by-shutter.html
他にxwd使う方法もある
# クリックしたウィンドウ xwd | convert - hoge.png xwd -root | convert - desktop.png  http://www.xmisao.com/2013/09/17/linux-xwindow-screenshot.html</description>
    </item>
    
    <item>
      <title>Linuxのクリップボードマネージャ</title>
      <link>https://yaasita.github.io/2015/04/18/linux-clipboard-manager/</link>
      <pubDate>Sat, 18 Apr 2015 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/18/linux-clipboard-manager/</guid>
      <description>diodon apt-get install diodon  初期設定はCtrl + Alt + vで呼び出し
Preferenceから以下の設定を直した
 Automatically paste selected item  自動ペーストをやめる   PluginsのApplication Indicatorのチェックを外す  なんかCtrl-Vが使えなくなったりするので使うのやめた
klipper KDEのやつ
apt-get install klipper  初期はShift+Zになってるので設定からなおす
全般の選択とクリップボード→選択を無視する
ってやつやると選択しただけでクリップボードに入るのを抑止
できる</description>
    </item>
    
    <item>
      <title>boxesっていうソフト</title>
      <link>https://yaasita.github.io/2015/03/29/boxes/</link>
      <pubDate>Sun, 29 Mar 2015 03:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/03/29/boxes/</guid>
      <description>vimでも使える
apt-get install boxes  Visual Modeで選択して
!boxes -d shell  とかやる
参考リンク 毎日のスクリプト作成にちょっとしたコダワリを加えるboxes</description>
    </item>
    
    <item>
      <title>sshuttleで簡易VPN</title>
      <link>https://yaasita.github.io/2015/03/15/sshuttle/</link>
      <pubDate>Sun, 15 Mar 2015 03:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/03/15/sshuttle/</guid>
      <description>こんな感じで接続する
sshuttle -r hogeuser@hoge-server 10.0.0.0/16 --dns  bash-completionが利かないのが不便なので、
sshなりを流用すればOK
これでいい感じにiptablesを設定してNAT通ししてくれる
便利</description>
    </item>
    
    <item>
      <title>LinuxでPDF編集ソフトまとめ</title>
      <link>https://yaasita.github.io/2015/01/04/linux-pdf/</link>
      <pubDate>Sun, 04 Jan 2015 00:17:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/01/04/linux-pdf/</guid>
      <description>libreoffice-pdfimport libreofficeでPDF編集できる
なんか変なところで逆さまになったり微妙だった
でもUIはLibreofficeの感覚で使えるので今後に期待
pdfchain pdftkのGUIフロントエンド
コマンドラインでやった方が良いかな
pdfmod LinuxでPDF編集するならこれが一番いいかもしれない
ページの入れ替え、回転とかできる
左サイドバーにページ一覧が出たらよかったなぁ
pdfsam Javaで動くGUIのPDF編集ソフト
なんか難しくてよくわからなかった
pdfshuffler pdfmodに似てる感じのPDF編集ソフトこっちも直感的で使いやすい
pdfmodに比べて重い気がする
機能も若干少な目
pdftk コマンドライン(CUI)で使うPDF編集ソフト
結合とかはGUIだとうまくできないので、こっちでやった方が良さげ</description>
    </item>
    
    <item>
      <title>chromeのキャッシュから画像引っ張って保存する</title>
      <link>https://yaasita.github.io/2014/11/15/chrome-chache-jpg/</link>
      <pubDate>Sat, 15 Nov 2014 22:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/11/15/chrome-chache-jpg/</guid>
      <description>キャッシュはC:\Users\hogeuser\AppData\Local\Google\Chrome\User Data\Default\Cacheに保存されている
そっから引っ張ってきてLinuxとかで以下のコマンドで変換する
file f_000* | grep JPEG | perl -F: -nlae &#39;print $F[0]&#39; | xargs -i mv {} {}.jpg  Twitterの画像引っ張って来るためにやった
本当はキャッシュを削除して該当のページだけを見てから保存する方法がいいのかも</description>
    </item>
    
    <item>
      <title>Onenoteでオートコレクトの設定</title>
      <link>https://yaasita.github.io/2014/10/30/onenote-autocorrect/</link>
      <pubDate>Thu, 30 Oct 2014 00:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/30/onenote-autocorrect/</guid>
      <description>ファイル⇒オプション開いて
文章校正⇒オートコレクトのオプション
https://yaasita.tumblr.com/post/101260507767  https://yaasita.tumblr.com/post/101260507767</description>
    </item>
    
    <item>
      <title>フリーのPDF編集ソフト</title>
      <link>https://yaasita.github.io/2014/10/26/master-pdf-editor/</link>
      <pubDate>Sun, 26 Oct 2014 05:49:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/26/master-pdf-editor/</guid>
      <description>Master PDF Editor
http://code-industry.net/get.pdfeditor.php
Linux版もあっていい感じ</description>
    </item>
    
    <item>
      <title>MySQL Workbench入りのDockerイメージ</title>
      <link>https://yaasita.github.io/2014/10/22/mysql-workbench/</link>
      <pubDate>Wed, 22 Oct 2014 23:56:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/22/mysql-workbench/</guid>
      <description>https://registry.hub.docker.com/u/yaasita/docker-mysql/
使い方
docker run -d -p 22 -v /tmp:/tmp mysql /usr/bin/supervisord ssh localhost -p49153 export DISPLAY=192.168.0.2:0 mysql-workbench  </description>
    </item>
    
    <item>
      <title>dockerでpukiwiki</title>
      <link>https://yaasita.github.io/2014/10/14/docker-pukiwiki/</link>
      <pubDate>Tue, 14 Oct 2014 00:25:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/14/docker-pukiwiki/</guid>
      <description>dockerでpukiwiki
https://registry.hub.docker.com/u/yaasita/docker-pukiwiki/</description>
    </item>
    
    <item>
      <title>Dockerでrep2を動かす</title>
      <link>https://yaasita.github.io/2014/10/13/docker_rep2/</link>
      <pubDate>Mon, 13 Oct 2014 22:08:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/10/13/docker_rep2/</guid>
      <description>https://registry.hub.docker.com/u/yaasita/docker-rep2/</description>
    </item>
    
    <item>
      <title>modern.ieのVMファイルの解凍</title>
      <link>https://yaasita.github.io/2014/09/23/modern-ie/</link>
      <pubDate>Tue, 23 Sep 2014 22:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/23/modern-ie/</guid>
      <description>モダンIEというIEテスト用のVM配ってるサイト
sfxの解凍はunrarでできた
unrar e IE11.Win7.ForLinuxVirtualBox.part1.sfx  https://www.modern.ie/ja-jp
Windows7の日本語化について
 WindowsUpdateでオプション選択してLanguage Pack入れる コントロールパネルの Clock, Language, and Regionを選択 TimeZone変更  http://qiita.com/hnakamur/items/5f2f9e817dd0de60abb2</description>
    </item>
    
    <item>
      <title>squirrelmailっていうWebメールクライアント</title>
      <link>https://yaasita.github.io/2014/09/21/squirrelmail/</link>
      <pubDate>Sun, 21 Sep 2014 01:56:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/21/squirrelmail/</guid>
      <description>いわゆるweb mailソフト
IMAPしか対応してないけど、localhost以外のメールも読める
Dockerイメージにしてみた
https://registry.hub.docker.com/u/yaasita/docker-squirrelmail/
sshで入って以下のコマンドで設定できる
/etc/squirrelmail/conf.pl  設定箇所  IMAPの接続情報 IMAPのTLS接続の有無  2. Server Settings =&amp;gt; A. Update IMAP Settings   言語  10. Languages  1. Default Language =&amp;gt; ja_JP 2. Default Charset =&amp;gt; iso-2022-jp      参考リンク  http://centossrv.com/squirrelmail.shtml  </description>
    </item>
    
    <item>
      <title>自分の声を遅れて聞こえさせて話し難くなる</title>
      <link>https://yaasita.github.io/2014/08/31/speech-jammer/</link>
      <pubDate>Sun, 31 Aug 2014 02:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/31/speech-jammer/</guid>
      <description>SpeechJammerLiteというらしい
https://sites.google.com/site/qurihara/home/speechjammer/lt</description>
    </item>
    
    <item>
      <title>teraterm越しに特殊キーを送る</title>
      <link>https://yaasita.github.io/2014/08/24/teraterm-keycode/</link>
      <pubDate>Sun, 24 Aug 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/24/teraterm-keycode/</guid>
      <description>キーをどこで奪われてるのかまず探す
teratem -&amp;gt; bash -&amp;gt; app  teratemでキーを取られているならKEYBOARD.CNFの末尾に以下のように追記する
User(連番)で追記する書式についてはteratemのヘルプ参照
User3=1037,0,$1E User4=1040,0,$11  この例だとUser3でvimの副ファイル切り替え(:h ctrl-^)を出来るようにしている
User4ではDockerのデタッチに使うCtrl-qを通している
Ctrl-qについてはbash側でも取られるのでそっちも変更する
# キー設定を参照 # stopに割り当てられてるのが分かる stty -a # startをundefにする(ついでにstopも) stty start undef stty stop undef  </description>
    </item>
    
    <item>
      <title>HDDの故障が疑われるときにやったこと</title>
      <link>https://yaasita.github.io/2014/08/16/hdd-fail/</link>
      <pubDate>Sat, 16 Aug 2014 19:10:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/16/hdd-fail/</guid>
      <description>なんかrsyncでバックアップしようとすると以下のエラーが出るようになった
rsync: read errors mapping &amp;quot;/home/yamasita/Desktop/hogehoge.dat&amp;quot;: Input/output error (5) ERROR: /home/yamasita/Desktop/hogehoge.dat failed verification -- update discarded.  まずbadblocksで調べてみる
badblocks /home/yamasita/Desktop/hogehoge.dat  ダメそう
とりあえず、fsckをかけてみる
/のパーティションなのでfsckの間隔を調整
dumpe2fs -h /dev/sda1 | egrep -i &#39;check|mount count&#39; tune2fs -i 30d /dev/sda1  これでとりあえず不良セクタ退避させた
過去記事
HDDが故障したときにやったこと
参考リンク
http://nfolamp.wordpress.com/2010/10/25/dumpe2fstune2fs-manipulating-the-ext-fs-auto-check-parameters/</description>
    </item>
    
    <item>
      <title>youtubeとかダウンロードできるClipGrab</title>
      <link>https://yaasita.github.io/2014/08/11/clipgrab/</link>
      <pubDate>Mon, 11 Aug 2014 06:30:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/clipgrab/</guid>
      <description>動画ファイルダウンロードソフト
動画保存に便利
今までyoutubeとかダウンロードするときはDownloadHelper使ってたんですが、
こっちのほうが良いことが分かった
以下のリンクにLinuxで開けばバイナリがダウンロードできる
http://clipgrab.de/ja
apt-get install libqtwebkit4  しておけば多分動く
サポートしているサイト一覧
http://clipgrab.org/faqs/supported-sites</description>
    </item>
    
    <item>
      <title>vimでキータイプ音を鳴らす</title>
      <link>https://yaasita.github.io/2014/08/11/vim-sound/</link>
      <pubDate>Mon, 11 Aug 2014 06:06:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/vim-sound/</guid>
      <description>.gvimrc
autocmd! TextChangedI * silent! execute &amp;quot;!aplay /tmp/wav/seq1_key1.wav &amp;amp;&amp;quot;  参考
http://tekkoc.tumblr.com/post/63418217996/vim
効果音あるところ
http://www.skipmore.com/sound/index_04.html</description>
    </item>
    
    <item>
      <title>書くことに集中できるエディタOmmWriter</title>
      <link>https://yaasita.github.io/2014/08/11/ommwriter/</link>
      <pubDate>Mon, 11 Aug 2014 05:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/11/ommwriter/</guid>
      <description>書いているときに音楽がなったり、キーボード操作音とかなったりする
公式
今は有料版しかなかったので$5ほど支払ってみた
なんかキーボードの操作音は音が小さいので調整したほうがいいかもしれない
調整方法はC:\Program Files (x86)\HerraizSoto\OmmWriter\Resources\Soundにあるwavを増幅させるとよい
audacityならwavを開いてエフェクト⇒増幅でできる
https://yaasita.tumblr.com/post/94368458857

LinuxだとFocusWriterってのが近そう
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>vimのunite-webcolorname使ってみた</title>
      <link>https://yaasita.github.io/2014/07/20/webcolorname-vim/</link>
      <pubDate>Sun, 20 Jul 2014 03:35:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/webcolorname-vim/</guid>
      <description>設定
NeoBundle &#39;Shougo/unite.vim&#39; NeoBundle &#39;pasela/unite-webcolorname&#39;  使い方
 </description>
    </item>
    
    <item>
      <title>vim-startifyを使ってみる</title>
      <link>https://yaasita.github.io/2014/07/20/vim-startify/</link>
      <pubDate>Sun, 20 Jul 2014 03:11:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/vim-startify/</guid>
      <description>https://github.com/mhinz/vim-startify

設定
NeoBundle &#39;mhinz/vim-startify&#39; let g:startify_list_order = [&#39;files&#39;, &#39;bookmarks&#39;, &#39;dir&#39;] let g:startify_files_number = 20 let g:startify_custom_header = \ map([&#39;( ^ o ^ ) / &amp;lt; vim &#39;.v:version]+split(system(&#39;date&#39;), &#39;\n&#39;),&#39;&amp;quot; &amp;quot;.v:val&#39;) + [&#39;&#39;,&#39;&#39;] let g:startify_bookmarks = split(system(&#39;awk &amp;quot;{print \$2}&amp;quot; ~/.NERDTreeBookmarks&#39;),&#39;\n&#39;)   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>lightline.vimを使ってみた</title>
      <link>https://yaasita.github.io/2014/07/20/lightline/</link>
      <pubDate>Sun, 20 Jul 2014 00:12:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/20/lightline/</guid>
      <description>https://github.com/itchyny/lightline.vim
こんな感じになる
https://yaasita.tumblr.com/post/92242385452

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;lightline&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;lightline&#34;).src = photos[0].original_size.url; }   設定
NeoBundle &#39;itchyny/lightline.vim&#39; let g:lightline = { \ &#39;active&#39;: { \ &#39;left&#39;: [ [ &#39;mode&#39;, &#39;paste&#39; ], \ [ &#39;readonly&#39;, &#39;filename&#39;, &#39;modified&#39; ], \ [ &#39;fugitive&#39; ] \ ], \ &#39;right&#39;: [ [ &#39;lineinfo&#39; ], \ [ &#39;percent&#39; ], \ [ &#39;filetype&#39;, &#39;fileencoding&#39;, &#39;fileformat&#39; ] ] \ }, \ &#39;component&#39;: { \ &#39;fugitive&#39;: &#39;%{exists(&amp;quot;*fugitive#statusline()&amp;quot;)?</description>
    </item>
    
    <item>
      <title>vimの書き込みと同時に別ファイルに書き出す</title>
      <link>https://yaasita.github.io/2014/07/19/vim-backup-write/</link>
      <pubDate>Sat, 19 Jul 2014 22:48:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/19/vim-backup-write/</guid>
      <description>vimrcを書いたら別のファイルにも書き出す例
 </description>
    </item>
    
    <item>
      <title>HTMLファイルをパースするコマンド</title>
      <link>https://yaasita.github.io/2014/07/18/html-xml-utils/</link>
      <pubDate>Fri, 18 Jul 2014 01:39:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/18/html-xml-utils/</guid>
      <description>apt-get install html-xml-utils curl http://www.yahoo.co.jp/ &amp;gt; /tmp/yahoo hxselect -c html &amp;lt; /tmp/yahoo  参考リンク
 http://blog.ueda.asia/?p=2417 http://unix.stackexchange.com/questions/6389/parse-html-on-linux  </description>
    </item>
    
    <item>
      <title>dockerでatom</title>
      <link>https://yaasita.github.io/2014/07/13/docker-atom/</link>
      <pubDate>Sun, 13 Jul 2014 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/13/docker-atom/</guid>
      <description>Dockerfile
 でsshで入る
cd /usr/bin ln -s nodejs node git clone --depth 1 https://github.com/atom/atom cd atom ./script/build ./script/grunt install  参考リンク
https://github.com/atom/atom/blob/master/docs/build-instructions/linux.md</description>
    </item>
    
    <item>
      <title>ネットワーク監視コマンド18</title>
      <link>https://yaasita.github.io/2014/07/12/network-monitor/</link>
      <pubDate>Sat, 12 Jul 2014 23:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/12/network-monitor/</guid>
      <description> Nload iftop iptraf nethogs bmon slurm tcptrack Vnstat bwm-ng cbm - Color Bandwidth Meter speedometer Pktstat Netwatch Trafshow Netload ifstat dstat collectl  参考リンク  http://www.binarytides.com/linux-commands-monitor-network/  </description>
    </item>
    
    <item>
      <title>gvfsのオートマウントを止める</title>
      <link>https://yaasita.github.io/2014/07/05/gvfs-mount/</link>
      <pubDate>Sat, 05 Jul 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/05/gvfs-mount/</guid>
      <description>/home/user/.gvfsになんか自動でマウントされるのを止める
rm -rf ~/.local/share/gvfs*  面倒だったので以下で対処した
rm -rf ~/.local  多分、gnome関連パッケージのせい</description>
    </item>
    
    <item>
      <title>Debianで自動アップデート設定</title>
      <link>https://yaasita.github.io/2014/07/03/unattended-upgrades/</link>
      <pubDate>Thu, 03 Jul 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/03/unattended-upgrades/</guid>
      <description>apt-get install unattended-upgrades  /etc/apt/apt.conf.d/50unattended-upgrades
Unattended-Upgrade::Origins-Pattern { &amp;quot;o=Debian,n=jessie&amp;quot;; &amp;quot;o=Debian,n=jessie-updates&amp;quot;; &amp;quot;o=Debian,n=jessie-proposed-updates&amp;quot;; &amp;quot;o=Debian,n=jessie,l=Debian-Security&amp;quot;; &amp;quot;origin=Debian,archive=${distro_codename},label=Debian-Security&amp;quot;; }; Unattended-Upgrade::Package-Blacklist { };  /etc/apt/apt.conf.d/10periodicにAPT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;;を追加
APT::Periodic::Update-Package-Lists &amp;quot;1&amp;quot;; APT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;; APT::Periodic::Download-Upgradeable-Packages &amp;quot;0&amp;quot;; APT::Periodic::AutocleanInterval &amp;quot;0&amp;quot;; APT::Periodic::RandomSleep &amp;quot;0&amp;quot;;  再起動をしなきゃいけないアップデートは以下を有効にするらしい
再起動が必要なら/var/run/reboot-requiredが作られるのか
// Automatically reboot *WITHOUT CONFIRMATION* if // the file /var/run/reboot-required is found after the upgrade //Unattended-Upgrade::Automatic-Reboot &amp;quot;false&amp;quot;;  参考リンク
 http://orangain.hatenablog.com/entry/unattended-upgrades  </description>
    </item>
    
    <item>
      <title>irfanviewでGIFアニメをバラす</title>
      <link>https://yaasita.github.io/2014/07/01/irfanview-gif-split/</link>
      <pubDate>Tue, 01 Jul 2014 23:43:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/01/irfanview-gif-split/</guid>
      <description>IrfanviewでGIFアニメを単一画像にする方法
 GIFアニメを開く Options -&amp;gt; Extract all frames  </description>
    </item>
    
    <item>
      <title>初めての暗号化メール</title>
      <link>https://yaasita.github.io/2014/07/01/thunderbird-pgp/</link>
      <pubDate>Tue, 01 Jul 2014 23:36:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/01/thunderbird-pgp/</guid>
      <description> はじめての暗号化メール (Thunderbird編)  </description>
    </item>
    
    <item>
      <title>percolにmigemo検索追加</title>
      <link>https://yaasita.github.io/2014/06/30/migemo-percol/</link>
      <pubDate>Mon, 30 Jun 2014 02:05:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/30/migemo-percol/</guid>
      <description>percolでもmigemo検索できるらしい
Debian Jessieでやってみる
apt-get install libpython3.4-dev libpython2.7-dev libmigemo-dev curl -O http://www.atzm.org/etc/files/pymigemo/pymigemo-0.4.tar.gz paco -lp pymigemo-0.4 pip install pymigemo-0.4.tar.gz /usr/sbin/update-cmigemo-dict  ~/.percol.d/rc.pyに以下追加
 参考リンク
 https://gist.github.com/mitukiii/4234173  </description>
    </item>
    
    <item>
      <title>Gitの仕組み解説サイト</title>
      <link>https://yaasita.github.io/2014/06/29/git-inside/</link>
      <pubDate>Sun, 29 Jun 2014 23:04:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/git-inside/</guid>
      <description>すごくわかりやすい
 Git の仕組み  </description>
    </item>
    
    <item>
      <title>dockerでsublime text 3を動かす</title>
      <link>https://yaasita.github.io/2014/06/29/docker_sublime/</link>
      <pubDate>Sun, 29 Jun 2014 03:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/docker_sublime/</guid>
      <description>必要パッケージのインストール apt-get install libglib2.0-0 x11-apps x11-xserver-utils apt-get install conky-all apt-get install libgtk2.0-0  ホストのIPを特定して、Xサーバ指定 netstat -nr | grep &#39;^0\.0\.0\.0&#39; | awk &#39;{print $2}&#39; export DISPLAY=172.17.42.1:0  実行 subl  </description>
    </item>
    
    <item>
      <title>Googleサジェストでvim補完するやつ</title>
      <link>https://yaasita.github.io/2014/06/29/google_complete/</link>
      <pubDate>Sun, 29 Jun 2014 02:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/google_complete/</guid>
      <description>要curl
使い方は適当な単語入力してCtrl-x,Ctrl-u
 </description>
    </item>
    
    <item>
      <title>最近のvim</title>
      <link>https://yaasita.github.io/2014/06/29/recently_vim/</link>
      <pubDate>Sun, 29 Jun 2014 00:07:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/29/recently_vim/</guid>
      <description>最近話題になったり個人的に発見したりしたやつ
折り畳みについて  折り畳み嫌いの男が一夜でFolding freakにまでなった話  FoldCCnaviという関数がすばらしい   折り畳み嫌いの男が一夜でFolding freakにまでなった話2  Vim Pluginランキング  VimAwesome  なんかGithubに上がってるドットファイルに書いてあるプラグインとか集計しているらしい    vim7.4.338新機能  breakindentが追加された  Googleサジェストから補完候補   Googleサジェストから補完候補を作るVimスクリプト書いた
 NeoBundle &#39;mattn/webapi-vim&#39; NeoBundle &#39;mattn/googlesuggest-complete-vim&#39; set completefunc=googlesuggest#Complete &amp;quot;usage takasu&amp;lt;c-x&amp;gt;&amp;lt;c-u&amp;gt;    </description>
    </item>
    
    <item>
      <title>unite.vimみたいなpercol</title>
      <link>https://yaasita.github.io/2014/06/12/percol/</link>
      <pubDate>Thu, 12 Jun 2014 23:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/12/percol/</guid>
      <description>これ使うとシェルでもuniteみたいなインターフェイスで検索できる
公式サイト
インストール apt-get install python-pip pip install percol  設定 ~/.bashrc
 ~/.percol.d/rc.pyはREADMEのコピペ
参考リンク
 bashでもpercolをイイ感じに使う方法  </description>
    </item>
    
    <item>
      <title>vimのマークダウン関連まとめ</title>
      <link>https://yaasita.github.io/2014/06/07/vim_markdown/</link>
      <pubDate>Sat, 07 Jun 2014 15:41:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/07/vim_markdown/</guid>
      <description>vimでmarkdown関連まとめ
昔使ってたやつ  kannokanno/previm  javascriptでmarkdown描画してる 大きめのmarkdownだと処理が追いつかない場合がある htmlを人に渡す時にひと手間必要   suan/vim-instant-markdown  node.js必須 たまにバグる   rcmdnk/vim-markdown  参考リンク参照 vimアップデートによりエラーになる   plasticboy/vim-markdown   いいけどfile typeがmkdだったりちょっと癖あり
  以下の設定で使ってた
 NeoBundle &#39;plasticboy/vim-markdown&#39; let g:vim_markdown_folding_disabled=1     tpope/vim-markdown  なんかリスト中にあるコードがハイライトされなかった    今使ってるやつ  yaasita/ore_markdown  syntaxとmarkdownプレビュー同梱 ruby,bundler必須 単一のHTMLファイルを生成するので人に渡しやすい windows対応 syntaxはplasticboy/vim-markdownを使用 cssはbootstrapとgithub    参考リンク
 VimでのMarkdown環境を整える  </description>
    </item>
    
    <item>
      <title>ディレクトリ間の差分を取ってくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/03/dir_diff/</link>
      <pubDate>Tue, 03 Jun 2014 18:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/03/dir_diff/</guid>
      <description>apt-get install meld  参考リンク
http://baker-street.jugem.jp/?eid=164</description>
    </item>
    
    <item>
      <title>キーボード操作を表示してくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/01/key_display/</link>
      <pubDate>Sun, 01 Jun 2014 02:37:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/01/key_display/</guid>
      <description>windows用のキーボード操作表示ソフト
osdHotkey

参考リンク
 押したキーを表示してくれるソフトのまとめ   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>firefoxのバージョンチェックを無効化する拡張</title>
      <link>https://yaasita.github.io/2014/05/30/firefox_version_check/</link>
      <pubDate>Fri, 30 May 2014 23:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/30/firefox_version_check/</guid>
      <description>iceweaselでvimfxとか使うときにはこれ使う
 Disable Add-on Compatibility Checks  </description>
    </item>
    
    <item>
      <title>mlocateについて</title>
      <link>https://yaasita.github.io/2014/05/27/mlocate/</link>
      <pubDate>Tue, 27 May 2014 00:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/27/mlocate/</guid>
      <description>mlocateはlocateの改良版
mlocateはupdatedbコマンドにより定期的に全ファイルを調べる
Debianは以下のcronで定期実行しているようだ
/etc/cron.daily/mlocate
ファイル数が多くなってなかなか終わらなくなったら
/etc/updatedb.confを編集して無視するファイルを追加するとよい
PRUNE_BIND_MOUNTS=&amp;quot;yes&amp;quot; PRUNENAMES=&amp;quot;.git .bzr .hg .svn&amp;quot; PRUNEPATHS=&amp;quot;/tmp /var/spool /media /mnt /raid/backup&amp;quot; PRUNEFS=&amp;quot;NFS nfs nfs4 rpc_pipefs afs binfmt_misc proc smbfs autofs iso9660 ncpfs coda devpts ftpfs devfs mfs shfs sysfs cifs lustre_lite tmpfs usbfs udf fuse.glusterfs fuse.sshfs curlftpfs&amp;quot;  </description>
    </item>
    
    <item>
      <title>itunes経由でBook同期</title>
      <link>https://yaasita.github.io/2014/05/26/itunes_books/</link>
      <pubDate>Mon, 26 May 2014 01:46:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/26/itunes_books/</guid>
      <description>手元のPDFをipadに転送したくていろいろ探したら
下記画像みたいなブックという項目を出さないとダメみたい

iTunesStoreでブック押したりなんかいろいろしたら出るようになった
あとPDFを追加するときは以下のフォルダに置くと良いみたい（入れると自動的に消える）
C:\Users\hogeuser\Music\iTunes\iTunes Media\iTunes に自動的に追加   function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>hardware checkコマンド</title>
      <link>https://yaasita.github.io/2014/05/25/hardware_check/</link>
      <pubDate>Sun, 25 May 2014 15:20:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/hardware_check/</guid>
      <description>lshwだけじゃない
PC構成を把握するコマンド
ハードウェアチェックコマンド  hwinfo --short hdparm -i /dev/sda inxi -Fx lsscsi  lsscsiがいい感じ
参考リンク  http://www.binarytides.com/linux-commands-hardware-info/  </description>
    </item>
    
    <item>
      <title>middlemanについて</title>
      <link>https://yaasita.github.io/2014/05/25/middleman/</link>
      <pubDate>Sun, 25 May 2014 00:26:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/middleman/</guid>
      <description>middleman blog gem &amp;quot;middleman-blog&amp;quot; middleman init middleman --template=blog  config.ru # 上のほうにあるUTC消す Time.zone = &amp;quot;Tokyo&amp;quot; # 一番最後に以下追加 set :markdown, :tables =&amp;gt; true, :autolink =&amp;gt; true, :fenced_code_blocks =&amp;gt; true, :with_toc_data =&amp;gt; true, :hard_wrap =&amp;gt; true, :strikethrough =&amp;gt; true set :markdown_engine, :redcarpet # sass compass_config do |config| config.output_style = :expanded end   http://qiita.com/yterajima/items/d7deec7cc0caaf95982e  新規投稿 be middleman article yamasita_test  パーマリンク修正 blog.permalink = &amp;quot;{year}/{month}/{title}.html&amp;quot;  アーカイブページ config.ruに以下のように書く
#blog.calendar_template = &amp;quot;calendar.html&amp;quot; blog.year_template = &amp;quot;calendar.</description>
    </item>
    
    <item>
      <title>octopressについて</title>
      <link>https://yaasita.github.io/2014/05/25/octopress/</link>
      <pubDate>Sun, 25 May 2014 00:23:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/octopress/</guid>
      <description>使い方 git clone git://github.com/imathis/octopress.git octopress cd octopress bundle install rake install  投稿 bundle exec rake new_post[&amp;quot;1st_post&amp;quot;] bundle exec rake generate  編集 ↓を編集する source/_posts/2014-02-09-1st-post.markdown bundle exec rake generate bundle exec rake watch #これで自動的にgenerate  Liquid # 以下みたいにすると変数とれる {{ page.title }}  サイドバーにアーカイブ表示 &amp;amp; カテゴリーリスト  作ったgist 月別アーカイブ  参考リンク  GitHubPage liquid  </description>
    </item>
    
    <item>
      <title>jekyllについて</title>
      <link>https://yaasita.github.io/2014/05/25/jekyll/</link>
      <pubDate>Sun, 25 May 2014 00:19:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/jekyll/</guid>
      <description>使い方 # 作成 jekyll build # jekyllサーバ 更新監視 jekyll server -w  _config.ymlにこう書く
GFM対応
name: Your New Jekyll Site markdown: redcarpet pygments: true redcarpet: extensions: [&amp;quot;no_intra_emphasis&amp;quot;, &amp;quot;fenced_code_blocks&amp;quot;, &amp;quot;autolink&amp;quot;, &amp;quot;tables&amp;quot;, &amp;quot;with_toc_data&amp;quot;, &amp;quot;strikethrough&amp;quot;]  bloggerからの移行  import bloggerからの移行スクリプト?  参考リンク  ずぼらな人のための Jekyll 入門 Jekyllいつやるの？ジキやルの？今でしょ！ 最初にインストールした Jekyll プラグイン  </description>
    </item>
    
    <item>
      <title>脆弱性報告ツール Debsecan</title>
      <link>https://yaasita.github.io/2014/05/18/debsecan/</link>
      <pubDate>Sun, 18 May 2014 21:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/18/debsecan/</guid>
      <description>パッケージの説明 debsecan は特に Debian のインストールに影響を及ぼす脆弱性リストを生成する ためのツールです。
debsecan は検査対象マシン上で起動し、インターネット経由で
脆弱性情報をダウンロードします。
新しい脆弱性が発見されたり、セキュリティ更新 が利用可能になると、指定したパーティーにメールを送信できます。
apt-get install debsecan  日本語だと以下の情報もおすすめ
 JVN脆弱情報データベース深刻度順 JPドメイン　Web改竄速報  </description>
    </item>
    
    <item>
      <title>bloggerからmiddlemanに移行した</title>
      <link>https://yaasita.github.io/2014/05/17/blogger2middleman/</link>
      <pubDate>Sat, 17 May 2014 00:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/17/blogger2middleman/</guid>
      <description>bloggerからmiddleman(というかこのページ)に移行したときのやり方メモ
  bloggerからデータをエクスポートする
 管理画面から　設定　⇒　その他　⇒　ブログをエクスポート    XMLファイルが一行が長いので整形
 &amp;gt;&amp;lt;を&amp;gt;\n&amp;lt;に変換    以下のようなスクリプトentry事に分解
   整形
   こんな感じでできたファイルをbuildすればOK
$ bundle exec middleman build  </description>
    </item>
    
    <item>
      <title>システムバックアップをISOにしてくれるやつ</title>
      <link>https://yaasita.github.io/2014/05/04/mondo_rescue/</link>
      <pubDate>Sun, 04 May 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/04/mondo_rescue/</guid>
      <description> Mondo Rescue  </description>
    </item>
    
    <item>
      <title>neosnippetの説明</title>
      <link>https://yaasita.github.io/2014/04/05/63/</link>
      <pubDate>Sat, 05 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/05/63/</guid>
      <description> snippetファイルの作り方
https://github.com/yonchu/dotfiles/blob/master/.vim/snippets/snippet.snip </description>
    </item>
    
    <item>
      <title>dovecotで特定のユーザのみ接続許可する</title>
      <link>https://yaasita.github.io/2014/03/22/104/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/104/</guid>
      <description> /etc/pam.d/dovecot
をいじってこんな感じにするといい
#%PAM-1.0
@include common-auth
account required pam_succeed_if.so user = hogeuser
@include common-account
@include common-session

参考リンク
http://wiki2.dovecot.org/Authentication/RestrictAccess </description>
    </item>
    
    <item>
      <title>uim-mozcの設定</title>
      <link>https://yaasita.github.io/2014/03/22/83/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/83/</guid>
      <description> 以下のパッケージをインストール
uim-qt
uim-xim

起動
uim-xim &amp;amp;

設定
uim-pref-qt4
 </description>
    </item>
    
    <item>
      <title>軽量なLinux用PDFビューワ</title>
      <link>https://yaasita.github.io/2014/02/02/166/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/02/02/166/</guid>
      <description> mupdf
apt-get install mupdf

viライクなキーバインド </description>
    </item>
    
    <item>
      <title>X11の画面設定はarandrが便利</title>
      <link>https://yaasita.github.io/2014/01/19/187/</link>
      <pubDate>Sun, 19 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/19/187/</guid>
      <description> apt-get install arandr
でインストールできる
公式サイト
http://christian.amsuess.com/tools/arandr/ </description>
    </item>
    
    <item>
      <title>wget画像収集</title>
      <link>https://yaasita.github.io/2014/01/18/206/</link>
      <pubDate>Sat, 18 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/18/206/</guid>
      <description> こんな感じのコマンドかな？
wget -erobots=off -H -N -r -nd -nH -l 1 -k -A jpg,png -R html url </description>
    </item>
    
    <item>
      <title>xrandrの使い方</title>
      <link>https://yaasita.github.io/2014/01/13/226/</link>
      <pubDate>Mon, 13 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/13/226/</guid>
      <description> wikipedia分かりやすい
モニターと可能な設定の表示
xrandr
全てのモニターを最高解像度で、同じ画面を表示する。
xrandr --auto
内蔵モニターの右側に外部モニターを表示。モニターの名前は、上の xrandr で調べられる。ここでは 内部モニター：LVDS、外部モニター：VGA とする。
xrandr --output VGA --right-of LVDS
内蔵モニターの上側に外部モニターを表示。
xrandr --output VGA --above LVDS
マルチモニターを使用する場合、X11の設定ファイル：通常 /etc/X11/xorg.conf で、仮想スクリーンの範囲を大きく取っておく。 例：
Virtual 2048 2048
参考リンク
http://ja.wikipedia.org/wiki/XRandR
関連記事
X11で縦表示とか画面の回転設定 </description>
    </item>
    
    <item>
      <title>Debianで無線LAN接続</title>
      <link>https://yaasita.github.io/2014/01/11/247/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/247/</guid>
      <description>今回はwicdを使う
無線デバイス確認
# lspci | grep -i wire
03:00.0 Network controller: Intel Corporation PRO/Wireless 3945ABG [Golan] Network Connection (rev 02)

ファームインストール
apt-get install firmware-iwlwifi

あとはこんな感じで設定
Networkmanagerのアンインストール
apt-get remove network-manager

# apt-getinstall install wicd
# apt-getinstall wicd-curses

Xなくてもつかえるwicd-cursesが便利だった
あとnetdevグループに属してないとwicd使えない
参考リンク
https://wiki.debian.org/WiFi/HowToUse#Wicd
https://wiki.debian.org/iwlwifi</description>
    </item>
    
    <item>
      <title>chef bootstrapが使えないときにnodeを追加する</title>
      <link>https://yaasita.github.io/2013/12/15/307/</link>
      <pubDate>Sun, 15 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/15/307/</guid>
      <description> knife configure client /path/to/tempdir
できたファイルをnodeに置く
/etc/chef/client.rb
/etc/chef/validation.pem
で↓のコマンドでOK
chef-client
参考リンク
http://hivecolor.com/id/46 </description>
    </item>
    
    <item>
      <title>maildirsizeをMaildirに置くとクォータ設定できる</title>
      <link>https://yaasita.github.io/2013/12/15/328/</link>
      <pubDate>Sun, 15 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/15/328/</guid>
      <description> maildirsizeをMaildirに置くとクォータの設定ができる
dovecotとかmaildropが対応している
~/Maildir/maildirsize
8000C
284871170 10382
 </description>
    </item>
    
    <item>
      <title>sopcastをDebian wheezyで使ってみる</title>
      <link>https://yaasita.github.io/2013/11/10/391/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/11/10/391/</guid>
      <description> ダウンロードは公式サイトから
file sp-sc-auth
readelf -h sp-sc-auth
みたいにするとELF32の実行ファイルだとわかる
http://www.itmedia.co.jp/help/tips/linux/l0448.html
なので、32bit用のライブラリ追加
dpkg --add-architecture i386
apt-get install ia32-libs-i386

あとはReadmeの通りこんな感じで起動
./sp-sc-auth sop://broker.sopcast.com:3912/6001 3908 8908

VLCで保存する場合はツールバー→メディア→変換／保存→ネットワークタブからできる
チャンネル一覧はこちら
SopCast.exeと同じフォルダに置く
https://gist.github.com/yaasita/7390590 </description>
    </item>
    
    <item>
      <title>vimでIME制御するには</title>
      <link>https://yaasita.github.io/2013/11/10/370/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/11/10/370/</guid>
      <description> 日本語とか打つときに参考にする
https://sites.google.com/site/fudist/Home/vim-nihongo-ban/vim-japanese/ime-control/xvkbd#imctrl </description>
    </item>
    
    <item>
      <title>LinuxでWake On Lanを設定する</title>
      <link>https://yaasita.github.io/2013/08/18/556/</link>
      <pubDate>Sun, 18 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/18/556/</guid>
      <description> WOLの設定は以下参照
http://80286.blog62.fc2.com/blog-entry-37.html </description>
    </item>
    
    <item>
      <title>Windowsの無料イメージ</title>
      <link>https://yaasita.github.io/2013/08/18/578/</link>
      <pubDate>Sun, 18 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/18/578/</guid>
      <description>IEテスト用らしい
http://www.modern.ie/ja/virtualization-tools</description>
    </item>
    
    <item>
      <title>とっても綺麗なフォント</title>
      <link>https://yaasita.github.io/2013/08/09/600/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/09/600/</guid>
      <description> フロップデザインフォント
http://www.flopdesign.com/freefont/flopdesignfont.html </description>
    </item>
    
    <item>
      <title>sshでchrootされたsftp専用アカウントの作り方</title>
      <link>https://yaasita.github.io/2013/08/05/620/</link>
      <pubDate>Mon, 05 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/05/620/</guid>
      <description> sshd_configを編集する
 Match User sftpuser
AllowTcpForwarding no
ChrootDirectory /home/chroot
ForceCommand internal-sftp
PasswordAuthentication yes
X11Forwarding no

注意点としてはsftpuserは/home/chrootに書き込み権限を持たせないこと
そうしないとうまくいかない </description>
    </item>
    
    <item>
      <title>構成管理ツールAnsible</title>
      <link>https://yaasita.github.io/2013/07/26/682/</link>
      <pubDate>Fri, 26 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/26/682/</guid>
      <description> chefもいいけどこれもよさそう
Ansible
http://apatheia.info/blog/2013/04/06/about-ansible/
http://www.ansibleworks.com/ </description>
    </item>
    
    <item>
      <title>Debian Wheezyではffmpegじゃなくてlibav-toolsを使おう</title>
      <link>https://yaasita.github.io/2013/07/18/701/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/18/701/</guid>
      <description>コマンドはavconvらしい
avconv -i 002.flv -strict experimental 002.mp4

http://wiki.debian.org/NewInWheezy</description>
    </item>
    
    <item>
      <title>KVMとvirt-manager仮想マシン管理</title>
      <link>https://yaasita.github.io/2013/07/14/742/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/14/742/</guid>
      <description> kvmのインストール
 aptitude install qemu-kvm libvirt-bin virt-manager
libvirtグループへ参加
 usermod -a -G libvirt hogeuser
ネットワーク設定
auto eth0
iface eth0 inet manual
auto br0
iface br0 inet static
address 192.168.0.100
netmask 255.255.255.0
gateway 192.168.0.1
bridge_ports eth0
bridge_stp off

参考リンク
http://wiki.debian.org/KVM
http://wiki.debian.org/QEMU#QEMU_networking_with_VDE
http://misc.e-hdk.com/benkyokai/2012-kernel-vm-advent-calendar-21st
 </description>
    </item>
    
    <item>
      <title>sshで接続時にオプションを付与する</title>
      <link>https://yaasita.github.io/2013/06/14/784/</link>
      <pubDate>Fri, 14 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/14/784/</guid>
      <description> こんな感じかな
それぞれ鍵認証無効化、ホスト鍵チェックの無効化
ssh -o &#34;PubkeyAuthentication no&#34; hogehost
ssh -o &#34;StrictHostKeyChecking no&#34; hogehost
 </description>
    </item>
    
    <item>
      <title>mysqlのレプリケーション同期設定</title>
      <link>https://yaasita.github.io/2013/06/12/824/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/12/824/</guid>
      <description> マスター側で以下のコマンドを打つ
mysql&amp;amp;gt; FLUSH LOGS;
$ mysqldump --order-by-primary --single-transaction --master-data -uroot -p&#39;passwd&#39; databasename  databasename.dump
mysql&amp;amp;gt; show master status;

スレーブ側でこんな感じに吸い上げる
mysql&amp;amp;gt; stop slave;
mysql -uroot -p&#39;passwd&#39; databasename &amp;amp;lt; databasename.dump
mysql&amp;amp;gt; start slave;
mysql&amp;amp;gt; show slave status;

参考リンク
http://blog.nomadscafe.jp/2011/12/-mysql40dump-mysqldump-wrapper.html </description>
    </item>
    
    <item>
      <title>sshを使ったchroot環境の構築</title>
      <link>https://yaasita.github.io/2013/06/12/805/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/12/805/</guid>
      <description> 参考リンク
http://team2ch.org/blog/?p=1362 </description>
    </item>
    
    <item>
      <title>postfixで複合条件アクション</title>
      <link>https://yaasita.github.io/2013/05/04/905/</link>
      <pubDate>Sat, 04 May 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/05/04/905/</guid>
      <description> こんな感じでスパムメールを拒否してみた
目標は：特定のIPかつ(123.123.123.123)、特定のアドレス(reject@)を拒否する
まず、check_client_accessをつくる
smtpd_restriction_classesで制限クラスをつくって
client_accessで定義した制限クラスに飛ばす
/etc/postfix/main.cf
smtpd_recipient_restrictions = permit_mynetworks ,
check_client_access hash:/etc/postfix/client_access ,
permit_sasl_authenticated ,
reject_unauth_destination
smtpd_restriction_classes = spam_restriction
spam_restriction = check_recipient_access hash:/etc/postfix/rejectaddress

/etc/postfix/client_access
123.123.123.123 spam_restriction

/etc/postfix/rejectaddress
reject@ REJECT

参考リンク
Postfix で特定の IP アドレスを拒否する設定
[postfix-jp: 115] Re: 複合条件での送信制限は可能でしょうか？ </description>
    </item>
    
    <item>
      <title>Linuxで動画編集</title>
      <link>https://yaasita.github.io/2013/04/29/947/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/29/947/</guid>
      <description> Avidemuxが良かった
deb-multimediaに入っているので/etc/apt/sources.list.dに以下を追加
deb http://www.deb-multimedia.org squeeze main non-free

参考リンク
http://d.hatena.ne.jp/over80/20080818/1219074708 </description>
    </item>
    
    <item>
      <title>Xvfbで仮想バッファ＆x11vncの設定メモ</title>
      <link>https://yaasita.github.io/2013/04/22/968/</link>
      <pubDate>Mon, 22 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/22/968/</guid>
      <description> xvfbで仮想バッファ作成→export DISPLAY=:1→startlxde→x11vncでvnc接続を許可する
みたいな感じか

参考リンク
http://d.hatena.ne.jp/ishidamakot/20110717/1310890337
http://lists.debian.or.jp/debian-users/200101/msg00057.html </description>
    </item>
    
    <item>
      <title>Thunderbirdで受信フォルダ以外も新着チェックする</title>
      <link>https://yaasita.github.io/2013/04/18/1010/</link>
      <pubDate>Thu, 18 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/18/1010/</guid>
      <description>http://www.club.kyutech.ac.jp/~tanio/wordpress/2012/05/thunderbird-check-all-new-mail/
http://kawama.jp/archives/2011/04/thunderbird_gmail_imap.html</description>
    </item>
    
    <item>
      <title>らじるらじるをLinux環境で聞く</title>
      <link>https://yaasita.github.io/2013/04/08/1092/</link>
      <pubDate>Mon, 08 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/08/1092/</guid>
      <description> mplayerを使えばいけるらしい
http://ubuntu.futene.net/tips/radiru.html </description>
    </item>
    
    <item>
      <title>AWSのAPI toolsでセキュリティグループ制御</title>
      <link>https://yaasita.github.io/2013/03/28/1279/</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/28/1279/</guid>
      <description>一覧
ec2-describe-group
追加
ec2-authorize sg-name -P all -s 123.123.123.123/32
削除
ec2-revoke sg-name -P all -s 123.123.123.123/32
参考リンク
AWSdocumentation</description>
    </item>
    
    <item>
      <title>AWSのec2 ai tools使い方</title>
      <link>https://yaasita.github.io/2013/03/28/1300/</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/28/1300/</guid>
      <description> マイアカウントからアクセス証明書（X.509証明書）を作成
http://wiki.debian.org/Cloud/CreateEC2Imageを参考に
環境変数を設定
export EC2_HOME=$HOME/ec2
export PATH=$PATH:$EC2_HOME/bin
export EC2_PRIVATE_KEY=/mnt/pk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem export EC2_CERT=/mnt/cert-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.pem export PATH=$PATH:$EC2_HOME/bin
export EC2_URL=https://ec2.ap-northeast-1.amazonaws.com

あとはec2コマンドがつかえるはず
ec2-describe-regions

スナップショットとか便利なやつ
http://d.hatena.ne.jp/rx7/20100606/p1
aptで入れる場合は
http://qiita.com/items/216e0f8b69f20d5b07d3 </description>
    </item>
    
    <item>
      <title>Spamassassinとmaildropの設定</title>
      <link>https://yaasita.github.io/2013/02/22/1441/</link>
      <pubDate>Fri, 22 Feb 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/02/22/1441/</guid>
      <description> Debianでやった
以下のプログラムをインストール
spamassassin → デーモン spmad
spamc → spamdとやりとりするためのインターフェイス
maildrop →　配送プログラム
で、こんな感じで$HOMEにおいておけばいいみたい
~/.forward

~/.mailfilter

あとはspam学習するためのcron設定
/etc/cron.daily/sa-learn

以下のコマンドでシンタックスチェックもできるらしい
maildrop -V 9 &amp;amp;lt; /dev/null
参考リンク
Spamassassin setup
maildrop 利用のメモというかtips
maildropのインストール  </description>
    </item>
    
    <item>
      <title>マウスオーバーで単語検索</title>
      <link>https://yaasita.github.io/2013/01/14/1543/</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/14/1543/</guid>
      <description> 英単語を調べるときとかでも便利
翻訳もできる
1.Greasemonkeyをインストール
2. スクリプトを追加（以下URLのINSTALL)
http://userscripts.org/scripts/show/12901
alt押しながら単語選択で検索
alt+yで設定
参考リンク
http://mozilla-remix.seesaa.net/article/80993858.html
http://www.simplivillage.com/trac/wiki/Userscript/FastLookupJPandEN </description>
    </item>
    
    <item>
      <title>apacheのログをsyslogにも出す</title>
      <link>https://yaasita.github.io/2013/01/02/1746/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1746/</guid>
      <description>CustomLog ${APACHE_LOG_DIR}/access.log combined
CustomLog &#34;|/usr/bin/logger -p local6.info --&#34; combined

参考リンク
http://d.hatena.ne.jp/oratta/20101121/1290341166</description>
    </item>
    
    <item>
      <title>postfixでバーチャルドメイン</title>
      <link>https://yaasita.github.io/2013/01/02/1765/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1765/</guid>
      <description>postfixでバーチャルドメイン
参考リンク
http://tmtm.org/postfix/tutorial/virtual.html
http://bitwalker.dtiblog.com/blog-entry-151.html</description>
    </item>
    
    <item>
      <title>smtp-authの設定(Postfix)</title>
      <link>https://yaasita.github.io/2013/01/02/1786/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1786/</guid>
      <description>1. saslインストール
aptでsasl2-binを入れる
2. postfixの設定(main.cf)
#mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
smtpd_sasl_auth_enable = yes
smtpd_sasl_path = smtpd
smtpd_recipient_restrictions = permit_sasl_authenticated, reject_unauth_destination
mynetworksからはauth無しで許可する場合はコメント外してもOK
3. postfixの設定(master.cf)
ポイントはchrootをnにすること
しないとsocketを見つけられないのでエラーになる
submission inet n - n - - smtpd
-o smtpd_sasl_auth_enable=yes
-o smtpd_client_restrictions=permit_sasl_authenticated,reject

4.グループへ参加
adduser postfix sasl

5. smtpd.conf追加
sasl/smtpd.conf
pwcheck_method: saslauthd
mech_list: plain login

参考リンク
http://www.docunext.com/wiki/Postfix#Postfix_and_SASL
http://www.uetyi.mydns.jp/wordpress/postfix-setting/entry-465.html</description>
    </item>
    
    <item>
      <title>unboundのインストールと初期設定</title>
      <link>https://yaasita.github.io/2012/12/24/1826/</link>
      <pubDate>Mon, 24 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/24/1826/</guid>
      <description> 1.インストール
普通にaptで入れる
2.初期設定
unbound.conf
interface: 0.0.0.0
access-control: 192.168.0.0/24 allow

3.レコード設定
local-data: &#34;hoge.net. IN A 192.168.0.4&#34;
local-data: &#34;hoge.net. IN MX 10 hoge.net.&#34;
local-data-ptr: &#34;192.168.0.4 hoge.net.&#34;
※ hoge.netのAレコードを設定してしまうと、hoge.netのMXレコードを
本物のDNSに問い合わせないで無しで返してしまうので注意
4.ulimitの設定
warningsがうるさいなら
ulimit -n 4140
を/etc/init.d/unboundの頭の方に書いておくと良いんじゃないでしょうか？ </description>
    </item>
    
    <item>
      <title>Debianにpostfixadminをインストール</title>
      <link>https://yaasita.github.io/2012/12/23/1848/</link>
      <pubDate>Sun, 23 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/23/1848/</guid>
      <description>1.インストール
# apt-get install postfixadmin

2.Webサーバ設定
/etc/postfixadminに設定ファイルがあるのでリンクを張る
今回はlighttpdで
# ln -s /etc/postfixadmin/lighttpd.conf /etc/lighttpd/conf-enabled/60-postfixadmin.conf
# /etc/init.d/lighttpd restart

3.初期セットアップ
http://yourdomain.com/postfixadmin/setup.php
にアクセスしてセットアップ
初期パスワードとadminアカウントを作成
4.その他の設定
/usr/share/doc/postfixadmin/DOCUMENTS
↑を読む</description>
    </item>
    
    <item>
      <title>ビルドするためにインストールするパッケージをまとめて</title>
      <link>https://yaasita.github.io/2012/12/19/1889/</link>
      <pubDate>Wed, 19 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/19/1889/</guid>
      <description> 入れる方法は
↓みたいにする
この例だとvimに必要なパッケージ
apt-get build-dep vim

http://vim-jp.org/docs/build_linux.html </description>
    </item>
    
    <item>
      <title>AutoHotkeyを使ってTeraTerm &#43; vimを快適にする</title>
      <link>https://yaasita.github.io/2012/11/25/1951/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/25/1951/</guid>
      <description> Esc押したらIMEをオフにしてくれれば良いので以下のような設定にした
あと、無変換キー＋Rでsudoしてくれる設定も追加しておいた
AutoHotkey.ahk

注意点としてはEscがEscを再帰的に呼んで無限ループするので、Escの頭に$を付ける必要があること
IMEのOn/Offの切り替えはえらい人がスクリプトを作ってくれていたので、そっちからコピペ
http://www6.atwiki.jp/eamat/pub/MyScript/Lib/
参考リンク
https://sites.google.com/site/autohotkeyjp/reference/AutoHotkey_L/index </description>
    </item>
    
    <item>
      <title>teratermインストール後にやることメモ</title>
      <link>https://yaasita.github.io/2012/11/24/1971/</link>
      <pubDate>Sat, 24 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/24/1971/</guid>
      <description> Teratermが新しくなっていたので、ここでまとめておく
1.TERATERM.INI
 2.KEYBOARD.CNF
https://raw.github.com/gist/4140449/2bad78bfe24a407764f13c7055fc0ed452f1affd/KEYBOARD.CNF
3.テーマファイル
テーマファイルとかあればhttps://raw.github.com/gist/4140449/91748dba84035a7a0f0ac7dfa8b8ec480b8ed93c/yamasita.ini </description>
    </item>
    
    <item>
      <title>2012版 Firefox Thunderbird 使ってるアドオンまとめ</title>
      <link>https://yaasita.github.io/2012/11/03/2009/</link>
      <pubDate>Sat, 03 Nov 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/11/03/2009/</guid>
      <description>FirefoxautotranslatorVideo DownloadHelperelasticfox-ec2tagFirebugFireMobileSimulatorLiveNavigate UpNicoFoxPersonas PlusQuickJavaScrapBookTomblooViewSourceWithVimiumテキストリンク
ThunderbirdDisplay Mail User AgentLightningMailHops</description>
    </item>
    
    <item>
      <title>screenfetch</title>
      <link>https://yaasita.github.io/2012/10/28/2029/</link>
      <pubDate>Sun, 28 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/28/2029/</guid>
      <description> 
bashで出来たシステムモニタ
各ディストリのマークとか出る </description>
    </item>
    
    <item>
      <title>xsetで省電力モードを解除</title>
      <link>https://yaasita.github.io/2012/10/16/2070/</link>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/16/2070/</guid>
      <description>現在の設定を確認 xset q
DPMSを無効化
xset -dpmsxset dpms force off
DPMSを有効化
xset +dpms スタンバイ、サスペンド、パワーオフ時間を設定（有効化時しか意味は無い）
xset dpms 300 600 900
参考リンク
http://kakurasan.ehoh.net/summary/xset.cmd.term.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/254usedpmsx3x.html</description>
    </item>
    
    <item>
      <title>munin2.0が出てるらしい</title>
      <link>https://yaasita.github.io/2012/10/02/2129/</link>
      <pubDate>Tue, 02 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/02/2129/</guid>
      <description> http://pocketstudio.jp/log3/2012/06/04/new-features-of-munin2/
http://dozen.dip.jp/archives/212 </description>
    </item>
    
    <item>
      <title>ffmpegの使い方</title>
      <link>https://yaasita.github.io/2012/09/30/2150/</link>
      <pubDate>Sun, 30 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/30/2150/</guid>
      <description> &amp;amp;nbsp;ffmpeg -i 入力ファイル 出力ファイル
みたいな感じでOKらしい
ffmpeg -i hoge.flv hoge.mp4
でもいけた
mp3のビットレート調整とかも出来る
ffmpeg -i input.mp3 -ab 128k output.mp3
http://d.hatena.ne.jp/takuya_1st/20120225/1330189927
http://yosilove.blog.shinobi.jp/Entry/603/ </description>
    </item>
    
    <item>
      <title>WindowsでS.M.A.R.T情報を取得</title>
      <link>https://yaasita.github.io/2012/09/23/2191/</link>
      <pubDate>Sun, 23 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/23/2191/</guid>
      <description> Linuxだとsmartctlとかだけど、Windowsだとこれがいい感じ
CrystalDiskInfo
http://www.forest.impress.co.jp/lib/sys/hrdbnch/hardinfo/crdiskinfo.html </description>
    </item>
    
    <item>
      <title>TeratermでTTLマクロをショートカットキーで呼び出す</title>
      <link>https://yaasita.github.io/2012/08/25/2273/</link>
      <pubDate>Sat, 25 Aug 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/08/25/2273/</guid>
      <description> login.ttl 
connect &#39;192.168.0.2:23 /nossh /T=1 /W=&#34;jitaku&#34; /F=TERATERM_ARERT.INI /K=KEYBOARD.CNF&#39;
wait &#39;login:&#39;
sendln &#39;hogehoge&#39;
wait &#39;Password:&#39;
sendln &#39;password&#39;
 KEYBOARD.cnfに以下を追記 
[User keys]
User1=1083,2,sudo.ttl
 KEYBOARD.ttlがあるところにsudo.ttlをおく 
sendln &#39;sudo -s&#39;
pause 1
sendln &#39;passwd&#39;
 </description>
    </item>
    
    <item>
      <title>vim&#43;tmuxでキーが効かないとき</title>
      <link>https://yaasita.github.io/2012/08/19/2311/</link>
      <pubDate>Sun, 19 Aug 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/08/19/2311/</guid>
      <description> vim + tmuxのとき http://blog.othree.net/log/2010/01/07/screen-vim-f1f4-map/ </description>
    </item>
    
    <item>
      <title>vimでも暗号化できるらしい</title>
      <link>https://yaasita.github.io/2012/08/19/2292/</link>
      <pubDate>Sun, 19 Aug 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/08/19/2292/</guid>
      <description> http://yakinikunotare.boo.jp/orebase2/vim/crypt_file </description>
    </item>
    
    <item>
      <title>vimでgitのブラウジングすると便利だよ</title>
      <link>https://yaasita.github.io/2012/07/23/2330/</link>
      <pubDate>Mon, 23 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/23/2330/</guid>
      <description> という話
gitvというプラグイン:Gitvコマンドからどうぞ
3方向マージ(3 way merge)もGdiffで一発
http://d.hatena.ne.jp/cohama/20120417/1334679297
http://yuku-tech.hatenablog.com/entry/20110427/1303868482 </description>
    </item>
    
    <item>
      <title>vimのプラグイン管理vundle</title>
      <link>https://yaasita.github.io/2012/07/19/2351/</link>
      <pubDate>Thu, 19 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/19/2351/</guid>
      <description> 便利なのでメモ
git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
http://shu-cream.blogspot.jp/2011/04/2011vimvundle.html  </description>
    </item>
    
    <item>
      <title>opensslの確認コマンドまとめ</title>
      <link>https://yaasita.github.io/2012/07/09/2371/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/09/2371/</guid>
      <description> http://chinmai.net/~osakana/tech-memo/wiki.cgi?page=OpenSSL+CSR%2C+%BE%DA%CC%C0%BD%F1%A4%CA%A4%C9%B3%CE%C7%A7%A5%B3%A5%DE%A5%F3%A5%C9 </description>
    </item>
    
    <item>
      <title>Postfix⇒Gmailへのリレー設定</title>
      <link>https://yaasita.github.io/2012/07/09/2391/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/09/2391/</guid>
      <description> 以下の設定でGoogleのSMTPを中継するようになる main.cf 
relayhost = [smtp.gmail.com]:587
smtp_use_tls = yes
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_tls_security_options = noanonymous
smtp_sasl_mechanism_filter = plain
smtp_tls_CAfile = /etc/postfix/ssl/cacert.pem
 /etc/postfix/sasl_passwd 
[smtp.gmail.com]:587 hoge@gmail.com:hogepasswd
 以下のコマンドを忘れずに postmap sasl_passwd 参考リンク
http://linux.matchy.net/archives/35
http://stevejenkins.com/blog/2011/06/fixing-postfix-certificate-verification-failed-for-gmail-untrusted-issuer-error-message/
http://giantdorks.org/alain/fix-for-postfix-untrusted-certificate-tls-error/ </description>
    </item>
    
    <item>
      <title>gitでpushしたらpushした先でワーキングツリーをリセット</title>
      <link>https://yaasita.github.io/2012/06/26/2452/</link>
      <pubDate>Tue, 26 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/26/2452/</guid>
      <description> それhookで出来るよ

cd .git/hooks/
mv post-receive.sample post-receive
chmod +x post-receive
echo &#39;cd /home/hoge/huga/&#39;  post-receive
echo &#39;git --git-dir=.git reset --hard HEAD&#39;  post-receive
 </description>
    </item>
    
    <item>
      <title>SSH力を身につけた</title>
      <link>https://yaasita.github.io/2012/06/23/2472/</link>
      <pubDate>Sat, 23 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/23/2472/</guid>
      <description> sshで繋いじゃった後でも
Enter押してすぐに
~Cでコンソール(helpコマンド使えるよ)
~#でフォワード一覧
~?でヘルプ
↓みたいに.ssh/config書けば多段がいけるらしい
Host humidai
&amp;amp;nbsp;HostName hoge.co.jp
Host target
&amp;amp;nbsp;ProxyCommand ssh -W 192.168.x.x:22 humidai
参考リンク
SSH力をつけよう </description>
    </item>
    
    <item>
      <title>ディスクアクセスをキャッシュして高速化する</title>
      <link>https://yaasita.github.io/2012/06/10/2511/</link>
      <pubDate>Sun, 10 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/10/2511/</guid>
      <description> その名もpreload
参考リンク http://blog.browncat.org/2008/02/linuxpreload.html </description>
    </item>
    
    <item>
      <title>Linuxからリモートデスクトップ(RDP)</title>
      <link>https://yaasita.github.io/2012/06/09/2530/</link>
      <pubDate>Sat, 09 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/09/2530/</guid>
      <description> xfreerdpでいけます

apt-get install freerdp-x11
 </description>
    </item>
    
    <item>
      <title>Linuxデスクトップのガジェットとか</title>
      <link>https://yaasita.github.io/2012/06/08/2572/</link>
      <pubDate>Fri, 08 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/08/2572/</guid>
      <description> システムモニタ ・adesklets
・conky
・gdesklets
参考リンク http://wikiwiki.jp/linux/?FrontPage
http://usamimi.info/~linux/  </description>
    </item>
    
    <item>
      <title>2ch互換掲示板CGI</title>
      <link>https://yaasita.github.io/2012/05/28/2634/</link>
      <pubDate>Mon, 28 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/28/2634/</guid>
      <description> http://www.toshinari.net/ </description>
    </item>
    
    <item>
      <title>lighttpd &#43; zabbixをDebian squeezeにインストール</title>
      <link>https://yaasita.github.io/2012/05/26/2655/</link>
      <pubDate>Sat, 26 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/26/2655/</guid>
      <description> aptで以下のパッケージをインストール 
zabbix-agent #監視される側
zabbix-frontend-php #zabbixのWebインターフェイス
zabbix-server-mysql #zabbixのサーバー（監視する側）
 lighttpdに以下を追記 
alias.url += (
&#34;/zabbix&#34; =&amp;amp;gt; &#34;/usr/share/zabbix&#34;
)
 なんかログインできなかったので以下のSQLを発行 
update users set passwd=md5(&#39;hoge&#39;) where alias=&#39;Admin&#39;;
 参考リンクSQLのアップデートの仕方マニュアル </description>
    </item>
    
    <item>
      <title>HA構成のサーバー作るときに使うソフトメモ</title>
      <link>https://yaasita.github.io/2012/05/20/2677/</link>
      <pubDate>Sun, 20 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/20/2677/</guid>
      <description>複数のサーバーを同一の設定にする Puppet  OSインストールを簡略化 kickstart  データ同期 DRBD  Heartbeat(Pacemaker) 生死監視</description>
    </item>
    
    <item>
      <title>lighttpdでSSL設定</title>
      <link>https://yaasita.github.io/2012/05/07/2698/</link>
      <pubDate>Mon, 07 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/07/2698/</guid>
      <description>Debian(squeeze)でやってみた
1.モジュールの有効化

lighty-enable-mod ssl

2.認証局(CA)の作成

/usr/lib/ssl/misc/CA.sh -newca

最初はエンター
後は対話形式に適当に入力する
入力項目についてはここら辺を参照 A challenge passwordとAn optional company nameは飛ばした
3.サーバーの秘密鍵,CRTの作成

openssl genrsa -out server.key 2048
openssl req -new -days 365 -key server.key -out csr.pem

4.署名(CRT)ファイルの作成

openssl ca -in csr.pem -keyfile demoCA/private/cakey.pem -cert demoCA/cacert.pem -out crt.pem
エラーが出る場合は以下のようにindex.txtを空にする（ここら辺参照） 
rm demoCA/index.txt
touch demoCA/index.txt

5. ファイルの設置

ファイルをvim等で適当に編集して
-----BEGIN RSA PRIVATE KEY-----
hogehogehogehoge.....
-----END RSA PRIVATE KEY-----</description>
    </item>
    
    <item>
      <title>LDAPの設定メモ</title>
      <link>https://yaasita.github.io/2012/05/06/2717/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/06/2717/</guid>
      <description> slapdをインストール
mozillaAbPersonAlpha.schemaを以下へコピーする
/etc/ldap/schema
phpldapadminをインストール
lighttpdのconfに以下を追加
# Alias for pa directory
alias.url += (
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; &#34;/pl&#34; =&amp;amp;gt; &#34;/usr/share/phpldapadmin&#34;,
)
パスワードを忘れたら
dpkg-reconfigure slapd
↓で内容の確認
slapcat
cn=admin...
で始まる行をメモして
phpldapadminにログイン
詳しくはこちら
/usr/share/doc/slapd
本体はこっち？
/usr/share/slapd
参考リンク
Gentoo Linuxな生活​/ThunderBirdアドレス帳をLDAPで悩む </description>
    </item>
    
    <item>
      <title>BIND9の設定</title>
      <link>https://yaasita.github.io/2012/05/05/2738/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/05/2738/</guid>
      <description>インストールapt-get install bind9正引きの設定named.conf.local zone &#34;test&#34; {
type master;
file &#34;/etc/bind/db.test&#34;;
};
db.test $TTL 1D
@ IN SOA dns.test. root.hoge. (
20120505 ; Serial
604800 ; Refresh
86400 ; Retry
2419200 ; Expire
604800 ) ; Negative Cache TTL
;
@ IN NS dns.test.
main IN A 192.168.0.2
vista IN A 192.168.0.3
dns IN A 192.168.0.4
note IN CNAME dns.test.
jitaku IN A 192.168.0.11
逆引きの設定named.conf.local zone &#34;0.168.192.in-addr.arpa&#34; {
type master;</description>
    </item>
    
    <item>
      <title>vimでコマンドをファイル中に書くことができる</title>
      <link>https://yaasita.github.io/2012/05/05/2757/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/05/2757/</guid>
      <description> その名もモードライン 
:h modeline
 </description>
    </item>
    
    <item>
      <title>mysqlのtips</title>
      <link>https://yaasita.github.io/2012/04/22/2777/</link>
      <pubDate>Sun, 22 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/22/2777/</guid>
      <description>*AUTO_INCREMENTの値をリセットする
ALTER TABLE hogetable AUTO_INCREMENT = 1;
http://www.programming-magic.com/20071126231401/
*列の追加
alter table log add date date after id;
http://www.programming-magic.com/20071004015528/ *列の削除
alter table log drop date;
(logテーブルからdateカラム削除) http://www.programming-magic.com/20071023000012/</description>
    </item>
    
    <item>
      <title>nagios3でのパッシブチェックについて</title>
      <link>https://yaasita.github.io/2012/04/15/2796/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/15/2796/</guid>
      <description> nagios3でのパッシブチェックは外部コマンドファイル(External Commands)に書き込むことで実現するチェックした結果を名前付パイプ(/var/lib/nagios3/rw/nagios.cmd)に書き込むことでnagios3が拾う
以下のようなスクリプトを用意する #!/bin/sh
echocmd=&#34;/bin/echo&#34;
CommandFile=&#34;/var/lib/nagios3/rw/nagios.cmd&#34;
datetime=`date +%s`
cmdline=&#34;[$datetime] PROCESS_SERVICE_CHECK_RESULT;$1;$2;$3;$4&#34;
`$echocmd $cmdline &amp;amp;gt;&amp;amp;gt; $CommandFile`
cronか何かで以下のようにスクリプトを叩く引数は4つで最初からホスト名、サービス名、ステータス、メッセージの順でサービス名はservice_descriptionで指定したもの ./result.sh localhost HTTP 2 &#34;DOWN MESSAGE&#34;
HOSTのパッシブチェックは以下のようなコマンドで #!/bin/sh
echocmd=&#34;/bin/echo&#34;
CommandFile=&#34;/var/lib/nagios3/rw/nagios.cmd&#34;
datetime=`date +%s`
cmdline=&#34;[$datetime] PROCESS_HOST_CHECK_RESULT;$1;$2;$3&#34;
`$echocmd $cmdline &amp;amp;gt;&amp;amp;gt; $CommandFile`
こう叩く ./host.sh localhost 0 &#34;OK&#34;

参考リンク
Nagios 3翻訳プロジェクトExternal Commands
Passive Checks </description>
    </item>
    
    <item>
      <title>nagios3で外部コマンドを初期化するには？</title>
      <link>https://yaasita.github.io/2012/04/15/2817/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/15/2817/</guid>
      <description>nagios3のWebインターフェイス等で行ったステータスを初期化するには /var/lib/nagios3/retention.dat を削除すればOK</description>
    </item>
    
    <item>
      <title>lighttpd&#43;nagios3</title>
      <link>https://yaasita.github.io/2012/04/13/2839/</link>
      <pubDate>Fri, 13 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/13/2839/</guid>
      <description>&amp;amp;nbsp;lighttpd+nagios3を試してみた
インストールapt-get install nagios3CGI設定/etc/lighttpd/lighttpd.conf  alias.url += (
&#34;/nagios3/stylesheets&#34; =&amp;amp;gt; &#34;/etc/nagios3/stylesheets&#34; ,
&#34;/cgi-bin/nagios3&#34; =&amp;amp;gt; &#34;/usr/lib/cgi-bin/nagios3&#34;,
&#34;/nagios3/cgi-bin&#34; =&amp;amp;gt; &#34;/usr/lib/cgi-bin/nagios3&#34;,
&#34;/nagios3&#34; =&amp;amp;gt; &#34;/usr/share/nagios3/htdocs&#34;
)
$HTTP[&#34;url&#34;] =~ &#34;^/nagios3/cgi-bin|^/cgi-bin/nagios3&#34; {
cgi.assign = ( &#34;&#34; =&amp;amp;gt; &#34;&#34; )
auth.require = (
&#34;&#34; =&amp;amp;gt;
(
&#34;method&#34; =&amp;amp;gt; &#34;basic&#34;,
&#34;realm&#34; =&amp;amp;gt; &#34;nagios&#34;,
&#34;require&#34; =&amp;amp;gt; &#34;user=nagiosadmin&#34;
)
)
}
/etc/nagios3/nagios.cfg
check_external_commands=1
パーミッション
# dpkg-statoverride --update --add nagios www-data 2710 /var/lib/nagios3/rw
# dpkg-statoverride --update --add nagios nagios 751 /var/lib/nagios3</description>
    </item>
    
    <item>
      <title>CUI(テキストベース)のメッセンジャー</title>
      <link>https://yaasita.github.io/2012/03/14/2940/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/14/2940/</guid>
      <description> CUIでメッセが出来たらいいなーと思って探してみた
centerim
finch
参考リンク
http://techno-st.net/2009/02/18/cui-im.html
http://d.hatena.ne.jp/goth_wrist_cut/20080128/1201484704 </description>
    </item>
    
    <item>
      <title>dwmのキーマップの変更</title>
      <link>https://yaasita.github.io/2012/03/09/2983/</link>
      <pubDate>Fri, 09 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/09/2983/</guid>
      <description> ソースをダウンロードしてから
makeする
apt-get source dwm
以下のとおり変更
#define MODKEY Mod1Mask
↓
#define MODKEY Mod4Mask
static const char *termcmd[] = { &#34;uxterm&#34;, NULL };
↓
static const char *termcmd[] = { &#34;x-terminal-emulator&#34;, NULL };

make
あとは出来たdwmをフォルダに突っ込めばOK
参考リンク
http://wiki.mma.club.uec.ac.jp/clear/dwm </description>
    </item>
    
    <item>
      <title>mysqlを使ってみる</title>
      <link>https://yaasita.github.io/2012/03/01/3004/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/01/3004/</guid>
      <description> インストールはmysql-clientとmysql-serverを入れればOK
mysqlへの接続
mysql -u root -p
DB一覧の表示
show databases;
databasesの切り替え
use データベース名
テーブルの表示
show tables;
phpmyadminへのログイン
http://192.168.0.1/phpmyadmin/
バックアップ
mysqldump --user=root --password=hoge --all-databases &amp;amp;gt; /tmp/mysql.dump
リストア
mysql -u root -phoge &amp;amp;lt; /tmp/mysql.dump </description>
    </item>
    
    <item>
      <title>LinuxでISO=&amp;gt;aviエンコード（DVDリッピング）</title>
      <link>https://yaasita.github.io/2012/02/02/3047/</link>
      <pubDate>Thu, 02 Feb 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/02/02/3047/</guid>
      <description> LinuxでDVDのISOイメージをavi化する方法を調べたのでメモ
リポジトリにdebian-multimediaを追加/etc/apt/sources.listに以下の一行を追加 deb http://www.debian-multimedia.org squeeze main non-free
このFAQにあるとおり公開鍵をインストール dpkg -i debian-multimedia-keyring_2008.10.16_all.deb
acidripをインストールapt-get update
apt-get install acidrip
ISOイメージをマウントmount -o loop /tmp/DVD.ISO /mnt
acidripを起動acidrip
/mntを指定してエンコード あとはGUIなので分かるはず  </description>
    </item>
    
    <item>
      <title>最近のCygwinをインストール</title>
      <link>https://yaasita.github.io/2012/01/26/3111/</link>
      <pubDate>Thu, 26 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/26/3111/</guid>
      <description> 最近のCygwinが便利になってたので導入メモ
１．インストール
公式サイトからsetup.exeを持ってくる
ソフトのインストールに毎回setup.exeを使うのは面倒なので、apt-cygを導入する
２．Xサーバの導入
setup.exeからX11を選択して全部入れる
そんでウィンドウマネージャとしてdwmを入れる
ソースは公式サイトから拾ってビルド
tar xzf dwm-6.0.tar.gz
cd dwm-6.0
make
mv dwm.exe /usr/bin/
あとは~/.xinitrcに適当に書いてstartxでOK
xhost +192.168.0.4
dwm

３．その他設定
あとは便利に使うコマンドとしてcygstartを覚えておくと良いかも
詳しくはこちら
コンソールの設定だけど右クリック→Options→Looks→背景色とか透過とかカーソルをいじる
Xサーバーに飛ばしたかったらアプリ起動側で変数設定すること
export DISPLAY=&#34;192.168.0.3:0&#34;

関連記事
http://rdt17.blogspot.com/2011/05/xming.html </description>
    </item>
    
    <item>
      <title>rsyncで転送途中のファイルを破棄しない</title>
      <link>https://yaasita.github.io/2012/01/24/3154/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/24/3154/</guid>
      <description> 所謂、リジューム（レジューム）機能ってやつだ
--partial
を付ければOKみたい
参考リンク
http://d.hatena.ne.jp/matoken/20110525/1306335511 </description>
    </item>
    
    <item>
      <title>コマンド補完を強力にしてくれるbash_completion</title>
      <link>https://yaasita.github.io/2012/01/24/3132/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/24/3132/</guid>
      <description> インストールはaptでできる（bash-completion）
.bashrcに以下の記述をすればOKだけどDebianの場合は予め書いてあった
if [ -f /etc/bash_completion ] &amp;amp;&amp;amp; ! shopt -oq posix; then
. /etc/bash_completion
fi

その他詳しいことは
man dh_bash-completion
参考リンク
http://d.hatena.ne.jp/orangeclover/20110204/1296769974
http://d.hatena.ne.jp/wadap/20080601/1212312418 </description>
    </item>
    
    <item>
      <title>/boot/grub/grub.cfgのrootってどこから設定されている？</title>
      <link>https://yaasita.github.io/2012/01/06/3214/</link>
      <pubDate>Fri, 06 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/06/3214/</guid>
      <description> というわけで調べてみた
update-grub2のコールスタック

/etc/grub.d/10_linuxを見れば分かるとおり
grub.cfgの$linux_root_device_thisversionによって作られています。
で、これは$GRUB_DEVICEから作られています。（grub-mkconfig参照）
結局、$GRUB_DEVICEはどこを参照しているかというと以下のコマンドで出してます。
grub-probe --target=device /
というわけでgrub-probeというコマンドの結果を入れているので、grub legacyみたいに設定値ではありません。じゃあどうやってrootパラメータを変更するの？って話になるけど、それはchrootするとか
GRUBメニュー選択時にEDITするとかが良いんじゃないでしょうか？ </description>
    </item>
    
    <item>
      <title>/dev/disk/by-uuidに無いHDDがある？</title>
      <link>https://yaasita.github.io/2012/01/06/3236/</link>
      <pubDate>Fri, 06 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/06/3236/</guid>
      <description> 答え
mkfsでフォーマットしてないからです。
フォーマットすれば出ます。
ファイルシステム単位につけるものらしいね
だからmkfsしなおしたら変わります
ご注意を
参考リンク
http://manual.aptosid.com/ja/part-uuid-ja.htm </description>
    </item>
    
    <item>
      <title>マザーボードのチップセットとかCPU情報をLinuxで取得する</title>
      <link>https://yaasita.github.io/2011/12/31/3257/</link>
      <pubDate>Sat, 31 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/31/3257/</guid>
      <description> lshwというユーティリティがあった
aptでインストールできた
参考リンク
PCのハードウェア情報を表示するには </description>
    </item>
    
    <item>
      <title>freenetをLinux環境にインストール</title>
      <link>https://yaasita.github.io/2011/12/19/3319/</link>
      <pubDate>Mon, 19 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/19/3319/</guid>
      <description> 公式ページからDownloadを選択「Linux etc」をクリックnew_installer_offline_1405.jarをダウンロードして
↓のコマンドでインストール
java -jar new_installer_offline.jar
インストールするディレクトリを聞かれるので適当に答えればOK
run.shが起動とか終了の時に使うシェル
START引数で起動、STOP引数で停止かな </description>
    </item>
    
    <item>
      <title>HJSplitって何だ？</title>
      <link>https://yaasita.github.io/2011/11/06/3361/</link>
      <pubDate>Sun, 06 Nov 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/11/06/3361/</guid>
      <description> ファイルを分割＆結合してくれるソフトです
主に海外のダウンロードサイトなどで目にします。
公式サイトはこちら
そこからLinux版とWinodws版が選べます
今回はLinux版を使います
公式ページからtarファイルを拾ってきて解凍すればOK
その中にあるhjsplitを蹴れば実行されますXが動いている＋GTKが入っていれば多分大丈夫
※まあLinuxならcatでつなげてもいいと思う </description>
    </item>
    
    <item>
      <title>iotop日本語man</title>
      <link>https://yaasita.github.io/2011/10/30/3403/</link>
      <pubDate>Sun, 30 Oct 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/10/30/3403/</guid>
      <description>iotopを最近使ってたから日本語訳にしてみた
結構意訳になってる
IOTOP(1)&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;  IOTOP(1)


NAME
iotop - シンプルなIOモニター
SYNOPSIS
iotop [OPTIONS]
DESCRIPTION
iotopはLinuxカーネルからI/O使用情報を取得し(カーネル2.6.20以上を必要とします)、
プロセス・スレッド毎にI/O使用状況を表示します。
カーネルのビルドオプションに以下を含める必要があります。
CONFIG_TASK_DELAY_ACCT, CONFIG_TASK_IO_ACCOUNTING, CONFIG_TASKSTATS and CONFIG_VM_EVENT_COUNTERS
iotopはI/Oのプロセス/スレッドごとのI/O帯域を表示間隔毎に表示します。
また、プロセスがI/Oの処理によって待たせれている時間の割合も表示します。
各プロセスについてI/Oの優先度(クラス/レベル)が表示されます。
加えて、表示間隔の間に読み書きされた総I/O帯域は一番上に表示されます。
左矢印、右矢印キーを使うとソート項目を変更できます。rでソート順を逆転できます。
oで--onlyオプションの有効、無効を切り替えられます。(IOを使用しているプロセスだけを表示するかどうか)
pで--processesオプションの有効、無効を切り替えられます。(プロセスのみを表示してスレッドは表示しないかどうか)
aで--accumulatedオプションの有効、無効を切り替えられます。(IOの累積値表示に切り替えるかどうか)
qで終了します。
iでスレッド/プロセスの優先度を変更できます。
その他のキーを押すと最新の情報に更新できます。
OPTIONS
--version
バージョンを表示し終了します。
-h, --help
使用方法を表示し、終了します。
-o, --only
実際にI/Oを使用しているプロセス/スレッドのみを表示します。これはoを押すことで
表示中にも切り替えることができます。
-b, --batch
対話的な表示でなくなります。(バッチモード)これは状態を記録するときに便利です。
-n NUM, --iter=NUM
自動的に終了する時間を指定します。(デフォルトでは自動的に終了しません。)
これはバッチモードで役に立ちます。
-d SEC, --delay=SEC
表示間隔を設定します。(デフォルトは1秒)　1.1秒のような少数も指定可能です。
-p PID, --pid=PID
表示するプロセスIDを指定します。(デフォルトは全て表示します)
-u USER, --user=USER
表示するユーザーIDを指定します。(デフォルトは全て表示します)
-P, --processes
プロセスのみ表示します。通常は全てのスレッドを表示します。
-a, --accumulated</description>
    </item>
    
    <item>
      <title>LinuxでrootのGUIウィンドウを開きたいとき</title>
      <link>https://yaasita.github.io/2011/10/11/3424/</link>
      <pubDate>Tue, 11 Oct 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/10/11/3424/</guid>
      <description> sudoでrootになってからXアプリを起動してもDisplayのオープンに失敗するので
gksuでrootターミナルを開いてからやるとOK </description>
    </item>
    
    <item>
      <title>postfixでメールフィルタを設定</title>
      <link>https://yaasita.github.io/2011/09/25/3445/</link>
      <pubDate>Sun, 25 Sep 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/09/25/3445/</guid>
      <description> 1.main.cfに以下を追加
content_filter=filter:dummy
2.master.cfに以下を追加
filter unix - n n - - pipe
flags=Rq user=hogeuser argv=/tmp/filter.pl $recipient
※$recipientは受信者が引数に渡される
参考リンク
Postfix キューに入った後のコンテンツフィルタ
Postfix設定パラメータ </description>
    </item>
    
    <item>
      <title>Linuxでスキャナを使うには</title>
      <link>https://yaasita.github.io/2011/08/21/3487/</link>
      <pubDate>Sun, 21 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/21/3487/</guid>
      <description> aptか何かでsaneとxsaneをインストール
sane-find-scannerで検索
/etc/sane.d/mustek_usb.confを編集
以下の行だけ有効化
option max_block_size 1024 usb 0x04b8 0x010a /dev/usb/scanner0 
あとはrootでログインしてxsaneをメニューから選択すればできた
ちなみに試したのはEpsonのGT-8700
参考リンク
http://samidarehetima.blog9.fc2.com/blog-entry-8.html
検索した結果 </description>
    </item>
    
    <item>
      <title>WindowsでもMplayerを使う</title>
      <link>https://yaasita.github.io/2011/08/14/3533/</link>
      <pubDate>Sun, 14 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/14/3533/</guid>
      <description>Mplayerはオープンソースのメディアプレイヤー
公式サイトからDownloadと進んで
「MPlayer SVN Windows with SMPlayer GUI (recommended)」をえらんだ
最初に設定したのは以下の通り
GeneralMedia Settingで「Remember Settings for all files」を外した
Screenshotsの場所を変更
※これはファイル毎に再生ポジションを記憶してくれたりする
設定ファイルはC:\Documents and Settings\hoge\.smplayerにある
InterfaceRecent filesを20に変更
Instancesタブで一つのウィンドウしか開かないようにした
File types関連付けする拡張子にチェック
あと注意しなければならないことは
マルチディスプレイだと左のウィンドウに移動したときに
Video→Screenをえらんでディスプレイ先を切り替えること</description>
    </item>
    
    <item>
      <title>lighttpdでバーチャルホスト設定</title>
      <link>https://yaasita.github.io/2011/08/13/3554/</link>
      <pubDate>Sat, 13 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/13/3554/</guid>
      <description> lighttpd.confを少しいじるだけで出来た
以下のように設定した
hogehoge.netのホスト(HTTP_HOST)またはプライベートIPで指定してきたら
/var/wwwを見せる
それ以外なら/var/www2を見せる
という制御にした
server.document-root = &#34;/var/www2&#34; $HTTP[&#34;host&#34;] == &#34;hogehoge.net&#34; { server.document-root = &#34;/var/www&#34; } else $HTTP[&#34;host&#34;] == &#34;192.168.0.4&#34; { server.document-root = &#34;/var/www&#34; } 
今回はドキュメントルート以外は全部同じ設定にしてあるので、conf-enabled/05-auth.confとかも同じ設定になるので注意 </description>
    </item>
    
    <item>
      <title>sudoku(数独)の日本語man</title>
      <link>https://yaasita.github.io/2011/08/12/3583/</link>
      <pubDate>Fri, 12 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/12/3583/</guid>
      <description>Linux用のsudokuゲームの日本語manです
NAMEsudoku - 数独ゲーム
SYNOPSIS(ゲームを始める)
sudoku [options] ... [&amp;amp;lt;filename&amp;amp;gt;]
(問題を作成)
sudoku -g [&amp;amp;lt;num&amp;amp;gt;] [options] ...
(問題を解く)
sudoku -v [options] ...
(難易度を計算)
sudoku -s [options] ...
DESCRIPTIONThe sudoku board game is played on a 9x9 grid, divided into rows, columns, and
9 blocks of 3x3 squares. The objective is to fill the empty squares with the
digits 1-9, so that each row, column, and block contains each of the digits 1-9</description>
    </item>
    
    <item>
      <title>LinuxでHDDの使用率を調べるには？</title>
      <link>https://yaasita.github.io/2011/08/11/3678/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3678/</guid>
      <description> HDDの各フォルダの使用量を調べる方法について調べた
duコマンドで計ってもいいけど
Baobabってコマンドでもいいかも
参考リンク
ハードディスク使用率をグラフィカルに表示するには
ディレクトリやディスクの使用量を調べるには </description>
    </item>
    
    <item>
      <title>wineで入れたソフトのアンインストールについて</title>
      <link>https://yaasita.github.io/2011/07/14/3719/</link>
      <pubDate>Thu, 14 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/14/3719/</guid>
      <description> ここに書いてあった
以下のコマンドで出来るらしい
uninstaller
その他にregeditというコマンドでレジストリも編集できるらしい
まあなにかおかしくなったら~/.wineを削除すればOKだろう
参考リンク
http://linux.ikoinoba.net/index.php?mode=page&amp;amp;aim=wine </description>
    </item>
    
    <item>
      <title>オープンソースの音楽再生ソフト「subsonic」を使ってみる</title>
      <link>https://yaasita.github.io/2011/07/13/3740/</link>
      <pubDate>Wed, 13 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/13/3740/</guid>
      <description> SubsonicはWebベースの音楽再生ソフトでサーバーにある音楽をitunesの様に管理・再生できるソフトみたい
インストールは驚くほど簡単だった
Debian Squeeze
１．Subsonic動作に必要なファイルをインストールしておく
↓あたりをaptとかでインストールしておく（詳しくはこちら）
openjdk-6-jre
flac
faad
vorbis-tools
ffmpeg

２．ダウンロードしたSubsonicをインストール
dpkg -i subsonic-x.x.deb
３．ブラウザでアクセスして設定
http://localhost:4040/にアクセス（もしくは違う端末からIPアドレス指定でもOK）して
設定する。
まずは日本語にするにはSetting→General→Languageを日本語にすればOK
あとはadminのパスワードと必要なアカウントの作成、音楽フォルダの指定、必要ならネットワーク設定を行えば使えるようになる
※注
以下の機能はSubsonicプロジェクトに寄付しないと継続して使用できません
Android、iPhoneやWindows Phone 7のへのストリームの音楽配信ビデオストリーミングsubsonic.orgのDNSサービスWebインターフェイスで広告が表示されない
参考リンク
http://d.hatena.ne.jp/Molokheiya/20110628/p1
関連ソフト
gnump3d
Ampache
AudioGalaxy </description>
    </item>
    
    <item>
      <title>シンプルで軽量なブラウザsurf</title>
      <link>https://yaasita.github.io/2011/06/06/3781/</link>
      <pubDate>Mon, 06 Jun 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/06/06/3781/</guid>
      <description> Debianのsidならパッケージがあったのでこんな感じでリポジトリを設定
-iオプションで画像を無効化、-pでFLASH等のプラグインを無効化、-sでJavaScript無効化とか出来るので
重いサイトを見るときには重宝しそう
ただ、レンダリングはChromeの方が早い気がする
似ている名前でsurfrawというのがあるけどこれはWebから指定した単語の検索結果をブラウザに渡してくれるソフトらしい
こんな感じで書くとgoogleでdebianを検索した結果がブラウザに渡される
surfraw　google debian </description>
    </item>
    
    <item>
      <title>top系のコマンドをまとめてみる（システムモニタリングツール）</title>
      <link>https://yaasita.github.io/2011/05/24/3883/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/24/3883/</guid>
      <description> システムモニタリングtop
標準インストール？の基本的なモニタリングソフト
htop
もっとユーザフレンドリーなUIになって見やすくなったtop
iotop
IOに着目して負荷を見るためのtop
atop
アクティブなプロセスのみを表示、前表示と差分があったものを表示するtop
ネットワークモニタリングapachetop
apacheのログからアクセスをリアルタイムに解析してくれる
lighttpdのログでも使えた
iftop
インターフェイスごとにトラフィックを計測
nethogs
アプリ毎にトラフィックを測定
dnstop
DNSのトラフィックを表示
jnettop
ホストとポート毎にトラフィックを表示
sntop
接続を検地するtop
参考リンク
http://phpspot.org/blog/archives/2010/12/top.html
http://journal.mycom.co.jp/news/2009/09/07/005/index.html </description>
    </item>
    
    <item>
      <title>インプットメソッドibusを試す</title>
      <link>https://yaasita.github.io/2011/05/10/4087/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4087/</guid>
      <description> aptで以下をインストール
ibus
ibus-anthy
ibus-gtk
ibus-qt4
kasumi
im-switch

インストールしたら
im-switch -s ibusで切り替え
ibus-setupでセットアップ
dwmだとツールバーが無いので以下のように設定

参考リンク
http://glandium.org/blog/?p=989 </description>
    </item>
    
    <item>
      <title>Xmingを試してみる</title>
      <link>https://yaasita.github.io/2011/05/01/4235/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/01/4235/</guid>
      <description> Xmingはwindowsで使えるXサーバー
ここからダウンロードしてインストール
とりあえず使ってみるにはWindows側で以下のコマンドでXサーバーを起動
Xming.exe -ac -multiwindow -clipboard

Linux側で以下のコマンドを実行（Windows側のIPアドレスが192.168.0.3だった場合）
export DISPLAY=&#34;192.168.0.6:0&#34;

あとはXのアプリを起動すればWindows側に現れるはず
本当はこの方法だとセキュリティ的にまずいのでX11転送とかを使う方がいいかも
参考リンク
公式サイト </description>
    </item>
    
    <item>
      <title>タスク切り替えソフトを選ぶ</title>
      <link>https://yaasita.github.io/2011/05/01/4214/</link>
      <pubDate>Sun, 01 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/01/4214/</guid>
      <description> 使いやすい＋早いと思ったのは
ufsかなぁ
ctclもなかなか良い感じだけど
切替の早さはufsかなぁ・・・
参考リンク
http://d.hatena.ne.jp/ampll/20090602/1243924925 </description>
    </item>
    
    <item>
      <title>ddclientでキャッシュが邪魔して更新されない件</title>
      <link>https://yaasita.github.io/2011/04/30/4256/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/30/4256/</guid>
      <description> どうやらキャッシュを参照して前回と同じIPなら更新しない仕様みたい
更新日が30日以上の間隔が空いてるなら更新するみたいだけど、待ってられないので
こんなスクリプトをcronに登録しておいた
#!/bin/bash
CACHE_FILE=&#34;/var/cache/ddclient/ddclient.cache&#34;
NOW_IP=`host hogehoge.net | cut -f 4 -d&#39; &#39;`
echo &#34;now ip is $NOW_IP&#34;
CACHE_IP=`cat $CACHE_FILE | tail -1 | cut -f 5 -d, | cut -f 2 -d= `
echo &#34;cache ip is $CACHE_IP&#34;
if [ &#34;$NOW_IP&#34; = &#34;$CACHE_IP&#34; ] ; then
echo &#34;IP check OK&#34;
else
echo &#34;IP check NG&#34;
rm $CACHE_FILE
fi

過去記事
ddclientでワーニングが出る問題
ddclientでDynDNSのIPをアップデートしてみようか </description>
    </item>
    
    <item>
      <title>nmapでサーバーの生存確認をする</title>
      <link>https://yaasita.github.io/2011/04/30/4277/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/30/4277/</guid>
      <description>自分の家のサーバー構成は前回話した感じになっている
（DNSを切り替えることでつながる先をスイッチしている）
自宅のサーバーが落ちるときにDynDNSを更新してレンタルサーバーに向くようにしているけど、これが結構失敗したりするので、レンタルサーバー側でも定期的に監視するようにした。
監視は以下の手順で行う
1.まずDNSで名前を引いて自分（レンタルサーバー側）に向いているか自宅に向いているか調べる
→自分に向いていたら問題ないので処理終了
→自宅に向いていたら2へ
2.自宅のサーバーのメールポートにコネクションが張れるか確認
→張れたら問題なく稼動しているので処理終了
→駄目なら自宅鯖が落ちてると判断しDynDNSを更新してDNSを自分に向かせる
以上の処理をcronに登録して1時間置きにやってみる
nmapでスキャンするときには-PNと-sTをつけるのがポイント
-PN →　自宅のルーターはpingに反応しないのでホストの生存確認は不要
-sT → ルーターからNAPT環境だとステルススキャン(-sS)はうまくいかなかった
nmap hogehoge.net -p 25 -v -PN -sT

あとは適当にスクリプトを組む
#!/usr/bin/perl
use strict;
use warnings;
#################################
# LOG
my $LOG=&#34;/var/log/hogelog&#34;;
#################################
my @result = `nmap hogehoge.net -p 25 -PN -sT`;
if ( join(&#34;&#34;,@result) =~/25\/tcp\s+open\s+smtp/ ){
system &#34;logger &#39;JITAKU MAIL IS LIVE!!&#39;&#34; and die $!;
logadd (@result);
}
else {
system &#34;logger &#39;JITAKU MAIL IS DEAD!</description>
    </item>
    
    <item>
      <title>よく使うCGIスクリプト</title>
      <link>https://yaasita.github.io/2011/04/18/4319/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/18/4319/</guid>
      <description> 無料で使えてとても助かってる
フォトアルバム pipipiga
UTF-8用のファイルとか用意していてくれる
http://popilol.lolipop.jp/NiconicoPHP/
Fuploader
FLASHで出来てる　アップローダ
100Mまでアップロード可能
http://www.yumemaboroshi.net/cgi4905/
UTF-8+LFへの変換は
nkf -w8 -Lu ファイル名でOK
wikiはPukiWikiが設置が簡単で良いと思う </description>
    </item>
    
    <item>
      <title>lighttpdでアクセス制御</title>
      <link>https://yaasita.github.io/2011/04/17/4341/</link>
      <pubDate>Sun, 17 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/17/4341/</guid>
      <description> こんな感じで指定すると
/upload配下以外はユーザー認証が必要
 $HTTP[&#34;url&#34;] !~ &#34;^/upload&#34; {
auth.require = (
&#34;&#34; =
(
&#34;method&#34; = &#34;basic&#34;,
&#34;realm&#34; = &#34;wolzone&#34;,
&#34;require&#34; = &#34;valid-user&#34;
)
)
}

参考リンク
lighttpdの記述方法
lighttpdのmod_auth使用方法 </description>
    </item>
    
    <item>
      <title>ターミナルが256色をサポートしているかテストするには？</title>
      <link>https://yaasita.github.io/2011/04/12/4362/</link>
      <pubDate>Tue, 12 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/12/4362/</guid>
      <description> http://vimwiki.net/?tips%2F70
↑の256colors2.plっていうスクリプトを動かせばよいらしい </description>
    </item>
    
    <item>
      <title>bug.nを試してみた</title>
      <link>https://yaasita.github.io/2011/04/11/4383/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4383/</guid>
      <description> 前回Dwmにはまったので
Windowsでも出来ないか探してみたらあった
bug.nというらしい
使い方はLinuxの時とほぼ同じ
※（Winは左Windowsキー）
アクティブウィンドウの切り替え
Win+↑
Win+↓

ウィンドウのリサイズ
Win+←
Win+→

ウィンドウのクローズ
Win+c

分割の縦横切り替え
Win+Ctrl+Tab

タイトルバーの表示非表示
Win+Shift+d

ウィンドウの入れ替え
Win+Shift+Enter

マスターウィンドウの左右切り替え
Win+Ctrl+Enter

よく分からないけどレイアウトの変更
Win+Ctrl+←
Win+Ctrl+→

タスクバーの表示非表示
Win+Space

bug.nの終了
Win+Shift+q

参考リンク
http://sourceforge.jp/projects/tilingwm/wiki/FrontPage </description>
    </item>
    
    <item>
      <title>Debianのデスクトップ環境をDwmに変更してみた</title>
      <link>https://yaasita.github.io/2011/04/11/4446/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4446/</guid>
      <description> 軽量と言われるLXDEだけどやはり10年前のノートPCだと重いと感じてきたので変更する
変更するのはウィンドウマネージャのDwm
インストールはaptとかでさくっとできるはず
デフォルトのMod1キーはAltキーなのでいつもAltキーが必要です
起動して左上に表示されている１～９の数字は仮想デスクトップでここではタグと呼びます
基本操作は以下のとおり
uxtermの起動
Alt+Shift+Return
ウィンドウ間のフォーカスを切り替え
Alt+j
Alt+k

ウィンドウのサイズ変更
Alt+h
Alt+l

フォーカスされているウィンドウを閉じる
Alt+Shift+c
6番目のタグへ移動
Alt+6
全てのタグを選択(全ウィンドウが表示されます)
Alt+0
現在フォーカスされているウィンドウを4番目のタグへ移動
Alt+Shift+4
ウィンドウの入れ替え
Alt+Return
前回選択してたタグへ移動
Alt+Tab
上のバーの表示／非表示切り替え
Alt+b
ウィンドウをタイル表示（重ならないように配置）
Alt+t
フローティングレイアウト表示へ（重なって表示）
Alt+f※Alt押しながらマウスで移動できます
常に最大化表示（ひとつのウィンドウが最大化表示）
Alt+m
Dwmを終了
Alt+Shift+q
その他詳しいことは
man dwm
ステータスバーを変えるにはこちら
参考リンク
http://sourceforge.jp/projects/tilingwm/wiki/FrontPage </description>
    </item>
    
    <item>
      <title>Dwmのステータスバーと壁紙を変更してみる</title>
      <link>https://yaasita.github.io/2011/04/11/4425/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4425/</guid>
      <description> デフォルトのステータスバーはあまりにそっけないので変更してみた
下記参考リンクを参照すれば分かると思うけど
Dwmの上のバーの右上はxsetroot -nameで示される名前を表示しているので
~/.xsessionrcにこんな感じのスクリプトを書いてやる
※.xsessionrcはXのセッション開始時に読み込まれる詳しくは/etc/X11/Xsession参照
~/.xsessionrc
#!/bin/bash
xsetroot -solid DarkSlateBlue
hsetroot -full /usr/share/lxde/wallpapers/block.jpg
while true
do
DATE=`date +&#34;%Y/%m/%d %H:%M&#34;`
xsetroot -name &#34;$DATE&#34; || exit
sleep 30s
done &amp;amp;

xsetroot は背景色の設定（ここでは下の行で壁紙を設定してるから意味無いけど・・・）
hsetroot が壁紙の設定hsetroot をインストールする必要はある
参考リンク
ステータスバーの変更について
参考記事
xsessionrcのプロセス制御 </description>
    </item>
    
    <item>
      <title>Linuxで使える軽い画像ビューワ</title>
      <link>https://yaasita.github.io/2011/04/11/4404/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4404/</guid>
      <description> 使いやすくて軽い画像ビューワー
xzgvというらしい
画像フォルダで
xzgv *
で起動して
shift-z　ファイル一覧表示
z　Windowsにフィット
Space　次の画像へ
b　前の画像へ
矢印キー　画像を任意の方向へスクロール
s　画像をズームイン
S　画像をズームアウト
mirage基本はマウスで出来る
F2で画像をリネームできるのがポイント </description>
    </item>
    
    <item>
      <title>DebianにOperaをインストール</title>
      <link>https://yaasita.github.io/2011/04/02/4528/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/02/4528/</guid>
      <description> このとおりやれば出来た
/etc/apt/sources.listにリポジトリを追加
deb http://deb.opera.com/opera squeeze non-free

以下のコマンドを実行
aptitude update
wget -O - http://deb.opera.com/archive.key | apt-key add -
aptitude update
aptitude install opera

apt-keyについては
以下を参照
基本的にはapt-key updateでいいはず
http://debian.fam.cx/index.php?AptGet#secapt </description>
    </item>
    
    <item>
      <title>sshのポートフォワード（ポート転送）を禁止する</title>
      <link>https://yaasita.github.io/2011/03/27/4591/</link>
      <pubDate>Sun, 27 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/27/4591/</guid>
      <description> AllowTcpForwardingをnoに設定すればOKらしい
参考リンク
http://kamae-norihiro.blogspot.com/2010/11/ssh.html </description>
    </item>
    
    <item>
      <title>rsyncのWindows版 cwRsyncを試す</title>
      <link>https://yaasita.github.io/2011/03/22/4612/</link>
      <pubDate>Tue, 22 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/22/4612/</guid>
      <description> 公式サイトからリンクを辿ってcwRsync_4.0.4_Installer.zip をダウンロード＆インストール今回は最小構成でインストール
Secure Channel Wrapperは入れなかった
PATHに&#34;C:\Program Files\cwRsync\bin&#34;を追加
あとはrsyncコマンドがつかえるので使用する今回はネットワークドライブからローカルへ同期してみた
例）Nドライブ→Cドライブのtestフォルダを同期
rsync -av --delete /cygdrive/n/backup/Firefox/ /cygdrive/c/test/
※心配なら-nオプションを付けて挙動を確認すると良いかも
参考リンク
http://satospo.sakura.ne.jp/blog_archives/tech/tool/cwrsync.html </description>
    </item>
    
    <item>
      <title>bashでTAB補完する（menu-complete）</title>
      <link>https://yaasita.github.io/2011/03/07/4694/</link>
      <pubDate>Mon, 07 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/07/4694/</guid>
      <description> ↓で出来るらしいスゴイ
今までzshじゃなきゃできないと思ってた
bind TAB:menu-complete

参考リンク
http://debian.fam.cx/index.php?Japanese#ped4bcbd </description>
    </item>
    
    <item>
      <title>tinyhoneypotを使ってみる</title>
      <link>https://yaasita.github.io/2011/02/06/4778/</link>
      <pubDate>Sun, 06 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/06/4778/</guid>
      <description> aptかなんかでインストールコマンドは→thpot
thpotはxinetdかinetdを通してでも起動できます
接続とセッションを通しての命令は全てログに記録されます
以下のどれかの引数を与えてサービスを起動します
shell, ftp, http, mssql, smtp, pop3 ,ssh
ドキュメントは以下
/usr/share/doc/tinyhoneypot </description>
    </item>
    
    <item>
      <title>ctagsを使ってみる</title>
      <link>https://yaasita.github.io/2011/01/22/4822/</link>
      <pubDate>Sat, 22 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/22/4822/</guid>
      <description> タグファイル(tags)を作ればCtrl+]で飛べる
使い方は
ctags --language-force=perl hoge.pl
こうすれば同じ場所にtagsファイルが作られる
基本的には拡張子で判断してくれるらしいから
--language-forceは不要かも
対応言語は以下のコマンドで出力できる
ctags --list-languages
ちなみにcscopeというC言語専用だけど高機能な解析ツールもあるらしい・・・
参考リンク
http://hp.vector.co.jp/authors/VA025040/ctags/ctags_j.html </description>
    </item>
    
    <item>
      <title>Linuxで使える（割と）高機能なエディタ</title>
      <link>https://yaasita.github.io/2011/01/22/4843/</link>
      <pubDate>Sat, 22 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/22/4843/</guid>
      <description> 普段はgvimを使ってるけど長い行を開いたりすると重いので
Leafpad以上でgvim以下のエディタを探してたら
Editraというエディタを発見
スクリーンショットはこちら
特徴は
・マルチプラットフォーム（Windows,Linux,MacOS)
・60以上のプログラミング言語対応のシンタックスハイライト
・タブで使える
・日本語化されている
・軽い
・viモード搭載（環境設定→ドキュメント→コードタブ→「viエミュレーションを有効にする」にチェック </description>
    </item>
    
    <item>
      <title>任意のIPを作って送れるソフト</title>
      <link>https://yaasita.github.io/2011/01/16/4926/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/16/4926/</guid>
      <description> sendip
debianならリポジトリにある
例）memo.txtの内容をtcpで送る
sendip -d memo.txt -p ipv4 -p tcp 192.168.0.3
参考リンク
http://masy.families.jp/diary/?200010c </description>
    </item>
    
    <item>
      <title>rtmpdump試してみた</title>
      <link>https://yaasita.github.io/2011/01/15/4947/</link>
      <pubDate>Sat, 15 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/15/4947/</guid>
      <description>NHKオンデマンドに挑戦
1.URLを解析
fms0000.nod.ipcasting.jp

2.hostsを変更
今回は192.168.0.4にrtmpsuckを走らせておく
192.168.0.4 fms0000.nod.ipcasting.jp

3.でダウンロード
出来るはずだったが、なんか出来なかったOTZ
因みにこんな方法もあるLinuxならiptablesで転送する
hogeuserをすべてlocalhostへ飛ばす例
iptables -t nat -A OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner hogeuser -j REDIRECT

iptables -t nat -n -L で確認
iptables -t nat -D OUTPUT 1　で削除
参考リンク
http://h.hatena.ne.jp/syouhi/9259273302189983422
気を取り直してradiko録音これはrtmpsuckで一発OK
rtmpdumpならこうかな
#!/bin/bash
rtmpdump -v -e -s &#39;http://radiko.jp/player/swf/player_2.0.1.00.swf&#39; \
-r &#39;rtmpe://radiko.smartstream.ne.jp/FMJ/_defInst_&#39; \
--playpath &#39;simul-stream?ucid=1dbab2acb98174787146465a40ba9eba&#39; \
-p &#39;http://radiko.jp/player/player.html&#39; \
-f &#39;WIN 10,1,102,64&#39; \
-o FMJ</description>
    </item>
    
    <item>
      <title>tmuxを試してみた</title>
      <link>https://yaasita.github.io/2011/01/01/4970/</link>
      <pubDate>Sat, 01 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/01/4970/</guid>
      <description>tmuxの考え方セッション・・・複数のウィンドウを持つ固まり
ウィンドウ・・・複数のペインを持つ1画面
ペイン・・・いわゆる操作できる端末
プレフィックスキー全てプレフィックスキー(デフォルトはC-b)を押した後に入力する
※ $で始まるものはコマンド操作
それ以外はプレフィックスキー後に入力する
セッション操作
hogesessionというセッション名で作成
$ tmux new -s hogesession
セッション選択
:choose-session
セッション一覧を表示
$ tmux ls
hogeセッションにアタッチ
$ tmux a -t hoge
ウィンドウ操作windowのリネーム ,※:set-window-option automatic-rename onにするとデフォルトになる
新しいwindowの作成
c
windowの数字選択指定
0～9
windowの数字を変更
.
ウィンドウを8番へ移動
move-window -t 8
ウィンドウ選択
:choose-window
ウィンドウの入れ替え(1と入れ替える)
swap-window -t 1
ペインpane操作
ペインの入れ替え
{}
pane番号表示
q
レイアウト変更
SPACE
上下左右サイズ変更
+-&amp;amp;lt;&amp;amp;gt;
ペインの入力同期 on/off
:set-window-option synchronize-panes on:set-window-option synchronize-panes off
ペインを:1ウィンドウから一枚もらってくる
:join-pane -s :1
ペインを:1ウィンドウに移す
:join-pane -dt :1※:1.</description>
    </item>
    
    <item>
      <title>rsyncのinclude,excludeで注意すること</title>
      <link>https://yaasita.github.io/2010/12/26/5031/</link>
      <pubDate>Sun, 26 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/26/5031/</guid>
      <description>とりあえず3点
1.--excludeする前に--includeしておかないと意味が無い
2.あるフォルダ配下のファイルを対象にしたかった場合はフォルダ自体もincludeする
3.include,excludeは同期元ファイルからの相対パス
で例を使って説明します
以下の場合を想定
.
|-- dst
`-- src
|-- ABC
| |-- A
| |-- B
| `-- C
|-- a
|-- b
|-- c
|-- d
|-- e
`-- f

まずsrcフォルダからdstフォルダへ同期するとします
1の注意点から
↓のようにやっても何一つ同期されません。最初に全部弾いているので駄目
rsync -av --delete-excluded --exclude=&#34;*&#34; --include=&#34;a&#34; src/ dst/
下記のようにexcludeを後に置けばすればaだけ同期できます
rsync -av --delete-excluded --include=&#34;a&#34; --exclude=&#34;*&#34; src/ dst/

2の注意点について
ABCディレクトリ配下のみ同期したい場合
こうしてもうまくいきません(excludeで全部弾かれてしまいます)
rsync -av --delete-excluded --include=&#34;ABC/*&#34; --exclude=&#34;*&#34; src/ dst/
ABC配下のみ同期したい場合はまずABCをincludeします
↓のようにやればOK
rsync -av --delete-excluded --include=&#34;</description>
    </item>
    
    <item>
      <title>multitailを調べてみる</title>
      <link>https://yaasita.github.io/2010/12/20/5092/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/20/5092/</guid>
      <description> multitail messages -I syslog.1
-I でファイルをひとつのウィンドウに混ぜて表示
multitail -l &#39;ping hoge&#39; -L &#39;ping foo&#39;
外部プログラムなら-Lで混ぜて表示
-cSオプションで組み込みのカラースキームを適用
表示している最中に
tでステータス表示
Tでログファイルを空にする
hでヘルプ
下記エラーが出たらウィンドウが小さいのが原因なので大きくすればOK
A problem occured at line 511 in function mynewwin (from file term.c):
Failed to create window with dimensions 54x9 at offset -27,-4 (terminal size: 76,24)
Binary build at Dec 10 2009 23:58:27

参考リンク
http://www.kichise.com/modules/pico/other/multitail.html
http://www.vanheusden.com/multitail/  </description>
    </item>
    
    <item>
      <title>teraterm &#43; screenだとマウスのスクロールが出来ない？</title>
      <link>https://yaasita.github.io/2010/12/20/5113/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/20/5113/</guid>
      <description> 解決策
Ctrlを押しながらマウスホイールをまわす TERATERM.INIのTranslateWheelToCursorをoffにする
参考リンク
http://d.hatena.ne.jp/orangeclover/20100406/1270564074 </description>
    </item>
    
    <item>
      <title>CUIでRSSを見てみる</title>
      <link>https://yaasita.github.io/2010/12/19/5135/</link>
      <pubDate>Sun, 19 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/19/5135/</guid>
      <description>下記参考リンクがすごい参考になったのでちょっとずつ試してみた
* Newsbeuter
適当にRSSへのURLを書いたテキストを用意(ex.url.txt)
url.txtは一行一URLにしておいた
newsbeuter -u url.txtで起動
RでリロードしてからENTERで適当に読める

インターフェイスはmuttに似ているなんかメールを読むようにRSSを読める既読未読とか分かるし、マーク、検索とか出来て便利前回読んだ時の状態を~/.newsbeuterに保存しているのでまた読み返すときも便利かもしれないsを押すと記事を保存できたりする
* Snownews 
squeezeにパッケージが無かったのでレビュー出来なかった・・・
lennyならある模様
* Canto (旧NRSS)
squeezeにはNRSSもcantoもあるけど公式サイト見るとCantoへ誘導されるのでこっちを使ってみる
何も考えずに下記のコマンドを打つと.cantoが出来る
canto.canto以下にconf.py.exampleが出来ているのでconf.pyへリネーム後
好きなURLへ変更すれば使える
jkで上下移動　SPACEで記事を読める

デフォルトでviキーバインドシンプルな外観gでブラウザに渡すことも出来たりするフィードを更新するときはcanto-fetchコマンドを使う
* rsstail
↓こんな感じで使ってる
rsstail -ldpcHvu http://blog.livedoor.jp/dqnplus/index.rdf-l でリンクを表示
-d　で説明
-p　で記事の日付
-c でコメント表示
-H でHTMLタグを除去
-v 冗長オプション
-u に続いてURLを与える
multitailでまとめるには
multitail -cS rsstail -l &#34;rsstail -lpcHvu http://aerial.deko8.jp/feed_ranking1d.xml&#34; -cS　rsstail -L &#34;rsstail -lpcHvu http://feeds.feedburner.com/hatena/b/hotentry&#34;
でいけると思ったけど文字化けして駄目だった
しょうがないから各RSSを追記リダイレクト(rsstail -u http://hoge.jp/rss.xml &amp;amp;gt;&amp;amp;gt; /tmp/rss.log)でそのファイルを眺めてる
* まとめ
newsbeuter →　メールを読むようにじっくり読みたい人向け</description>
    </item>
    
    <item>
      <title>CUIでmp3等を再生</title>
      <link>https://yaasita.github.io/2010/12/10/5218/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5218/</guid>
      <description> mplayer で出来た
→　←　でseek
0 9 / * で音量操作
p　で一時停止
m　でミュート
q　で抜ける
I　でタイトル表示
mplayer -playlist hoge.lst
hoge.lstにはプレイリストを記述（一行に1ファイル） </description>
    </item>
    
    <item>
      <title>screenでウィンドウ番号を入れ替える</title>
      <link>https://yaasita.github.io/2010/12/10/5177/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5177/</guid>
      <description> Ctrl-a押してから:number [n]
で出来るらしい
参考リンク
http://d.hatena.ne.jp/riskn/20070430/1177961903 </description>
    </item>
    
    <item>
      <title>smbclientで共有リストを表示させる</title>
      <link>https://yaasita.github.io/2010/11/23/5303/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/23/5303/</guid>
      <description> 192.168.0.11がsambaサーバだったとすると
smbclient -L 192.168.0.11
 </description>
    </item>
    
    <item>
      <title>XenをDebian squeezeにインストールしてみる</title>
      <link>https://yaasita.github.io/2010/11/23/5324/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/23/5324/</guid>
      <description>はやっている様なのでXenを使ってみた
基本的にはDebian Wikiの通りやればOK
1.必要なパッケージのインストール
amd64じゃなかったら686とか自分のPCに合わせる
bridge-utils debootstrapも忘れずに
aptitude -P install xen-hypervisor-4.0-amd64 linux-image-xen-amd64 xen-tools
2.grubの起動順位、設定の変更？
なんか知らんがこうするといいらしい
mv -i /etc/grub.d/10_linux /etc/grub.d/50_linux
update-grub2
echo &#34;&#34;  /etc/default/grub
echo &#34;# Disable OS prober to prevent virtual machines on logical volumes from appearing in the boot menu.&#34;  /etc/default/grub
echo &#34;GRUB_DISABLE_OS_PROBER=true&#34;  /etc/default/grub
update-grub2

3./etc/default/xendomainsを編集して状態保存を無効化
XENDOMAINS_RESTORE=false
XENDOMAINS_SAVE=&#34;&#34;

4.ネットワークブリッジの設定
/etc/xen/xend-config.sxpを編集
以下の行のコメントアウトを解除
(network-script network-bridge)

5.VMイメージ作成する際のデフォルト値を設定
今回はLVM上にイメージファイルを作らないのでdir を指定
ここで設定しなくても全部コマンドラインでやるのも可→参考リンク
pygrubっていうのはdom0からカーネルを一々VM上に持っていかなくても済む
仕組み　→　参考リンク
dir = /home/xen</description>
    </item>
    
    <item>
      <title>rsshでscp/sftp専用のアカウントを作る</title>
      <link>https://yaasita.github.io/2010/10/31/5405/</link>
      <pubDate>Sun, 31 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/31/5405/</guid>
      <description> rsshってソフトで実現できるらしい
基本的にはyum install rsshでインストール→/etc/rssh.confを編集でOKらしい
で、sftp,scp専用には出来たけどchroot環境を構築するためのスクリプトmkchroot.shが見つからなかった
yum whatprovides */mkchroot.shとかやっても駄目
とりあえずchrootは今回はあきらめた
他にもこんな方法があるらしい→http://d.hatena.ne.jp/hidde/20091215/1260872041
参考リンク
http://d.hatena.ne.jp/h2onda/?of=5
http://www.sdri.co.jp/rssh/faq.html </description>
    </item>
    
    <item>
      <title>ddclientでワーニングが出る問題</title>
      <link>https://yaasita.github.io/2010/10/11/5567/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5567/</guid>
      <description> ddclientで
WARNING: unable to determine IP addressというエラーが出ていた
use=web, if=eth0を
use=webに直したらOK
参考リンク
http://royalwin.blog.so-net.ne.jp/archive/c2300401272-1
http://ubuntuforums.org/showthread.php?t=635409 </description>
    </item>
    
    <item>
      <title>Debianのbittorrentパッケージをインストール</title>
      <link>https://yaasita.github.io/2010/10/11/5589/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5589/</guid>
      <description> 以下マニュアル
名前
bittorrentダウンローダー - 分散ネットワークを使用したダウンロード
概要
btdownloadheadless [ option ... ] URL
btdownloadheadless [ option ... ] filename
btdownloadcurses [ option ... ] URL
btdownloadcurses [ option ... ] filename
btdownloadgui [ option ... ] URL
btdownloadgui [ option ... ] filename
説明
このマニュアルのページは、簡単に
btdownloadheadless,
btdownloadcurses,
btdownloadgui
オリジナルプログラムがマニュアルを持たないので、
このマニュアルはDebianディストリビューション用に書かれました。
上記のプログラムはP2Pプロトコルbittorrentを使用したファイルのダウンロードを行うものです。
上記すべてのプログラムは全て同じオプションが使えます。

で、この3コマンドの違いは何かと言うと端末の制御の仕方が違うだけ
btdownloadheadless ・・・端末に延々と出力し続ける（tail -f見たいな感じ)
btdownloadcurses　・・・Cursesを使った端末制御見やすい CUIなら通常はこれ
btdownloadgui　・・・GUIで使うならこれXが必要
※ちなみにDebianの場合btdownloadcurses.bittorrentとbtdownloadcursesは同じ（シンボリックリンク） </description>
    </item>
    
    <item>
      <title>bzrで知ってると便利なコマンド</title>
      <link>https://yaasita.github.io/2010/10/10/5631/</link>
      <pubDate>Sun, 10 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/10/5631/</guid>
      <description> bzr uncommit これでチェックインの取り消しが出来る
色付き差分表示
bzr cdiff
履歴付きmv（ただ管理下のファイルをmvしたときは対象フォルダの履歴がそこで終わってしまうため）
bzr mv 
前に書いた記事
参考リンク
http://bbs2ch.sourceforge.jp/?page=%B3%AB%C8%AF%BC%D4%B8%FE%A4%B1%BE%F0%CA%F3 </description>
    </item>
    
    <item>
      <title>OpenOfficeでクリップアートを追加する</title>
      <link>https://yaasita.github.io/2010/09/18/5776/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5776/</guid>
      <description> こちらから
OOOP-accessories-2.6.0.2.oxtをダウンロードした
参考リンク
クリップアートの追加
http://gigazine.net/index.php?/news/comments/20071031_oxygenoffice_professional/ </description>
    </item>
    
    <item>
      <title>rsyncで双方向同期するには</title>
      <link>https://yaasita.github.io/2010/09/18/5796/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5796/</guid>
      <description> --updateオプションで古い更新日で新しい更新日のものを上書きしないようにする
--existingですでに受信側にあるファイルのみを対象とします
これを指定してA→B,B→Aという2回rsyncすれば同期できるはず </description>
    </item>
    
    <item>
      <title>システムをRAID5へ移行したときのメモ</title>
      <link>https://yaasita.github.io/2010/08/24/5999/</link>
      <pubDate>Tue, 24 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/24/5999/</guid>
      <description> 1.まずRAID5を構築
※今回は/bootは別パーティションとします
2.作成したmd0へシステムを全コピー
rsync -aHx --exclude=&#39;/boot/*&#39; / /mnt
3.GRUBの設定
/boot/grub/menu.lstを編集
# kopt=root=/dev/sda2 ro
↓
# kopt=root=/dev/md0 ro
そんで
update-grubを実行
4./etc/fstabの編集
#/dev/sda2&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; ext3&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; defaults,errors=remount-ro 0&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; 1
/dev/md0&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; /&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; ext3&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; defaults,errors=remount-ro 0&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; 1
参考リンク
http://omake.accense.com/wiki/LinuxRAID1Transition </description>
    </item>
    
    <item>
      <title>お気に入りのフォント</title>
      <link>https://yaasita.github.io/2010/08/19/6058/</link>
      <pubDate>Thu, 19 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/19/6058/</guid>
      <description> その名も
ふい字
http://hp.vector.co.jp/authors/VA039499/ 
http://www.forest.impress.co.jp/lib/offc/print/font/fuiji.html </description>
    </item>
    
    <item>
      <title>sshでポートフォワード専用アカウントの作成</title>
      <link>https://yaasita.github.io/2010/08/08/6078/</link>
      <pubDate>Sun, 08 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/08/6078/</guid>
      <description> 1.ログインシェルを/bin/falseのようにすると当然ログインできない
＝ポートフォワードできないと思われがちだが・・・
ssh -L 80:192.168.0.6:80 -i /tmp/id_rsa -l hoge 192.168.0.6 cat
こんな感じで指定するとログインシェルを実行する前にcatを実行して止まるので
ポートフォワード専用アカウントが出来るよ
ただし、chroot環境でbinとかコピーしてないと出来ないので
puttyの何もしないコマンドが最強だけどこれどうやってんだ？

追記
-Nオプションってやつを追加すればいいんだった
こんな感じでOK
ssh -N -L 80:192.168.0.6:80 -i /tmp/id_rsa -l hoge 192.168.0.6
あと関係ないけど
ServerAliveInterval ってやつを指定して定期的にパケットを投げると切れないらしい </description>
    </item>
    
    <item>
      <title>bzrでvimdiffを使う</title>
      <link>https://yaasita.github.io/2010/07/19/6202/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6202/</guid>
      <description> 前回はWindowsで使う方法を紹介したが、Linuxで使う方法を紹介。
1.最新のリポジトリからソースを取得
bzr branch lp:bzr-vimdiff
2.ディレクトリへインストール
mkdir -p ~/.bazaar/plugins/vimdiff/
cp bzr-vimdiff/__init__.py ~/.bazaar/plugins/vimdiff/
3.使い方
例）リビジョン18から19までの差分を表示
bzr vimdiff -r18..19 cron.daily/ore_ntpdate
公式サイト
https://launchpad.net/bzr-vimdiff </description>
    </item>
    
    <item>
      <title>squid3を試してみた</title>
      <link>https://yaasita.github.io/2010/07/19/6181/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6181/</guid>
      <description> * Debian で squid3を試す
aptitudeとかでsquid3をインストール
以下squid.confの設定
1.アクセスリストlocalnetを有効化
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network 
2.cachemgr3.cgiを見るための設定と普通のアクセス設定
http_access allow manager localnethttp_access allow localnet
いずれもdenyの前に置くこと
3.ポートの変更
http_port 8080
4.各種設定
cache_mem 20 MB maximum_object_size_in_memory 256 KB
cache_dir ufs /var/spool/squid3 4000 32 256
maximum_object_size 18000 KB #icp_port 3130 #無効化
forwarded_for off
5.あとcachemgr.confも変更したポートに合わせる
localhost:8080
なんかあったらとりあえずログを見ること
/var/log/messages
/var/log/syslog
/var/log/squid3/*
※あと注意点
NetBIOS名で指定しないことcachemgr3を操作しようとしないこと
↓は駄目
http://jitaku:8000/cgi-bin/cachemgr3.cgi
↓はおｋ
http://192.168.0.11:8000/cgi-bin/cachemgr3.cgi
使った感想は特に昔と変わんないかな・・・ </description>
    </item>
    
    <item>
      <title>sshポートフォワード専用アカウントを作成したときのメモ</title>
      <link>https://yaasita.github.io/2010/07/19/6140/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6140/</guid>
      <description>ここではそのポートフォワードだけのユーザ（制限ユーザをhoge）とする
1.ユーザの作成
useradd -s /bin/rbash -m hoge
passwd hoge
rbashを使うためには/etc/shellsに追加されていることを確認する
→参考
2.所有者,パーミッション,PATHの変更
cd /home/
chown -R root:root hoge/
chmod -R 755 hoge/
cd /home/hoge/
echo &#34;export PATH=&#39;&#39;&#34; &amp;amp;gt;&amp;amp;gt; .bashrc
3.chroot環境の構築
chroot環境のため必要なものをコピー
debian:/home/hoge# ls -l
合計 16
drwxr-xr-x 2 root root 4096 2010-07-19 17:49 bin
drwxr-xr-x 83 root root 4096 2010-07-19 17:48 etc
drwxr-xr-x 2 root root 4096 2010-07-19 17:49 lib
drwxr-xr-x 2 root root 4096 2010-07-19 17:50 lib64
4./etc/ssh/sshd_configを編集</description>
    </item>
    
    <item>
      <title>teratermでsshの自動ログインマクロ</title>
      <link>https://yaasita.github.io/2010/07/19/6161/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6161/</guid>
      <description> connect &#39;debian:22 /ssh /2 /user=hoge /passwd=hoge /auth=password /W=&#34;HOGE&#34;&#39;debianっている鯖にログインするとする
こんな感じで書いておけば良いらしい
userがログインユーザー
passwdがパスワード
authが認証方式
Wがウィンドウタイトル </description>
    </item>
    
    <item>
      <title>Bazaar Explorerでvimdiffを使えるようにする設定</title>
      <link>https://yaasita.github.io/2010/07/04/6223/</link>
      <pubDate>Sun, 04 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/04/6223/</guid>
      <description> 設定→ユーザー設定
・一般タブではエディタを指定（ここではgvimを指定）
※gvim.exeが使えるようPATHを通す必要があります・エイリアスにはgvimdiffを指定（コマンドラインでdiffした時に便利）

・差分には↓の様に設定するとGUIからもgvimdiffができる

ちなみに設定ファイルは
↓にあった
C:\Documents and Settings\&amp;amp;lt;user&amp;amp;gt;\Application Data\bazaar\2.0\bazaar.conf※GUIの設定はqbzr.confを編集すること
参考リンク
http://d.hatena.ne.jp/itsumo/ </description>
    </item>
    
    <item>
      <title>Bazaarを使ってみたので分かった事のまとめ</title>
      <link>https://yaasita.github.io/2010/06/20/6285/</link>
      <pubDate>Sun, 20 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/20/6285/</guid>
      <description>Mercurialを使ったことがあるならすぐ慣れると思うけど
Mercurialは単一のリポジトリでブランチを管理できるけどbzrは切り離す必要があるということは注意
* マニュアル
公式マニュアル
http://doc.bazaar.canonical.com/ja/
Bazzar Wiki
http://www19.atwiki.jp/bazaar/pages/1.html
* Logの参照
1から3までのログを参照
bzr log -r 1..3今日の変更を参照
bzr log -r today最新の変更を参照
bzr log -r last:ちなみにbzr log -vとやると変更ファイル一覧が見れる
* 現在のリビジョンを確認
bzr revno
* リポジトリの情報を表示
bzr info
* ブランチからmerge
bzr merge /tmp/hoge
* push/pull
ブランチから変更を送信/取得
* ブランチを作成
mercurialと違ってブランチはリポジトリも切り離す
必要がある
bzr ./ /tmp/hogehttp://d.hatena.ne.jp/methane/20090825/1251175889
* 無視リスト
bzr ignore &#34;hoge&#34;これで.bzrignoreに追加される(手動で追加しても良い)
デフォルトでワイルドカードが有効
例) classの拡張子を無視
bzr ignore &#34;*.class&#34;!を最初につけると例外を追加できる
例）~で終わるファイルを無視しない (*~はデフォルトで無視リストに入っている)
!*~RE:をつけると正規表現が使える
例）libディレクトリは以下の.oファイルを無視
bzr ignore &#34;RE:lib/.*\.o&#34;ちなみにbzr ignoredで実際に無視しているファイルを確認できる
※一度管理下に置かれてしまったファイルは無視できないため、bzr rm --keepで一旦削除して下さい</description>
    </item>
    
    <item>
      <title>モニタの電源をsettermでオフに出来ない場合</title>
      <link>https://yaasita.github.io/2010/06/18/6325/</link>
      <pubDate>Fri, 18 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/18/6325/</guid>
      <description> vbetool というのがあるらしい
https://forums.ubuntulinux.jp/viewtopic.php?id=3477
vbetool dpms offで画面消えた
普段はコンソールを使わないので/etc/init.d/rcの先頭に書いておいた
if [ &#34;$1&#34; = &#34;2&#34; ]
then
vbetool dpms off
fi

前回書いた方法でもできるけど場合によっては完全にきれないことがあるっぽい </description>
    </item>
    
    <item>
      <title>C/MigemoをMSVC 2010でコンパイルしてみる</title>
      <link>https://yaasita.github.io/2010/06/13/6407/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6407/</guid>
      <description> vimにインストールするためMSVC 2010でコンパイルしてみた
まずは↓からMicrosoft Visual Studio Express C++をダウンロード&amp;amp;amp;インストール
http://www.microsoft.com/japan/msdn/vstudio/express/
（ちなみにインストールするとメイリオフォントもインストールされる Firefoxとかだと文字がにじむサイトとかでるかも・・・）
そんでkaoriyaさんのHPから「ソースコード 1.3(予定) 開発版」をダウンロード解凍して cmigemo-1.3c\compile\vs2003のCMigemo.slnをMSVS 2010で開く→変換ウィザードでプロジェクトを変換
プロジェクトを開いたらReleaseに変更

そんでCMigemoを右クリック→リビルドすると cannot open include file &#39;afxres.h&#39;というエラーが出るのでこんな感じで直す
修正前 #include &#34;afxres.h&#34;
修正後 #include 
#define IDC_STATIC -1
あとはvs2003\CMigemo\Release\CMigemo.exeとvs2003\MigemoDLL\Release\migemo.dllを保存してvimにインストール
辞書ファイルはCygwinで作成するかkaoriyaさんの「バイナリ(DLL) 1.2 リリース版 for Windows 」をダウンロードしてもおｋ
ちなみにmigemo.vimは1.2版のを使った方が調子が良かった </description>
    </item>
    
    <item>
      <title>hg diffが見難いのでvimdiffに変更する</title>
      <link>https://yaasita.github.io/2010/06/13/6346/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6346/</guid>
      <description> .hgrcに以下を追記すればおｋ
[extdiff]
cmd.vimdiff = vimdiff

後はhg diffとやるところで
hg vimdiffと打ってみよう </description>
    </item>
    
    <item>
      <title>FLVとかmp4とかを音楽ファイルに変換</title>
      <link>https://yaasita.github.io/2010/05/30/6470/</link>
      <pubDate>Sun, 30 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/30/6470/</guid>
      <description> 「Pazera Video Converters」
というソフト
インストールとか面倒な作業はいらなくて解凍すればすぐ使えて便利
ipodとかPSPとか選べる 
&amp;amp;nbsp;これが変換画面

参考リンク
http://www.forest.impress.co.jp/article/2008/02/15/pazeravideo2flash.html </description>
    </item>
    
    <item>
      <title>バックアップツールについてまとめてみた</title>
      <link>https://yaasita.github.io/2010/05/17/6652/</link>
      <pubDate>Mon, 17 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/17/6652/</guid>
      <description> 以下のバックアップツールがあるらしい
* dump/restore
dumpというext3しか対応してないがまとめてひとつのファイルにしてくれるツール
* afio
tar+gzipよりはいいかと・・・
* rsync
あるディレクトリと同期を取る
* unison
双方向同期に対応している
* pdumpfs
windows環境にもあってすぐ使えて便利
日付ごとに取るならこれが簡単
* rdiff-backup
diffして差分バックアップするときに使う
rsyncじゃだめなのかなぁ
* duplicity,
暗号化に対応したバックアップソフト
* amanda
よりシステマチックにバックアップしたいときに使うといいかも
最初の設定はめんどいかも
* bacula
amandaに似てるかも初期設定はちょっと敷居高いかも </description>
    </item>
    
    <item>
      <title>mdadmでメール送信メモ postfix</title>
      <link>https://yaasita.github.io/2010/05/16/6692/</link>
      <pubDate>Sun, 16 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/16/6692/</guid>
      <description> mdadmが動いているAサーバーからBサーバーに(relay)転送したい
とりあえず以下のように設定192.168.0.11が転送サーバーとする
relayhost = [192.168.0.11]:25
しかしsmtpd_helo_restrictionsが転送サーバーに設定されているため
Aサーバーのホスト名がFQDNでないため拒否されてしまう
1.↓のように設定する(中括弧を忘れずに)
mtp_helo_name = [192.168.0.5]
2.外部PGを使って動的に変更
参考リンク
milter_helo_macros
3.Bサーバーの方のsmtpd_helo_restrictionsを設定する
こことかここに書いてある
smtpd_helo_restrictions = permit_mynetworks,reject_non_fqdn_hostname
他にもcheck_helo_accessを設定する方法もある
ちなみにDebianの場合モニタモードで動いているプロセスは
ps aux | grep mdadm
で確認してみると分かる
/etc/init.d/mdadmの方を再起動すれば設定ファイルが読み込まれる
設定ができたら↓のコマンドで送信できるか試してみると良い
mdadm --monitor --scan --test -1 </description>
    </item>
    
    <item>
      <title>rsyncで差分バックアップ</title>
      <link>https://yaasita.github.io/2010/05/05/6794/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/05/6794/</guid>
      <description> rsyncで差分バックアップするにはcompare-dest、copy-dest、link-destのどれかを指定して前回のファイルを指定します。
たとえばしたのようにすると差分のあったファイルのみバックアップされます。
（なのでこのバックアップした時点のsorceフォルダを復元したいならdstにdst2を上書く）
rsync -av --delete-excluded --compare-dest=/root/dst/ /root/sorce/ /root/dst2/

↓のようにすると差分の無いファイルは転送を行わずに元ディレクトリdstからコピーします
ローカルコピーだとあまり意味はありません
rsync -av --delete-excluded --copy-dest=/root/dst/ /root/sorce/ /root/dst2/

↓のようにすると差分の無いファイルは前回のもののハードリンクになります
ディスク容量を節約できて便利です
rsync -av --delete-excluded --link-dest=/root/dst/ /root/sorce/ /root/dst2/

参考リンク
http://www.itmedia.co.jp/enterprise/articles/0804/25/news034.html </description>
    </item>
    
    <item>
      <title>サクラエディタのブックマークの設定はどこにあるか？</title>
      <link>https://yaasita.github.io/2010/05/05/6774/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/05/6774/</guid>
      <description> C:\Program Files\sakura\sakura.iniの
szMarkあたりがそれっぽい
サクラエディタ全終了→sakura.ini編集→該当ファイル読み込みでOK </description>
    </item>
    
    <item>
      <title>rsyncでバックアップしてみる</title>
      <link>https://yaasita.github.io/2010/05/04/6815/</link>
      <pubDate>Tue, 04 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/04/6815/</guid>
      <description> 想定する環境はシステムディレクトリが/として/mntに他のHDDがマウントされているときです
何も考えずに
rsync -av --delete / /mnt/201005004/みたいにしてしまうと
/mntにファイルを書き込んだものをrsyncがまたバックアップして・・・というようになりディスクが無駄になります
rsync -av --delete-excluded --exclude=&#39;/mnt/*&#39; / /mnt/201005004/このようにするとうまくいきます。
除外ファイルを/mntと指定してもできますがその場合ディレクトリが作成されないので一応このようにしました。
delete-excludedオプションは除外されたファイルを送信側で削除するオプションです。今回は意味がないですが、前回はあったが、今回は除外したファイルを削除したい！といったときに便利です。
delete-excludedオプションはdeleteオプションも含んでいます
あとこちらの方などの方法を見るとsysとprocディレクトリはバックアップしなくても大丈夫そうです。
実際にdumpで取ったフルバックアップファイルを見てもそこは空になっていました。
まとめると↓のコマンドでおｋ
# today=`date +%Y%m%d`
# mkdir $today
# echo &#34;- /sys/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# echo &#34;- /proc/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# echo &#34;- /mnt/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# rsync -a --delete --delete-excluded --exclude-from=/mnt/exc.txt / /mnt/20100505/※この/mntなどは第一引数で指定したディレクトリを/とみなした相対パスです。rsync -av --exclude-from=exc.txt /mnt /hogeなどとした場合は/mnt/mntが除外対象となります参考リンク
http://www.infoscience.co.jp/technical/rsync/rsync.html </description>
    </item>
    
    <item>
      <title>レジストリまで追跡して確実にアンインストール　Revo Uninstaller</title>
      <link>https://yaasita.github.io/2010/05/03/6876/</link>
      <pubDate>Mon, 03 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/03/6876/</guid>
      <description> Revo Uninstaller
というらしい
参考リンク
http://www.forest.impress.co.jp/article/2007/05/29/revouninst.html </description>
    </item>
    
    <item>
      <title>Dovecotの認証方式をCRAM-MD5に変更する</title>
      <link>https://yaasita.github.io/2010/04/29/6938/</link>
      <pubDate>Thu, 29 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/29/6938/</guid>
      <description> dovecot.confを以下のように変更
auth default {
# Space separated list of wanted authentication mechanisms:
# plain login digest-md5 cram-md5 ntlm rpa apop anonymous gssapi
# NOTE: See also disable_plaintext_auth setting.
mechanisms = plain cram-md5
}

パスワードファイル指定
passdb passwd-file {
# Path for passwd-file
args = /etc/dovecot/cram-md5.pwd
}

あとは↑で指定した/etc/dovecot/cram-md5.pwdを作る
# dovecotpw Enter new password: password
Retype new password: password
{CRAM-MD5}26b633ec8bf9dd526293c5897400bddeef9299fad

↑で出たものを参考にし、/etc/dovecot/cram-md5.pwdを作成
usename:{CRAM-MD5}26b633ec8bf9dd526293c5897400bddeef9299fad

参考リンク
公式Wiki </description>
    </item>
    
    <item>
      <title>重複ファイルを削除するfdupesというソフト</title>
      <link>https://yaasita.github.io/2010/04/05/6999/</link>
      <pubDate>Mon, 05 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/05/6999/</guid>
      <description> Debian Lennyで試した
↓で重複ファイルのリスト出力
$ fdupes -r /var/samba/tyouhuku/

↓で重複ファイルを自動削除
$ fdupes -d -N -r /var/samba/tyouhuku/

参考リンク
http://ubulog.blogspot.com/2009/01/ubuntu.html
その他重複ファイル探すソフト
http://en.wikipedia.org/wiki/List_of_duplicate_file_finders </description>
    </item>
    
    <item>
      <title>Firefox3.6でタブを開くときに一番右に開くようにする</title>
      <link>https://yaasita.github.io/2010/03/14/7040/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7040/</guid>
      <description> about:config
↓
browser.tabs.insertRelatedAfterCurrent
をFalseにする </description>
    </item>
    
    <item>
      <title>mdadmでRAID1を構築</title>
      <link>https://yaasita.github.io/2010/03/14/7060/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7060/</guid>
      <description> 基本的に↓に書いてあるとおりにやればできた
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/a060raid1.html
1.aptitudeでインストール
2.↓のコマンドでRAIDを構築（上記とは違いパーティション指定じゃなくてデバイス指定でやってみた）
mdadm --create /dev/md0 --level=raid1 --raid-devices=2 /dev/hdb /dev/hdd
3.md0は普通のデバイスなのでfdiskなりmkfsなり好きなようにする
4.↓のコマンドで停止
mdadm --misc --stop /dev/md0↓のコマンドで再構成
mdadm --assemble /dev/md0 /dev/hdb /dev/hdd
5.ここで
dd if=/tmp/crash.dat of=/dev/hdbと打ってHDDを破壊
6.下記コマンドでhdbに不良マークをつける
mdadm --manage /dev/md0 -f /dev/hdbそんでアレイから削除
mdadm --manage /dev/md0 -r /dev/hdbそんで（実際には交換して）アレイに追加
mdadm --manage /dev/md0 --add /dev/hdb
7.次回起動時も有効にするには？
なんかいろいろなサイトで/etc/mdadm/mdadm.confを手動で更新してたけど
バージョンの違いか分からないが勝手に編集されていた
今回試したバージョンは↓
mdadm - v2.6.7.2 - 14th November 2008
※watchコマンドを駆使すればcat /proc/mdstatが見やすくなる詳しくはこちら
参考リンク
http://masy.families.jp/diary/?20080815
http://hellokitty68.main.jp/wiki/Mdadm
http://www.ioss.jp/sohodiy/mdadm8-1_5.html </description>
    </item>
    
    <item>
      <title>MPC HC デュアルディスプレイで動画再生すると真っ黒になる</title>
      <link>https://yaasita.github.io/2010/03/07/7121/</link>
      <pubDate>Sun, 07 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/07/7121/</guid>
      <description> &amp;amp;nbsp;なんか知らんがこうすると直った
参考リンク
http://tools4hack.blog21.fc2.com/blog-entry-2.html
Google検索 </description>
    </item>
    
    <item>
      <title>Super π (スーパーパイ)をPhenomⅡで</title>
      <link>https://yaasita.github.io/2010/03/06/7204/</link>
      <pubDate>Sat, 06 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/06/7204/</guid>
      <description> AMD Phenom II X4 945 Box (Socket AM3)で計ってみた
スペックは前に書いたとおり
 </description>
    </item>
    
    <item>
      <title>mercurialのGUIクライアントTortoiseHgの日本語化</title>
      <link>https://yaasita.github.io/2010/03/05/7226/</link>
      <pubDate>Fri, 05 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/05/7226/</guid>
      <description> 前回の記事からずいぶんたったけどWindows版をインストールしたのでメモ
1.ダウンロード・インストール
ここからtortoisehg-0.9.3-hg-1.4.3.exe all-in-one installer with TortoiseHg 0.9.3 and Mercurial 1.4.3 っていうのをダウンロード＆インストール＆再起動
2.日本語化
C:\Program Files\TortoiseHg\cmenu_i18n\thg-cmenu-ja.regを実行レジストリ書き換え→ログオフしてからログインで反映
3.外部ツールの導入
http://www.02.246.ne.jp/~torutk/mercurial/intro.html
↑とか見るとWinMergeとか便利そうだなKdiff3とかは元からはいってるっぽい
今日はここまで </description>
    </item>
    
    <item>
      <title>よく戸惑うThunderbirdのメール形式(HTMLかプレーンテキストか)</title>
      <link>https://yaasita.github.io/2010/02/23/7266/</link>
      <pubDate>Tue, 23 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/23/7266/</guid>
      <description> Mozilla公式によると
Thunderbird のメッセージ作成ウィンドウはメッセージの内容に応じて自動的にテキスト形式と HTML 形式を切り替えます。手動でメッセージの形式を変更する場合は [オプション] &amp;amp;gt; [書式] から変更できます。
また Thunderbird 上のメールツールバーにある [作成] ボタンを Shift キーを押しながらクリックするとテキスト形式しか利用できないメッセージ作成ウィンドウが表示されます。常にテキスト形式のメッセージしか使用しない場合は、メニューバーの [ツール] &amp;amp;gt; [アカウント設定] を開きます。そしてテキスト形式でのみ使用したいアカウントの名前を選択し、[編集とアドレス入力] 内の [HTML 形式でメッセージを編集する] のチェックを外し、[アカウント設定] ダイアログの [OK] ボタンを押します。
だそうでShift押しながら作成ボタンとかで切り替えが可能みたいです。
あと注意しなければならないのは「アカウントの設定」からHTML形式でメッセージを編集するのチェックをはずした場合作成ウィンドウに「オプション」－＞「表示」が表示されません
※またはオプション→送信形式を見てください </description>
    </item>
    
    <item>
      <title>muttでキーバインドを変更するには？</title>
      <link>https://yaasita.github.io/2010/02/01/7369/</link>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/01/7369/</guid>
      <description> .muttrcを以下のように編集するとよい
bind &amp;amp;lt;map&amp;amp;gt; &amp;amp;lt;key&amp;amp;gt; &amp;amp;lt;function&amp;amp;gt;
&amp;amp;lt;map&amp;amp;gt; ... いつ使うかを記述 index,pagerなどを指定します。その状態の画面で？（ヘルプ）画面を出せばそこがどの画面か分かります。（ちなみにヘルプ画面はpagerです）
&amp;amp;lt;key&amp;amp;gt; ... 設定するキーを指定。指定方法はヘルプ画面と同様
&amp;amp;lt;function&amp;amp;gt; ... 実行する機能を記述。ヘルプ画面と同様。(next-line,previous-line等を指定)
で実際にはこんな感じで設定してる
vimみたいにjkで画面を上下させたいので・・・
.muttrc
 set folder=&#34;~/Maildir&#34;
set spoolfile=&#34;~/Maildir&#34;
set keep_flagged=yes
set mbox=&#34;&#34;
set postponed=&#34;/tmp/postponed&#34;
set sort=&#34;reverse-date-received&#34;
#スクロールして最後までいっても次のメッセージに飛ばない
set pager_stop=yes
#PAGERを変えたくなったらここに指定
#set pager=lv
#key bind setting
bind pager j next-line
bind pager k previous-line
bind pager J next-undeleted
bind pager K previous-undeleted
#Ctrl-Dで半ページスクロール下
bind pager &#34;\Cd&#34; half-down
#Ctrl-Uで半ページスクロール上
bind pager &#34;\Cu&#34; half-up

参考リンク
http://www12.atwiki.jp/linux2ch/pages/107.html </description>
    </item>
    
    <item>
      <title>TightVNCをインストールしてみた</title>
      <link>https://yaasita.github.io/2010/01/11/7430/</link>
      <pubDate>Mon, 11 Jan 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/01/11/7430/</guid>
      <description> Windows版のTightVNCを試してみた
公式サイトから「Self-installing package for Windows」を落としてみてインストール使用した感じはRealVNCより軽い感じがする・・・
使い方１　サービスとして起動する
スタートメニュー⇒ TightVNC ⇒ Administration　⇒ Install VNC Serviceを選んでクリック
コンパネの管理ツール⇒サービスを見てVNC Serverがあるのを確認する（制御はここで行う）

で設定はスタートメニュー⇒ TightVNC ⇒ Administration ⇒　Show Default Settingsからどうぞ
ちなみに設定でログを採取する設定にした際に作られる場所はC:\WINDOWS\system32の中のWinVNC.log
注意）上記の設定で手動で起動した場合タスクトレイに表示されないが再起動すると表示される

使い方２　ユーザーモードで起動する
スタートメニュー⇒ TightVNC ⇒ Launch TightVNC Serverで起動
ユーザーモードならタスクトレイにアイコンが出るのでそこを右クリックして設定を開いても良いし、
TightVNCの中にあるShow User Settingsで設定を開いても良い。
ちなみにログを採取するように設定した場合の吐き出される場所はC:\Program Files\TightVNCの中のWinVNC.log
あとWindows版のVNCはUNIXのようなconfファイルを使用しないので以下のレジストリに設定を保存する
HKEY_LOCAL_MACHINE\Software\ORL\WinVNC3
HKEY_CURRENT_USER\Software\ORL\WinVNC3 </description>
    </item>
    
    <item>
      <title>最近、Mercurial について勉強しているのでメモ</title>
      <link>https://yaasita.github.io/2009/12/26/7511/</link>
      <pubDate>Sat, 26 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/26/7511/</guid>
      <description> リンクメモ
日本語チュートリアル
GUIツールのTortoiseHg
TortoiseHgの日本語Wiki
オラ本のPDFを配布してるとこ </description>
    </item>
    
    <item>
      <title>mp3のエンコードが出来るプレイヤーみたいなソフトって？？</title>
      <link>https://yaasita.github.io/2009/12/23/7572/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/23/7572/</guid>
      <description> SCMPXです </description>
    </item>
    
    <item>
      <title>screenで開始するときの初期画面を表示しない</title>
      <link>https://yaasita.github.io/2009/12/23/7592/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/23/7592/</guid>
      <description> 免責事項とかCopyrightとかを表示しないようにするには
~/.screenrcに
startup_message offと書いておく </description>
    </item>
    
    <item>
      <title>Debian LennyをVirtualPC2007へインストール</title>
      <link>https://yaasita.github.io/2009/12/20/7654/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7654/</guid>
      <description> 試した環境は以下の通り
VirtualPC 6.0.156.0
Debian Lenny 最小のCDイメージ　バージョンは5.0.3
↓のサイトとかを参考にするとどうやらインストール時にパラメータを追加しないといけないらしいので
http://hiro-system.blog.ocn.ne.jp/blog/2009/03/debian_lennyvir_5b2e.html
インストール時にquit を取ってから&#34;noreplace-paravirt vga=791 clock=pit&#34;を追加する
（インストール時はまだ日本語配列ではないので=イコールのタイプには注意する）
参考リンクには/boot/grub/menu.lstを編集、update-grubするようなことが書いてあるけどなんかインストール時に指定したパラメータが有効になって既にmenu.lstに反映されていたので省く。あとGUIも使わないのでそこら辺も無視した。
参考リンク
Debian Wiki </description>
    </item>
    
    <item>
      <title>rep2の過去ログをtmpreaperを使って整理</title>
      <link>https://yaasita.github.io/2009/12/20/7633/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7633/</guid>
      <description>OpenJaneとかにはDAT落ちしたものを整理（削除）する機能があるけどrep2にはないのでtmpreaperで実装する
やり方はrep2/data直下にあるファイルはお気に入りとかなんで削除しない
それ以外は削除するっていう方法で行う
↓みたいなのをcronとかに保存しておけばいいんじゃないかな
#!/usr/bin/perl
use strict;
use warnings;
#### Initial Setting ###############
our $DAT_DIR=&#34;/var/www/rep2/data&#34;;
####################################
chdir ($DAT_DIR) or die $!;
unless ($DAT_DIR=~/\/$/){
$DAT_DIR.=&#34;/&#34;; #最後が/で終わってなかったら付け足す
}
opendir (DIR,$DAT_DIR) or die $!;
my @dir=readdir DIR;
my @fdir;
for (@dir){
push (@fdir,$_) if -f $_;
}
closedir DIR;
my $command;
$command = &amp;amp;lt;&amp;amp;lt; &#39;PRE&#39;;
nice -n10 tmpreaper --delay=30 --mtime-dir --symlinks 7d \
--showdeleted \
--mtime \
PRE
for (@fdir){
$command.=&#34;--protect &#39;$DAT_DIR&#34;.$_.&#34;&#39; \\\n&#34;</description>
    </item>
    
    <item>
      <title>Thunderbird3も出たことなのでコレクションを作っておく</title>
      <link>https://yaasita.github.io/2009/12/13/7696/</link>
      <pubDate>Sun, 13 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/13/7696/</guid>
      <description> Thunderbirdの方のコレクション
俺のアドオン（雷鳥）
Firefoxの方のコレクション
俺のアドオン（火狐） </description>
    </item>
    
    <item>
      <title>携帯でrep2見てるときに外部リンクを通勤ブラウザ以外に設定する</title>
      <link>https://yaasita.github.io/2009/12/12/7717/</link>
      <pubDate>Sat, 12 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/12/7717/</guid>
      <description>通勤ブラウザは重いしイマイチ使い勝手が良くなかったのでGoogleのGWT(Google Wireless Transcoder)を使う
rep2/lib/ShowThreadK.php を編集すればおｋ
650行目あたりの
// 通勤ブラウザ
if ($_conf[&#39;k_use_tsukin&#39;]) {
$tsukin_url = &#39;http://www.sjk.co.jp/c/w.exe?y=&#39; . urlencode($url);
if ($_conf[&#39;through_ime&#39;]) {
$tsukin_url = P2Util::throughIme($tsukin_url);
}
$ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; . hs($tsukin_url) . &#39;&#34;&amp;amp;gt;通&amp;amp;lt;/a&amp;amp;gt;&#39;;
}
↑を↓の様に変更
// 通勤ブラウザ
if ($_conf[&#39;k_use_tsukin&#39;]) {
// $tsukin_url = &#39;http://www.sjk.co.jp/c/w.exe?y=&#39; . urlencode($url);
$tsukin_url = &#39;http://www.google.co.jp/gwt/x?u=&#39; . urlencode($url);
if ($_conf[&#39;through_ime&#39;]) {
$tsukin_url = P2Util::throughIme($tsukin_url);
}
// $ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; . hs($tsukin_url) . &#39;&#34;&amp;amp;gt;通&amp;amp;lt;/a&amp;amp;gt;&#39;;
$ext_pre_hts[] = &#39;&amp;amp;lt;a href=&#34;&#39; .</description>
    </item>
    
    <item>
      <title>DovecotのTrashフォルダはどこにあるのか？</title>
      <link>https://yaasita.github.io/2009/12/06/7759/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7759/</guid>
      <description> それぞれ~/Maildirの中のドットファイルでしたls -aしたら見つかります
/Maildir/.Sent
/Maildir/.Trash
/Maildir/.Drafts
/Maildir/.Junk </description>
    </item>
    
    <item>
      <title>メールをCUIで読むソフト mutt</title>
      <link>https://yaasita.github.io/2009/12/06/7738/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7738/</guid>
      <description> インストールはDebian Lennyならaptitudeで簡単に入る
そんで使い方
基本的な使い方とかはこことか見れば大体分かる
Maildirを指定して
mutt -f ~/Maildirこれでとりあえず見れる
メールボックスとかは一々指定するのは面倒なので~/.muttrcを作成して
set folder=&#34;~/Maildir&#34;
set spoolfile=&#34;~/Maildir&#34;
set keep_flagged=yes
set mbox=&#34;&#34;
set postponed=&#34;/tmp/postponed&#34;
set sort=&#34;reverse-date-received&#34;
↑みたいなのを書いておく意味はここら辺を見るとわかるかも
設定ファイルを書けば以降はmuttのみで起動できる
mutt操作方法
PageUpとPageDownで次とか後のメールを選択（vim風にjkでもできるけど削除が選択できない）
?でヘルプ
mで新規メール作成
参考リンク
http://www.emaillab.org/mutt/whatis.html </description>
    </item>
    
    <item>
      <title>postfixでOP25B対策</title>
      <link>https://yaasita.github.io/2009/12/05/7861/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/05/7861/</guid>
      <description> OP25Bを実施しているISPの場合、25番ポートへの出力が制限されているからリレーしてもらうように設定する
/etc/postfix/main.cfを編集 (hoge.ne.jpがSMPTサーバーだとする）
ispauthはユーザー名とパスワードを書くファイル名前はなんでもOK
relayhost = [hoge.ne.jp]:587
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/ispauth
smtp_sasl_security_options = noanonymous
smtp_sasl_mechanism_filter = cram-md5,login,plain
ispauthには以下のようなものを書く
[プロバイダのSMTPサーバー]:587 プロバイダのユーザーID:プロバイダのパスワード
サーバーがhoge.ne.jp、ログインIDがfoobar、パスワードがbuzzだった場合は以下のように書く
[hoge.ne.jp]:587 foobar:buzz

そんで以下のコマンド投入
chmod 640 /etc/postfix/ispauth
postmap /etc/postfix/ispauth
/etc/rc.d/init.d/postfix restart
参考リンク
http://centos.server-manual.com/postfix_op25b.html
smtp_sasl_mechanism_filterはそのSMPTサーバーが使っているものにあわせるのでそれを確認する
telnet hoge.ne.jp 587
EHLO hoge.ne.jp
↓みたいなのが出たら↑の設定でOK
250-AUTH CRAM-MD5 PLAIN LOGIN
参考リンク
http://www.aconus.com/~oyaji/mail2/op25b.htm
※注意 SMTP認証を使う場合はlibsasl2-modulesがインストールされていることを確認してください

どうしても出来なかったら↓みたいな感じでパケットキャプチャー→Wiresharkで見て考える感じで
tcpdump -s 1500 ip host ?.?.?.? -w out.cap
 </description>
    </item>
    
    <item>
      <title>定期的に/tmpを掃除してくれるソフトtmpreaper</title>
      <link>https://yaasita.github.io/2009/12/05/7840/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/05/7840/</guid>
      <description> Debian Lennyで試した。
Red hat系だとtmpwatchとかあるみたいだけど無いのでこれを使う
まずはaptitudeでインストール
インストールすると/etc/cron.daily/tmpreaperが作成される
これによって毎日cronで実行される
設定はこれをいじってもできるが基本的には
/etc/tmpreaper.confをいじる
まずはワーニングが出るので13行目あたりにあるSHOWWARNINGをコメント化する
#SHOWWARNING=true

次にオプションを設定する各オプションの意味は以下の通り
TMPREAPER_TIME・・・どのくらいアクセスがないファイルを削除するか？設定値はデフォルトで7dつまり7d以上アクセスがないと削除
TMPREAPER_PROTECT_EXTRA・・・削除しては駄目な名前を指定
TMPREAPER_DIRS・・・削除の対象とするディレクトリ　デフォルトは/tmpのみ 複数指定するときはスペースで区切る　例）TMPREAPER_DIRS=&#39;/tmp/. /var/tmp/.&#39;
TMPREAPER_DELAY・・・実行するまで待つ時間　デフォルトは256秒
TMPREAPER_ADDITIONALOPTIONS・・・他に指定したいオプションがある場合はこここに入れる他のオプションはmanを参照
あと/etc/cron.daily/tmpreaper見れば分かるけど
デフォルトで
以下のオプションが設定されている。ヤバイファイルは消えないようにしているようだ
--protect &#39;/tmp/.X*-{lock,unix,unix/*}&#39; \
--protect &#39;/tmp/.ICE-{unix,unix/*}&#39; \
--protect &#39;/tmp/.iroha_{unix,unix/*}&#39; \
--protect &#39;/tmp/.ki2-{unix,unix/*}&#39; \
--protect &#39;/tmp/lost+found&#39; \
--protect &#39;/tmp/journal.dat&#39; \
--protect &#39;/tmp/quota.{user,group}&#39; \

※注意
デフォルトのシェルだと--ctimeが設定されています↓みたいに
nice -n10 tmpreaper --delay=$TMPREAPER_DELAY --mtime-dir --symlinks $TMPREAPER_TIME \
$TMPREAPER_ADDITIONALOPTIONS \
--ctime \
これだとcronでlocateのDBを作っているので、アクセスタイムが更新され
いつまで経っても削除されません。（ctimeオプションはatime+ctimeのチェックをします）
用途によってはここを--mtimeに変更してもいいと思います
 </description>
    </item>
    
    <item>
      <title>dovecotでQuota設定</title>
      <link>https://yaasita.github.io/2009/12/01/7882/</link>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/01/7882/</guid>
      <description> メールの容量を制限する（クォータの設定）するには？
Plugin settingsの部分に以下を追記
↓がグローバルなクォータ設定（ユーザー個別に設定すればそちらが優先される）
参考リンク→http://wiki.dovecot.org/Quota/1.0
plugin {
quota = maildir:storage=10240:messages=1000
}
上記の設定後
protocol imapに次の文を追記
参考リンク→http://wiki.dovecot.org/Quota/1.0
protocol imap {
mail_plugins = quota imap_quota
}
Thunderbirdで試すとクォータが有効なら↓のようなメッセージが出る

で、クォータ当てただけじゃ不便だから古いメッセージから自動で削除してくれるように設定するにはTrashプラグインを使う
protocol imap {
mail_plugins = quota imap_quota trash
}
plugin {
quota = maildir:storage=10240:messages=1000
trash = trash = /etc/dovecot/dovecot-trash.conf
}
さっき指定したdovecot-trash.conf　(無ければ作る）　を編集する
↓はTrashだけ削除の対象とする例
1 Trash
↑のファイルを1行つくればOK </description>
    </item>
    
    <item>
      <title>各種言語のソースコードからStepを計算してくれるソフト</title>
      <link>https://yaasita.github.io/2009/11/28/7924/</link>
      <pubDate>Sat, 28 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/28/7924/</guid>
      <description> Blue Step Counter
http://bluecard.no-ip.com/freeware/bluestepcounter/ </description>
    </item>
    
    <item>
      <title>IMAPを使ってメールを送受信するときOutlookとThunderbirdで使用フォルダが違う</title>
      <link>https://yaasita.github.io/2009/11/23/8004/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/23/8004/</guid>
      <description> IMAPで送受信するとそれが違う風になってしまう
使用しているフォルダは下の設定画面の購読するフォルダを管理するから確認できる

↓がその画面


Thunderbird以外のメーラーで不要なディレクトリができてしまった場合は
最初の画面から不要なフォルダを右クリック→削除で削除できる </description>
    </item>
    
    <item>
      <title>vim7の新機能omni補完について</title>
      <link>https://yaasita.github.io/2009/11/23/7964/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/23/7964/</guid>
      <description> インサートモードでCtrl+X Ctrl+Oでomni補完が出来るらしい
omnifuncってところで設定してるみたいだけどこれはファイルタイププラグイン呼ばれた時に設定されるらしいからあえてautocmdで呼ぶ必要もないみたい・・・
とりあえず今はサポートは以下の言語しかないみたい
C
(X)HTML with CSS
JavaScript
PHP
Python
Ruby
SQL
XMLヘルプは以下のコマンドでどうぞ
:h new-omni-completion
とりあえず参考リンク
http://kaede.to/~canada/doc/vimeperlephpinoadhie
http://amix.dk/blog/viewEntry/19021 </description>
    </item>
    
    <item>
      <title>vimの日本語ドキュメント</title>
      <link>https://yaasita.github.io/2009/11/23/7984/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/23/7984/</guid>
      <description> 香り屋さんのは有名だけど
他の人もヘルプの和訳をしているみたい
http://www.ac.cyberhome.ne.jp/~yakahaira/vimdoc/ </description>
    </item>
    
    <item>
      <title>sshのポートフォワード専用アカウントを作ろう</title>
      <link>https://yaasita.github.io/2009/11/19/8067/</link>
      <pubDate>Thu, 19 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/19/8067/</guid>
      <description> まあ基本的にはrbashで制限付シェルのアカウントを作るだけ
参考リンク
http://blog.recyclebin.jp/archives/555 </description>
    </item>
    
    <item>
      <title>Linuxで電卓コマンド bc とは</title>
      <link>https://yaasita.github.io/2009/11/15/8108/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/15/8108/</guid>
      <description> 結構便利です
参考リンク
http://x68000.q-e-d.net/~68user/unix/pickup?bc
http://www.linux.or.jp/JM/html/GNU_bc/man1/bc.1.html </description>
    </item>
    
    <item>
      <title>今日見つけた便利なソフト</title>
      <link>https://yaasita.github.io/2009/10/24/8229/</link>
      <pubDate>Sat, 24 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/24/8229/</guid>
      <description> CLISM
クリップボードの履歴機能を追加（つーかそれだけ。シンプルで良い）
http://ringonoki.net/tool/clip/cli.php
MDIE
タブ型ファイラー
http://cres.s28.xrea.com/soft/mdie.html </description>
    </item>
    
    <item>
      <title>vsftpdをinetd経由で動かす</title>
      <link>https://yaasita.github.io/2009/10/18/8269/</link>
      <pubDate>Sun, 18 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/18/8269/</guid>
      <description> なんかネット探してもみんなxinetdで動かしてるからinetdでの動かし方をメモ
１．/etc/vsftpd.confを以下のように変更
listen=NO

２．/etc/inetd.confに以下の記述を追加　※&amp;amp;lt;args&amp;amp;gt;の項は不要みたい

ftp stream tcp nowait root /usr/sbin/vsftpd

３．下記コマンドでinetdを再起動
/etc/init.d/openbsd-inetd restart
再起動／起動スクリプトの名前はopenbsd-inetdなので注意　前も書いたかも

あと最近はxinetdの方が主流みたいなので次はxinetdでやろうかな・・・
xinetdは単体でinetd + TCP wrapper(tcpd)の機能を持っているそうです
http://www.aconus.com/~oyaji/suse/vsftpd_suse.htm
http://www.express.nec.co.jp/linux/distributions/knowledge/network/xinetd.html </description>
    </item>
    
    <item>
      <title>sambaでゴミ箱を設定する</title>
      <link>https://yaasita.github.io/2009/10/12/8370/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8370/</guid>
      <description>http://www.atmarkit.co.jp/flinux/rensai/linuxtips/734recycle3.html
↑を見ればだいたい分かるけど
[global]
vfs objects = recycle
[hoge]
recycle:repository = /var/samba/gomibako/
recycle:keeptree = yes
recycle:touch = yes
recycle:versions = yes
recycle:maxsize = 0
hide files = /var/samba/gomibako/
※hide filesは隠しフォルダにするオプション
↑みたいに追加すればOK
後はゴミ箱のパーミッションを777にする
でも自動的に削除されないので・・・
削除できるようにする必要がある
cronとかに適当に↓とか登録しとけばいいんじゃないかな
#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
#### Initial Setting #######################
our $gomibako_dir=&#34;/var/samba/gomibako/&#34;;
############################################
say &#34;--- REMOVE GOMIBAKO (DIR = $gomibako_dir) ---&#34;;
chdir &#34;/var/samba/gomibako/&#34; or die $!;
system &#34;du -cah $gomibako_dir&#34;;
system &#34;rm -rf *&#34;</description>
    </item>
    
    <item>
      <title>手軽で便利な画面キャプチャソフト</title>
      <link>https://yaasita.github.io/2009/10/12/8391/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8391/</guid>
      <description> Rapture
http://www.geocities.jp/knystd/rapture.html </description>
    </item>
    
    <item>
      <title>vimで画面のリフレッシュ（再描画）をするには？</title>
      <link>https://yaasita.github.io/2009/10/07/8512/</link>
      <pubDate>Wed, 07 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/07/8512/</guid>
      <description> http://www.hondarer-soft.com/japan/pubwiki.cgi?vi
↑によるとCtrl+l（エル）だそうです
コマンドだと:redrかな </description>
    </item>
    
    <item>
      <title>転送量を測ってくれるソフト NetWorx</title>
      <link>https://yaasita.github.io/2009/09/27/8572/</link>
      <pubDate>Sun, 27 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/27/8572/</guid>
      <description> 使用感は後日投稿
GIGAZINE記事
http://gigazine.net/index.php?/news/comments/20090926_networx/ </description>
    </item>
    
    <item>
      <title>rep2 機能拡張パックをLinux(Debian)にインストール</title>
      <link>https://yaasita.github.io/2009/09/26/8593/</link>
      <pubDate>Sat, 26 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/26/8593/</guid>
      <description>インストールはrep2と同じ
違うとところは「PEAR 詰め合わせ」を入れるくらい
やり方は↓
pear フォルダの中にある includes フォルダを rep2 フォルダに置く。
詳細なインストール方法はココを参照すれば分かる
その他　拡張版でのはまり所は↓
・AASを使うにはそれだけ有効にしても意味が無い　アクティブモナーも有効にすること
有効にする箇所は以下のとおり（行の順番は適当）
/var/www/rep2ex/conf/conf_admin_ex.inc.php
// AAS による AA プレビュー（off:0, on:1）
$_conf[&#39;expack.editor.with_aas&#39;] = 1; // (0)
// AAS（off:0, on:1）
$_conf[&#39;expack.aas.enabled&#39;] = 1; // (0)
// {{{ アクティブモナー
// AA 補正（off:0, on:1）
$_conf[&#39;expack.am.enabled&#39;] = 1; // (0)
// }}}
// {{{ 入力支援
// ActiveMona による AA プレビュー（off:0, on:1）
$_conf[&#39;expack.editor.with_activemona&#39;] = 1; // (0)
// AAS による AA プレビュー（off:0, on:1）</description>
    </item>
    
    <item>
      <title>Excel上でviの操作感を再現</title>
      <link>https://yaasita.github.io/2009/09/09/8634/</link>
      <pubDate>Wed, 09 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/09/8634/</guid>
      <description> vixcelというらしい
http://www.vector.co.jp/soft/winnt/business/se453991.html </description>
    </item>
    
    <item>
      <title>Firefox3.5にしたら最後のタブを閉じた時の挙動が変わった</title>
      <link>https://yaasita.github.io/2009/08/23/8857/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8857/</guid>
      <description> 前までは最後のタブを閉じてもウィンドウ自体は閉じられなかったのに、3.5にしてから閉じるようになってしまったようだ・・・
直し方は
about:config→browser.tabs.closeWindowWithLastTabの値をFalseに設定すればおｋ
あと設定したのはタブの閉じるボタンを非表示にする設定↓
browser.tabs.closeButtonsを2にする
参考サイト
http://d.hatena.ne.jp/takayukis/20090707/1246973796
3.5の新機能
http://mozilla-remix.seesaa.net/article/122559921.html
目玉の位置情報
http://mozilla.jp/firefox/features/geolocation/ </description>
    </item>
    
    <item>
      <title>Firefoxでタブのフォーカスを制御</title>
      <link>https://yaasita.github.io/2009/08/23/8797/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8797/</guid>
      <description> リンクを中クリックで開いた時にフォーカスを移すかどうかの設定
browser.tabs.loadInBackground
これをボタンで切り替えてくれる拡張ないかなぁ・・・ </description>
    </item>
    
    <item>
      <title>Firefoxの拡張「Add N Edit Cookies」が3.5に対応してない</title>
      <link>https://yaasita.github.io/2009/08/23/8837/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8837/</guid>
      <description> 待てない人は暫定的に↓のアドオンを使いましょう
https://addons.mozilla.org/ja/firefox/addon/13793 </description>
    </item>
    
    <item>
      <title>JavaScript/JavaのON/OFFボタンを追加(Firefox)</title>
      <link>https://yaasita.github.io/2009/08/23/8877/</link>
      <pubDate>Sun, 23 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/23/8877/</guid>
      <description> その名もQuickJava
https://addons.mozilla.org/ja/firefox/addon/1237
参考リンク
http://paranoids.sakura.ne.jp/kaworu/2008-04-02-1.php </description>
    </item>
    
    <item>
      <title>ICQの音を思い出す</title>
      <link>https://yaasita.github.io/2009/08/16/8918/</link>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/16/8918/</guid>
      <description> そんなFLASHがあった
http://iiaccess.net/upload/view.php/000736.swf </description>
    </item>
    
    <item>
      <title>いろいろなフォーマットの動画をいろいろ変換するソフト</title>
      <link>https://yaasita.github.io/2009/08/16/8959/</link>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/08/16/8959/</guid>
      <description> Pazera Video Converters Suite 1.2
ってやつです
http://www.pazera-software.com/
参考リンク
http://www.forest.impress.co.jp/article/2008/02/15/pazeravideo2flash.html </description>
    </item>
    
    <item>
      <title>Firefoxのテーマを手軽に頻繁に変えたい</title>
      <link>https://yaasita.github.io/2009/07/12/9100/</link>
      <pubDate>Sun, 12 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/12/9100/</guid>
      <description> そんなときは↓のアドオンが便利かも
Personas for Firefox
http://people.mozilla.com/~cbeard/personas/ja/about/ </description>
    </item>
    
    <item>
      <title>Personas for Firefoxのペルソナ（テーマ）を自作してみる</title>
      <link>https://yaasita.github.io/2009/07/12/9079/</link>
      <pubDate>Sun, 12 Jul 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/07/12/9079/</guid>
      <description> ↓に書いてあった
http://people.mozilla.com/~cbeard/personas/designers/
ヘッダー画像(横3000px、縦200px）
フッター画像(横3000px、縦100px)
ならなんでもいいみたい
試しにけいおんのヘッダー画像作ってみた


参考リンク
窓の杜記事 </description>
    </item>
    
    <item>
      <title>今日みつけたvimサイト</title>
      <link>https://yaasita.github.io/2009/06/14/9301/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/14/9301/</guid>
      <description> http://sites.google.com/site/fudist/Home
いつか読む </description>
    </item>
    
    <item>
      <title>vimで開いたファイルに日本語が無かった場合の挙動を制御</title>
      <link>https://yaasita.github.io/2009/06/11/9363/</link>
      <pubDate>Thu, 11 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/11/9363/</guid>
      <description> vimで
set fileencodings=utf-8,ucs-bom,cp932,ucs-2,euc-jp
↑を書いておくと上から順に判定してくれる。ただしこう書いておくと困ることがある
日本語を含まないファイルを開くとUTF-8でfencしてしまう。（:eで新規作成するファイルはencの値を使われるので問題ない）
つーわけでスクリプトで解決する。
ずんwikiに日本語判定スクリプトがあったので参考にする
ただし、このスクリプトには問題があってsearch関数はカーソル以下を検索するのでカーソル前に日本語があっても見逃してしまう
例えば下記の例で3行目にカーソルがあると日本語なしと判断してしまう
aaa
ああああ
hogehoge←カーソル

こんな感じで書くといいんじゃないでしょうか
&#34; 日本語を含まない場合は fileencoding に encoding を使うようにする
function! AU_ReCheck_FENC()
let l:c=line(&#34;.&#34;)
normal gg
if search(&#34;[^\x01-\x7e]&#34;, &#39;n&#39;) == 0
&#34;let &amp;amp;fileencoding=&amp;amp;encoding
set fenc=cp932
call cursor(l:c,1)
endif
endfunction
autocmd BufReadPost * call AU_ReCheck_FENC() </description>
    </item>
    
    <item>
      <title>mmfの着メロを作ってダウンロードしたい</title>
      <link>https://yaasita.github.io/2009/06/08/9422/</link>
      <pubDate>Mon, 08 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/08/9422/</guid>
      <description> 以下、やり方
１．適当に音楽を選びwavファイルを作成
２．ここからSSC-MA3-SMAFをダウンロード＆インストール
３．えせ着うたフロントエンドSMAF版をダウンロード＆インストール
４．適当に作成する
５．サーバーにアップロードする　最近の機種はObjectタグが使えるのでめんどくさいCGIを用意しなくてもいいみたい　↓あたり参考にどぞ
http://www.au.kddi.com/ezfactory/tec/dlcgi/download_1.html
http://www.au.kddi.com/ezfactory/tec/spec/wap_tag5.html
６．サーバにmmfをアップロード
ファイルへのリンクはこんな感じで
&amp;amp;lt;object data=&#34;data/keion.mmf&#34; type=&#34;application/x-smaf&#34; copyright=&#34;no&#34; standby=&#34;down&#34;&amp;amp;gt;
&amp;amp;lt;param name=&#34;disposition&#34; value=&#34;dev4anm&#34; valuetype=&#34;data&#34; /&amp;amp;gt;
&amp;amp;lt;param name=&#34;size&#34; value=&#34;134669&#34; valuetype=&#34;data&#34; /&amp;amp;gt;
&amp;amp;lt;param name=&#34;title&#34; value=&#34;タイトル名&#34; valuetype=&#34;data&#34; /&amp;amp;gt;
&amp;amp;lt;/object&amp;amp;gt;
あと.htaccessにこんなの書いとくといいのかな
AddType application/x-smaf .mmf
ちなみにW43Kは目標サイズを150にするといいみたいだ </description>
    </item>
    
    <item>
      <title>今更ながらYankRingを入れてみた</title>
      <link>https://yaasita.github.io/2009/06/07/9442/</link>
      <pubDate>Sun, 07 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/07/9442/</guid>
      <description> 長いことvim使ってるくせに知らなかった・・・OTZ
つーことでインストールしてみる　－＞　YankRing
基本的な使い方は
１．適当にyyとかでコピーする
２．適当にyyとかでコピーする（以下省略
３．pで貼り付け前の履歴を貼り付けたかったらCtrl-Pを押す、次の履歴を貼り付けたかったらCTRL-Nを押す
知らなきゃ駄目そうなコマンドは以下の通り
YRClear →　ヤンクリストのクリア
YRShow　→　ヤンクリストの表示
YRToggle　→　YankRingの有効／無効の切り替え
設定しておくべき変数は以下の通り
g:yankring_max_history　→　ヤンクリストの履歴保持数
g:yankring_ignore_duplicate　→　ヤンクしたときに重複行を追加するか否か　1は重複した行を追加しない
g:yankring_clipboard_monitor →　クリップボードをモニタリングするかどうか　これが1だとCtrl-Pとか押した時に&#34;*バッファの内容も表示される
参考リンク
http://nanasi.jp/articles/vim/yankring_vim.html </description>
    </item>
    
    <item>
      <title>MPC(Media Player Classic)についてのまとめ</title>
      <link>https://yaasita.github.io/2009/05/31/9482/</link>
      <pubDate>Sun, 31 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/31/9482/</guid>
      <description> 派生とかいろいろ分からなくなるのでここでまとめておく
・本家本元（ただしもう更新されなくなっているので原則使わない）
http://sourceforge.net/projects/guliverkli/
・本家からちょっと修正された版（DownLoad→Media Player Classic6.4.9.1をどうぞ）
http://sourceforge.net/projects/guliverkli2/
・MPC Home Cinemaという派生版　いろいろ機能追加されている
http://mpc-hc.sourceforge.net/
オマケ　便利なコーデックパック→CCCP </description>
    </item>
    
    <item>
      <title>サクラエディタを起動時に常駐したくなった</title>
      <link>https://yaasita.github.io/2009/05/31/9462/</link>
      <pubDate>Sun, 31 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/31/9462/</guid>
      <description> そんなときは
スタートアップに
&#34;C:\Program Files\sakura\sakura.exe&#34; -NOWIN
を追加しておくと良いでしょう </description>
    </item>
    
    <item>
      <title>Perlパッケージに含まれる便利なツール郡</title>
      <link>https://yaasita.github.io/2009/05/09/9602/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/09/9602/</guid>
      <description> http://www.linux.or.jp/JF/JFdocs/LFS-BOOK/appendixa/perl.html
これに加えWindows版のPerlにはpl2batというperlスクリプトをbatファイルにするツールがあります </description>
    </item>
    
    <item>
      <title>vim7.2にしてからExploreの様子がおかしい</title>
      <link>https://yaasita.github.io/2009/05/09/9582/</link>
      <pubDate>Sat, 09 May 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/05/09/9582/</guid>
      <description> なんかx:execが使えないことに気づいた
↓
よく分からないので昔使ってたvim7.1（香り屋版）で試す
↓
使える
↓
オプションを見直す
↓
どうやらset shellslashが悪さしてるっぽいのでsyntax/netrw.vimの頭にsetlocal noshellslash
を追加して直す
んーvim7.1ではshellslashを有効にしてても使えたのになんでだろう・・・
まあ直ったからいいか </description>
    </item>
    
    <item>
      <title>NetTransportを入れるとIEのダウンロードの挙動が変わる</title>
      <link>https://yaasita.github.io/2009/04/26/9684/</link>
      <pubDate>Sun, 26 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/26/9684/</guid>
      <description> Q.IEのダウンロードを横取りしてしまうのですがどうすればいいのですか？
A.ドロップウィンドウかタスクトレイのアイコン右クリックして
ブラウザの監視のチェック外せばいいだけです。
だそうです
参考リンク
http://www.wikihouse.com/windows/index.php?Net%20Transport </description>
    </item>
    
    <item>
      <title>PDFのパスワードを解析するソフトpdfcrack</title>
      <link>https://yaasita.github.io/2009/04/19/9704/</link>
      <pubDate>Sun, 19 Apr 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/04/19/9704/</guid>
      <description> Debian(lenny)のレポジトリにありました。
aptで簡単インストール。
使い方は
pdfcrack hoge.pdf
みたいに使う
途中でCtrl+Cで止めてもカレントディレクトリにsavedstate.savが出来るから
また再開したいときには
pdfcrack -l savedstate.sav hoge.pdf
みたいな感じで
参考リンク
http://gigazine.net/index.php?/news/comments/20090219_pdfcrack/ </description>
    </item>
    
    <item>
      <title>Cookieを編集できるFirefoxアドオン</title>
      <link>https://yaasita.github.io/2009/03/24/9868/</link>
      <pubDate>Tue, 24 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/24/9868/</guid>
      <description> https://addons.mozilla.org/ja/firefox/addon/573 </description>
    </item>
    
    <item>
      <title>flvをサーバー側で再生する</title>
      <link>https://yaasita.github.io/2009/03/22/9889/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9889/</guid>
      <description> JW FLV MEDIA PLAYERというのがおすすめ
↓みたいなウィザード形式でコードも出してくれる親切設計
http://www.longtailvideo.com/support/jw-player-setup-wizard?example=1 </description>
    </item>
    
    <item>
      <title>smbmountの話</title>
      <link>https://yaasita.github.io/2009/03/22/9930/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9930/</guid>
      <description> Debianだとそのものずばりのコマンド名のパッケージはないので
smbfsをインストールする
http://www.millionwaves.com/200604140613.html
そんで適当にマウント
smbmount //192.168.0.2/ボリューム\ \(D\)/bakup /mnt/ -o guest
guestを指定してやればパスワードのプロンプトが出ない
http://www9.samba.gr.jp/project/translation/3.0/htmldocs/smbmount.8.html
パスワードがあってプロンプトを出さない方法は↓
ユーザー名が smb パスワードが hoge
なら
smb%hoge
あるいは
username=smb,password=hoge
http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.php?topic=21439&amp;amp;forum=10&amp;amp;2 </description>
    </item>
    
    <item>
      <title>vimのtips2</title>
      <link>https://yaasita.github.io/2009/03/22/10012/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/10012/</guid>
      <description>&amp;ldquo;自動整形の実行方法を決める
&amp;ldquo;改行後もコメントとするかとか
&amp;ldquo;set formatoptions?
&amp;ldquo;コマンド結果をリダイレクト
&amp;ldquo;:h :redir
&amp;ldquo;キーコード(特殊文字) Ctrl+k 押してからキー押すと
&amp;ldquo;名前を挿入できる
&amp;ldquo;:h key-codes
&amp;ldquo;タブをスペースに変更
&amp;ldquo;set expandtab
&amp;ldquo;retab
&amp;quot; テキストファイルに固有の設定を
&amp;quot; 残す
&amp;ldquo;h modeline
&amp;ldquo;プラグイン、固有の設定ファイル
&amp;ldquo;boxes
&amp;ldquo;diff.exe
&amp;ldquo;all colors pack
&amp;ldquo;txt.vim -&amp;gt; $VIMRUNTIME/syntax/txt.vim
&amp;ldquo;MRU.vim
&amp;ldquo;skeleton.html
&amp;ldquo;テキストに対し固有の設定を書く
&amp;ldquo;マッピングなどはmodeline使えないため
&amp;ldquo;autocmd BufRead ~/デスクトップ/kara.txt set nonu |
&amp;quot; \nnoremap j gj| nnoremap k gk
&amp;ldquo;ステータスラインを長さによって表示項目変更
&amp;ldquo;:function STline()
&amp;ldquo;if winwidth(0) &amp;amp;gt;= 120
&amp;quot; set statusline=%&amp;amp;lt;%f\ %m%r%h%w%=%{&#39;[&#39;.(&amp;amp;fenc!=&amp;rsquo;&#39;?&amp;amp;fenc:&amp;amp;enc).&#39;][&#39;.&amp;amp;ff.&#39;]&#39;}\ \ %2*%y%0*%6l,%c%V%1*%8P
&amp;ldquo;else
&amp;quot; set stl&amp;amp;
&amp;ldquo;endif
&amp;ldquo;:endfunction
&amp;quot;
&amp;ldquo;autocmd VimResized * call STline()</description>
    </item>
    
    <item>
      <title>WebDAVの設定をDebian lennyでやってみる</title>
      <link>https://yaasita.github.io/2009/03/22/9991/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9991/</guid>
      <description> 前回とちょっと違う部分があったので補足を含め書きます。
１．a2enmodで必要なモジュール読み込む
a2enmod dav
a2enmod dav_fs
２．httpd.confに↓みたいに書いとけばok
そんでまあcalってディレクトリ作ってパーミッションとか777にしとけば
まあ間違いないだろう
Dav On
Options Indexes
AuthType Basic
AuthName &#34;input webdav password!&#34;
AuthUserFile &#34;/etc/apache2/passwd&#34;
Require valid-user
Order allow,deny
allow from all

３．ロックファイルやらうんちゃらは
/etc/apache2/mods-enabled
にある
dav_fs.conf
で定義してあるから別に書かなくてもおｋ
3.5．Windowsのネットワークプレースでの確認方法は
ネットワークプレースの追加→ウィザード開く→基本次へで進む→アドレスに↓を記述してOK

http://hogehoge.com:8000/cal/
↑アドレス　↑WebDAVが有効なディレクトリ

４．thunderbirdにlightningって拡張いれて
新しいカレンダーでも作ってごにょごにょすれば良いですよ 参考リンク
休日カレンダーICS
http://www.mozilla-japan.org/projects/calendar/holidays.html </description>
    </item>
    
    <item>
      <title>gvim (vim)で半透明にしたり、常に前面ウィンドウにしたり</title>
      <link>https://yaasita.github.io/2009/03/20/10054/</link>
      <pubDate>Fri, 20 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/20/10054/</guid>
      <description> っていうのはVimTweakっていうDLLを使えばいいらしい
透明度の調整
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;SetAlpha&#34;, 200)
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;SetAlpha&#34;, 255) 常に前面ウィンドウ
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;EnableTopMost&#34;, 1)
常に前面ウィンドウの解除
:call libcallnr(&#34;vimtweak.dll&#34;, &#34;EnableTopMost&#34;, 0)
参考リンク
http://liosk.blog103.fc2.com/blog-entry-148.html </description>
    </item>
    
    <item>
      <title>squidを設定する時に気をつけること・・・</title>
      <link>https://yaasita.github.io/2009/03/08/10074/</link>
      <pubDate>Sun, 08 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/08/10074/</guid>
      <description> なんか色々みたけど難しくてよー分からん。
↓くらい気にしとけばいいんでないの
・メモリ領域 (cache_mem)
・メモリに置くオブジェクトサイズ　（maximum_object_size_in_memory)
・HDDに置くサイズ　（cache_dir）
・HDDに置くオブジェクトサイズ（maximum_object_size）
・オブジェクトサイズの平均値（store_avg_object_size）
・速いDNSサーバー( dns_nameservers )
あとはcachemgr.cgiとか参照してください(debianだとsquid-cgiパッケージに同梱） </description>
    </item>
    
    <item>
      <title>squidをweb経由で設定する</title>
      <link>https://yaasita.github.io/2009/03/02/10135/</link>
      <pubDate>Mon, 02 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/02/10135/</guid>
      <description> squid-cgiをaptかなんかでインストールしてください
そんでsquid.confにある
cachemgr_passwd
あたりを参照して適当に設定してください
あとは
http://自分の鯖/cgi-bin/cachemgr.cgi
あと/etc/squid/のなかにあるcachemgr.confのポート番号も直すこと
あとアクセスリストとか・・・↓参照で・・・
でおｋ
参考リンク
http://swkoji.blog63.fc2.com/blog-category-8.html
http://perltips.twinkle.cc/server/squid_cachemgr.php </description>
    </item>
    
    <item>
      <title>sambaの設定でmaskがうまくいかない</title>
      <link>https://yaasita.github.io/2009/03/01/10157/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/01/10157/</guid>
      <description> create mask = 777
ってしても実行権限が外れてしまう・・・
でも、そういう仕様らしい
↓参考
http://roserogue.blogspot.com/2007/08/create-mask775.html </description>
    </item>
    
    <item>
      <title>HttpWatch Basic Edition</title>
      <link>https://yaasita.github.io/2009/02/21/10278/</link>
      <pubDate>Sat, 21 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/21/10278/</guid>
      <description> 公式サイト
機能多くて全部使い切れないけどなんかすごい
参考サイト
http://gigazine.net/index.php?/news/comments/20090218_httpwatch/ </description>
    </item>
    
    <item>
      <title>NetTransportでwebラジオ（ストリーミング）ダウンロード</title>
      <link>https://yaasita.github.io/2009/01/24/10400/</link>
      <pubDate>Sat, 24 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/24/10400/</guid>
      <description> mms://hoge.com/003h.wsx
↑みたいなURLを探す
1.新規ダウンロード
2.スレッド分割数を1に設定
3.その他の設定→ストリーミングタブ→HTTPストリームにチェック
ちなみにリジュームできるよ </description>
    </item>
    
    <item>
      <title>vim　特定のファイルだけファイルタイプの検出を無効化する</title>
      <link>https://yaasita.github.io/2009/01/12/10421/</link>
      <pubDate>Mon, 12 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/12/10421/</guid>
      <description> 特定のファイルが検査されないようにするには、g:ft_ignore_pat 変数を使います。こ
の変数はデフォルトで次のように設定されています。 
:let g:ft_ignroe_pat = &#39;\.\(Z\|gz\|bz2\|zip\|tgz\)$&#39;
この設定は圧縮ファイルを検査しないようにしています。
だそうです。 </description>
    </item>
    
    <item>
      <title>vim tipsとか見るといいな</title>
      <link>https://yaasita.github.io/2009/01/11/10441/</link>
      <pubDate>Sun, 11 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/11/10441/</guid>
      <description> そんなわけでなんか今日調べたtipsを書いておく
そのライン全てを小文字/大文字に変換
guu
gUU
カーソル下にあるファイルを開く
gf
vimrcの環境変数
$MYVIMRC
$MYGVIMRC
なんか計算結果を挿入したいとき以下は5x5の結果を挿入
挿入モードで以下のように入れる
Ctrl-R=5*5
合字をいれるときに使う(挿入モードで)
&amp;amp;lt;C-K&amp;amp;gt;&amp;amp;lt;S-Space&amp;amp;gt;(キー2つ)と入力することで、文字列&#34;&amp;amp;lt;S-Space&amp;amp;gt;&#34;が入る
Ctrl-k
参考リンク
http://labs.gmo.jp/blog/ku/2007/05/vimorg_tips.html
http://vim.wikia.com/wiki/Best_Vim_Tips </description>
    </item>
    
    <item>
      <title>apache2 なんかのファイルをダウンロードさせたいとき</title>
      <link>https://yaasita.github.io/2009/01/02/10501/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10501/</guid>
      <description> .htaccessにこう書けば良いんじゃないかな
↓はbatファイルをダウンロードさせる場合
当然ブラウザ依存ですハイ
 AddType application/octet-stream .bat </description>
    </item>
    
    <item>
      <title>foobarでIcecast2に音楽配信→でも音割れ</title>
      <link>https://yaasita.github.io/2009/01/02/10522/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10522/</guid>
      <description> どうする？
答え）
Library→Configureから下の画面のPrempのdBを変更すればいいんだよ～(＝ω＝、)
 </description>
    </item>
    
    <item>
      <title>ubuntu8.10のsambaについて</title>
      <link>https://yaasita.github.io/2009/01/02/10564/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10564/</guid>
      <description> なんか/etc/samba配下の設定漁ってもGUIで設定した箇所について書かれてないなーと思ったら
/var/lib/samba配下にあった
なんでだろうね　まあそういうことです </description>
    </item>
    
    <item>
      <title>iptablesで設定したルールを再起動後も反映したい</title>
      <link>https://yaasita.github.io/2008/12/31/10585/</link>
      <pubDate>Wed, 31 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/31/10585/</guid>
      <description>どこに書けばいいのでしょうか？　＞ Debian , Ubuntu
正解は/etc/network/if-pre-up.d
iptables-restoreコマンドをうまいこと駆使してやってください
まあ後はiptablesのメモ
最初に決めるルールINPUTは入ってくパケットOUTPUTは出て行くパケット
FORWARDは転送するパケット
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
全てのルールをクリア
iptables -F
すべてのユーザー定義もクリア
iptables -X
パケットカウンタもクリアしたいなら
iptables -Z iptables -A INPUT -p tcp --dport 4000:4999 -s ! 192.168.0.0/24 -j DROP
↑の例だと192.168.0.0/24以外のネットワークから来たパケットで4000から4999ポートを指定
しているものを削除
※注意 --dportは-p tcpが指定されていない場合は使えない（udpでも良いけど)
現在のルールを表示
iptables -L
最終的にはこんな感じで
#!/bin/bash
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -F
#iptables -A INPUT -p tcp --dport 4000:4999 -s !</description>
    </item>
    
    <item>
      <title>Drupalをubuntu8.10にインストール</title>
      <link>https://yaasita.github.io/2008/12/25/10628/</link>
      <pubDate>Thu, 25 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/25/10628/</guid>
      <description> １．環境設定
LAMP入れとけばおｋ
２．mySQLでテーブル作成
# mysql -u root -p
mysql&amp;amp;gt; create database drupal;
↑データベース名
mysql&amp;amp;gt; grant select,insert,update,delete,create,drop,index,alter,create temporary　tables,lock tables on drupal.* to root@localhost identified by &#39;drupal&#39;;
↑の例だとrootってユーザーでパスワードはdrupal
mysql&amp;amp;gt; flush privileges;
３．webからごにょごにょ設定
http://drupal.jp/drupal6/quick_start </description>
    </item>
    
    <item>
      <title>WMP11でWindows Live Messengerに再生曲表示</title>
      <link>https://yaasita.github.io/2008/12/24/10671/</link>
      <pubDate>Wed, 24 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/24/10671/</guid>
      <description>なんか手順が変わってた
Windows Live Messenger は、現在、自分の聞いている曲をメンバーにお知らせできる機能があります。
しかし、Messenger の設定で表示するようにしたつもりなのですが、表示されていないのに気がつきました。
iTunesでは自動的に再生している曲を表示してくれますが、Windows XP のWindows Media Playerの場合は、Windows Live Messenger だけでなく、Windows Media Playerでも設定する必要があります。
まずは、Windows Live Messenger を下記のように設定します。
1. 「メニューを表示します」アイコンをクリックして表示されるメニューより「ツール」の 「オプション」をクリックします。
2. 「オプション」が表示されるので、左側の欄にある「個人設定」をクリックします。
3. 「表示名」の下にある「Windows Media Player の音楽情報を表示メッセージで公開する」にチェックをつけます。
4. 「OK」をクリックします。
Windows Live Messenger の設定が完了したら、Windows Media Player と Windows Live Messenger を連携させましょう。
Windows Media Player で下記のように設定します。なお、Windows Media Playerのバージョンによって、少し設定方法が違いますので、ご注意ください。
Windows Media Player 11の場合
1. Windows Media Player を起動します。
2. 「プレイビュー」の下の▼ボタンをクリックし、「プラグイン」から「オプション」をクリックします。
3. 左側の欄にある「バックグラウンド」をクリックします。
4. 右側に「Windows Live Messenger ミュージック プラグイン」が表示されますので、チェックをつけます。</description>
    </item>
    
    <item>
      <title>ubuntu8.10にはgnump3dパッケージが無いんだ</title>
      <link>https://yaasita.github.io/2008/12/21/10732/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10732/</guid>
      <description> やあ （´・ω・｀) ようこそ、Ubuntu8.10へ。
うん、「また」なんだ。
つーわけでgnump3dを入れるとなると自分でソースからビルドするか、debパッケージを探すかになります。
http://packages.ubuntu.com/
しょうがないので↑から適当に選ぶ「Search package directories」にgnump3dを入れて、Distributionは一個前のhardyを選択
一個前だとあるんだね・・・なんでレポジトリから消えたかは知らないけど・・・・
http://packages.ubuntu.com/hardy/gnump3d
まあダウンロードしたらGUIからでもdebファイルをインストールすると良いよ。GUI無い人はこんな感じでインストールすると良いんじゃない？
# dpkg -i gnump3d_3.0-2_all.deb
参考リンク
debパッケージをインストールする </description>
    </item>
    
    <item>
      <title>ここら辺でsquidのconfをまとめようか</title>
      <link>https://yaasita.github.io/2008/12/21/10711/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10711/</guid>
      <description>acl all src all
acl manager proto cache_object
acl localhost src 127.0.0.1/32
acl to_localhost dst 127.0.0.0/8
acl localnet src 10.0.0.0/8 # RFC1918 possible internal network
acl localnet src 172.16.0.0/12 # RFC1918 possible internal network
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network
acl SSL_ports port 443 # https
acl SSL_ports port 563 # snews
acl SSL_ports port 873 # rsync
acl Safe_ports port 80 # http
acl Safe_ports port 21 # ftp</description>
    </item>
    
    <item>
      <title>manコマンドの出力をtxtにする</title>
      <link>https://yaasita.github.io/2008/12/19/10793/</link>
      <pubDate>Fri, 19 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/19/10793/</guid>
      <description> man uptime | col -bfx &amp;amp;lt; uptime.txt
こんな感じでおｋ </description>
    </item>
    
    <item>
      <title>なんか軽くて良い音楽プレイヤーがあるらしい</title>
      <link>https://yaasita.github.io/2008/12/19/10773/</link>
      <pubDate>Fri, 19 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/19/10773/</guid>
      <description> 今までMPC使ってたけどこれもいいかもね
Fittle
まとめwiki </description>
    </item>
    
    <item>
      <title>FLASH版CookieみたいなSharedObjectについて</title>
      <link>https://yaasita.github.io/2008/12/14/10834/</link>
      <pubDate>Sun, 14 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/14/10834/</guid>
      <description> とあるゲームをやっていたときにふと思ったのでメモ。
ゲームをプレイしてある面で止める→次にブラウザ立ち上げてみる→続きからPLAYできる→Cookieを消してみる→続きから出来る
なぜ？それはFLASHのSharedObjectというデータを読み込んでいるからなのさ
どこに保存されているの？
WindowsXPなら
C:\Documents and Settings\＜ユーザー名＞\Application Data\Macromedia\Flash Player\#SharedObjects
とかだな多分
Linuxなら
/home/username/.macromedia/Flash_Player/とか探せばいいみたいね
参考リンク
http://www.gravity-works.jp/gravica/web/000077.shtml </description>
    </item>
    
    <item>
      <title>Firefoxの拡張 backword を試す</title>
      <link>https://yaasita.github.io/2008/12/06/10876/</link>
      <pubDate>Sat, 06 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/06/10876/</guid>
      <description> backwordはなんかホップアップで単語の意味を表示してくれる拡張みたいです。
Googleツールバーにも同様の機能があるらしいけど分からん・・・・
ココからインストールして
適当に設定する。
アドオンから設定→DictionaryをGoogle - Japaneseに設定
さらに検索するにはホップアップから虫眼鏡マークをクリックするんだけどそれにつかうサイトをSearch Webに書くエキサイトが良いと思うので
http://www.excite.co.jp/dictionary/english_japanese/?search=
と書いておこうか
そういやこの拡張いれればDictionarySearchいらんな
**一応設定メモ
Setting Ⅰ
Dictionary → 表示に使う辞書
Show phonetics(rarely hang on Firefox) → 読み方？を示すのかな？なんかたまにFirefoxがハングするとか書いてあるので触らない
Search Web → 虫眼鏡マークのなんとか・・・↑の方に既に書いた
Setting Ⅱ
Use Storage →　検索した単語をローカルにキャッシュするかどうかC:\Documents and Settings\Admin\Application Data\Mozilla\Firefox\Profiles\hogehoge.default\backwordの中に保存されてるみたいよ あと右下の有効、無効を切り替えるマークを右クリック→Pages→
Review Page of Local Storageで自分のキャッシュが見れるお
Automatically back word and context　→　ポップアップにあらわれるメニューがごちゃごちゃと増える
あとは良く分からん
参考リンク
発音も分かる無料マウスオーバー辞書なFirefox拡張「backword」 </description>
    </item>
    
    <item>
      <title>apache2でWebDAV設定→Thunderbirdのカレンダー公開</title>
      <link>https://yaasita.github.io/2008/10/26/10979/</link>
      <pubDate>Sun, 26 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/26/10979/</guid>
      <description> 環境はDebian etch - apache2.2を想定
１．a2enmodで必要なモジュール読み込む
a2enmod webdav
a2enmod dav_fs
２．httpd.confに↓みたいに書いとけばok
そんでまあcalってディレクトリ作ってパーミッションとか777にしとけば
まあ間違いないだろう
&amp;amp;lt;Directory /var/www/cal/&amp;amp;gt;
Dav On
Options Indexes
AuthType Basic
AuthName &#34;input webdav password!&#34;
AuthUserFile &#34;/etc/apache2/pass&#34;
Require valid-user
Order allow,deny
allow from all
&amp;amp;lt;/Directory&amp;amp;gt;
３．ロックファイルやらうんちゃらは
/etc/apache2/mods-enabled
にある
dav_fs.conf
で定義してあるから別に書かなくてもおｋ
４．thunderbirdにlightningって拡張いれて
新しいカレンダーでも作ってごにょごにょすれば良いですよ </description>
    </item>
    
    <item>
      <title>ファイルの関連付けを行う時にgvimが追加できなくなる事象について</title>
      <link>https://yaasita.github.io/2008/10/26/11000/</link>
      <pubDate>Sun, 26 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/26/11000/</guid>
      <description> レジストリの
[HKEY_CLASSES_ROOT￥Applications￥gvim.exe]のフルパスが間違ってるとからしいです。
直すのが面倒ならそのキーごと削除→再登録でおｋ
参考リンク
「ファイルを開くプログラムの選択」でプログラムを参照しても一覧に追加されずに選択できない </description>
    </item>
    
    <item>
      <title>sshのダイナミック転送でSOCKSプロキシ</title>
      <link>https://yaasita.github.io/2008/10/24/11082/</link>
      <pubDate>Fri, 24 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/24/11082/</guid>
      <description> １．まあ普通にsshダイナミック転送する
２．Firefoxの接続設定でSOCKS v5 プロキシに設定
３．名前解決はローカルでやろうとするので
about:configからnetwork.proxy.socks_remote_dnsをtrueにする
でおｋ
参考リンク
SSH のダイナミック転送ってすごいんですよ </description>
    </item>
    
    <item>
      <title>vimのtips</title>
      <link>https://yaasita.github.io/2008/10/02/11164/</link>
      <pubDate>Thu, 02 Oct 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/10/02/11164/</guid>
      <description>カーソルラインを表示
set cursorline
カーソルコラムを表示（縦線）
set cursorcolumn
コマンドを続けるには縦棒を使う
command Pw w | !perl %
自動整形の実行方法を決める
改行後もコメントとするかとか
set formatoptions?
コマンド結果をリダイレクト
:h :redir
キーコード(特殊文字) Ctrl+k 押してからキー押すと
名前を挿入できる
:h key-codes
タブをスペースに変更
set expandtab
retab
テキストファイルに固有の設定を残す
h modeline
マークした箇所をTodoハイライト
h group-name でどんなハイライトがあるか分かるよ
syntax match Todo /%&amp;lsquo;a.*/ containedin=ALL
プラグイン、固有の設定ファイル
boxes
diff.exe
color sampler pack
txt.vim -&amp;gt; $VIMRUNTIME/syntax/txt.vim
MRU.vim
skeleton.html
eregex.vim -&amp;gt; $VIMRUNTIME/plugin/eregex.vim
$VIMRUNTIME/plugin/eregex_e.vim
検索は:M/hogeで　それ以外は大文字で
テキストに対し固有の設定を書く
マッピングなどはmodeline使えないため
autocmd BufRead ~/デスクトップ/kara.txt set nonu |
\nnoremap j gj| nnoremap k gk</description>
    </item>
    
    <item>
      <title>aptitudeコマンドまとめ</title>
      <link>https://yaasita.github.io/2008/09/21/11184/</link>
      <pubDate>Sun, 21 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/21/11184/</guid>
      <description> http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html </description>
    </item>
    
    <item>
      <title>apache2のインデックスにヘッダとかフッタとか付ける</title>
      <link>https://yaasita.github.io/2008/09/16/11245/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11245/</guid>
      <description> #
# ReadmeName is the name of the README file the server will look for by
# default, and append to directory listings.
#
# HeaderName is the name of a file which should be prepended to
# directory indexes.
ReadmeName README.html
HeaderName HEADER.html
autoindexモジュールの
この辺の設定を変える。README.htmlの内容がファイルインデックスの欄の前か後ろに出るはずさ </description>
    </item>
    
    <item>
      <title>ettercapでDHCP Spoof</title>
      <link>https://yaasita.github.io/2008/09/16/11287/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11287/</guid>
      <description>ettercap -i eth0 -M dhcp:/255.255.255.0/192.168.0.2 -T</description>
    </item>
    
    <item>
      <title>New Live Wall! 通称ぬりかべって？</title>
      <link>https://yaasita.github.io/2008/09/16/11265/</link>
      <pubDate>Tue, 16 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/16/11265/</guid>
      <description> なんかWebページにコメントを残せるみたいです
現在は新しい開発者により九尾というものになっている
ようです。

リンク
公式サイト
まとめwiki </description>
    </item>
    
    <item>
      <title>rep2の過去ログ（DAT）を整理するには</title>
      <link>https://yaasita.github.io/2008/09/15/11308/</link>
      <pubDate>Mon, 15 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/15/11308/</guid>
      <description> rep2/data以下にある2channelフォルダごと削除すればよろし
machibbs.com/は町BBSのDAT保存フォルダらしい </description>
    </item>
    
    <item>
      <title>postfixで設定されている環境変数を列挙する</title>
      <link>https://yaasita.github.io/2008/09/07/11349/</link>
      <pubDate>Sun, 07 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/07/11349/</guid>
      <description> postconf
でおｋ
デフォルトの設定値は↓で確認
postconf -d </description>
    </item>
    
    <item>
      <title>ddclientでDynDNSのIPをアップデートしてみようか</title>
      <link>https://yaasita.github.io/2008/08/24/11411/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/24/11411/</guid>
      <description> aptでインストールして初期設定して
まだ足りないとこあるから
dpkg-reconfigure ddclient
打って再設定。デーモンで動かさないようにする。
そんで/etc/ddclient.confを編集
use=if
になってるけどこれだと自分のIPアドレス（プライベートアドレス）を通知してしまうので、
use=web
にして回避させる。
あとは普通に
ddclient
と打てばアップデートされる
cronか何かに登録しておくといいかも
参考サイト
http://tinstoy.jugem.jp/?eid=13 </description>
    </item>
    
    <item>
      <title>Firefoxの面白いテーマ</title>
      <link>https://yaasita.github.io/2008/08/14/11453/</link>
      <pubDate>Thu, 14 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/14/11453/</guid>
      <description> マリオ
https://addons.mozilla.org/ja/firefox/addon/7921 </description>
    </item>
    
    <item>
      <title>x11vncのリバースコネクトについて</title>
      <link>https://yaasita.github.io/2008/07/27/11493/</link>
      <pubDate>Sun, 27 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/27/11493/</guid>
      <description>http://www.karlrunge.com/x11vnc/#faq-reverse-connect</description>
    </item>
    
    <item>
      <title>puttyで起動時の引数を指定してすぐにコンソールを開く</title>
      <link>https://yaasita.github.io/2008/07/20/11536/</link>
      <pubDate>Sun, 20 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/20/11536/</guid>
      <description> -load　オプションを起動時の引数に与えてやればいいと思います。
詳しくはこちらの 3.8.1 Starting a session from the command line
を見てもらえれば分かると思います。

参考サイト
http://p0t.jp/archives/2006/09/1.html </description>
    </item>
    
    <item>
      <title>最近、気になったソフト</title>
      <link>https://yaasita.github.io/2008/07/10/11599/</link>
      <pubDate>Thu, 10 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/10/11599/</guid>
      <description> IgRemote・・・すげー早いVNCだって
Social IME・・・みんなで育てるIMEだって </description>
    </item>
    
    <item>
      <title>vimだとCtrl&#43;Hでバックスペースが入るお</title>
      <link>https://yaasita.github.io/2008/07/04/11663/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/04/11663/</guid>
      <description> :h i_^Hで確認してみよう
bashのキーバインドをviにしている人も試してみてください
あと
追記：なんか世間一般的にそうなってるみたいです。なにもvimに限った事ではないのかも
Ctrl+M・・・Enter
Ctrl+H・・・BackSpace
Ctrl+I・・・Tab </description>
    </item>
    
    <item>
      <title>Firefox3にむけて入れる拡張おさらい</title>
      <link>https://yaasita.github.io/2008/07/03/11725/</link>
      <pubDate>Thu, 03 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/03/11725/</guid>
      <description> Last Change:2008/06/28 20:43:08.
前回も書いたけど付け足した拡張とかあるのでまたまとめ
(＊はFirefox3対応済み)
Dictionary Search＊
Cache Viewer＊
Fast Video Download
Go Up＊
Scrap Book＊
Switch Proxy Tool
Web Developer＊ 日本語版
テキストリンク＊
ニコニコ動画ダウンローダ
refspoof
User Agent Switcher＊
Live HTTP Headers＊ 使い方
ViewSourceWith＊
Fasterfox
QuickProxy＊
Multiproxy Switch＊
---暫定---
Fast Dial＊ 紹介
Video DownloadHelper＊
Download Embedded 0.5
Embedded Objects 1.1
New Live Wall </description>
    </item>
    
    <item>
      <title>sambaで接続が切れる問題</title>
      <link>https://yaasita.github.io/2008/06/30/11786/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11786/</guid>
      <description> socket options = IPTOS_LOWDELAY SO_RCVBUF=1000 SO_SNDBUF=1000
バッファリングが多すぎたみたい
低スペックなPCだとNODELAYは辛いようだ
socketオプションは↓を参照
http://www.linux.or.jp/JM/html/LDP_man-pages/man7/socket.7.html </description>
    </item>
    
    <item>
      <title>自宅鯖のapache2をチューニング</title>
      <link>https://yaasita.github.io/2008/06/30/11765/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11765/</guid>
      <description> Sambaの件でバッファリングが大きすぎてサーバー側で処理できなくなる→切断となっていることに気づいたのでもしかするとapache2で大きいファイルを落とすときに切れる現象も同じなんじゃないかなと思ってチューニングしてみる。
受信バッファサイズと送信バッファサイズを調整して鯖が落ちるのを止める。
俺はhttpd.confに↓を書いた。でおｋだった。
SendBufferSize 4000
ReceiveBufferSize 1500
具体的にどうコネクションが切れるか検証してないけど多分こんな感じだと思う
クライアント「オラオラ・・・もっとパケット送るぜー！ウィンドサイズはでかいからなーｗ」
サーバー「ちょｗｗｗおまｗｗｗ待ってくれそんな処理しきれｗｗｗ」
（ただいまサーバーがシーケンシャルナンバーの整理などしておりますしばしお待ちください）
クライアント「おかしいな？返事がない・・・しかたないコネクション切るか」
サーバー「ふう・・・終わったぜ！さあパケット返そうかな・・・ってコネクション切れてるしｗｗｗｗ」
みたいなノリだと思う
まあバッファの調整はマシンのスペックを見て調整しましょってことで </description>
    </item>
    
    <item>
      <title>Firefox3のウィルススキャンいらね</title>
      <link>https://yaasita.github.io/2008/06/29/11807/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11807/</guid>
      <description>about:configからbrowser.download.manager.scanWhenDoneをfalseに設定。</description>
    </item>
    
    <item>
      <title>LinuxでS.M.A.R.T情報を表示する</title>
      <link>https://yaasita.github.io/2008/06/29/11910/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11910/</guid>
      <description>aptかなんかでsmartmontoolsをインストール
# smartctl -a /dev/hda  これで見れるらしい↓の方が見やすいかも
# smartctl -A /dev/hda  参考サイト
項目の詳しい説明は下記のwkipedia参照
http://ja.wikipedia.org/wiki/Self-Monitoring,_Analysis_and_Reporting_Technology
Windowsだとこんなものもあるらしい
CrystalDiskInfo</description>
    </item>
    
    <item>
      <title>sambaを入れてみよう</title>
      <link>https://yaasita.github.io/2008/06/29/11847/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11847/</guid>
      <description> aptかなんかでインストール
/etc/samba/smb.confを直そうか
[global]
unix charset = UTF-8
dos charset = CP932
display charset = UTF-8
まず↑の設定を確認unix charsetは環境に合わせてどうぞ
workgroup = MSHOME
次にワークグループを合わせて
security = share
セキュリティをshareにした。パスワード求められるとウザイので・・・
でもこれだとvistaとかだと問題になるそうです　XPの場合は大丈夫らしいけど
guest account = ageftp
あとはゲストアカウントを誰にするかを決める。
[upload]
path = /var/www/upload/
available = yes
browsable = yes
public = yes
writable = yes
read only = no
create mask = 0777
printable = no
guest ok = yes
あとは適当にどうぞ
ここで別にゲストアカウントを誰々って決めなくても良いんですが、
じつはこの/var/www/uploadディレクトリはftpのanonymousログインを
許可しているのでotherのパーミッションに書き込みを与える事が出来ないのです </description>
    </item>
    
    <item>
      <title>Linuxでよく使われるscreenを今更使ってみた</title>
      <link>https://yaasita.github.io/2008/06/27/11951/</link>
      <pubDate>Fri, 27 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/27/11951/</guid>
      <description> つーわけでメモ
aptかなんかでサクッとインストールしてscreenで起動します。
まずコマンドはプレフィックスキー（コマンド前に毎回入力するキー）がいります。そんでデフォルトのプレフィックスキーはCtrl+aです。
Ctrl+a ?でヘルプ見れます。
コマンド一覧　プレフィックスキーは省略
c　新しい端末を開く
&#34;　画面リストの表示
n　次の画面へ
p　前の画面へ
n nの端末へ移動(nは端末番号)
S 画面分割 大文字のSなのでshiftと共に押す！
\　バックスラッシュ　全てを破棄してscreenを終了
Ctrl＋i　ウィンド間の移動
X　ウィンドウのクローズ　大文字のX！
[　コピーモードの開始　開始地点、終了地点でエンターかスペース
]　ペースト
:resize -10　ウィンドのリサイズ。-10だと縮める10広げるみたいな感じ
d　デタッチ
screen -r でデタッチした端末をアタッチ
screen -ls　で端末一覧表示 </description>
    </item>
    
    <item>
      <title>Firefoxの拡張ViewSourceWith使う時の注意点</title>
      <link>https://yaasita.github.io/2008/06/22/12012/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/22/12012/</guid>
      <description> 例えばこのBloggerの入力フォームはUTF-8です。
Kaoriya版のvimだとsjisがデフォルトなので文字化けします。下のように起動時にエンコーディングを変えておくと良いかもしれません。

シンタックスを当てたいときはこんな感じでオプションを追加していけば良いんじゃないでしょうか
 </description>
    </item>
    
    <item>
      <title>kaoriya版vimでは便利なコマンドが用意されているよ</title>
      <link>https://yaasita.github.io/2008/06/22/12034/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/22/12034/</guid>
      <description> http://nanasi.jp/articles/vim/cmdex_vim.html
↑に書いてありました
/vim71-kaoriya-w32j/runtime/plugin/cmdex.vim
↑に置かれているので見てみると良いんじゃないでしょうか
HTMLConvertは中で2html.vimを呼んでるみたいですね
TOhtmlコマンドがあるのになんでこんなコマンドあるんだろ・・・ </description>
    </item>
    
    <item>
      <title>vimでマークを視覚的に表示する</title>
      <link>https://yaasita.github.io/2008/06/16/12054/</link>
      <pubDate>Mon, 16 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/16/12054/</guid>
      <description> http://nanasi.jp/articles/vim/showmarks_vim.html
http://www.vim.org/scripts/script.php?script_id=152
他にもマークにマッチする正規表現があるのでそれでもおｋです。
たとえばaマークをTodoハイライトするには
syntax match Todo /.*\%&#39;a.*/ containedin=ALL
を$VIM/runtime/syntax/txt.vimというファイルを作り入れておきます。
自分はtxtにそのハイライトを当てているので_gvimrcの中で
autocmd BufRead,BufNewFile *.txt setfiletype txt
を追加してファイルタイプを設定しています。 </description>
    </item>
    
    <item>
      <title>Firefox3拡張の強制インストール</title>
      <link>https://yaasita.github.io/2008/06/15/12094/</link>
      <pubDate>Sun, 15 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/15/12094/</guid>
      <description> http://d.hatena.ne.jp/periwnkl/20080611/p1 </description>
    </item>
    
    <item>
      <title>Debian(etch)でcpan設定</title>
      <link>https://yaasita.github.io/2008/06/14/12155/</link>
      <pubDate>Sat, 14 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/14/12155/</guid>
      <description>まずCPANを使う上で必要なソフトは下記のとおりです。先にインストールしておきます。
gzip,tar,unzip,make,lynx,wget,ncftpget(ncftpでインストール)
#cpan
で初回起動時の設定が入る。基本的にEnterでデフォルトの設定で問題ないと思います。
The next option deals with the charset your terminal supports. In
general CPAN is English speaking territory, thus the charset does not
matter much, but some of the aliens out there who upload their
software to CPAN bear names that are outside the ASCII range. If your
terminal supports UTF-8, you say no to the next question, if it
supports ISO-8859-1 (also known as LATIN1) then you say yes, and if it</description>
    </item>
    
    <item>
      <title>aptitudeのよく使うコマンドとか</title>
      <link>https://yaasita.github.io/2008/06/12/12198/</link>
      <pubDate>Thu, 12 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/12/12198/</guid>
      <description> 検索時には正規表現が使えます
lで検索すると制限できていいかも・・・
~d説明
正規表現説明にパッケージ説明がマッチするパッケージにマッチします。 ~d&#34;test&#34;
みたいな感じで
検索パターン </description>
    </item>
    
    <item>
      <title>pearのコマンドとか・・・</title>
      <link>https://yaasita.github.io/2008/06/12/12177/</link>
      <pubDate>Thu, 12 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/12/12177/</guid>
      <description> phpのライブラリ管理のpear
よく使うコマンド備忘録
pear
PEARコマンド一覧表示
pear help command_type
command_typeの説明を表示
pear list
現在インストールされているパッケージ一覧
pear list-upgrades
更新ライブラリの確認
pear upgrade package
パッケージのアップグレード前述のpear list-upgradeで出てきたPACKAGE欄を
packageに入れる </description>
    </item>
    
    <item>
      <title>scimとgvimは相性悪いみたい</title>
      <link>https://yaasita.github.io/2008/06/08/12219/</link>
      <pubDate>Sun, 08 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/08/12219/</guid>
      <description> http://d.hatena.ne.jp/silverintegral/20071115
こんな感じでどーぞ </description>
    </item>
    
    <item>
      <title>apache2にDirectoryIndexの設定項目が無い件</title>
      <link>https://yaasita.github.io/2008/05/06/12324/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12324/</guid>
      <description> /etc/apache2/mods-enabledのdir.confにあるそうです
参考リンク
http://www.maocat.jp/?p=10 </description>
    </item>
    
    <item>
      <title>expectを使って自動的にPCをシャットダウンさせる</title>
      <link>https://yaasita.github.io/2008/05/06/12303/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12303/</guid>
      <description> こんな感じで書くと良いですよ
WebからやりたいならPerlならsystem関数とかで呼べば良いんじゃないでしょうか
#!/usr/bin/expect
set timeout 10
spawn telnet 192.168.0.2
expect &#34;login:&#34;
send &#34;root\n&#34;
expect &#34;Password:&#34;
send &#34;hogehoge\n&#34;
send &#34;shutdown -h now\n&#34;
send &#34;exit\n&#34;
interact </description>
    </item>
    
    <item>
      <title>squidでユーザー認証を行う(Ubuntu8.04)</title>
      <link>https://yaasita.github.io/2008/05/06/12366/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12366/</guid>
      <description>まずhtpasswdでユーザー名とパスワードのMD5値のペアtxtを用意します。
# htpasswd -c /etc/squid/passwd hogehoge
New password:
Re-type new password: できたら↓のように指定します。
auth_param basic children は認証プロセスの為のプロセス数を指定します。
auth_param basic realm はBASIC認証時に現われるメッセージを指定します。この場合は&#34;Squid proxy-caching web server&#34;と表示されます。
auth_param basic credentialsttl はパスワードの生存時間を指定します。（HTTPアクセスヘッダに付随させるBASIC認証で生存時間があるのはよく分からないですが・・・）
auth_param basic casesensitive は大文字小文字を区別するかどうかです（多分）offなので区別します。最後にacl kusi proxy_auth REQUIREDでアクセスリストkusiを定義
ローカルネットの後にhttp_access allow kusiを入れているので
LAN内のホストなら無条件で通し、WAN側からの要求にはBASIC認証を要求します。
auth_param basic program /usr/lib/squid/ncsa_auth /etc/squid/passwd
auth_param basic children 5
auth_param basic realm Squid proxy-caching web server
auth_param basic credentialsttl 2 hours
auth_param basic casesensitive off
acl kusi proxy_auth REQUIRED
http_access allow localnet</description>
    </item>
    
    <item>
      <title>vsftpdでanonymousログインを許可させる場合の注意点</title>
      <link>https://yaasita.github.io/2008/05/06/12345/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12345/</guid>
      <description> /etc/vsftpd.confを編集して
anonymous_enable=YESを追加する
↓のようにanonymousユーザーのディレクトリを決定させる
anon_root=/var/www/upload/
この時の注意点としてはパーミッションにその他ユーザが書き込めないような設定にしておくこと（これをしないとログインできない）
例：rwxr-xr-xやrwxrwxr-xなど </description>
    </item>
    
    <item>
      <title>Linux版FirefoxとWindows版Firefoxの挙動の差異</title>
      <link>https://yaasita.github.io/2008/05/04/12387/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12387/</guid>
      <description> about:configから
browser.urlbar.clickSelectsAllをtrueにすると
URLバーをクリックした際にすべて選択されます。
browser.backspace_actionを0にするとバックスペースで履歴を一つ前に辿れます。
1ならスクロールアップ。2なら何もしないです。
↓はよく設定する箇所です（Mailtoタグの無効化と検索時のbeep音の無効化）
network.protocol-handler.external.mailto
false
accessibility.typeaheadfind.soundURL
空文字列 </description>
    </item>
    
    <item>
      <title>x2vncについて・・・・・</title>
      <link>https://yaasita.github.io/2008/05/03/12509/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12509/</guid>
      <description> デュアルスクリーンハック - MS-Windows と X ディスプレイをリンク
このプログラムは x2x と vncviewer の機能をマージします。 X ディスプレイを起動したマシンとメインスクリーンで VNC サーバを起動したマシン が、あたかも一つのマシンに結合された二つのディスプレイであるかのように振る舞う ことを可能にします。マウスポインタを選択した方にある画面から外すと、ポインタ がもう一つの画面に現れます。
だそうですいつか調べます </description>
    </item>
    
    <item>
      <title>NTPで時刻あわせ　Linux</title>
      <link>https://yaasita.github.io/2008/04/20/12571/</link>
      <pubDate>Sun, 20 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/20/12571/</guid>
      <description> こんな感じでcronに登録しておくといいです
#!/bin/bash
ntpdate ntp.jst.mfeed.ad.jp
またハードウェアクロックとの同期も取る必要があります
ハードウェアクロックがずれていると再起動した時におかしな時間になってしまいます。
hwclock --systohc
と打てばおｋです。
hwclock
と打てば現在のハードウェアクロックを見れます
hwclock --adjust
と打てば前回の差分から進む（または遅れる）時間を計測していい感じに調整してくれます
cronとかには↓のように登録しておくといいかも
#!/bin/bash
ntpdate ntp.jst.mfeed.ad.jp  /dev/null
hwclock --adjust
hwclock --systohc </description>
    </item>
    
    <item>
      <title>squidでプロキシーサーバーを立てる</title>
      <link>https://yaasita.github.io/2008/04/13/12612/</link>
      <pubDate>Sun, 13 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/13/12612/</guid>
      <description> まず、
apt-get install squid
などでインストールする。
次に/etc/squid/squid.confを編集する
http_port 8080
visible_hostname 192.168.0.11
http_portで接続ポートを設定、visible_hostnameで自分自身のホスト名を設定
acl localnet src 192.168.0.0/255.255.255.0
http_access allow manager localhostの下あたりに
http_access allow localnet
forwarded_for off
アクセス元のIPを隠す
via off
viaヘッダを隠す
header_access Cache-Control deny all
キャッシュコントロールヘッダの無効化
cache_dir ufs /var/spool/squid 1500 64 1024
キャッシュディレクトリサイズの変更とか
ufs --&amp;amp;gt; なんかこれ指定しとけてきなあれ
/var/spool/squid --&amp;amp;gt; キャッシュディレクトリ
1500 --&amp;amp;gt; なんメガバイトのサイズを上限とするかこの例だと1500MB
64 --&amp;amp;gt; キャッシュディレクトリの最初の階層のフォルダ数
1024 --&amp;amp;gt; キャッシュディレクトリの2番目の階層のフォルダ数
参考
http://tech.ckme.co.jp/proxy.shtml
http://squid.robata.org/squid2.0-conf.html </description>
    </item>
    
    <item>
      <title>nmapを使う</title>
      <link>https://yaasita.github.io/2008/03/31/12673/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/31/12673/</guid>
      <description> nmap -sS -P0 -T2 -p 1-65535 -oN kaons.txt -r -v -sV hoge.co.jp
-sS　ステルススキャン
-P0 ホストの発見を省略する（確実にそのホストが存在していると分かっている場合はこれを使用する）
-T2 スキャン速度。T1、T2、T3、T4、T5と早くなっていく。T5は高速回線が望ましい。
-p ポートスキャンする範囲↑の例では1から65535番まで(全部)
-oN 出力するファイル
-r ランダムにスキャンしない
-v 冗長オプション。多くの情報を出力する。
-sV そのポートで使用されているアプリを特定する
-O OSを特定する
※注意
家庭用のブロードバンドルーターを使っている人はスキャン速度をT3以下にしないと落ちる場合があります。 </description>
    </item>
    
    <item>
      <title>apacheの.htaccessでユーザーアクセスする人を絞る</title>
      <link>https://yaasita.github.io/2008/03/22/12714/</link>
      <pubDate>Sat, 22 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/22/12714/</guid>
      <description> AuthType Basic
AuthUserFile &#34;/etc/apache2/pass&#34;
AuthName &#34;Enter pass word&#34;
Require user hogehoge
Require user　の後にhogehogeという人なら許すという設定 </description>
    </item>
    
    <item>
      <title>analog  /etc/analog.cfg以外のコンフィグファイルを使う</title>
      <link>https://yaasita.github.io/2008/03/15/12757/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/15/12757/</guid>
      <description> analog -G +g/var/www/hoge/foo.cfg.txt
のように書きます。+gの後にスペースを入れないように注意します。
また-Gをつけるのを忘れないで下さい。 </description>
    </item>
    
    <item>
      <title>analogを使ってログ解析</title>
      <link>https://yaasita.github.io/2008/03/15/12777/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/15/12777/</guid>
      <description>analogはログ解析ソフトです。
Debianならaptで簡単にインストールできます。
インストールしたらまず/etc/analog.cfgを編集します。
ログファイルの指定
LOGFILE /var/log/apache2/access.log
古いログファイルの指定 (gzで圧縮されていても大丈夫です)
LOGFILE /var/log/apache2/access.log.*
出力HTMLの指定
OUTFILE /var/www/hoge/Report.html
HOSTEXCLUDE・・・このホストからのログは対象としない
リモートホストでの指定ではワイルドカード（*）を省略しないこと
HOSTINCLUDE・・・このホストを集計の対象とする
FILEEXCLUDE・・・このファイル（ディレクトリ）を集計の対象としない
DNSFILE・・・IPの逆引き結果をキャッシュするファイル
DNS WRITE・・・キャッシュを参照、新しいIPはキャッシュする詳しくはこちら
DNSGOODHOURS・・・キャッシュの有効期限　詳しくはこちら

LANGUAGE japanese-utf
HOSTEXCLUDE 192.168.0.*
HOSTEXCLUDE *.point.ne.jp
HOSTEXCLUDE *.ezweb.ne.jp
#FILEINCLUDE /upload/*
FILEEXCLUDE /icons/*
DNSFILE /var/www/kaiseki/dnscache.txt
DNS WRITE
DNSGOODHOURS 679
BROWSER ON
DAILYREP ON
DAILYSUM ON
FAILHOST ON
FAILREF ON
FAILURE ON
FAILUSER ON
FIVEREP ON
FIVESUM ON
FULLBROWSER ON
HOST ON
HOURLYREP ON
HOURLYSUM ON
ORGANISATION ON</description>
    </item>
    
    <item>
      <title>apacheのログにリモートホストを表示する</title>
      <link>https://yaasita.github.io/2008/03/14/12797/</link>
      <pubDate>Fri, 14 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/14/12797/</guid>
      <description> /etc/apache2/apache2.conf
に
HostnameLookups Off
という項があるので
HostnameLookups On
に変更する。 </description>
    </item>
    
    <item>
      <title>puttyでsftp/scp (psftp/pscp)</title>
      <link>https://yaasita.github.io/2008/03/10/12817/</link>
      <pubDate>Mon, 10 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/10/12817/</guid>
      <description> sftpはputtyの中にある
psftpを実行します。
実行するとコンソールが開くので
open hogeuser@bar.test.jp 22
と入力します。
また鍵認証をした場合はputtyに登録してあるセッション名でもログインできます。
open sessionname
ログインしたあとはhelpコマンドによってコマンド一覧を見れます。
一つ一つのコマンドの詳細はhelp によって見れます。
ローカルのファイルを確認する場合はWindowsの場合
!dir
と入力します。
put test.txt 
でtest.txtをリモートへ送信します。
注意
ftpといってもsshのポートを利用します。
scpは
pscp.exeをDOS窓から実行します
例
C:\pscp.exe foo.txt user@bar.test.jp:
Using keyboard-interactive authentication.
Password:
foo.txt | 14 kB | 14.1 kB/s | ETA: 00:00:00 | 100%
注意
pscpにpathが通っていること
user@bar.test.jp:←のコロンを忘れないこと
参考リンク
PSFTPの利用 </description>
    </item>
    
    <item>
      <title>vimでタブをスペースに変換する</title>
      <link>https://yaasita.github.io/2008/03/07/12837/</link>
      <pubDate>Fri, 07 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/07/12837/</guid>
      <description> :set expandtab で今後入力されるタブがスペースに変換される。
:retab 既存のタブはこのコマンドで変換される。
:set tabstop=4
としていれば4つのスペースに変換される。 </description>
    </item>
    
    <item>
      <title>Apacheのautoindexモジュールが文字化けする</title>
      <link>https://yaasita.github.io/2008/03/05/12857/</link>
      <pubDate>Wed, 05 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/05/12857/</guid>
      <description> ApacheのautoindexはデフォルトエンコーディングでUTF-8を指定しているにも関わらず、
インデックスをリクエストしたときにレスポンスヘッダに
charset=ISO-8859-1
が付いてしまいます。
回避するためにはautoindexのconfのIndexOptionsに
Charset=UTF-8
を追加します。 </description>
    </item>
    
    <item>
      <title>x11vncよく使いそうなオプション（追加）</title>
      <link>https://yaasita.github.io/2008/02/13/12921/</link>
      <pubDate>Wed, 13 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/13/12921/</guid>
      <description> 前回の他に見つけた良く使いそうなオプション
-allow
リモートアクセスを許可するホストを設定する。
例）192.168.0.5からだけアクセスを許可する
-allow 192.168.0.5
例）192.168.0.0/24からのアクセスを許可する
-allow 192.168.0.
-nopw
パスワードファイルが無くても警告を出さない
＊その他のx11vnc関連の投稿
x11vnc端末から実行した際に出るエラー出力が邪魔
x11vncの設定を保存するには 
Ubuntu7.04 にx11vncをインストールする  </description>
    </item>
    
    <item>
      <title>x11vnc端末から実行した際に出るエラー出力が邪魔</title>
      <link>https://yaasita.github.io/2008/02/13/12942/</link>
      <pubDate>Wed, 13 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/13/12942/</guid>
      <description> ~$ x11vnc &amp;amp;amp; /dev/null &amp;amp;amp;
こんな感じでnullへ捨てる。最後の&amp;amp;amp;はバックグラウンドで実行するという意味。 </description>
    </item>
    
    <item>
      <title>ProxomitronをLinuxで・・・</title>
      <link>https://yaasita.github.io/2008/01/07/13004/</link>
      <pubDate>Mon, 07 Jan 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/01/07/13004/</guid>
      <description> １．wineで動かす
２．Privoxyで頑張る </description>
    </item>
    
    <item>
      <title>vsftpdへIEを使ってログインする</title>
      <link>https://yaasita.github.io/2007/12/09/13126/</link>
      <pubDate>Sun, 09 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/09/13126/</guid>
      <description> IEは標準でftpクライアントを持っています。
ログインした際は通常のファイルのようにドラッグ＆ドロップによるアップロードやダウンロード。右クリックで削除、パーミッションの設定も出来ます。
ftp://hoge.jp/という風にアドレスバーに入れてもvsftpdの場合は下図の様なエラーになります。

iswebやgeocitiesのFTPサーバーへは上のようなエラーは出ず、この後にユーザー名とパスワードの入力を求められます。
vsftpdのサーバーへログインする際にはアドレスの前にユーザー名を書いてください。例えばfoobarというユーザーでログインしたいのなら
ftp://foobar@hoge.jp/
のようにアドレスバーに入力してください。この次にパスワードの入力を求められます。
パスワードも同時に入力したいのなら（例としてパスワードをpasswdとします）
ftp://foobar:passwd@hoge.jp/
と入力します。ログインした後にお気に入りに追加した場合、ftp://hoge.jp/としてお気に入りに追加されてしまうため、お気に入りの項目を右クリック→プロパティから上記アドレスに書き換えてください。 </description>
    </item>
    
    <item>
      <title>Apacheのパスワード制御をサブディレクトリだけ外すには</title>
      <link>https://yaasita.github.io/2007/11/30/13229/</link>
      <pubDate>Fri, 30 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/30/13229/</guid>
      <description> そのディレクトリ中に.htaccessを作り
Satisfy Any
Allow from all
と書く
またあるディレクトリだけBASIC認証の挙動を変えたい場合は以下のような.htaccessファイルをつくる。
AuthType Basic
AuthUserFile &#34;/etc/apache2/pass&#34;
AuthName &#34;Enter passwd&#34;
Require user hoge
 </description>
    </item>
    
    <item>
      <title>Debian(etch)にtelnetdをインストール</title>
      <link>https://yaasita.github.io/2007/11/30/13249/</link>
      <pubDate>Fri, 30 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/30/13249/</guid>
      <description> apt-get install telnetd
その後
/etc/init.d/openbsd-inetd start
で起動します。
telnetでのrootログインを許可したいなら
/etc/pam.d/login
にある
auth required/lib/security/pam_securetty.so
Debian Lennyの場合は
auth [success=ok ignore=ignore user_unknown=ignore default=die] pam_securetty.so
をコメントアウトしてください
また動いているプロセスは/usr/sbin/inetdです
参考
http://www.itmedia.co.jp/help/tips/linux/l0370.html </description>
    </item>
    
    <item>
      <title>Thunderbirdの表示名がメールアドレス前に入ってしまう</title>
      <link>https://yaasita.github.io/2007/11/28/13270/</link>
      <pubDate>Wed, 28 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/28/13270/</guid>
      <description> 例えば表示名を「hogehoge」としてアドレス帳に登録しておき、example@test.comに送ろうとしたときにToヘッダは
To:hogehoge &amp;amp;lt;yamaooo310@yahoo.co.jp&amp;amp;gt;
となり表示名が入ってしまいます。
これを止めるにはアドレス帳に登録する際に表示名には登録せず姓名の欄に名前を登録します。このようにした場合、アドレス帳がメールアドレスが表示されて見にくくなるのでアドレス帳→表示→名前の表示→姓　名前を選択します。 </description>
    </item>
    
    <item>
      <title>rep2をLinuxにインストール</title>
      <link>https://yaasita.github.io/2007/11/25/13311/</link>
      <pubDate>Sun, 25 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/25/13311/</guid>
      <description>インストール 公式サイトからrep2をダウンロード
以下パッケージのインストール
apt-get install php5 php-http-request php5-gd php-pear php-compat  ※公式にはこう書いてある
 aptitude install apache2-mpm-prefork php5 php-pear php-compat php-http-request php-pager php-file php5-curl curl unzip
 必要なpearパッケージも
pear install Net_UserAgent_Mobile  ※なかったらpear search Net_UserAgent_Mobileとかで検索してみる
リポジトリにPHP_Compatが無かった場合は追加で以下のコマンド
pear install PHP_Compat  それ以外は公式サイト見てやる
公式サイトの説明文
  サーバを立ち上げて、PHPが動くようにする。PEARも忘れずに（下記参照） rep2ディレクトリをサーバからアクセスできる所（「~/Sites」とか）へ置く。 rep2ディレクトリの中にデータ保存用のディレクトリを作成する。（デフォルトでは「data」ディレクトリ） データ保存用ディレクトリのパーミッションを「707」（または777）にする。 必要に応じて、 conf/conf_admin.inc.php などのconfファイルをテキストエディタで開いて設定編集。 ブラウザから、
http://127.0.0.1/~(ユーザ名)/rep2/index.php
てな具合にrep2ディレクトリへアクセス。  ※PHPが確かに動いていることを確かめたい時は？
http://127.0.0.1/~(ユーザ名)/rep2/phpinfo.php
てなとこにアクセスしてみて下さい。
ずらずらーっとPHPの環境情報が表示されたならば、PHPは正常に動作しています。
（確認ができましたら、phpinfo.php はもう必要ないので削除しても構いません）
これで動くはずです。動かなかった場合はエラーを見て判断してください。
 設定 conf/conf_hostcheck.php
を編集してグローバルIP側からの接続でもrep2を利用できるようにします。
29行目付近 customを1に設定
// ユーザー設定 &#39;custom&#39; =&amp;gt; 1,  36行目付近を以下のように設定</description>
    </item>
    
    <item>
      <title>MinGWをWindowsにインストールする</title>
      <link>https://yaasita.github.io/2007/11/24/13332/</link>
      <pubDate>Sat, 24 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/24/13332/</guid>
      <description>フリーのC/C++コンパイラのインストールメモです。
まず http://www.mingw.org/ に行きダウンロードします。
ダウンロードは sourceforge から行ってください。現時点で最新版のAutomated MinGW InstallerのMinGW-5.1.3をダウンロードします。このダウンロードしたexeを実行すると自動的にダウンロードとインストールが行えます。

途中、↑のようにダウンロードするバージョンを聞かれますが、currentを選択すればいいでしょう。
インストールを C:\MinGW\ にした場合は C:\MinGW\bin にPATHを設定します。この時、PATH=C:\MinGW\bin;%system%....
の様に先頭にしておけば検索が早くなり結果的に早くコンパイルできるはずです。
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>x11vncの設定を保存するには</title>
      <link>https://yaasita.github.io/2007/11/18/13354/</link>
      <pubDate>Sun, 18 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/18/13354/</guid>
      <description> 前回の設定では長いオプションをいちいち入力する必要がありましたが
rcファイルを作りオプションを保存することができます。
設定ファイルは~/.x11vncrcとして保存します。
前回の設定を保存するなら
-forever
-rfbauth /home/hogehoge/.vnc/passwd
-rfbport 5000
-display :00
のように書いて保存します。#を入れるとそれ以降の文字はコメントとして扱われます。
もし.x11vncrcを読み込みたくないなら
-norc
オプションを付けて下さい。 </description>
    </item>
    
    <item>
      <title>中国系P2Pテレビを視聴するには？</title>
      <link>https://yaasita.github.io/2007/11/12/13395/</link>
      <pubDate>Mon, 12 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/12/13395/</guid>
      <description> https://wiki.ubuntulinux.jp/UbuntuTips/Application/P2Ptv </description>
    </item>
    
    <item>
      <title>ubuntu7.10にApache2を入れる</title>
      <link>https://yaasita.github.io/2007/11/11/13417/</link>
      <pubDate>Sun, 11 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/11/13417/</guid>
      <description> ファイル名が日本語の場合、Indexが文字化けする場合は/etc/apache2/conf.d/charset をUTF-8がデフォルトになるように書き換える。
Indexの細かい指定は/etc/apache2/mods-available/autoindex.conf で設定する。 </description>
    </item>
    
    <item>
      <title>kxmameでLinuxでもアーケードゲームを遊ぶ</title>
      <link>https://yaasita.github.io/2007/10/29/13480/</link>
      <pubDate>Mon, 29 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/29/13480/</guid>
      <description> ubuntuのaptでインストールしたら
アプリケーションー＞ゲームー＞kxmameを選択して起動
その後
Settings-Directoriesを選択して
そこら辺のタブにある
/usr/lib/games/xmameを
/usr/share/games/xmameに変える
次にFileー＞Propertiesから
Controllersを選んで
ジョイスティックデバイスを/dev/input/js0にする。
ROMイメージはzipのままで解凍しないでおく。ROMイメージ場所の設定はSettings-Directories...からMame/Mess basic pathタブの Mame ROMS path:で指定する。
ゲームを起動したらTabで諸々の設定ができる。
ROMは下記サイトで探す
http://www.romnation.net/srv/roms/mame.html </description>
    </item>
    
    <item>
      <title>Windows版のapache2.2</title>
      <link>https://yaasita.github.io/2007/10/29/13458/</link>
      <pubDate>Mon, 29 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/29/13458/</guid>
      <description>Windows版の Apache は2.0系とは違いIndexオプションを指定しても下のように殺風景なものになります。

ファイルサイズや更新日時を表示する下図のような従来の見え方にするには

httpd.confにInclude conf/extra/httpd-autoindex.confを追加します。Index表示の細かい指定は
C:\Program Files\Apache Software Foundation\Apache2.2\conf\extra\httpd-autoindex.conf  で設定します。
http://www.geocities.jp/uesssu/soft/apache.htm
Apacheのバイナリをダウンロードするにはこちらからどうぞ
http://www.apache.org/dist/httpd/binaries/win32/
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[1].original_size.url; }   </description>
    </item>
    
    <item>
      <title>Firefoxでニコニコ動画へ改行を入力する</title>
      <link>https://yaasita.github.io/2007/10/27/13523/</link>
      <pubDate>Sat, 27 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/27/13523/</guid>
      <description> Alt押しながらテンキーで10押してAltを離せば入力できます。
他にもAlt押しながら対応する10進数のASCIIコードを押せば入力できます。 </description>
    </item>
    
    <item>
      <title>Firefox入れた拡張まとめ</title>
      <link>https://yaasita.github.io/2007/10/17/13544/</link>
      <pubDate>Wed, 17 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/17/13544/</guid>
      <description> Go Up
tagiri toolbar
CacheViewer
テキストリンク
nicoDownloader
scrapbook </description>
    </item>
    
    <item>
      <title>vim　ウィンドサイズと位置の記憶と復帰</title>
      <link>https://yaasita.github.io/2007/10/15/13584/</link>
      <pubDate>Mon, 15 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/15/13584/</guid>
      <description>&#34; Window位置の保存と復帰
if 1 &amp;amp;amp;&amp;amp;amp; has(&#39;gui_running&#39;)
let s:infofile = &#39;~/.window.vim&#39;
function! s:WinPosSizeSave(filename)
redir @a
winpos
redir END
let px = substitute(@a, &#39;.*X \(\d\+\).*&#39;, &#39;\1&#39;, &#39;&#39;) + 0
let py = substitute(@a, &#39;.*Y \(\d\+\).*&#39;, &#39;\1&#39;, &#39;&#39;) + 0
execute &#39;redir! &#39;.a:filename
if px  0 &amp;amp;amp;&amp;amp;amp; py  0
echo &#39;winpos &#39;.px.&#39; &#39;.py
endif
echo &#39;set lines=&#39;.&amp;amp;amp;lines.&#39; columns=&#39;.&amp;amp;amp;columns
redir END
endfunction
augroup WinPosSizeSaver
autocmd!
augroup END
execute &#39;autocmd WinPosSizeSaver VimLeave * call s:WinPosSizeSave(&#34;</description>
    </item>
    
    <item>
      <title>AudacityのVSTプラグインのインストール</title>
      <link>https://yaasita.github.io/2007/10/14/13624/</link>
      <pubDate>Sun, 14 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/14/13624/</guid>
      <description>
 http://audacityteam.org/vst/に行ってVSTイネーブラーをダウンロードして下さい。
（zipではなくexeのインストーラー形式なら簡単です） http://www.kjaerhusaudio.com/download.phpからプラグインをダウンロードします。
今回はClassic Reverbをダウンロードします。 先ほどダウンロードしたzipの中にあるClassic Reverb.dllをAudacityのプラグインフォルダに移動します。（例：C:\Program Files\Audacity\Plug-Ins） Audacityを再起動すると↑の画像のようにClassi Reverbが使えるようになります。  Classic Reverbはコンサートホールにいるような残響音を作れます。
AC９７のサウンドエフェクトコンサートホールを参考にパラメータを決定するといいかもしれません。

※VST=Virtual Studio Technology
参考リンク
http://blog.livedoor.jp/mugen_blog/archives/cat_50030024.html
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img1&#34;).parentNode.href = photos[1].original_size.url; document.getElementById(&#34;tumblr-img1&#34;).src = photos[1].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img2&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>Linuxで動画編集</title>
      <link>https://yaasita.github.io/2007/10/13/13645/</link>
      <pubDate>Sat, 13 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/13/13645/</guid>
      <description> kino
AviDemux
FFmpeg
など。。。。
 </description>
    </item>
    
    <item>
      <title>各Webページにどれくらい時間を費やしているか計るFirefoxの拡張</title>
      <link>https://yaasita.github.io/2007/10/13/13666/</link>
      <pubDate>Sat, 13 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/13/13666/</guid>
      <description> https://addons.mozilla.org/ja/firefox/addon/5168 </description>
    </item>
    
    <item>
      <title>Thunderbirdの引用記号を&amp;gt;にする</title>
      <link>https://yaasita.github.io/2007/10/07/13686/</link>
      <pubDate>Sun, 07 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/07/13686/</guid>
      <description> 引用記号の色や表示の仕方を変更できます。
https://addons.mozilla.org/ja/thunderbird/addon/170
 </description>
    </item>
    
    <item>
      <title>Linuxでマイク入力から録音する</title>
      <link>https://yaasita.github.io/2007/10/05/13706/</link>
      <pubDate>Fri, 05 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/05/13706/</guid>
      <description>Audacity
http://www.xucker.jpn.org/pc/audacity/record.html
あとaumixが必要</description>
    </item>
    
    <item>
      <title>vimで文字コードをステータスラインに表示するスクリプト</title>
      <link>https://yaasita.github.io/2007/09/27/13789/</link>
      <pubDate>Thu, 27 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/27/13789/</guid>
      <description> http://www.geocities.jp/uesssu/soft/vim/asciicode.txt </description>
    </item>
    
    <item>
      <title>vimでバイナリエディットする</title>
      <link>https://yaasita.github.io/2007/09/26/13830/</link>
      <pubDate>Wed, 26 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/26/13830/</guid>
      <description> :%!xxd
で文字にする
:%!xxd -r
でバイナリに変換
(※バイナリへ変換した時に元のファイル末尾が0Aじゃなかった場合
vim側が勝手に0Aを付与するので注意) </description>
    </item>
    
    <item>
      <title>Ubuntu7.04 にx11vncをインストールする</title>
      <link>https://yaasita.github.io/2007/09/22/13850/</link>
      <pubDate>Sat, 22 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/22/13850/</guid>
      <description> Ubuntuに標準にインストールされているvinoはGUIで設定が行えて、手軽で良いのですがポートの変更など細かい設定が出来ません。そこでx11vncを使ってみます。
まずaptでx11vncをインストールします。
インストールしたら
$ x11vnc -storepasswd を実行してパスワードファイルを作ります。実行すると ~/.vnc/passwdにパスワードファイルが作成されます。
次に、vncサーバーを起動させます。
$ x11vnc -forever -rfbauth ~/.vnc/passwd -rfbport 5000 -display :0.0各オプションの説明は以下の通りです。
-forever このオプションを付けないと誰かがVNCサーバーに接続し、切断した後に自動的にx11vncが終了してしまいます。
-rfbauth　このオプションの後に作成したpasswdファイルまでのパスを記述します。
-rfbport　VNCサーバーが待ち受けるポート番号を指定します。デフォルトは5900番です。
-display　このオプションの後に端末番号を指定します。端末番号はwhoコマンドなどで確認できます。
他にも下記のオプションがあります。
-viewonly クライアントには画面を見せるだけでキーボード、マウスによる入力を受け付けません。
x11vncは接続までの時間はvinoより長い気がしますが、ウィンドリサイズ時や処理を行っている際にマウスポインタが変形するところまで再現できるので接続した後はvinoよりも使い勝手が良いと思います。
自動起動させる場合は~/.vnc/passwdをフルパスにして（例：/home/hoge/.vnc/passwd）gnomeのシステム＞セッションのところから登録してください。 </description>
    </item>
    
    <item>
      <title>rep2をWindowsにインストールする</title>
      <link>https://yaasita.github.io/2007/09/20/13871/</link>
      <pubDate>Thu, 20 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/20/13871/</guid>
      <description> http://akid.s17.xrea.com/p2puki/index.phtml?Windows%C8%C7Apache%A4%C8curl%A4%CE%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB%A1%CA%A1%FC%A4%E2OK%A1%CBApache2.0.59%2BPHP5.2.3 </description>
    </item>
    
    <item>
      <title>Thunderbirdのアカウントフォルダの並び替えるには</title>
      <link>https://yaasita.github.io/2007/09/15/13914/</link>
      <pubDate>Sat, 15 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/15/13914/</guid>
      <description> https://addons.mozilla.org/ja/thunderbird/addon/258 </description>
    </item>
    
    <item>
      <title>Firefoxでニコニコ動画、Youtubeを保存する拡張</title>
      <link>https://yaasita.github.io/2007/09/08/13934/</link>
      <pubDate>Sat, 08 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/08/13934/</guid>
      <description> ニコニコ動画
http://miniturbo.org/product/extension/nicodownloader/
youtube
https://addons.mozilla.org/ja/firefox/addon/2390
http://tagiri.jp/toolbar/download.html </description>
    </item>
    
    <item>
      <title>Irvineで画像ダウンロードできない場合の対処</title>
      <link>https://yaasita.github.io/2007/09/05/13954/</link>
      <pubDate>Wed, 05 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/05/13954/</guid>
      <description> Irvineで画像をまとめて落とそうとしても落とせない場合があります。
もし、普通のブラウザで画像を表示できるのならリクエストヘッダを書き換えることでダウンロードできるはずです。
まず、フォルダ設定→HTTP(2)からUserAgentを
Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.8.1.1) Gecko/20061204 Firefox/2.0.0.1
などそれらしいものに変えます。
それでもダウンロードできない場合はその下で設定できるRefererやCookieを変えてください。
ここまで設定しても出来ない場合は
フォルダ設定→スクリプト→イベントのOnHttpRequest→HTTPヘッダの変更にチェックし編集ボタン
でリクエストヘッダを書き換えます。
headers[&#39;Accept&#39;] = &#39;image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/msword, */*&#39;;
このようなヘッダを追加するとうまくいくかも知れません。 </description>
    </item>
    
    <item>
      <title>Winodws環境でFTPサーバーを立てるとき</title>
      <link>https://yaasita.github.io/2007/08/08/14121/</link>
      <pubDate>Wed, 08 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/08/14121/</guid>
      <description> nekosogiftpdが良いらしいです。NAPT越えが出来ます。
NAPT超えをするためにはグローバルIPの確認が必要です。
このソフトはグローバルIP確認のために起動時に
http://nekosogi.sytes.net/regist/check_ip.cgi
を見に行きます。
リクエストがGETではなくPOSTで
POST /regist/check_ip.cgi HTTP/1.0
User-Agent: nekosogiftpd
Content-Length: 23
Host: nekosogi.sytes.net
Connection: close
ma=0003FF18E38F&amp;amp;amp;ver=205というデータを送ってました。ブラウザでリクエスト（当然GET）すると
global_ip�222.225.115.51�dialog�nekosogiftpd ver2.05がリリースしています。 アップデートをお願いいたします。�と出たので、バージョン情報でも送っているのかもしれません。多分、ver=205がそれでしょう。
ma=0003FF18E38Fは謎です。
もしドメインを取得しているのならPitifulNatというプラグインで名前解決によるグローバルIPの取得が可能です。
 </description>
    </item>
    
    <item>
      <title>vsftpdのレジューム機能について</title>
      <link>https://yaasita.github.io/2007/08/06/14142/</link>
      <pubDate>Mon, 06 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/06/14142/</guid>
      <description> vsftpdはproftpdのように明示的にレジューム機能の可否を書けません。
レジューム機能はデフォルトで有効になっていて無効には出来ません。
アップロード、ダウンロード、アスキーモード、バイナリモード
に関わらずレジュームが出来ます。 </description>
    </item>
    
    <item>
      <title>Firefoxでリファラを遮断したり、任意の文字列にするには</title>
      <link>https://yaasita.github.io/2007/08/05/14162/</link>
      <pubDate>Sun, 05 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/05/14162/</guid>
      <description> リファラの送信するかしないかの設定はabout:configから
network.http.sendRefererHeader
を変更する。値は0,1,2のいずれか。
0→リファラを一切送信しない
1→リンクを辿ってきた場合にのみリファラを送信
2→デフォルトの設定。画像読み込み時もリファラを送信
リファラを任意の文字列に設定するにはrefspoofという拡張をインストールすればいい。 </description>
    </item>
    
    <item>
      <title>vimの検索について</title>
      <link>https://yaasita.github.io/2007/08/03/14244/</link>
      <pubDate>Fri, 03 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/03/14244/</guid>
      <description> 対象単語の上にカーソルを置いて * を押すとその単語を前方検索します。
# は後方検索です。
最後に検索した文字列をhogeとします。ファイル中に含まれるhogeをhageに変えたい場合は
:%s//hage/gと省略できます。（意味は:%s/hoge/hage/g）
つまり:s/{pattern}/{string}/の{pattern}を省略した場合、最後に検索した
文字列になります。
検索履歴はq/で見れます。 </description>
    </item>
    
  </channel>
</rss>