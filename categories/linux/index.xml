<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on # cd ~yaasita</title>
    <link>https://yaasita.github.io/categories/linux/</link>
    <description>Recent content in linux on # cd ~yaasita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 23 Dec 2019 05:58:32 +0900</lastBuildDate>
    
	<atom:link href="https://yaasita.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>chromebookが最高だった</title>
      <link>https://yaasita.github.io/2019/12/23/chromebook/</link>
      <pubDate>Mon, 23 Dec 2019 05:58:32 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/12/23/chromebook/</guid>
      <description>ASUS の C434TA-AI0084 を買ったのでレビュー
chromeOS  起動もアプリの動作も全体的に速くてとても良い smartlockが失敗する時がある  解除がちょっと遅い10秒くらい待たされる   chromeの複数ユーザー機能が使えない  多重ログイン機能はあるけどちょっと微妙  別ユーザーへスイッチする場合はsmartlockで解除できない 別ユーザー側のAndroidアプリ、Linux環境は使えない(chromeだけ) 後述のLinux環境でchromium入れてそこでアカウント切り替えする手もある 同時にログインできないだけなので、別ユーザを追加してスイッチすることは可能      ディスプレイ  タブレットには少し重い 解像度は 2194x1234 ～ 1182x665の範囲で調整可能 起動毎にバックライトの明るさがリセットされてしまう(音量は記憶してるのに。。。) グレア液晶は問題なし綺麗  テザリング  Moto E5 とbluetoothでのテザリングが出来なかった  とりあえずUSBテザリングは刺すだけで使えたので良しとしてます    キーボード  Deleteキーが無いけど、Alt + Backspaceで問題なし かな/英語キーと, 半角全角切り替えキーがあるのでMac派でもWindows派でも大丈夫かも キーボードのバックライトは消せない  Androidアプリ  ほとんどのアプリは問題なかった 大画面でAndroidアプリ使うのは割と快適(例 tumblr) Android版Excelでとりあえず見るのはOKそう タウンWifiみたいなWifiを制御するアプリは上手く動かないかもしれない(要検証) パズドラは動かない  Linux環境 OS  Debian9なのでDebian10にアップデートされるのを期待 使い始めるのはすごく簡単、設定から有効ボタンを押すだけ 丸ごとLinux環境バックアップ機能あり  バックアップは丸ごとtarで固めて1ファイルにしてくれるのでハンドリングはしやすい   USB共有機能あり /opt/google/cros-containers/bin/.</description>
    </item>
    
    <item>
      <title>systemd timerはちゃんと動いてる？</title>
      <link>https://yaasita.github.io/2019/09/29/systemd-timer/</link>
      <pubDate>Sun, 29 Sep 2019 16:51:09 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/09/29/systemd-timer/</guid>
      <description>systemdタイマーがちゃんと動いてるか確認したほうが良いよというお話
systemctl list-timers --allコマンドで一覧が見れるあれです
debian10だと /etc/cron.daily にあるスクリプトでこんな感じに書かれてたら、systemd timerの方を使ってる
if [ -d /run/systemd/system ]; then exit 0 fi  前回 と同様にノートパソコンのバッテリー稼働と誤って判断されることに起因する問題
例えばlogrotateとかみると
systemctl cat logrotate  こんな一文がある
ConditionACPower=true  これはバッテリー駆動の時は動かさないって意味らしいんだけど、どうも判定が狂ってるみたいでずっと実行されなかった
なので、以下のコマンドでoverride.conf作って判定を無効化した
systemctl edit logrotate # 書いた内容 [Unit] ConditionACPower=  というわけで
cronだけじゃなくて, systemd-timerもちゃんと見ておかないといけない
journalctl -n 10 -u logrotate | egrep -i &amp;quot;condition check.*skipped&amp;quot;  とりあえず分かった、バッテリー時の判定が入ってるtimer
 apt-daily-upgrade man-db logrotate anacron apt-daily  </description>
    </item>
    
    <item>
      <title>on_ac_powerコマンドについて</title>
      <link>https://yaasita.github.io/2019/08/16/on-ac-power/</link>
      <pubDate>Fri, 16 Aug 2019 04:45:45 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/16/on-ac-power/</guid>
      <description>debian10にした関係でLinuxネタが続く
PCがバッテリーで動いてるかどうか判定するのにon_ac_powerってコマンドがある
そんで、バッテリー駆動の場合は電力を節約したいので、anacronとかを動かなくする制御がはいってる
例えば、/etc/cron.daily/mlocate の場合
if which on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then ON_BATTERY=0 on_ac_power &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 || ON_BATTERY=$? if [ &amp;quot;$ON_BATTERY&amp;quot; -eq 1 ]; then exit 0 fi fi  こんな感じでon_ac_powerが1を返したらバッテリー駆動と判断しすぐに処理を止めてしまう
んで LB-C110B っていうひと昔前のノートPCだとこの判定が狂ってしまい常にバッテリー駆動と判定されてしまった
このままだと永遠にlocateコマンドが使えないので、divertで退避させた
dpkg-divert --divert /sbin/on_ac_power.disable --rename /sbin/on_ac_power ln -s /bin/true /sbin/on_ac_power  おしまい</description>
    </item>
    
    <item>
      <title>各種サーバの中間証明書の扱い</title>
      <link>https://yaasita.github.io/2019/08/14/ssl-capath/</link>
      <pubDate>Wed, 14 Aug 2019 10:20:33 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/08/14/ssl-capath/</guid>
      <description>中間証明書をどう設定するか問題
postfix smtpd_tls_cert_file = /etc/letsencrypt/live/example.net/cert.pem smtpd_tls_key_file = /etc/letsencrypt/live/example.net/privkey.pem smtpd_tls_CAfile = /etc/letsencrypt/live/example.net/chain.pem  Let&#39;s Encryptの場合こんな感じ
smtpd_tls_CAfileに中間証明書を指定する
smtpd_tls_cert_fileにfullchain.pemを指定するやり方はNG
dovecot 10-ssl.conf
ssl_ca = &amp;lt;/etc/letsencrypt/live/example.net/chain.pem  これはダメ
この設定はクライアント証明書用ですので
正しくは、こんな感じに、まとめたやつを指定すればOK
ssl_cert = &amp;lt;/etc/letsencrypt/live/example.net/fullchain.pem  apache SSLCACertificateFileという設定はクライアント証明書用なのでここに入れない
SSLCertificateFile /etc/letsencrypt/live/example.net/fullchain.pem  dovecot同様に中間証明書もまとめて指定する
まとめ この問題はスマホのK-9 Mailでメール読もうとしたときに判明した
(突然CertPathValidatorExceptionって怒られた)
thunderbirdでメール読んでた時には発生しなかったのでなんだろなーと思ったんだけどこっちは多めにroot証明書入ってるみたいね

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   サーバー設定後はこんな感じで中間証明書まで確認したほうが良いかも
openssl s_client -connect example.org:465 -showcerts  thunderbirdだけで確認すると痛い目を見るよと言うお話でした</description>
    </item>
    
    <item>
      <title>tarの差分バックアップ</title>
      <link>https://yaasita.github.io/2019/04/01/tar-backup/</link>
      <pubDate>Mon, 01 Apr 2019 16:12:46 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/04/01/tar-backup/</guid>
      <description>前回の続き
でctime変化しちゃってどうしたか？
ファイルサイズとファイル名を取っておいて差分を作ることにした
 こんな感じのスクリプトで、ファイル名 + tab + ファイルサイズで保存する
(厳密にやる場合はsha256とかで)
そんで現在のファイルリストも取って、差分をとる
diff -u previous.txt now.txt | egrep &amp;quot;^\+[^\+]&amp;quot; | perl -ple &#39;s/^\+//;s/\t.+//&#39; &amp;gt; tar.txt あとは-Tオプションで差分のファイルだけをtarで固める
tar -cvaf hoge.tgz -T tar.txt </description>
    </item>
    
    <item>
      <title>tarの-gオプションについて</title>
      <link>https://yaasita.github.io/2019/03/30/tar-g-option/</link>
      <pubDate>Sat, 30 Mar 2019 02:32:25 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2019/03/30/tar-g-option/</guid>
      <description>-g, &amp;ndash;listed-incremental
という増分バックアップに使われるオプションについてどうやって判定してるか？
それはctimeの変化を見ている
ctimeの変化で気をつけなければいけないことはハードリンクによるバックアップ
(rsync &amp;ndash;link-dest等)
例えば、以下のようなファイルが存在し
work/ `-- 1.txt  以下のコマンドを発行した場合
tar -g resume -cvf work.tar work/  初回なので当然全部がバックアップされる
このまま以下のコマンドを打てばディレクトリだけのバックアップになる(差分がないため)
tar -g resume -cvf work.tar work/  しかし、以下のようにハードリンクをするとctimeが変わってしまいバックアップ対象にリストされてしまう
stat work/1.txt # ctime確認 cp -al work work2 # linksを増やす stat work/1.txt # ctime更新されている tar -g resume -cvf work.tar work/ # 1.txtは対象になる rm -rf work2 # linksを減らす tar -g resume -cvf work.tar work/ # 1.txtは対象になる  なので、rsyncの差分バックアップの対象ディレクトリだったり、cp -alでのバックアップを取っている際はこれに注意する
うまく増分バックアップができなくなる
続き</description>
    </item>
    
    <item>
      <title>ubuntu18.04でDKIM設定</title>
      <link>https://yaasita.github.io/2018/08/18/dkim/</link>
      <pubDate>Sat, 18 Aug 2018 17:40:23 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/08/18/dkim/</guid>
      <description>インストール apt install opendkim opendkim-tools  opendkim設定 mkdir /etc/postfix/dkim/ opendkim-genkey -D /etc/postfix/dkim/ -d example.com -s mail # -d ドメイン # -s セレクタ chgrp opendkim /etc/postfix/dkim/* chmod g+r /etc/postfix/dkim/*  /etc/opendkim.conf
Syslog	yes LogWhy Yes UMask	007 Canonicalization	relaxed/relaxed Mode	sv Socket inet:8891@localhost PidFile /var/run/opendkim/opendkim.pid OversignHeaders	From TrustAnchorFile /usr/share/dns/root.key UserID opendkim KeyTable file:/etc/postfix/dkim/keytable SigningTable file:/etc/postfix/dkim/signingtable  /etc/postfix/dkim/keytable
mail._domainkey.example.net example.net:mail:/etc/postfix/dkim/mail.private  /etc/postfix/dkim/signingtable
example.net mail._domainkey.example.net  反映
systemctl restart opendkim.service  postfix設定 以下追記</description>
    </item>
    
    <item>
      <title>GoogleのCloud SDKの署名鍵エラー</title>
      <link>https://yaasita.github.io/2018/04/07/google-cloud-sdk-gpg/</link>
      <pubDate>Sat, 07 Apr 2018 02:24:37 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2018/04/07/google-cloud-sdk-gpg/</guid>
      <description>GCP(google cloud platform)の署名鍵が変わってた
つーか元のgpg鍵の有効期限が切れてる
取得:1 http://packages.cloud.google.com/apt cloud-sdk-xenial InRelease [6,372 B] エラー:1 http://packages.cloud.google.com/apt cloud-sdk-xenial InRelease 公開鍵を利用できないため、以下の署名は検証できませんでした: NO_PUBKEY 6A030B21BA07F4FB なんか探してみると2018年4月1日に作った鍵にしてるみたい
gpg2 --search-keys BA07F4FB gpg: data source: http://gpg.NebrWesleyan.edu:11371 (1) Google Cloud Packages Automatic Signing Key &amp;lt;gc-team@google.com&amp;gt; 2048 bit RSA key BA07F4FB, created: 2018-04-01, expires: 2021-03-31 ということで追加して事なきを得た
gpg2 -a --export BA07F4FB | apt-key add - apt-key del A7317B0F </description>
    </item>
    
    <item>
      <title>正しいパッケージのアップデート方法</title>
      <link>https://yaasita.github.io/2017/10/26/pkg-update/</link>
      <pubDate>Thu, 26 Oct 2017 01:30:38 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/10/26/pkg-update/</guid>
      <description>本番環境と検証環境があり、パッケージのアップデートを行いたい場合
 10月1日 検証環境のパッケージを上げる 11月1日 検証環境で問題なければ本番も上げる  この時、それぞれの日に本番環境、検証環境で apt update, apt upgradeをすると本番、検証で差分が生じ検証されていないパッケージもアップデートされる可能性がある
正しくは10月1日に検証環境、本番環境で 同時 に以下のコマンドを実行
apt-get update apt-get upgrade --download-only  検証環境で以下を実行
apt-get upgrade  問題なければ本番環境で以下を実行
apt-get upgrade  ポイントは apt-get update, apt-get upgrade --download-only を検証,本番環境ともに同じタイミングで実行して更新予定のパッケージを揃えておくこと
またubuntuは/etc/apt/apt.conf.d/10periodicの「APT::Periodic::Update-Package-Lists」を0にしておかないと毎日自動でapt-get updateが走るので注意すること
図にするとこんな感じ

 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>machine-idを変える時</title>
      <link>https://yaasita.github.io/2017/07/06/dbus-uuidgen/</link>
      <pubDate>Thu, 06 Jul 2017 13:46:49 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2017/07/06/dbus-uuidgen/</guid>
      <description>systemd-nspawn使ってて
なんか /etc/machine-id　ないよって言われたとき
dbus-uuidgen &amp;gt; root/etc/machine-id  </description>
    </item>
    
    <item>
      <title>AWSへVMイメージごと移動する手順</title>
      <link>https://yaasita.github.io/2016/11/20/aws-vm-import/</link>
      <pubDate>Sun, 20 Nov 2016 20:45:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/11/20/aws-vm-import/</guid>
      <description>手順 img作る前に以下を確認しておく
 DHCPを有効にしている iptablesを無効に rawでイメージを作っておく  次に以下のコマンドでインポート
# hoge-importってバケット作ったとする # 最初にimgをS3に上げておく aws s3 cp hoge.img s3://hoge-import/hoge.img # IAM周りを準備 aws iam create-role --role-name vmimport --assume-role-policy-document file://trust-policy.json aws iam put-role-policy --role-name vmimport --policy-name vmimport --policy-document file://role-policy.json # インポートタスク開始 aws ec2 import-image --description &amp;quot;hoge server&amp;quot; --disk-containers file://containers.json # 進捗見る aws ec2 describe-import-image-tasks  使ったjsonファイル
 参考リンク  http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/VMImportPrerequisites.html#vmimport-image-formats http://docs.aws.amazon.com/cli/latest/reference/ec2/import-image.html  </description>
    </item>
    
    <item>
      <title>systemdでの電源管理</title>
      <link>https://yaasita.github.io/2016/01/06/acpi/</link>
      <pubDate>Wed, 06 Jan 2016 00:47:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2016/01/06/acpi/</guid>
      <description>Arch Linuxのwikiが詳しかった
/etc/systemd/logind.conf
あたりを直す
ノートPC閉じたときのSuspendを止めたかったから↓みたいにした
HandleSuspendKey=ignore HandleLidSwitch=ignore  </description>
    </item>
    
    <item>
      <title>docker composeインストール</title>
      <link>https://yaasita.github.io/2015/12/31/compose/</link>
      <pubDate>Thu, 31 Dec 2015 18:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/12/31/compose/</guid>
      <description>docker-composeもcheckinstallでdebパッケージにしといた
https://goo.gl/MKXvhm
Makefile
install: chmod +x bin/docker-compose cp bin/docker-compose /usr/local/bin/ cp bash/docker-compose /etc/bash_completion.d/  </description>
    </item>
    
    <item>
      <title>checkinstallでdocker-machineをパッケージに</title>
      <link>https://yaasita.github.io/2015/12/30/checkinstall/</link>
      <pubDate>Wed, 30 Dec 2015 03:16:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/12/30/checkinstall/</guid>
      <description>debパッケージにするとアンインストールが楽になる
 https://github.com/docker/machine https://goo.gl/X5Njaz  以下のMakefileを作ってcheckinstallコマンドでおｋ
bash補完はこの辺
docker-machine-0.5.5/ ├── Makefile ├── docker-machine ├── docker-machine-prompt.bash ├── docker-machine-wrapper.bash └── docker-machine.bash  Makefile
 </description>
    </item>
    
    <item>
      <title>RAID5のリビルド中にもう一個壊れるってやつ</title>
      <link>https://yaasita.github.io/2015/10/17/raid5_fail/</link>
      <pubDate>Sat, 17 Oct 2015 16:52:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/10/17/raid5_fail/</guid>
      <description>リビルド中にもう一個壊れてRAID5が終わった話
/dev/md0: Version : 1.2 Creation Time : Fri Jan 6 12:24:44 2012 Raid Level : raid5 Array Size : 5860535808 (5589.04 GiB 6001.19 GB) Used Dev Size : 1953511936 (1863.01 GiB 2000.40 GB) Raid Devices : 4 Total Devices : 4 Persistence : Superblock is persistent Update Time : Sat Oct 17 16:59:57 2015 State : clean, FAILED Active Devices : 2 Working Devices : 3 Failed Devices : 1 Spare Devices : 1 Layout : left-symmetric Chunk Size : 512K Name : hoge:0 UUID : 55b9d6ea:4627c873:a0bcab05:a4f0c25d Events : 6755 Number Major Minor RaidDevice State 5 8 49 0 active sync /dev/sdd1 2 0 0 2 removed 2 8 33 2 active sync /dev/sdc1 6 0 0 6 removed 4 8 1 - faulty /dev/sda1 6 8 17 - spare /dev/sdb1  HDD一台が壊れたので /dev/sdb1を追加中にアレイの構成Diskがもう一個壊れた</description>
    </item>
    
    <item>
      <title>handbrakeでISOをエンコード</title>
      <link>https://yaasita.github.io/2015/08/25/handbrake/</link>
      <pubDate>Tue, 25 Aug 2015 00:32:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/08/25/handbrake/</guid>
      <description>Linuxで動画のエンコード/リッピングするとき
apt-get handbreak  handbrake-gtk
で起動して、左側のソース選んで
開始でOK
あんま難しくない
http://yaasita.tumblr.com/post/127482624497 </description>
    </item>
    
    <item>
      <title>saslauthd-debian</title>
      <link>https://yaasita.github.io/2015/07/26/saslauthd-debian/</link>
      <pubDate>Sun, 26 Jul 2015 02:42:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/07/26/saslauthd-debian/</guid>
      <description>なんか Debian Jessie(8.1)のsaslauthdのsystemd定義が書かれてない気がする
なので自動起動に設定したかったら自分で書く感じで
/etc/systemd/system/saslauthd.service
 みたいな定義を書いて
systemctl daemon-reload systemctl enable saslauthd.service systemctl start saslauthd.service  </description>
    </item>
    
    <item>
      <title>Linuxでスクリーンショット取る</title>
      <link>https://yaasita.github.io/2015/04/18/linux-screenshot/</link>
      <pubDate>Sat, 18 Apr 2015 02:03:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/18/linux-screenshot/</guid>
      <description>shutterというのがよさ気
apt-get install shutter  http://www.xmisao.com/2014/02/07/get-screenshot-on-linux-by-shutter.html
他にxwd使う方法もある
# クリックしたウィンドウ xwd | convert - hoge.png xwd -root | convert - desktop.png  http://www.xmisao.com/2013/09/17/linux-xwindow-screenshot.html</description>
    </item>
    
    <item>
      <title>Linuxのクリップボードマネージャ</title>
      <link>https://yaasita.github.io/2015/04/18/linux-clipboard-manager/</link>
      <pubDate>Sat, 18 Apr 2015 01:31:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/18/linux-clipboard-manager/</guid>
      <description>diodon apt-get install diodon  初期設定はCtrl + Alt + vで呼び出し
Preferenceから以下の設定を直した
 Automatically paste selected item  自動ペーストをやめる   PluginsのApplication Indicatorのチェックを外す  なんかCtrl-Vが使えなくなったりするので使うのやめた
klipper KDEのやつ
apt-get install klipper  初期はShift+Zになってるので設定からなおす
全般の選択とクリップボード→選択を無視する
ってやつやると選択しただけでクリップボードに入るのを抑止
できる</description>
    </item>
    
    <item>
      <title>Linuxのターミナルで出来るマリオらしい</title>
      <link>https://yaasita.github.io/2015/04/13/linux-terminal-game/</link>
      <pubDate>Mon, 13 Apr 2015 00:24:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/04/13/linux-terminal-game/</guid>
      <description>すごいなこれ

まさかの？Linuxターミナル上でプレイする『スーパーマリオブラザーズ』
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; document.getElementById(&#34;tumblr-img&#34;).src = photos[0].original_size.url; }   </description>
    </item>
    
    <item>
      <title>LinuxでPDF編集ソフトまとめ</title>
      <link>https://yaasita.github.io/2015/01/04/linux-pdf/</link>
      <pubDate>Sun, 04 Jan 2015 00:17:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2015/01/04/linux-pdf/</guid>
      <description>libreoffice-pdfimport libreofficeでPDF編集できる
なんか変なところで逆さまになったり微妙だった
でもUIはLibreofficeの感覚で使えるので今後に期待
pdfchain pdftkのGUIフロントエンド
コマンドラインでやった方が良いかな
pdfmod LinuxでPDF編集するならこれが一番いいかもしれない
ページの入れ替え、回転とかできる
左サイドバーにページ一覧が出たらよかったなぁ
pdfsam Javaで動くGUIのPDF編集ソフト
なんか難しくてよくわからなかった
pdfshuffler pdfmodに似てる感じのPDF編集ソフトこっちも直感的で使いやすい
pdfmodに比べて重い気がする
機能も若干少な目
pdftk コマンドライン(CUI)で使うPDF編集ソフト
結合とかはGUIだとうまくできないので、こっちでやった方が良さげ</description>
    </item>
    
    <item>
      <title>modern.ieのVMファイルの解凍</title>
      <link>https://yaasita.github.io/2014/09/23/modern-ie/</link>
      <pubDate>Tue, 23 Sep 2014 22:18:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/09/23/modern-ie/</guid>
      <description>モダンIEというIEテスト用のVM配ってるサイト
sfxの解凍はunrarでできた
unrar e IE11.Win7.ForLinuxVirtualBox.part1.sfx  https://www.modern.ie/ja-jp
Windows7の日本語化について
 WindowsUpdateでオプション選択してLanguage Pack入れる コントロールパネルの Clock, Language, and Regionを選択 TimeZone変更  http://qiita.com/hnakamur/items/5f2f9e817dd0de60abb2</description>
    </item>
    
    <item>
      <title>teraterm越しに特殊キーを送る</title>
      <link>https://yaasita.github.io/2014/08/24/teraterm-keycode/</link>
      <pubDate>Sun, 24 Aug 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/24/teraterm-keycode/</guid>
      <description>キーをどこで奪われてるのかまず探す
teratem -&amp;gt; bash -&amp;gt; app  teratemでキーを取られているならKEYBOARD.CNFの末尾に以下のように追記する
User(連番)で追記する書式についてはteratemのヘルプ参照
User3=1037,0,$1E User4=1040,0,$11  この例だとUser3でvimの副ファイル切り替え(:h ctrl-^)を出来るようにしている
User4ではDockerのデタッチに使うCtrl-qを通している
Ctrl-qについてはbash側でも取られるのでそっちも変更する
# キー設定を参照 # stopに割り当てられてるのが分かる stty -a # startをundefにする(ついでにstopも) stty start undef stty stop undef  </description>
    </item>
    
    <item>
      <title>検証環境の作り方</title>
      <link>https://yaasita.github.io/2014/08/13/kensyou/</link>
      <pubDate>Wed, 13 Aug 2014 02:53:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/08/13/kensyou/</guid>
      <description> 検証環境の作り方 元ファイル  </description>
    </item>
    
    <item>
      <title>gvfsのオートマウントを止める</title>
      <link>https://yaasita.github.io/2014/07/05/gvfs-mount/</link>
      <pubDate>Sat, 05 Jul 2014 23:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/05/gvfs-mount/</guid>
      <description>/home/user/.gvfsになんか自動でマウントされるのを止める
rm -rf ~/.local/share/gvfs*  面倒だったので以下で対処した
rm -rf ~/.local  多分、gnome関連パッケージのせい</description>
    </item>
    
    <item>
      <title>Debianで自動アップデート設定</title>
      <link>https://yaasita.github.io/2014/07/03/unattended-upgrades/</link>
      <pubDate>Thu, 03 Jul 2014 23:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/07/03/unattended-upgrades/</guid>
      <description>apt-get install unattended-upgrades  /etc/apt/apt.conf.d/50unattended-upgrades
Unattended-Upgrade::Origins-Pattern { &amp;quot;o=Debian,n=jessie&amp;quot;; &amp;quot;o=Debian,n=jessie-updates&amp;quot;; &amp;quot;o=Debian,n=jessie-proposed-updates&amp;quot;; &amp;quot;o=Debian,n=jessie,l=Debian-Security&amp;quot;; &amp;quot;origin=Debian,archive=${distro_codename},label=Debian-Security&amp;quot;; }; Unattended-Upgrade::Package-Blacklist { };  /etc/apt/apt.conf.d/10periodicにAPT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;;を追加
APT::Periodic::Update-Package-Lists &amp;quot;1&amp;quot;; APT::Periodic::Unattended-Upgrade &amp;quot;1&amp;quot;; APT::Periodic::Download-Upgradeable-Packages &amp;quot;0&amp;quot;; APT::Periodic::AutocleanInterval &amp;quot;0&amp;quot;; APT::Periodic::RandomSleep &amp;quot;0&amp;quot;;  再起動をしなきゃいけないアップデートは以下を有効にするらしい
再起動が必要なら/var/run/reboot-requiredが作られるのか
// Automatically reboot *WITHOUT CONFIRMATION* if // the file /var/run/reboot-required is found after the upgrade //Unattended-Upgrade::Automatic-Reboot &amp;quot;false&amp;quot;;  参考リンク
 http://orangain.hatenablog.com/entry/unattended-upgrades  </description>
    </item>
    
    <item>
      <title>cgroupでcpuリミットをあてる</title>
      <link>https://yaasita.github.io/2014/06/22/cgroup-cpu-limit/</link>
      <pubDate>Sun, 22 Jun 2014 15:57:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/22/cgroup-cpu-limit/</guid>
      <description>microインスタンスはstealの関係でCPUリミットを設定するとよいらしい
microインスタンスはlimitかけると大きくパフォーマンスが向上する
なのでやってみました
環境はt1.micro (ubuntu 14.04)
cgcreate -g cpu:ruby cgexec -g cpu:ruby ./install_ruby.sh cgset -r cpu.cfs_quota_us=250000 ruby cgset -r cpu.cfs_period_us=1000000 ruby # 確認 cd /sys/fs/cgroup ls cpu/ruby cat cpu/ruby/tasks cgget -r cpu.cfs_quota_us -r cpu.cfs_period_us ruby  参考リンク
 cgroup について理解する cgroup でメモリと走行時間に制限を加える  </description>
    </item>
    
    <item>
      <title>非推奨になったネットワークコマンド</title>
      <link>https://yaasita.github.io/2014/06/17/deprecated_network_cmd/</link>
      <pubDate>Tue, 17 Jun 2014 01:13:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/17/deprecated_network_cmd/</guid>
      <description>Deprecated command Replacement command(s)     arp ip n (ip neighbor)   ifconfig ip a (ip addr), ip link, ip -s (ip -stats)   iptunnel ip tunnel   iwconfig iw   nameif ip link, ifrename   netstat ss, ip route (for netstat-r), ip -s link (for netstat -i), ip maddr (for netstat-g)   route ip r (ip route)     http://understeer.</description>
    </item>
    
    <item>
      <title>unite.vimみたいなpercol</title>
      <link>https://yaasita.github.io/2014/06/12/percol/</link>
      <pubDate>Thu, 12 Jun 2014 23:22:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/12/percol/</guid>
      <description>これ使うとシェルでもuniteみたいなインターフェイスで検索できる
公式サイト
インストール apt-get install python-pip pip install percol  設定 ~/.bashrc
 ~/.percol.d/rc.pyはREADMEのコピペ
参考リンク
 bashでもpercolをイイ感じに使う方法  </description>
    </item>
    
    <item>
      <title>ディレクトリ間の差分を取ってくれるソフト</title>
      <link>https://yaasita.github.io/2014/06/03/dir_diff/</link>
      <pubDate>Tue, 03 Jun 2014 18:50:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/06/03/dir_diff/</guid>
      <description>apt-get install meld  参考リンク
http://baker-street.jugem.jp/?eid=164</description>
    </item>
    
    <item>
      <title>mlocateについて</title>
      <link>https://yaasita.github.io/2014/05/27/mlocate/</link>
      <pubDate>Tue, 27 May 2014 00:40:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/27/mlocate/</guid>
      <description>mlocateはlocateの改良版
mlocateはupdatedbコマンドにより定期的に全ファイルを調べる
Debianは以下のcronで定期実行しているようだ
/etc/cron.daily/mlocate
ファイル数が多くなってなかなか終わらなくなったら
/etc/updatedb.confを編集して無視するファイルを追加するとよい
PRUNE_BIND_MOUNTS=&amp;quot;yes&amp;quot; PRUNENAMES=&amp;quot;.git .bzr .hg .svn&amp;quot; PRUNEPATHS=&amp;quot;/tmp /var/spool /media /mnt /raid/backup&amp;quot; PRUNEFS=&amp;quot;NFS nfs nfs4 rpc_pipefs afs binfmt_misc proc smbfs autofs iso9660 ncpfs coda devpts ftpfs devfs mfs shfs sysfs cifs lustre_lite tmpfs usbfs udf fuse.glusterfs fuse.sshfs curlftpfs&amp;quot;  </description>
    </item>
    
    <item>
      <title>hardware checkコマンド</title>
      <link>https://yaasita.github.io/2014/05/25/hardware_check/</link>
      <pubDate>Sun, 25 May 2014 15:20:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/hardware_check/</guid>
      <description>lshwだけじゃない
PC構成を把握するコマンド
ハードウェアチェックコマンド  hwinfo --short hdparm -i /dev/sda inxi -Fx lsscsi  lsscsiがいい感じ
参考リンク  http://www.binarytides.com/linux-commands-hardware-info/  </description>
    </item>
    
    <item>
      <title>Linuxで一定時間操作しなかったらpm-suspend</title>
      <link>https://yaasita.github.io/2014/05/25/auto_suspend/</link>
      <pubDate>Sun, 25 May 2014 02:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/25/auto_suspend/</guid>
      <description>dwm使ってるからこういうのも自分で作らなきゃならない
5,10,15分にマウスの位置が変わらなかったらサスペンドする
~/.xsessionrc とかにこんな感じで追記
/sbin/start-stop-daemon --start -v -b -m -p $PIDFILE -x ~/.dwm/auto_suspend.sh  必要なツールも事前にインストールしておく
apt-get install xdotool pm-utils   </description>
    </item>
    
    <item>
      <title>脆弱性報告ツール Debsecan</title>
      <link>https://yaasita.github.io/2014/05/18/debsecan/</link>
      <pubDate>Sun, 18 May 2014 21:54:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/18/debsecan/</guid>
      <description>パッケージの説明 debsecan は特に Debian のインストールに影響を及ぼす脆弱性リストを生成する ためのツールです。
debsecan は検査対象マシン上で起動し、インターネット経由で
脆弱性情報をダウンロードします。
新しい脆弱性が発見されたり、セキュリティ更新 が利用可能になると、指定したパーティーにメールを送信できます。
apt-get install debsecan  日本語だと以下の情報もおすすめ
 JVN脆弱情報データベース深刻度順 JPドメイン　Web改竄速報  </description>
    </item>
    
    <item>
      <title>システムバックアップをISOにしてくれるやつ</title>
      <link>https://yaasita.github.io/2014/05/04/mondo_rescue/</link>
      <pubDate>Sun, 04 May 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/05/04/mondo_rescue/</guid>
      <description> Mondo Rescue  </description>
    </item>
    
    <item>
      <title>tmuxでbashの履歴を即座に書き出す設定</title>
      <link>https://yaasita.github.io/2014/04/29/tmux_bash/</link>
      <pubDate>Tue, 29 Apr 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/04/29/tmux_bash/</guid>
      <description>function share_history { history -a history -c history -r } PROMPT_COMMAND=&#39;share_history&#39; shopt -u histappend  </description>
    </item>
    
    <item>
      <title>dovecotで特定のユーザのみ接続許可する</title>
      <link>https://yaasita.github.io/2014/03/22/104/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/104/</guid>
      <description> /etc/pam.d/dovecot
をいじってこんな感じにするといい
#%PAM-1.0
@include common-auth
account required pam_succeed_if.so user = hogeuser
@include common-account
@include common-session

参考リンク
http://wiki2.dovecot.org/Authentication/RestrictAccess </description>
    </item>
    
    <item>
      <title>uim-mozcの設定</title>
      <link>https://yaasita.github.io/2014/03/22/83/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/22/83/</guid>
      <description> 以下のパッケージをインストール
uim-qt
uim-xim

起動
uim-xim &amp;amp;

設定
uim-pref-qt4
 </description>
    </item>
    
    <item>
      <title>無線LANとサスペンド機能の有効化</title>
      <link>https://yaasita.github.io/2014/03/09/145/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/03/09/145/</guid>
      <description> 以下のパッケージとかを入れる
firmware-linux-nonfree
firmware-realtek
lspci
とか使ってハードウェアを調べること </description>
    </item>
    
    <item>
      <title>軽量なLinux用PDFビューワ</title>
      <link>https://yaasita.github.io/2014/02/02/166/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/02/02/166/</guid>
      <description> mupdf
apt-get install mupdf

viライクなキーバインド </description>
    </item>
    
    <item>
      <title>xrandrの使い方</title>
      <link>https://yaasita.github.io/2014/01/13/226/</link>
      <pubDate>Mon, 13 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/13/226/</guid>
      <description> wikipedia分かりやすい
モニターと可能な設定の表示
xrandr
全てのモニターを最高解像度で、同じ画面を表示する。
xrandr --auto
内蔵モニターの右側に外部モニターを表示。モニターの名前は、上の xrandr で調べられる。ここでは 内部モニター：LVDS、外部モニター：VGA とする。
xrandr --output VGA --right-of LVDS
内蔵モニターの上側に外部モニターを表示。
xrandr --output VGA --above LVDS
マルチモニターを使用する場合、X11の設定ファイル：通常 /etc/X11/xorg.conf で、仮想スクリーンの範囲を大きく取っておく。 例：
Virtual 2048 2048
参考リンク
http://ja.wikipedia.org/wiki/XRandR
関連記事
X11で縦表示とか画面の回転設定 </description>
    </item>
    
    <item>
      <title>Debianで無線LAN接続</title>
      <link>https://yaasita.github.io/2014/01/11/247/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/247/</guid>
      <description>今回はwicdを使う
無線デバイス確認
# lspci | grep -i wire
03:00.0 Network controller: Intel Corporation PRO/Wireless 3945ABG [Golan] Network Connection (rev 02)

ファームインストール
apt-get install firmware-iwlwifi

あとはこんな感じで設定
Networkmanagerのアンインストール
apt-get remove network-manager

# apt-getinstall install wicd
# apt-getinstall wicd-curses

Xなくてもつかえるwicd-cursesが便利だった
あとnetdevグループに属してないとwicd使えない
参考リンク
https://wiki.debian.org/WiFi/HowToUse#Wicd
https://wiki.debian.org/iwlwifi</description>
    </item>
    
    <item>
      <title>let&#39;s noteにacpid入れてバックライト調整</title>
      <link>https://yaasita.github.io/2014/01/11/268/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/11/268/</guid>
      <description> debian jessieでやってみた
使用したPCはLet&#39;s Note CF-W5
acpi-supportインストール
apt-get install acpi-support

Enabling backlight controlを参考にする
/etc/acpi/bright.sh
#!/bin/sh
bl_dev=/sys/class/backlight/panasonic/brightness
step=1
case $1 in
-)
echo $( expr `cat $bl_dev` - $step )  $bl_dev
;;
+)
echo $( expr `cat $bl_dev` + $step )  $bl_dev
;;
esac

/etc/acpi/events/bright_d
event=video/brightnessdown
action=https://yaasita.github.io/etc/acpi/bright.sh -

/etc/acpi/events/bright_u
event=video/brightnessup
action=https://yaasita.github.io/etc/acpi/bright.sh +

参考リンク
https://wiki.archlinux.org/index.php/acpid </description>
    </item>
    
    <item>
      <title>Debian wheezyで日本語環境設定</title>
      <link>https://yaasita.github.io/2014/01/02/287/</link>
      <pubDate>Thu, 02 Jan 2014 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2014/01/02/287/</guid>
      <description> こんな感じ
apt-get install manpages-ja
dpkg-reconfigure locales
dpkg-reconfigure tzdata
 </description>
    </item>
    
    <item>
      <title>chef bootstrapが使えないときにnodeを追加する</title>
      <link>https://yaasita.github.io/2013/12/15/307/</link>
      <pubDate>Sun, 15 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/15/307/</guid>
      <description> knife configure client /path/to/tempdir
できたファイルをnodeに置く
/etc/chef/client.rb
/etc/chef/validation.pem
で↓のコマンドでOK
chef-client
参考リンク
http://hivecolor.com/id/46 </description>
    </item>
    
    <item>
      <title>maildirsizeをMaildirに置くとクォータ設定できる</title>
      <link>https://yaasita.github.io/2013/12/15/328/</link>
      <pubDate>Sun, 15 Dec 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/12/15/328/</guid>
      <description> maildirsizeをMaildirに置くとクォータの設定ができる
dovecotとかmaildropが対応している
~/Maildir/maildirsize
8000C
284871170 10382
 </description>
    </item>
    
    <item>
      <title>sopcastをDebian wheezyで使ってみる</title>
      <link>https://yaasita.github.io/2013/11/10/391/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/11/10/391/</guid>
      <description> ダウンロードは公式サイトから
file sp-sc-auth
readelf -h sp-sc-auth
みたいにするとELF32の実行ファイルだとわかる
http://www.itmedia.co.jp/help/tips/linux/l0448.html
なので、32bit用のライブラリ追加
dpkg --add-architecture i386
apt-get install ia32-libs-i386

あとはReadmeの通りこんな感じで起動
./sp-sc-auth sop://broker.sopcast.com:3912/6001 3908 8908

VLCで保存する場合はツールバー→メディア→変換／保存→ネットワークタブからできる
チャンネル一覧はこちら
SopCast.exeと同じフォルダに置く
https://gist.github.com/yaasita/7390590 </description>
    </item>
    
    <item>
      <title>vimでIME制御するには</title>
      <link>https://yaasita.github.io/2013/11/10/370/</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/11/10/370/</guid>
      <description> 日本語とか打つときに参考にする
https://sites.google.com/site/fudist/Home/vim-nihongo-ban/vim-japanese/ime-control/xvkbd#imctrl </description>
    </item>
    
    <item>
      <title>一切のパスワード認証を無効化する</title>
      <link>https://yaasita.github.io/2013/09/16/474/</link>
      <pubDate>Mon, 16 Sep 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/09/16/474/</guid>
      <description> Linuxでこんな設定した
ちょっとデモ用にLinuxデスクトップを見せたかったので・・・
/etc/pam.d/common-auth
の先頭に以下を追加
 auth sufficient pam_permit.so

いますぐ実践! Linux システム管理 PAM の設定を理解する </description>
    </item>
    
    <item>
      <title>smartdでHDD監視</title>
      <link>https://yaasita.github.io/2013/08/29/494/</link>
      <pubDate>Thu, 29 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/29/494/</guid>
      <description> インストール
apt-get install smartmontools

/etc/default/smartmontoolsの以下の行を有効にする
start_smartd=yes

/etc/smartd.confを編集
DEVICESCANをコメントアウトして設定を書く
#DEVICESCAN -d removable -n standby -m root -M exec /usr/share/smartmontools/smartd-runner
/dev/sda -a -d sat -o on -S on -s (S/../.././02|L/../../6/03) -m hoge@example.com

こうするとメールのテストができるらしい
/dev/sda -a -d sat -o on -S on -s (S/../.././02|L/../../6/03) -m hoge@example.com -M test

参考リンク
http://www.geocities.jp/sugachan1973/doc/funto57.html </description>
    </item>
    
    <item>
      <title>Debian WheezyにRTL8111/8168Bのドライバインストール</title>
      <link>https://yaasita.github.io/2013/08/25/515/</link>
      <pubDate>Sun, 25 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/25/515/</guid>
      <description> Realtekのドライバはインストールしておいたほうがいいみたい
firmware-realtekってのがnon-freeにあったからaptで入る
ethtool -i eth0
lspci | grep Realtek

参考リンク
http://cskimura.blogspot.jp/2010/06/rtl81118168b-on-debian.html </description>
    </item>
    
    <item>
      <title>LinuxでWake On Lanを設定する</title>
      <link>https://yaasita.github.io/2013/08/18/556/</link>
      <pubDate>Sun, 18 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/18/556/</guid>
      <description> WOLの設定は以下参照
http://80286.blog62.fc2.com/blog-entry-37.html </description>
    </item>
    
    <item>
      <title>sshでchrootされたsftp専用アカウントの作り方</title>
      <link>https://yaasita.github.io/2013/08/05/620/</link>
      <pubDate>Mon, 05 Aug 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/08/05/620/</guid>
      <description> sshd_configを編集する
 Match User sftpuser
AllowTcpForwarding no
ChrootDirectory /home/chroot
ForceCommand internal-sftp
PasswordAuthentication yes
X11Forwarding no

注意点としてはsftpuserは/home/chrootに書き込み権限を持たせないこと
そうしないとうまくいかない </description>
    </item>
    
    <item>
      <title>Linuxでパッケージのアーキティクチャにamd64を追加する</title>
      <link>https://yaasita.github.io/2013/07/29/641/</link>
      <pubDate>Mon, 29 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/29/641/</guid>
      <description> # dpkg --add-architecture amd64
 </description>
    </item>
    
    <item>
      <title>Debian Wheezyではffmpegじゃなくてlibav-toolsを使おう</title>
      <link>https://yaasita.github.io/2013/07/18/701/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/18/701/</guid>
      <description>コマンドはavconvらしい
avconv -i 002.flv -strict experimental 002.mp4

http://wiki.debian.org/NewInWheezy</description>
    </item>
    
    <item>
      <title>KVMとvirt-manager仮想マシン管理</title>
      <link>https://yaasita.github.io/2013/07/14/742/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/14/742/</guid>
      <description> kvmのインストール
 aptitude install qemu-kvm libvirt-bin virt-manager
libvirtグループへ参加
 usermod -a -G libvirt hogeuser
ネットワーク設定
auto eth0
iface eth0 inet manual
auto br0
iface br0 inet static
address 192.168.0.100
netmask 255.255.255.0
gateway 192.168.0.1
bridge_ports eth0
bridge_stp off

参考リンク
http://wiki.debian.org/KVM
http://wiki.debian.org/QEMU#QEMU_networking_with_VDE
http://misc.e-hdk.com/benkyokai/2012-kernel-vm-advent-calendar-21st
 </description>
    </item>
    
    <item>
      <title>LinuxでXのキーボードレイアウトの変更</title>
      <link>https://yaasita.github.io/2013/07/14/722/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/14/722/</guid>
      <description>ユーザーでこんな感じのコマンドを打つらしい
setxkbmap -layout jp 
dpkg-reconfigure keyboard-configuration

参考リンク
http://margaret-sdpara.blogspot.jp/2012/12/debian-usb-live-lxde.html</description>
    </item>
    
    <item>
      <title>squid3でviaヘッダを任意の値に変更する</title>
      <link>https://yaasita.github.io/2013/07/13/763/</link>
      <pubDate>Sat, 13 Jul 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/07/13/763/</guid>
      <description>こんな感じに書けばいいらしい
request_header_access VIA deny all
request_header_replace VIA 1.1 Squid3

http://green-rabbit.sakura.ne.jp/blog/2010/04/28/1320/</description>
    </item>
    
    <item>
      <title>mysqlのレプリケーション同期設定</title>
      <link>https://yaasita.github.io/2013/06/12/824/</link>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/06/12/824/</guid>
      <description> マスター側で以下のコマンドを打つ
mysql&amp;amp;gt; FLUSH LOGS;
$ mysqldump --order-by-primary --single-transaction --master-data -uroot -p&#39;passwd&#39; databasename  databasename.dump
mysql&amp;amp;gt; show master status;

スレーブ側でこんな感じに吸い上げる
mysql&amp;amp;gt; stop slave;
mysql -uroot -p&#39;passwd&#39; databasename &amp;amp;lt; databasename.dump
mysql&amp;amp;gt; start slave;
mysql&amp;amp;gt; show slave status;

参考リンク
http://blog.nomadscafe.jp/2011/12/-mysql40dump-mysqldump-wrapper.html </description>
    </item>
    
    <item>
      <title>X11で縦表示とか画面の回転設定</title>
      <link>https://yaasita.github.io/2013/05/12/885/</link>
      <pubDate>Sun, 12 May 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/05/12/885/</guid>
      <description>xranderで設定した
/etc/kde4/kdm/Xsetupに以下を追記
xrandr --output HDMI-1 --rotate left --primary
参考リンク
UbuntuTips/Hardware/HowToChangeMonitorResolution</description>
    </item>
    
    <item>
      <title>postfixで複合条件アクション</title>
      <link>https://yaasita.github.io/2013/05/04/905/</link>
      <pubDate>Sat, 04 May 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/05/04/905/</guid>
      <description> こんな感じでスパムメールを拒否してみた
目標は：特定のIPかつ(123.123.123.123)、特定のアドレス(reject@)を拒否する
まず、check_client_accessをつくる
smtpd_restriction_classesで制限クラスをつくって
client_accessで定義した制限クラスに飛ばす
/etc/postfix/main.cf
smtpd_recipient_restrictions = permit_mynetworks ,
check_client_access hash:/etc/postfix/client_access ,
permit_sasl_authenticated ,
reject_unauth_destination
smtpd_restriction_classes = spam_restriction
spam_restriction = check_recipient_access hash:/etc/postfix/rejectaddress

/etc/postfix/client_access
123.123.123.123 spam_restriction

/etc/postfix/rejectaddress
reject@ REJECT

参考リンク
Postfix で特定の IP アドレスを拒否する設定
[postfix-jp: 115] Re: 複合条件での送信制限は可能でしょうか？ </description>
    </item>
    
    <item>
      <title>Linuxで動画編集</title>
      <link>https://yaasita.github.io/2013/04/29/947/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/29/947/</guid>
      <description> Avidemuxが良かった
deb-multimediaに入っているので/etc/apt/sources.list.dに以下を追加
deb http://www.deb-multimedia.org squeeze main non-free

参考リンク
http://d.hatena.ne.jp/over80/20080818/1219074708 </description>
    </item>
    
    <item>
      <title>Xvfbで仮想バッファ＆x11vncの設定メモ</title>
      <link>https://yaasita.github.io/2013/04/22/968/</link>
      <pubDate>Mon, 22 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/22/968/</guid>
      <description> xvfbで仮想バッファ作成→export DISPLAY=:1→startlxde→x11vncでvnc接続を許可する
みたいな感じか

参考リンク
http://d.hatena.ne.jp/ishidamakot/20110717/1310890337
http://lists.debian.or.jp/debian-users/200101/msg00057.html </description>
    </item>
    
    <item>
      <title>X環境でのDPMS</title>
      <link>https://yaasita.github.io/2013/04/20/989/</link>
      <pubDate>Sat, 20 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/20/989/</guid>
      <description> xset -q
で確認
xset dpms 0 0 0 とかで設定できるのか
なるほどね
参考リンク
https://forums.ubuntulinux.jp/viewtopic.php?id=1732 </description>
    </item>
    
    <item>
      <title>大量ファイルのあるディレクトリでls</title>
      <link>https://yaasita.github.io/2013/04/12/1052/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/12/1052/</guid>
      <description> http://memo.jj-net.jp/657 </description>
    </item>
    
    <item>
      <title>らじるらじるをLinux環境で聞く</title>
      <link>https://yaasita.github.io/2013/04/08/1092/</link>
      <pubDate>Mon, 08 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/08/1092/</guid>
      <description> mplayerを使えばいけるらしい
http://ubuntu.futene.net/tips/radiru.html </description>
    </item>
    
    <item>
      <title>iptablesで送信制限</title>
      <link>https://yaasita.github.io/2013/04/07/1113/</link>
      <pubDate>Sun, 07 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/07/1113/</guid>
      <description>#OUTPUT limit
iptables -A OUTPUT -p tcp -m multiport --sport 80,443 -m hashlimit \
--hashlimit-name web_send_limit --hashlimit 1000/sec --hashlimit-burst 30000 \
--hashlimit-mode dstip --hashlimit-htable-expire 86400000 -j ACCEPT
iptables -A OUTPUT -p tcp -m multiport --sport 80,443 -j REJECT</description>
    </item>
    
    <item>
      <title>iptablesでIPアドレス制限（アクセス制限）</title>
      <link>https://yaasita.github.io/2013/04/01/1134/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/04/01/1134/</guid>
      <description> こんな感じで、Webアクセスを限定させてる
iptablesはこう書いて

dropは別ファイルにすると便利

参考リンク
iptablesで日本のIPアドレスからのアクセスのみ許可する
iptables の RETURN の使い方 </description>
    </item>
    
    <item>
      <title>iptablesでDOS攻撃に対処する</title>
      <link>https://yaasita.github.io/2013/03/30/1216/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/30/1216/</guid>
      <description>ipt_recentで対処するSynCookie使うhashlimit使うhashlimit使う2hashlimit使う3</description>
    </item>
    
    <item>
      <title>拡張子を一気に変換</title>
      <link>https://yaasita.github.io/2013/03/30/1237/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/30/1237/</guid>
      <description> http://www.atmarkit.co.jp/flinux/rensai/linuxtips/248chngext.html </description>
    </item>
    
    <item>
      <title>DebianでVPN(PPTP)</title>
      <link>https://yaasita.github.io/2013/03/29/1258/</link>
      <pubDate>Fri, 29 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/29/1258/</guid>
      <description>こんな感じでできた
 Setting up a VPN-server on Amazon EC2 Debian etch に pptpdを導入  </description>
    </item>
    
    <item>
      <title>Linux 101 hacks</title>
      <link>https://yaasita.github.io/2013/03/26/1321/</link>
      <pubDate>Tue, 26 Mar 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/03/26/1321/</guid>
      <description> 翻訳してくれてる人いた
http://d.hatena.ne.jp/bobchin/searchdiary?of=93&amp;amp;word=*[Linux%20101%20Hacks] </description>
    </item>
    
    <item>
      <title>Spamassassinとmaildropの設定</title>
      <link>https://yaasita.github.io/2013/02/22/1441/</link>
      <pubDate>Fri, 22 Feb 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/02/22/1441/</guid>
      <description> Debianでやった
以下のプログラムをインストール
spamassassin → デーモン spmad
spamc → spamdとやりとりするためのインターフェイス
maildrop →　配送プログラム
で、こんな感じで$HOMEにおいておけばいいみたい
~/.forward

~/.mailfilter

あとはspam学習するためのcron設定
/etc/cron.daily/sa-learn

以下のコマンドでシンタックスチェックもできるらしい
maildrop -V 9 &amp;amp;lt; /dev/null
参考リンク
Spamassassin setup
maildrop 利用のメモというかtips
maildropのインストール  </description>
    </item>
    
    <item>
      <title>digコマンドを理解する</title>
      <link>https://yaasita.github.io/2013/01/05/1624/</link>
      <pubDate>Sat, 05 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/05/1624/</guid>
      <description>* usage
dig [@server] domain [query-type]

* query-type
a (Aレコード)
any (任意の情報)
mx (MXレコード)
ns (NSレコード)
soa (SOAレコード)
hinfo (HINFOレコード)
axfr (ゾーン転送)
txt (TXTレコード)

* status
NOERROR (正常)
NXDOMAIN (ドメインは存在しない)
SERVFAIL (サーバの応答エラー)

* flags
qr (クエリの回答)
aa (権威ある回答)
tc (TCPフォールバック)
ra (フルサービスリゾルバ)
rd (再帰要求,+norecオプションで消える)

参考リンク
http://d.hatena.ne.jp/japanrock_pg/20090410/1239355230
http://www.syon.co.jp/syontech/tech002.html</description>
    </item>
    
    <item>
      <title>LinuxでCDからISOイメージ作成</title>
      <link>https://yaasita.github.io/2013/01/03/1666/</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/03/1666/</guid>
      <description> dd if=/dev/cdrom of=hoge.iso

http://d.hatena.ne.jp/yoshifumi1975/20071012/p1 </description>
    </item>
    
    <item>
      <title>postfix &amp;amp; dovecotを特定ユーザのみログイン可能にする</title>
      <link>https://yaasita.github.io/2013/01/02/1726/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1726/</guid>
      <description>/etc/pam.d/dovecot
/etc/pam.d/smtp(無かったら作る)
を以下のの内容にした
hogeuserのみログインを許す設定
#%PAM-1.0
@include common-auth
account required pam_succeed_if.so user = hogeuser
@include common-account
@include common-session

設定を変更したら再起動を忘れずに
/etc/init.d/saslauthd restart
その他pamモジュールの詳しい使い方は
man pam_listfile
みたいにする
あとログを見ればpamで使うサービス名を特定できた
参考リンク
http://wiki.debian.org/PostfixAndSASL
http://d.hatena.ne.jp/hiro-ueda/20090901/1251811629
http://www.usupi.org/sysad/105.html
http://www.usupi.org/sysad/106.html</description>
    </item>
    
    <item>
      <title>postfixでバーチャルドメイン</title>
      <link>https://yaasita.github.io/2013/01/02/1765/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2013/01/02/1765/</guid>
      <description>postfixでバーチャルドメイン
参考リンク
http://tmtm.org/postfix/tutorial/virtual.html
http://bitwalker.dtiblog.com/blog-entry-151.html</description>
    </item>
    
    <item>
      <title>起動後一定時間経ったら○○の処理をする</title>
      <link>https://yaasita.github.io/2012/12/27/1805/</link>
      <pubDate>Thu, 27 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/27/1805/</guid>
      <description> というスクリプトの例
uptimeから取ってくる
以下は3時間経ったらhoge.shを実行する
 </description>
    </item>
    
    <item>
      <title>unboundのインストールと初期設定</title>
      <link>https://yaasita.github.io/2012/12/24/1826/</link>
      <pubDate>Mon, 24 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/24/1826/</guid>
      <description> 1.インストール
普通にaptで入れる
2.初期設定
unbound.conf
interface: 0.0.0.0
access-control: 192.168.0.0/24 allow

3.レコード設定
local-data: &#34;hoge.net. IN A 192.168.0.4&#34;
local-data: &#34;hoge.net. IN MX 10 hoge.net.&#34;
local-data-ptr: &#34;192.168.0.4 hoge.net.&#34;
※ hoge.netのAレコードを設定してしまうと、hoge.netのMXレコードを
本物のDNSに問い合わせないで無しで返してしまうので注意
4.ulimitの設定
warningsがうるさいなら
ulimit -n 4140
を/etc/init.d/unboundの頭の方に書いておくと良いんじゃないでしょうか？ </description>
    </item>
    
    <item>
      <title>Debianにpostfixadminをインストール</title>
      <link>https://yaasita.github.io/2012/12/23/1848/</link>
      <pubDate>Sun, 23 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/23/1848/</guid>
      <description>1.インストール
# apt-get install postfixadmin

2.Webサーバ設定
/etc/postfixadminに設定ファイルがあるのでリンクを張る
今回はlighttpdで
# ln -s /etc/postfixadmin/lighttpd.conf /etc/lighttpd/conf-enabled/60-postfixadmin.conf
# /etc/init.d/lighttpd restart

3.初期セットアップ
http://yourdomain.com/postfixadmin/setup.php
にアクセスしてセットアップ
初期パスワードとadminアカウントを作成
4.その他の設定
/usr/share/doc/postfixadmin/DOCUMENTS
↑を読む</description>
    </item>
    
    <item>
      <title>ビルドするためにインストールするパッケージをまとめて</title>
      <link>https://yaasita.github.io/2012/12/19/1889/</link>
      <pubDate>Wed, 19 Dec 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/12/19/1889/</guid>
      <description> 入れる方法は
↓みたいにする
この例だとvimに必要なパッケージ
apt-get build-dep vim

http://vim-jp.org/docs/build_linux.html </description>
    </item>
    
    <item>
      <title>screenfetch</title>
      <link>https://yaasita.github.io/2012/10/28/2029/</link>
      <pubDate>Sun, 28 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/28/2029/</guid>
      <description> 
bashで出来たシステムモニタ
各ディストリのマークとか出る </description>
    </item>
    
    <item>
      <title>munin2.0が出てるらしい</title>
      <link>https://yaasita.github.io/2012/10/02/2129/</link>
      <pubDate>Tue, 02 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/10/02/2129/</guid>
      <description> http://pocketstudio.jp/log3/2012/06/04/new-features-of-munin2/
http://dozen.dip.jp/archives/212 </description>
    </item>
    
    <item>
      <title>ffmpegの使い方</title>
      <link>https://yaasita.github.io/2012/09/30/2150/</link>
      <pubDate>Sun, 30 Sep 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/09/30/2150/</guid>
      <description> &amp;amp;nbsp;ffmpeg -i 入力ファイル 出力ファイル
みたいな感じでOKらしい
ffmpeg -i hoge.flv hoge.mp4
でもいけた
mp3のビットレート調整とかも出来る
ffmpeg -i input.mp3 -ab 128k output.mp3
http://d.hatena.ne.jp/takuya_1st/20120225/1330189927
http://yosilove.blog.shinobi.jp/Entry/603/ </description>
    </item>
    
    <item>
      <title>amazon(aws)でubuntu12.04の初期設定</title>
      <link>https://yaasita.github.io/2012/07/03/2412/</link>
      <pubDate>Tue, 03 Jul 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/07/03/2412/</guid>
      <description> localeの設定 http://www.server-world.info/query?os=Ubuntu_12.04&amp;amp;p=japanese ec2 toolのインストール http://qiita.com/items/216e0f8b69f20d5b07d3 </description>
    </item>
    
    <item>
      <title>gitでbareじゃない共有リポジトリを作る</title>
      <link>https://yaasita.github.io/2012/06/09/2552/</link>
      <pubDate>Sat, 09 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/09/2552/</guid>
      <description> 共有リポジトリだと作業フォルダが無くて不便なので

[core]
repositoryformatversion = 0
filemode = true
bare = false
logallrefupdates = true
[receive]
denyCurrentBranch = ignore
 コマンドならこう 
git config --add receive.denyCurrentBranch ignore
 参考リンク http://d.hatena.ne.jp/shokai/20101105/1288968082 </description>
    </item>
    
    <item>
      <title>Linuxからリモートデスクトップ(RDP)</title>
      <link>https://yaasita.github.io/2012/06/09/2530/</link>
      <pubDate>Sat, 09 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/09/2530/</guid>
      <description> xfreerdpでいけます

apt-get install freerdp-x11
 </description>
    </item>
    
    <item>
      <title>Linuxデスクトップのガジェットとか</title>
      <link>https://yaasita.github.io/2012/06/08/2572/</link>
      <pubDate>Fri, 08 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/08/2572/</guid>
      <description> システムモニタ ・adesklets
・conky
・gdesklets
参考リンク http://wikiwiki.jp/linux/?FrontPage
http://usamimi.info/~linux/  </description>
    </item>
    
    <item>
      <title>brctlでブリッジインターフェイスを作成</title>
      <link>https://yaasita.github.io/2012/06/04/2613/</link>
      <pubDate>Mon, 04 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/04/2613/</guid>
      <description> KVMを使うときに必要になったブリッジインターフェイスの設定メモ コマンドでは以下のようにやればO 
brctl addbr br0
brctl addif br0 eth0
 /etc/network/interfaces 
auto lo br0
iface lo inet loopback
allow-hotplug eth0
auto eth0
iface eth0 inet static
address 192.168.0.4
netmask 255.255.255.0
gateway 192.168.0.1
iface br0 inet static
bridge_ports eth0
address 192.168.0.40
netmask 255.255.255.0
gateway 192.168.0.1
 参考リンク
brctl でLinuxマシンをHUBにする - いますぐ実践! Linuxシステム管理第2回　KVMの導入と基本的な使い方 </description>
    </item>
    
    <item>
      <title>DebianでKVMを試してみた</title>
      <link>https://yaasita.github.io/2012/06/04/2593/</link>
      <pubDate>Mon, 04 Jun 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/06/04/2593/</guid>
      <description> こんな感じでDebian Wiki通りにやればOK -cの後は/dev/cdrom or iso 
virt-install -n testos -r 128 --disk path=/tmp/testos.dsk,size=10 --os-type=linux --network bridge=br0 --vncport=5900 --vnclisten=0.0.0.0 -c /tmp/debian.iso
あとはこんな感じでXサーバーにコンソールを出力させた virt-viewer testos --display=192.168.0.5:0
仮想マシンの削除 virsh destroy testos2
virsh undefine testos2
参考リンク
http://docs.redhat.com/docs/ja-JP/Red_Hat_Enterprise_Linux/5/html/Virtualization/chap-Virtualization-Managing_guests_with_virsh.html </description>
    </item>
    
    <item>
      <title>lighttpd &#43; zabbixをDebian squeezeにインストール</title>
      <link>https://yaasita.github.io/2012/05/26/2655/</link>
      <pubDate>Sat, 26 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/26/2655/</guid>
      <description> aptで以下のパッケージをインストール 
zabbix-agent #監視される側
zabbix-frontend-php #zabbixのWebインターフェイス
zabbix-server-mysql #zabbixのサーバー（監視する側）
 lighttpdに以下を追記 
alias.url += (
&#34;/zabbix&#34; =&amp;amp;gt; &#34;/usr/share/zabbix&#34;
)
 なんかログインできなかったので以下のSQLを発行 
update users set passwd=md5(&#39;hoge&#39;) where alias=&#39;Admin&#39;;
 参考リンクSQLのアップデートの仕方マニュアル </description>
    </item>
    
    <item>
      <title>HA構成のサーバー作るときに使うソフトメモ</title>
      <link>https://yaasita.github.io/2012/05/20/2677/</link>
      <pubDate>Sun, 20 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/20/2677/</guid>
      <description>複数のサーバーを同一の設定にする Puppet  OSインストールを簡略化 kickstart  データ同期 DRBD  Heartbeat(Pacemaker) 生死監視</description>
    </item>
    
    <item>
      <title>LDAPの設定メモ</title>
      <link>https://yaasita.github.io/2012/05/06/2717/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/05/06/2717/</guid>
      <description> slapdをインストール
mozillaAbPersonAlpha.schemaを以下へコピーする
/etc/ldap/schema
phpldapadminをインストール
lighttpdのconfに以下を追加
# Alias for pa directory
alias.url += (
&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp; &#34;/pl&#34; =&amp;amp;gt; &#34;/usr/share/phpldapadmin&#34;,
)
パスワードを忘れたら
dpkg-reconfigure slapd
↓で内容の確認
slapcat
cn=admin...
で始まる行をメモして
phpldapadminにログイン
詳しくはこちら
/usr/share/doc/slapd
本体はこっち？
/usr/share/slapd
参考リンク
Gentoo Linuxな生活​/ThunderBirdアドレス帳をLDAPで悩む </description>
    </item>
    
    <item>
      <title>nagios3でのパッシブチェックについて</title>
      <link>https://yaasita.github.io/2012/04/15/2796/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/15/2796/</guid>
      <description> nagios3でのパッシブチェックは外部コマンドファイル(External Commands)に書き込むことで実現するチェックした結果を名前付パイプ(/var/lib/nagios3/rw/nagios.cmd)に書き込むことでnagios3が拾う
以下のようなスクリプトを用意する #!/bin/sh
echocmd=&#34;/bin/echo&#34;
CommandFile=&#34;/var/lib/nagios3/rw/nagios.cmd&#34;
datetime=`date +%s`
cmdline=&#34;[$datetime] PROCESS_SERVICE_CHECK_RESULT;$1;$2;$3;$4&#34;
`$echocmd $cmdline &amp;amp;gt;&amp;amp;gt; $CommandFile`
cronか何かで以下のようにスクリプトを叩く引数は4つで最初からホスト名、サービス名、ステータス、メッセージの順でサービス名はservice_descriptionで指定したもの ./result.sh localhost HTTP 2 &#34;DOWN MESSAGE&#34;
HOSTのパッシブチェックは以下のようなコマンドで #!/bin/sh
echocmd=&#34;/bin/echo&#34;
CommandFile=&#34;/var/lib/nagios3/rw/nagios.cmd&#34;
datetime=`date +%s`
cmdline=&#34;[$datetime] PROCESS_HOST_CHECK_RESULT;$1;$2;$3&#34;
`$echocmd $cmdline &amp;amp;gt;&amp;amp;gt; $CommandFile`
こう叩く ./host.sh localhost 0 &#34;OK&#34;

参考リンク
Nagios 3翻訳プロジェクトExternal Commands
Passive Checks </description>
    </item>
    
    <item>
      <title>nagios3で外部コマンドを初期化するには？</title>
      <link>https://yaasita.github.io/2012/04/15/2817/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/04/15/2817/</guid>
      <description>nagios3のWebインターフェイス等で行ったステータスを初期化するには /var/lib/nagios3/retention.dat を削除すればOK</description>
    </item>
    
    <item>
      <title>Ruby on Railsのインストール</title>
      <link>https://yaasita.github.io/2012/03/23/2878/</link>
      <pubDate>Fri, 23 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/23/2878/</guid>
      <description>必要なパッケージのインストール適当に以下のパッケージをインストール 
build-essential imagemagick zlib1g-dev libssl-dev libreadline-dev libmagick-dev libmagickcore-dev
libmagickwand-dev sqlite3 libsqlite3-dev automake bison mysql-server mysql-client libmysqld-dev libmysqlclient-dev libcurl4-openssl-dev
libapr1-dev libaprutil1-dev libxslt-dev libxml2-dev
※この時点ではRubyは入れない RVMのインストールRVMはRubyのバージョンのスイッチとか簡単に出来るので便利
公式サイトどおりに以下のコマンドですぐインストールされる 
curl -L get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
 Rubyのインストール
rvm install ruby
rvm list
rvm use 1.9.3 --default
必要なGemインストール
gem install bundler
gem install rails
gem install unicron
その他の設定あとJavaScriptエンジンが足りないとか起こられたら こちらを参照して設定する
Gemfileに以下を追記 
gem &#39;execjs&#39;
gem &#39;therubyracer&#39;

rails new hoge</description>
    </item>
    
    <item>
      <title>CUI(テキストベース)のメッセンジャー</title>
      <link>https://yaasita.github.io/2012/03/14/2940/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/14/2940/</guid>
      <description> CUIでメッセが出来たらいいなーと思って探してみた
centerim
finch
参考リンク
http://techno-st.net/2009/02/18/cui-im.html
http://d.hatena.ne.jp/goth_wrist_cut/20080128/1201484704 </description>
    </item>
    
    <item>
      <title>HDDが故障したときにやったこと</title>
      <link>https://yaasita.github.io/2012/03/11/2962/</link>
      <pubDate>Sun, 11 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/11/2962/</guid>
      <description>/dev/sddが故障を検地 (S.M.A.R.T)
まずはsmartのセルフテストをやってみる
smartctl -t long /dev/sdd  badblocksでHDDをチェック
今回は読み込みチェックだけやった
badblocks -s -v /dev/hda  書き込みチェックもやるなら↓
badblocks -s -v -n /dev/hda
-s 進捗状況表示
-v 詳細表示
-n 非破壊テスト
http://nabe.blog.abk.nu/0245
ファイルシステムが壊れてそうなら
fsck
を使うこと</description>
    </item>
    
    <item>
      <title>dwmのキーマップの変更</title>
      <link>https://yaasita.github.io/2012/03/09/2983/</link>
      <pubDate>Fri, 09 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/09/2983/</guid>
      <description> ソースをダウンロードしてから
makeする
apt-get source dwm
以下のとおり変更
#define MODKEY Mod1Mask
↓
#define MODKEY Mod4Mask
static const char *termcmd[] = { &#34;uxterm&#34;, NULL };
↓
static const char *termcmd[] = { &#34;x-terminal-emulator&#34;, NULL };

make
あとは出来たdwmをフォルダに突っ込めばOK
参考リンク
http://wiki.mma.club.uec.ac.jp/clear/dwm </description>
    </item>
    
    <item>
      <title>mysqlを使ってみる</title>
      <link>https://yaasita.github.io/2012/03/01/3004/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/03/01/3004/</guid>
      <description> インストールはmysql-clientとmysql-serverを入れればOK
mysqlへの接続
mysql -u root -p
DB一覧の表示
show databases;
databasesの切り替え
use データベース名
テーブルの表示
show tables;
phpmyadminへのログイン
http://192.168.0.1/phpmyadmin/
バックアップ
mysqldump --user=root --password=hoge --all-databases &amp;amp;gt; /tmp/mysql.dump
リストア
mysql -u root -phoge &amp;amp;lt; /tmp/mysql.dump </description>
    </item>
    
    <item>
      <title>Catalyst&#43;lighttpd&#43;fastcgiで動かしてみる</title>
      <link>https://yaasita.github.io/2012/02/05/3025/</link>
      <pubDate>Sun, 05 Feb 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/02/05/3025/</guid>
      <description>Catalyst+lighttpd+fastcgiで動かす場合の設定メモ
今回は下の図のように動かす
Catalystはスタンドアロンで動かすほうが早い気がする
bin-path指定で動かす場合はこちらを参照

conf編集/etc/lighttpd/conf-enabled/10-fastcgi.confを編集 今回のサーバーではlighttpdは普通のWebサーバーとして使っているので、ポートで切り分ける以下を追加 あとserver.port文を消す $SERVER[&#34;socket&#34;] == &#34;192.168.0.4:5000&#34; {
#server.port = 5000
fastcgi.server = (
&#34;&#34; =&amp;amp;gt; ( # the extension is empty because we want to match on any extension
&#34;myserver1&#34; =&amp;amp;gt; (
&#34;host&#34; =&amp;amp;gt; &#34;192.168.0.4&#34;,
&#34;port&#34; =&amp;amp;gt; 5001,
&#34;check-local&#34; =&amp;amp;gt; &#34;disable&#34;
)
)
)
}
$SERVER[&#34;socket&#34;] == &#34;192.168.0.4:4000&#34; {
}
Catalystの起動ポート越しにやりとりするからパーミッションとかは適当でOK script/helloworld_fastcgi.pl --listen 192.168.0.4:5001 --keeperr 2
デーモン化する/etc/init.dにスクリプトを書けば自動起動する こちらを参考に適当にスクリプト書けばOK 
参考リンク
Deploying Catalyst Applications
Deploying Catalyst applications with lighttpd and FastCGI</description>
    </item>
    
    <item>
      <title>LinuxでISO=&amp;gt;aviエンコード（DVDリッピング）</title>
      <link>https://yaasita.github.io/2012/02/02/3047/</link>
      <pubDate>Thu, 02 Feb 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/02/02/3047/</guid>
      <description> LinuxでDVDのISOイメージをavi化する方法を調べたのでメモ
リポジトリにdebian-multimediaを追加/etc/apt/sources.listに以下の一行を追加 deb http://www.debian-multimedia.org squeeze main non-free
このFAQにあるとおり公開鍵をインストール dpkg -i debian-multimedia-keyring_2008.10.16_all.deb
acidripをインストールapt-get update
apt-get install acidrip
ISOイメージをマウントmount -o loop /tmp/DVD.ISO /mnt
acidripを起動acidrip
/mntを指定してエンコード あとはGUIなので分かるはず  </description>
    </item>
    
    <item>
      <title>CUIでサウンド制御</title>
      <link>https://yaasita.github.io/2012/01/31/3090/</link>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/31/3090/</guid>
      <description> PCMの調節とか音の調整を出来るコマンド
alsamixer
よく忘れるので.......φ（．．）メモメモ
 </description>
    </item>
    
    <item>
      <title>Linuxでtorを使ってみる</title>
      <link>https://yaasita.github.io/2012/01/31/3068/</link>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/31/3068/</guid>
      <description> Torは匿名のプロキシとして動作する
インストール
apt-get install tor

/etc/tor/torrcを編集
SocksListenAddress 192.168.0.4(Torが入っているサーバーのアドレス)
を追加
## Replace this with &#34;SocksPort 0&#34; if you plan to run Tor only as a
## relay, and not make any local application connections yourself.
SocksPort 9050 # what port to open for local application connections
SocksListenAddress 127.0.0.1 # accept connections only from localhost
SocksListenAddress 192.168.0.4

あとは再起動でOK
killall tor
tor

これで192.168.0.2から接続できた
SocksPolicyは何も設定しなければ全て許可 </description>
    </item>
    
    <item>
      <title>コマンド補完を強力にしてくれるbash_completion</title>
      <link>https://yaasita.github.io/2012/01/24/3132/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/24/3132/</guid>
      <description> インストールはaptでできる（bash-completion）
.bashrcに以下の記述をすればOKだけどDebianの場合は予め書いてあった
if [ -f /etc/bash_completion ] &amp;amp;&amp;amp; ! shopt -oq posix; then
. /etc/bash_completion
fi

その他詳しいことは
man dh_bash-completion
参考リンク
http://d.hatena.ne.jp/orangeclover/20110204/1296769974
http://d.hatena.ne.jp/wadap/20080601/1212312418 </description>
    </item>
    
    <item>
      <title>/boot/grub/grub.cfgのrootってどこから設定されている？</title>
      <link>https://yaasita.github.io/2012/01/06/3214/</link>
      <pubDate>Fri, 06 Jan 2012 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2012/01/06/3214/</guid>
      <description> というわけで調べてみた
update-grub2のコールスタック

/etc/grub.d/10_linuxを見れば分かるとおり
grub.cfgの$linux_root_device_thisversionによって作られています。
で、これは$GRUB_DEVICEから作られています。（grub-mkconfig参照）
結局、$GRUB_DEVICEはどこを参照しているかというと以下のコマンドで出してます。
grub-probe --target=device /
というわけでgrub-probeというコマンドの結果を入れているので、grub legacyみたいに設定値ではありません。じゃあどうやってrootパラメータを変更するの？って話になるけど、それはchrootするとか
GRUBメニュー選択時にEDITするとかが良いんじゃないでしょうか？ </description>
    </item>
    
    <item>
      <title>マザーボードのチップセットとかCPU情報をLinuxで取得する</title>
      <link>https://yaasita.github.io/2011/12/31/3257/</link>
      <pubDate>Sat, 31 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/31/3257/</guid>
      <description> lshwというユーティリティがあった
aptでインストールできた
参考リンク
PCのハードウェア情報を表示するには </description>
    </item>
    
    <item>
      <title>freenetをLinux環境にインストール</title>
      <link>https://yaasita.github.io/2011/12/19/3319/</link>
      <pubDate>Mon, 19 Dec 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/12/19/3319/</guid>
      <description> 公式ページからDownloadを選択「Linux etc」をクリックnew_installer_offline_1405.jarをダウンロードして
↓のコマンドでインストール
java -jar new_installer_offline.jar
インストールするディレクトリを聞かれるので適当に答えればOK
run.shが起動とか終了の時に使うシェル
START引数で起動、STOP引数で停止かな </description>
    </item>
    
    <item>
      <title>HJSplitって何だ？</title>
      <link>https://yaasita.github.io/2011/11/06/3361/</link>
      <pubDate>Sun, 06 Nov 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/11/06/3361/</guid>
      <description> ファイルを分割＆結合してくれるソフトです
主に海外のダウンロードサイトなどで目にします。
公式サイトはこちら
そこからLinux版とWinodws版が選べます
今回はLinux版を使います
公式ページからtarファイルを拾ってきて解凍すればOK
その中にあるhjsplitを蹴れば実行されますXが動いている＋GTKが入っていれば多分大丈夫
※まあLinuxならcatでつなげてもいいと思う </description>
    </item>
    
    <item>
      <title>iotop日本語man</title>
      <link>https://yaasita.github.io/2011/10/30/3403/</link>
      <pubDate>Sun, 30 Oct 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/10/30/3403/</guid>
      <description>iotopを最近使ってたから日本語訳にしてみた
結構意訳になってる
IOTOP(1)&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;  IOTOP(1)


NAME
iotop - シンプルなIOモニター
SYNOPSIS
iotop [OPTIONS]
DESCRIPTION
iotopはLinuxカーネルからI/O使用情報を取得し(カーネル2.6.20以上を必要とします)、
プロセス・スレッド毎にI/O使用状況を表示します。
カーネルのビルドオプションに以下を含める必要があります。
CONFIG_TASK_DELAY_ACCT, CONFIG_TASK_IO_ACCOUNTING, CONFIG_TASKSTATS and CONFIG_VM_EVENT_COUNTERS
iotopはI/Oのプロセス/スレッドごとのI/O帯域を表示間隔毎に表示します。
また、プロセスがI/Oの処理によって待たせれている時間の割合も表示します。
各プロセスについてI/Oの優先度(クラス/レベル)が表示されます。
加えて、表示間隔の間に読み書きされた総I/O帯域は一番上に表示されます。
左矢印、右矢印キーを使うとソート項目を変更できます。rでソート順を逆転できます。
oで--onlyオプションの有効、無効を切り替えられます。(IOを使用しているプロセスだけを表示するかどうか)
pで--processesオプションの有効、無効を切り替えられます。(プロセスのみを表示してスレッドは表示しないかどうか)
aで--accumulatedオプションの有効、無効を切り替えられます。(IOの累積値表示に切り替えるかどうか)
qで終了します。
iでスレッド/プロセスの優先度を変更できます。
その他のキーを押すと最新の情報に更新できます。
OPTIONS
--version
バージョンを表示し終了します。
-h, --help
使用方法を表示し、終了します。
-o, --only
実際にI/Oを使用しているプロセス/スレッドのみを表示します。これはoを押すことで
表示中にも切り替えることができます。
-b, --batch
対話的な表示でなくなります。(バッチモード)これは状態を記録するときに便利です。
-n NUM, --iter=NUM
自動的に終了する時間を指定します。(デフォルトでは自動的に終了しません。)
これはバッチモードで役に立ちます。
-d SEC, --delay=SEC
表示間隔を設定します。(デフォルトは1秒)　1.1秒のような少数も指定可能です。
-p PID, --pid=PID
表示するプロセスIDを指定します。(デフォルトは全て表示します)
-u USER, --user=USER
表示するユーザーIDを指定します。(デフォルトは全て表示します)
-P, --processes
プロセスのみ表示します。通常は全てのスレッドを表示します。
-a, --accumulated</description>
    </item>
    
    <item>
      <title>LinuxでrootのGUIウィンドウを開きたいとき</title>
      <link>https://yaasita.github.io/2011/10/11/3424/</link>
      <pubDate>Tue, 11 Oct 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/10/11/3424/</guid>
      <description> sudoでrootになってからXアプリを起動してもDisplayのオープンに失敗するので
gksuでrootターミナルを開いてからやるとOK </description>
    </item>
    
    <item>
      <title>postfixでメールフィルタを設定</title>
      <link>https://yaasita.github.io/2011/09/25/3445/</link>
      <pubDate>Sun, 25 Sep 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/09/25/3445/</guid>
      <description> 1.main.cfに以下を追加
content_filter=filter:dummy
2.master.cfに以下を追加
filter unix - n n - - pipe
flags=Rq user=hogeuser argv=/tmp/filter.pl $recipient
※$recipientは受信者が引数に渡される
参考リンク
Postfix キューに入った後のコンテンツフィルタ
Postfix設定パラメータ </description>
    </item>
    
    <item>
      <title>Linuxでスキャナを使うには</title>
      <link>https://yaasita.github.io/2011/08/21/3487/</link>
      <pubDate>Sun, 21 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/21/3487/</guid>
      <description> aptか何かでsaneとxsaneをインストール
sane-find-scannerで検索
/etc/sane.d/mustek_usb.confを編集
以下の行だけ有効化
option max_block_size 1024 usb 0x04b8 0x010a /dev/usb/scanner0 
あとはrootでログインしてxsaneをメニューから選択すればできた
ちなみに試したのはEpsonのGT-8700
参考リンク
http://samidarehetima.blog9.fc2.com/blog-entry-8.html
検索した結果 </description>
    </item>
    
    <item>
      <title>atコマンドの実行内容（実際に発行するコマンド）を知りたい</title>
      <link>https://yaasita.github.io/2011/08/20/3512/</link>
      <pubDate>Sat, 20 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/20/3512/</guid>
      <description> at -c job ... だそうです。
参考リンク
http://okwave.jp/qa/q5599261.html </description>
    </item>
    
    <item>
      <title>lighttpdでバーチャルホスト設定</title>
      <link>https://yaasita.github.io/2011/08/13/3554/</link>
      <pubDate>Sat, 13 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/13/3554/</guid>
      <description> lighttpd.confを少しいじるだけで出来た
以下のように設定した
hogehoge.netのホスト(HTTP_HOST)またはプライベートIPで指定してきたら
/var/wwwを見せる
それ以外なら/var/www2を見せる
という制御にした
server.document-root = &#34;/var/www2&#34; $HTTP[&#34;host&#34;] == &#34;hogehoge.net&#34; { server.document-root = &#34;/var/www&#34; } else $HTTP[&#34;host&#34;] == &#34;192.168.0.4&#34; { server.document-root = &#34;/var/www&#34; } 
今回はドキュメントルート以外は全部同じ設定にしてあるので、conf-enabled/05-auth.confとかも同じ設定になるので注意 </description>
    </item>
    
    <item>
      <title>/etc/init.dに作った起動スクリプトのリンク設定とか</title>
      <link>https://yaasita.github.io/2011/08/12/3618/</link>
      <pubDate>Fri, 12 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/12/3618/</guid>
      <description> 起動時、終了時等のランレベルが変更されたときに走るスクリプトは/etc/init.dに
格納するが、rc0.d/～rc6.d/のディレクトリにリンクを張る必要がある
昔は手動でやっていたが、今は決まった書式でコメントを書いておけば自動的にアップデートしてくれるらしい
update-rc.dというコマンドで行える
ヘッダさえちゃんと書けばinsservというコマンドを打つだけで全スクリプトのリンクが張られる
詳しくは/etc/init.d/READMEを見れば分かる
関連記事
init.d/とか各ランレベルごとの起動スクリプトについて
rep2をオンメモリーにして高速化2  </description>
    </item>
    
    <item>
      <title>sudoku(数独)の日本語man</title>
      <link>https://yaasita.github.io/2011/08/12/3583/</link>
      <pubDate>Fri, 12 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/12/3583/</guid>
      <description>Linux用のsudokuゲームの日本語manです
NAMEsudoku - 数独ゲーム
SYNOPSIS(ゲームを始める)
sudoku [options] ... [&amp;amp;lt;filename&amp;amp;gt;]
(問題を作成)
sudoku -g [&amp;amp;lt;num&amp;amp;gt;] [options] ...
(問題を解く)
sudoku -v [options] ...
(難易度を計算)
sudoku -s [options] ...
DESCRIPTIONThe sudoku board game is played on a 9x9 grid, divided into rows, columns, and
9 blocks of 3x3 squares. The objective is to fill the empty squares with the
digits 1-9, so that each row, column, and block contains each of the digits 1-9</description>
    </item>
    
    <item>
      <title>KDMのセッション選択の制御とかの話</title>
      <link>https://yaasita.github.io/2011/08/11/3658/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3658/</guid>
      <description> 現在、Xにログインするときに使用するディスプレイマネージャにはKDMを使用している
このKDMのセッション制御についてメモしておく
・ログイン時にセッションをDefaultを選んでログインする
→.xinitrc .xsessionに書いたデフォルトセッションが開始される
（詳しくはここら辺参照）
・その他のセッションを明示的にえらんでログインする
→.xinitrc .xsessionは無視されてえらんだセッションが開始される
参考リンク
KDMハンドブック
テーマ </description>
    </item>
    
    <item>
      <title>KDMの設定をGUIで行う</title>
      <link>https://yaasita.github.io/2011/08/11/3638/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3638/</guid>
      <description> 今まで：kcontrol
これから：systemsettings
だそうです
参照
なのでsystemsettingsをインストールしたらそこから設定してみよう
Advancedタブ→LoginManagerで設定できる
日本語がいいならついでにkde-l10n-jaを入れておくと良いかも </description>
    </item>
    
    <item>
      <title>LinuxでHDDの使用率を調べるには？</title>
      <link>https://yaasita.github.io/2011/08/11/3678/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/08/11/3678/</guid>
      <description> HDDの各フォルダの使用量を調べる方法について調べた
duコマンドで計ってもいいけど
Baobabってコマンドでもいいかも
参考リンク
ハードディスク使用率をグラフィカルに表示するには
ディレクトリやディスクの使用量を調べるには </description>
    </item>
    
    <item>
      <title>wineで入れたソフトのアンインストールについて</title>
      <link>https://yaasita.github.io/2011/07/14/3719/</link>
      <pubDate>Thu, 14 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/14/3719/</guid>
      <description> ここに書いてあった
以下のコマンドで出来るらしい
uninstaller
その他にregeditというコマンドでレジストリも編集できるらしい
まあなにかおかしくなったら~/.wineを削除すればOKだろう
参考リンク
http://linux.ikoinoba.net/index.php?mode=page&amp;amp;aim=wine </description>
    </item>
    
    <item>
      <title>オープンソースの音楽再生ソフト「subsonic」を使ってみる</title>
      <link>https://yaasita.github.io/2011/07/13/3740/</link>
      <pubDate>Wed, 13 Jul 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/07/13/3740/</guid>
      <description> SubsonicはWebベースの音楽再生ソフトでサーバーにある音楽をitunesの様に管理・再生できるソフトみたい
インストールは驚くほど簡単だった
Debian Squeeze
１．Subsonic動作に必要なファイルをインストールしておく
↓あたりをaptとかでインストールしておく（詳しくはこちら）
openjdk-6-jre
flac
faad
vorbis-tools
ffmpeg

２．ダウンロードしたSubsonicをインストール
dpkg -i subsonic-x.x.deb
３．ブラウザでアクセスして設定
http://localhost:4040/にアクセス（もしくは違う端末からIPアドレス指定でもOK）して
設定する。
まずは日本語にするにはSetting→General→Languageを日本語にすればOK
あとはadminのパスワードと必要なアカウントの作成、音楽フォルダの指定、必要ならネットワーク設定を行えば使えるようになる
※注
以下の機能はSubsonicプロジェクトに寄付しないと継続して使用できません
Android、iPhoneやWindows Phone 7のへのストリームの音楽配信ビデオストリーミングsubsonic.orgのDNSサービスWebインターフェイスで広告が表示されない
参考リンク
http://d.hatena.ne.jp/Molokheiya/20110628/p1
関連ソフト
gnump3d
Ampache
AudioGalaxy </description>
    </item>
    
    <item>
      <title>シンプルで軽量なブラウザsurf</title>
      <link>https://yaasita.github.io/2011/06/06/3781/</link>
      <pubDate>Mon, 06 Jun 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/06/06/3781/</guid>
      <description> Debianのsidならパッケージがあったのでこんな感じでリポジトリを設定
-iオプションで画像を無効化、-pでFLASH等のプラグインを無効化、-sでJavaScript無効化とか出来るので
重いサイトを見るときには重宝しそう
ただ、レンダリングはChromeの方が早い気がする
似ている名前でsurfrawというのがあるけどこれはWebから指定した単語の検索結果をブラウザに渡してくれるソフトらしい
こんな感じで書くとgoogleでdebianを検索した結果がブラウザに渡される
surfraw　google debian </description>
    </item>
    
    <item>
      <title>ネットワークの総転送バイトとかを調べる</title>
      <link>https://yaasita.github.io/2011/05/30/3823/</link>
      <pubDate>Mon, 30 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/30/3823/</guid>
      <description> cat /proc/net/dev </description>
    </item>
    
    <item>
      <title>pam-auth-updateで認証方式の変更</title>
      <link>https://yaasita.github.io/2011/05/24/3905/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/24/3905/</guid>
      <description> DTIのVPSの認証方式がKerberosになってたからコマンド打って再設定した
/etc/pam.d/common-password
を見るとよいかも </description>
    </item>
    
    <item>
      <title>top系のコマンドをまとめてみる（システムモニタリングツール）</title>
      <link>https://yaasita.github.io/2011/05/24/3883/</link>
      <pubDate>Tue, 24 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/24/3883/</guid>
      <description> システムモニタリングtop
標準インストール？の基本的なモニタリングソフト
htop
もっとユーザフレンドリーなUIになって見やすくなったtop
iotop
IOに着目して負荷を見るためのtop
atop
アクティブなプロセスのみを表示、前表示と差分があったものを表示するtop
ネットワークモニタリングapachetop
apacheのログからアクセスをリアルタイムに解析してくれる
lighttpdのログでも使えた
iftop
インターフェイスごとにトラフィックを計測
nethogs
アプリ毎にトラフィックを測定
dnstop
DNSのトラフィックを表示
jnettop
ホストとポート毎にトラフィックを表示
sntop
接続を検地するtop
参考リンク
http://phpspot.org/blog/archives/2010/12/top.html
http://journal.mycom.co.jp/news/2009/09/07/005/index.html </description>
    </item>
    
    <item>
      <title>Linuxの面白そうなゲーム</title>
      <link>https://yaasita.github.io/2011/05/22/3925/</link>
      <pubDate>Sun, 22 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/22/3925/</guid>
      <description> 全てaptでインストールできる
sudoku - コンソールでできる数独
xshogi - 将棋ゲーム　軽くて良い感じ
kraptor - シューティングゲーム
ltris - 軽いテトリス
netris　- コンソール版のテトリス
viruskiller - シューティングゲーム？（動作せず）
xblast - ボンバーマンのクローン
flobopuyo - ぷよぷよのクローン
xfireworks - デスクトップに花火が出る
xfishtank - デスクトップが水族館みたいになる
xpenguins - デスクトップにペンギンが出る
xsol - ただのソリティア
参考リンク
http://www10.atwiki.jp/gleaning/pages/32.html
http://penguin.tantin.jp/mori/category.html#af0d8275 </description>
    </item>
    
    <item>
      <title>パイプ処理の進行状況を教えてくれるコマンドpv</title>
      <link>https://yaasita.github.io/2011/05/15/3966/</link>
      <pubDate>Sun, 15 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/15/3966/</guid>
      <description> パイプビュー　というpv コマンドらしい
どうやらpvはcatみたいな効果があるみたい
pv rss.log* | gzip -c  /tmp/hoge.gz

こうやって２つのパイプの間に挟むのも手
cat rss.log* |pv | gzip -c  /tmp/hoge.gz
参考リンク
http://d.hatena.ne.jp/dharry/20110210/1297268423
http://yebo-blog.blogspot.com/2009/02/pipe-viewer.html </description>
    </item>
    
    <item>
      <title>X Window Systemでスクリーンショットを取る</title>
      <link>https://yaasita.github.io/2011/05/10/4067/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4067/</guid>
      <description> 以下のコマンドで出来るらしい
対象をウィンドウだけを取るなら以下のコマンド
コマンドを打ってから対象をクリックでOK
xwd -frame -out 001.xwd
全体を取るには以下のコマンド
これは打った瞬間に取られる
xwd -root -out 002.xwd
参考リンク
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/861minsysps.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/010prtsc.html </description>
    </item>
    
    <item>
      <title>Xセッションからログアウトしたときにスクリプトを実行する</title>
      <link>https://yaasita.github.io/2011/05/10/4109/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4109/</guid>
      <description> ログアウトの制御は使用しているディスプレイマネージャに依存するみたいです。
Gnomeなら/etc/gdm/PostSession/Default
XDMなら/etc/X11/xdm/Xreset
KDEなら/etc/kde4/kdm/Xreset
WDMなら/etc/X11/wdm/Xreset（ディスプレイ毎に設定なら/etc/X11/wdm/Xreset_0等）
らしい
kdmからなら/etc/kde4/kdm/Xreset→/etc/X11/Xreset→/etc/X11/Xreset.d
と呼ばれているのが分かったので/etc/X11/Xreset.dにスクリプトを置けばOKみたい
あと環境変数$USERでログアウト対象のユーザー名を取得できるらしい
参考リンク
http://superuser.com/questions/65460/create-a-logoff-script-task-for-linux
http://haraita9283.blog98.fc2.com/blog-entry-406.html </description>
    </item>
    
    <item>
      <title>インプットメソッドibusを試す</title>
      <link>https://yaasita.github.io/2011/05/10/4087/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4087/</guid>
      <description> aptで以下をインストール
ibus
ibus-anthy
ibus-gtk
ibus-qt4
kasumi
im-switch

インストールしたら
im-switch -s ibusで切り替え
ibus-setupでセットアップ
dwmだとツールバーが無いので以下のように設定

参考リンク
http://glandium.org/blog/?p=989 </description>
    </item>
    
    <item>
      <title>シャドウパスワードの有効化、無効化の切り替えコマンド</title>
      <link>https://yaasita.github.io/2011/05/10/4026/</link>
      <pubDate>Tue, 10 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/10/4026/</guid>
      <description> pwconv, pwunconv, grpconv, grpunconv
パスワード・グループの shadow 化と、通常ファイルへの逆変換 </description>
    </item>
    
    <item>
      <title>fork爆弾を試してみる</title>
      <link>https://yaasita.github.io/2011/05/08/4129/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/08/4129/</guid>
      <description> sleepだけなら大丈夫かな？と思って以下のスクリプトを実行してみた
→結果すぐに応答なしになってkillallも効かない状態に＼(^o^)／
電源を切るしかなくなった
#!/bin/bash
while :; do
$0 &amp;amp;
sleep 10m
done &amp;amp;

詳しくはWikipediaで </description>
    </item>
    
    <item>
      <title>Linuxでランダムに壁紙を変更するスクリプト書いた</title>
      <link>https://yaasita.github.io/2011/05/08/4173/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/08/4173/</guid>
      <description> いろいろソフトとかあるみたいだけどスクリプトでやってみる
#!/usr/bin/perl
use strict;
use warnings;
##################################
# ランダムに壁紙を変更するスクリプト
##################################
my $WALLPAPER_DIR=shift;
##################################
chdir $WALLPAPER_DIR or die $!;
my @pic_lst=(,);
my $random_num=int rand(scalar @pic_lst);
system &#34;hsetroot -full $pic_lst[$random_num]&#34; and die $!;
このスクリプトをrandom_wallpaper.plとして保存した
.xsessionrcに書いておけばOK
while true
do
/usr/local/bin/random_wallpaper.pl /jitaku/local/pic/Linux_wallpaper/ || exit
sleep 30m
done &amp;amp;

参考リンク
ペンギンの杜 〜 Linux ソフト集 〜アミューズメント/壁紙
美女LinuxをUbuntu(GNOME)の壁紙にする
参考記事
xsessionrcのプロセス制御 </description>
    </item>
    
    <item>
      <title>xsessionrcのプロセス制御</title>
      <link>https://yaasita.github.io/2011/05/08/4151/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/08/4151/</guid>
      <description>前回、前々回でwhileでループさせた後xsessionで壁紙やらステータスバーを変更してたけど、それだといろいろと不具合があることが分かったので修正する。
修正後のxsessionrcは以下のようになった
#!/bin/bash
#xsetroot -solid DarkSlateBlue
#hsetroot -full /usr/share/lxde/wallpapers/garasunodice.jpg
D_NUM=`echo $DISPLAY | cut -f 2 -d:`
PIDFILE=~/.xsession_${D_NUM}.pid
for psnum in $(cat $PIDFILE)
do
cmd=`ps -p $psnum | tail -1 `
if echo $cmd | grep Xsession  /dev/null ; then
kill $psnum
fi
done
rm -f $PIDFILE
while true
do
DATE=`date +&#34;%Y/%m/%d %H:%M&#34;`
LOAD=`loadav.pl`
xsetroot -name &#34;Load Average:$LOAD $DATE&#34; || exit
sleep 30s || exit
done &amp;amp;
echo $!  $PIDFILE</description>
    </item>
    
    <item>
      <title>bashrcに書いておくと便利な行</title>
      <link>https://yaasita.github.io/2011/05/07/4194/</link>
      <pubDate>Sat, 07 May 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/05/07/4194/</guid>
      <description> #キーバインド
set -o #キーバインドをviに
stty stop undef #端末ロックをやめる
bind C-f:menu-complete #Ctrl-fでメニューコンプリート
bind C-l:clear-screen #Ctrl-lで端末のクリア
#エイリアス
alias bc=&#39;bc -q&#39; #bc の最初のメッセージがうるさいので
alias mv=&#39;mv -i&#39; #お好みでrootのbashrcには必要？
alias rm=&#39;rm -i&#39; #お好みでrootのbashrcには必要？

注意点はset -o viの前にbindでキーバインドを設定しても無効になってしまうこと
必ずset -o viした後にbindを書くこと
過去記事
bashでCtrl-S押すと端末がロックされる
bashで端末ロック機能を解除する bashでTAB補完する（menu-complete） </description>
    </item>
    
    <item>
      <title>ddclientでキャッシュが邪魔して更新されない件</title>
      <link>https://yaasita.github.io/2011/04/30/4256/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/30/4256/</guid>
      <description> どうやらキャッシュを参照して前回と同じIPなら更新しない仕様みたい
更新日が30日以上の間隔が空いてるなら更新するみたいだけど、待ってられないので
こんなスクリプトをcronに登録しておいた
#!/bin/bash
CACHE_FILE=&#34;/var/cache/ddclient/ddclient.cache&#34;
NOW_IP=`host hogehoge.net | cut -f 4 -d&#39; &#39;`
echo &#34;now ip is $NOW_IP&#34;
CACHE_IP=`cat $CACHE_FILE | tail -1 | cut -f 5 -d, | cut -f 2 -d= `
echo &#34;cache ip is $CACHE_IP&#34;
if [ &#34;$NOW_IP&#34; = &#34;$CACHE_IP&#34; ] ; then
echo &#34;IP check OK&#34;
else
echo &#34;IP check NG&#34;
rm $CACHE_FILE
fi

過去記事
ddclientでワーニングが出る問題
ddclientでDynDNSのIPをアップデートしてみようか </description>
    </item>
    
    <item>
      <title>nmapでサーバーの生存確認をする</title>
      <link>https://yaasita.github.io/2011/04/30/4277/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/30/4277/</guid>
      <description>自分の家のサーバー構成は前回話した感じになっている
（DNSを切り替えることでつながる先をスイッチしている）
自宅のサーバーが落ちるときにDynDNSを更新してレンタルサーバーに向くようにしているけど、これが結構失敗したりするので、レンタルサーバー側でも定期的に監視するようにした。
監視は以下の手順で行う
1.まずDNSで名前を引いて自分（レンタルサーバー側）に向いているか自宅に向いているか調べる
→自分に向いていたら問題ないので処理終了
→自宅に向いていたら2へ
2.自宅のサーバーのメールポートにコネクションが張れるか確認
→張れたら問題なく稼動しているので処理終了
→駄目なら自宅鯖が落ちてると判断しDynDNSを更新してDNSを自分に向かせる
以上の処理をcronに登録して1時間置きにやってみる
nmapでスキャンするときには-PNと-sTをつけるのがポイント
-PN →　自宅のルーターはpingに反応しないのでホストの生存確認は不要
-sT → ルーターからNAPT環境だとステルススキャン(-sS)はうまくいかなかった
nmap hogehoge.net -p 25 -v -PN -sT

あとは適当にスクリプトを組む
#!/usr/bin/perl
use strict;
use warnings;
#################################
# LOG
my $LOG=&#34;/var/log/hogelog&#34;;
#################################
my @result = `nmap hogehoge.net -p 25 -PN -sT`;
if ( join(&#34;&#34;,@result) =~/25\/tcp\s+open\s+smtp/ ){
system &#34;logger &#39;JITAKU MAIL IS LIVE!!&#39;&#34; and die $!;
logadd (@result);
}
else {
system &#34;logger &#39;JITAKU MAIL IS DEAD!</description>
    </item>
    
    <item>
      <title>DTIのVPSにPukiWikiをインストール</title>
      <link>https://yaasita.github.io/2011/04/25/4299/</link>
      <pubDate>Mon, 25 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/25/4299/</guid>
      <description>必要なのはphp5オンリーなので楽  ダウンロード 公式サイトからダウンロード 今回は「pukiwiki-1.4.7_notb_utf8.tar.gz」を選択 こちらは以下のコマンドで展開すればパーミッションの設定を省けるので良い tar xvzpf pukiwiki-1.4.7_notb_utf8.tar.gz インストール 基本的には ここ に書いてある通りやればOK md5値は以下のようにして算出できる echo -n &#39;pass&#39; | md5sum  この値を設定すればOK 上記例だとこんな感じ $adminpass = &#39;{x-php-md5}1a1dc91c907325c69271ddf0c944bc72&#39; 個別設定 その他個人の設定はお好みで
アップロードサイズの変更 vi plugin/attach.inc.php ここを参考にして アップロードサイズ上限を16MBに変更した(19行目付近) 
// Max file size for upload on script of PukiWikiX_FILESIZE
define(&#39;PLUGIN_ATTACH_MAX_FILESIZE&#39;, (16 * 1024 * 1024)); // default: 1MB
 ※ただしphp.iniの制限に引っかかっていたら意味ないので見直すこと→詳しくはこちら
はてなマークを消す方法
以下のようにnowikinameを1に変更する 
$nowikiname = 1;
 その他
ユーザ制御・アクセス制御
QAユーザー認証
セキュリティQA</description>
    </item>
    
    <item>
      <title>よく使うCGIスクリプト</title>
      <link>https://yaasita.github.io/2011/04/18/4319/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/18/4319/</guid>
      <description> 無料で使えてとても助かってる
フォトアルバム pipipiga
UTF-8用のファイルとか用意していてくれる
http://popilol.lolipop.jp/NiconicoPHP/
Fuploader
FLASHで出来てる　アップローダ
100Mまでアップロード可能
http://www.yumemaboroshi.net/cgi4905/
UTF-8+LFへの変換は
nkf -w8 -Lu ファイル名でOK
wikiはPukiWikiが設置が簡単で良いと思う </description>
    </item>
    
    <item>
      <title>lighttpdでアクセス制御</title>
      <link>https://yaasita.github.io/2011/04/17/4341/</link>
      <pubDate>Sun, 17 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/17/4341/</guid>
      <description> こんな感じで指定すると
/upload配下以外はユーザー認証が必要
 $HTTP[&#34;url&#34;] !~ &#34;^/upload&#34; {
auth.require = (
&#34;&#34; =
(
&#34;method&#34; = &#34;basic&#34;,
&#34;realm&#34; = &#34;wolzone&#34;,
&#34;require&#34; = &#34;valid-user&#34;
)
)
}

参考リンク
lighttpdの記述方法
lighttpdのmod_auth使用方法 </description>
    </item>
    
    <item>
      <title>ターミナルが256色をサポートしているかテストするには？</title>
      <link>https://yaasita.github.io/2011/04/12/4362/</link>
      <pubDate>Tue, 12 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/12/4362/</guid>
      <description> http://vimwiki.net/?tips%2F70
↑の256colors2.plっていうスクリプトを動かせばよいらしい </description>
    </item>
    
    <item>
      <title>Debianのデスクトップ環境をDwmに変更してみた</title>
      <link>https://yaasita.github.io/2011/04/11/4446/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4446/</guid>
      <description> 軽量と言われるLXDEだけどやはり10年前のノートPCだと重いと感じてきたので変更する
変更するのはウィンドウマネージャのDwm
インストールはaptとかでさくっとできるはず
デフォルトのMod1キーはAltキーなのでいつもAltキーが必要です
起動して左上に表示されている１～９の数字は仮想デスクトップでここではタグと呼びます
基本操作は以下のとおり
uxtermの起動
Alt+Shift+Return
ウィンドウ間のフォーカスを切り替え
Alt+j
Alt+k

ウィンドウのサイズ変更
Alt+h
Alt+l

フォーカスされているウィンドウを閉じる
Alt+Shift+c
6番目のタグへ移動
Alt+6
全てのタグを選択(全ウィンドウが表示されます)
Alt+0
現在フォーカスされているウィンドウを4番目のタグへ移動
Alt+Shift+4
ウィンドウの入れ替え
Alt+Return
前回選択してたタグへ移動
Alt+Tab
上のバーの表示／非表示切り替え
Alt+b
ウィンドウをタイル表示（重ならないように配置）
Alt+t
フローティングレイアウト表示へ（重なって表示）
Alt+f※Alt押しながらマウスで移動できます
常に最大化表示（ひとつのウィンドウが最大化表示）
Alt+m
Dwmを終了
Alt+Shift+q
その他詳しいことは
man dwm
ステータスバーを変えるにはこちら
参考リンク
http://sourceforge.jp/projects/tilingwm/wiki/FrontPage </description>
    </item>
    
    <item>
      <title>Dwmのステータスバーと壁紙を変更してみる</title>
      <link>https://yaasita.github.io/2011/04/11/4425/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4425/</guid>
      <description> デフォルトのステータスバーはあまりにそっけないので変更してみた
下記参考リンクを参照すれば分かると思うけど
Dwmの上のバーの右上はxsetroot -nameで示される名前を表示しているので
~/.xsessionrcにこんな感じのスクリプトを書いてやる
※.xsessionrcはXのセッション開始時に読み込まれる詳しくは/etc/X11/Xsession参照
~/.xsessionrc
#!/bin/bash
xsetroot -solid DarkSlateBlue
hsetroot -full /usr/share/lxde/wallpapers/block.jpg
while true
do
DATE=`date +&#34;%Y/%m/%d %H:%M&#34;`
xsetroot -name &#34;$DATE&#34; || exit
sleep 30s
done &amp;amp;

xsetroot は背景色の設定（ここでは下の行で壁紙を設定してるから意味無いけど・・・）
hsetroot が壁紙の設定hsetroot をインストールする必要はある
参考リンク
ステータスバーの変更について
参考記事
xsessionrcのプロセス制御 </description>
    </item>
    
    <item>
      <title>Linuxで使える軽い画像ビューワ</title>
      <link>https://yaasita.github.io/2011/04/11/4404/</link>
      <pubDate>Mon, 11 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/11/4404/</guid>
      <description> 使いやすくて軽い画像ビューワー
xzgvというらしい
画像フォルダで
xzgv *
で起動して
shift-z　ファイル一覧表示
z　Windowsにフィット
Space　次の画像へ
b　前の画像へ
矢印キー　画像を任意の方向へスクロール
s　画像をズームイン
S　画像をズームアウト
mirage基本はマウスで出来る
F2で画像をリネームできるのがポイント </description>
    </item>
    
    <item>
      <title>コンソールの表示行を変更する</title>
      <link>https://yaasita.github.io/2011/04/03/4487/</link>
      <pubDate>Sun, 03 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/03/4487/</guid>
      <description> stty rows 56こんな感じで打てば
表示される行数を変更できる
ただ
どうやって起動時に設定するかが課題
参考リンク
sttyのほかの使い方
起動時に有効にする方法？ </description>
    </item>
    
    <item>
      <title>debian-volatileはsqueezeになってから無くなったらしい</title>
      <link>https://yaasita.github.io/2011/04/02/4507/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/02/4507/</guid>
      <description> こことかここに書いてあるけど
debian-volatileはsqueezeになってから無くなったらしい
 deb http://ftp.debian.org/debian squeeze-updates main
にすればいいみたい </description>
    </item>
    
    <item>
      <title>DebianにOperaをインストール</title>
      <link>https://yaasita.github.io/2011/04/02/4528/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/04/02/4528/</guid>
      <description> このとおりやれば出来た
/etc/apt/sources.listにリポジトリを追加
deb http://deb.opera.com/opera squeeze non-free

以下のコマンドを実行
aptitude update
wget -O - http://deb.opera.com/archive.key | apt-key add -
aptitude update
aptitude install opera

apt-keyについては
以下を参照
基本的にはapt-key updateでいいはず
http://debian.fam.cx/index.php?AptGet#secapt </description>
    </item>
    
    <item>
      <title>sshのポートフォワード（ポート転送）を禁止する</title>
      <link>https://yaasita.github.io/2011/03/27/4591/</link>
      <pubDate>Sun, 27 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/27/4591/</guid>
      <description> AllowTcpForwardingをnoに設定すればOKらしい
参考リンク
http://kamae-norihiro.blogspot.com/2010/11/ssh.html </description>
    </item>
    
    <item>
      <title>一定時間だけログイン可能なユーザーを作った</title>
      <link>https://yaasita.github.io/2011/03/27/4549/</link>
      <pubDate>Sun, 27 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/27/4549/</guid>
      <description> sshのログインは基本的には鍵認証にしているのだが、
出先などでどうしてもログインしたい場合鍵が無くて困ることがあるので、一定時間だけパスワード認証できるユーザーを作った。
仕組みは以下のとおり

1.SUIDのセットされたperlスクリプトで実行するコマンドはusermod --lockコマンド　→suidperlについて
2.アンロックされる
3.sshのパスワード認証によってログインする　※1
4.cronにusermod --unlockを仕込んでおく
※1　特定のユーザーのみパスワード認証を許可する
hogeuserが今回の対象とする場合
Match User hogeuser
PasswordAuthentication yes
AllowTcpForwarding no


参考リンク
http://d.hatena.ne.jp/isseium/20100923/1285225757 </description>
    </item>
    
    <item>
      <title>Debian squeezeにしたらコンソールの解像度が変わった</title>
      <link>https://yaasita.github.io/2011/03/14/4654/</link>
      <pubDate>Mon, 14 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/14/4654/</guid>
      <description> 事象は/etc/default/grubのGRUB_GFXMODEを変更しても
GRUB2の選択画面はその解像度になるがブート後のコンソール画面が狂ってしまうというもの
こんな単語でググったらいろいろ見つかった
こちらの情報を参考に設定してみた
1./etc/default/grubを編集
GRUB_GFXMODE=1024x768
というように設定
2./etc/grub.d/00_headerを編集
39行目あたりにある
if [ &#34;x${GRUB_GFXMODE}&#34; = &#34;x&#34; ] ; then GRUB_GFXMODE=640x480 ; fi
の下に以下の行を追記
GRUB_GFXPAYLOAD=&#34;${GRUB_GFXMODE}&#34;
127行目あたりの
set gfxmode=${GRUB_GFXMODE}
の下に
set gfxpayload=${GRUB_GFXPAYLOAD}
を追記
3.update-grub
update-grubする
その他
なんでもgfxtermとか言うらしい・・・詳しいことはよく分からない
参考リンク
https://forums.ubuntulinux.jp/viewtopic.php?pid=44077
http://linux.derkeiler.com/Mailing-Lists/Debian/2010-01/msg01695.html </description>
    </item>
    
    <item>
      <title>squeezeにしたら日本語manがおかしい</title>
      <link>https://yaasita.github.io/2011/03/13/4674/</link>
      <pubDate>Sun, 13 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/13/4674/</guid>
      <description> こちらを参照
http://debian.fam.cx/index.php?squeeze%2Finstall#z903c402 </description>
    </item>
    
    <item>
      <title>bashでTAB補完する（menu-complete）</title>
      <link>https://yaasita.github.io/2011/03/07/4694/</link>
      <pubDate>Mon, 07 Mar 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/03/07/4694/</guid>
      <description> ↓で出来るらしいスゴイ
今までzshじゃなきゃできないと思ってた
bind TAB:menu-complete

参考リンク
http://debian.fam.cx/index.php?Japanese#ped4bcbd </description>
    </item>
    
    <item>
      <title>cronの各処理の実行時間を測定してみた</title>
      <link>https://yaasita.github.io/2011/02/25/4736/</link>
      <pubDate>Fri, 25 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/25/4736/</guid>
      <description> なんかcron.dailyの実行がやけに重いなーとおもったので各スクリプトのどの処理が重いか調べてみた
1.timeプログラムのインストール
まずtimeプログラムが必要ですbashからなら普通に打てるのですがbinに入っているものじゃないとエラーになったのでインストール
debianならtimeパッケージをインストールすれば/usr/bin/timeが出来ました
2.実行時間測定スクリプトの作成
次に/tmpに以下のスクリプトを置き
time.pl
#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
use Time::HiRes;
my $runpg=shift;
say &#34;### $runpg START ### &#34;,Time::HiRes::time;
system &#34;/usr/bin/time $runpg&#34; and die $!;
say &#34;### $runpg END ### &#34;,Time::HiRes::time;

3.anacrontabの編集
/etc/anacrontabを編集（/etc/crontabの人はそちらを)
# 1 5 cron.daily nice run-parts -v /etc/cron.daily
1 5 cron.daily nice run-parts --list /etc/cron.daily | xargs -i /tmp/time.pl {}
ポイントはrun-partsを--listにして実行ファイル一覧を出力させてそれを引数として実行時間を計るプログラムに渡す </description>
    </item>
    
    <item>
      <title>tinyhoneypotを使ってみる</title>
      <link>https://yaasita.github.io/2011/02/06/4778/</link>
      <pubDate>Sun, 06 Feb 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/02/06/4778/</guid>
      <description> aptかなんかでインストールコマンドは→thpot
thpotはxinetdかinetdを通してでも起動できます
接続とセッションを通しての命令は全てログに記録されます
以下のどれかの引数を与えてサービスを起動します
shell, ftp, http, mssql, smtp, pop3 ,ssh
ドキュメントは以下
/usr/share/doc/tinyhoneypot </description>
    </item>
    
    <item>
      <title>Linuxで使える（割と）高機能なエディタ</title>
      <link>https://yaasita.github.io/2011/01/22/4843/</link>
      <pubDate>Sat, 22 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/22/4843/</guid>
      <description> 普段はgvimを使ってるけど長い行を開いたりすると重いので
Leafpad以上でgvim以下のエディタを探してたら
Editraというエディタを発見
スクリーンショットはこちら
特徴は
・マルチプラットフォーム（Windows,Linux,MacOS)
・60以上のプログラミング言語対応のシンタックスハイライト
・タブで使える
・日本語化されている
・軽い
・viモード搭載（環境設定→ドキュメント→コードタブ→「viエミュレーションを有効にする」にチェック </description>
    </item>
    
    <item>
      <title>radikoを聞くperlスクリプト書いた</title>
      <link>https://yaasita.github.io/2011/01/17/4864/</link>
      <pubDate>Mon, 17 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/17/4864/</guid>
      <description> ポイントはforkして指定した時間で落とすこと
#!/usr/bin/perl
################################################
# radiko を聞くスクリプト
# 引数で制御する
#
# ヘルプを表示するにはh
# radiko.pl -h
################################################
use strict;
use warnings;
use Getopt::Std;
my %opt;
getopts(&#34;hc:f:t:&#34;,\%opt);
if (exists $opt{h}){
print </description>
    </item>
    
    <item>
      <title>iptablesまとめ</title>
      <link>https://yaasita.github.io/2011/01/16/4905/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/16/4905/</guid>
      <description> よく忘れるのでメモ
ルールの表示例）natテーブルのルールを表示
因みにfilterテーブルなら省略可
iptables -t nat -L
ルールの追加例）80番ポートへのアクセスを遮断
iptables -A OUTPUT -p tcp --dport 80 -j DROP
ルールの削除iptables -D INPUT 3
パケット転送80番ポートのアドレスを192.168.0.4:4000へ転送
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to 192.168.0.4:4000 
参考リンク
iptablesで設定したルールを再起動後も反映したい
iptablesによるフィルタ設定 </description>
    </item>
    
    <item>
      <title>任意のIPを作って送れるソフト</title>
      <link>https://yaasita.github.io/2011/01/16/4926/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/16/4926/</guid>
      <description> sendip
debianならリポジトリにある
例）memo.txtの内容をtcpで送る
sendip -d memo.txt -p ipv4 -p tcp 192.168.0.3
参考リンク
http://masy.families.jp/diary/?200010c </description>
    </item>
    
    <item>
      <title>rtmpdump試してみた</title>
      <link>https://yaasita.github.io/2011/01/15/4947/</link>
      <pubDate>Sat, 15 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/15/4947/</guid>
      <description>NHKオンデマンドに挑戦
1.URLを解析
fms0000.nod.ipcasting.jp

2.hostsを変更
今回は192.168.0.4にrtmpsuckを走らせておく
192.168.0.4 fms0000.nod.ipcasting.jp

3.でダウンロード
出来るはずだったが、なんか出来なかったOTZ
因みにこんな方法もあるLinuxならiptablesで転送する
hogeuserをすべてlocalhostへ飛ばす例
iptables -t nat -A OUTPUT -p tcp --dport 1935 -m owner \! --uid-owner hogeuser -j REDIRECT

iptables -t nat -n -L で確認
iptables -t nat -D OUTPUT 1　で削除
参考リンク
http://h.hatena.ne.jp/syouhi/9259273302189983422
気を取り直してradiko録音これはrtmpsuckで一発OK
rtmpdumpならこうかな
#!/bin/bash
rtmpdump -v -e -s &#39;http://radiko.jp/player/swf/player_2.0.1.00.swf&#39; \
-r &#39;rtmpe://radiko.smartstream.ne.jp/FMJ/_defInst_&#39; \
--playpath &#39;simul-stream?ucid=1dbab2acb98174787146465a40ba9eba&#39; \
-p &#39;http://radiko.jp/player/player.html&#39; \
-f &#39;WIN 10,1,102,64&#39; \
-o FMJ</description>
    </item>
    
    <item>
      <title>tmuxを試してみた</title>
      <link>https://yaasita.github.io/2011/01/01/4970/</link>
      <pubDate>Sat, 01 Jan 2011 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2011/01/01/4970/</guid>
      <description>tmuxの考え方セッション・・・複数のウィンドウを持つ固まり
ウィンドウ・・・複数のペインを持つ1画面
ペイン・・・いわゆる操作できる端末
プレフィックスキー全てプレフィックスキー(デフォルトはC-b)を押した後に入力する
※ $で始まるものはコマンド操作
それ以外はプレフィックスキー後に入力する
セッション操作
hogesessionというセッション名で作成
$ tmux new -s hogesession
セッション選択
:choose-session
セッション一覧を表示
$ tmux ls
hogeセッションにアタッチ
$ tmux a -t hoge
ウィンドウ操作windowのリネーム ,※:set-window-option automatic-rename onにするとデフォルトになる
新しいwindowの作成
c
windowの数字選択指定
0～9
windowの数字を変更
.
ウィンドウを8番へ移動
move-window -t 8
ウィンドウ選択
:choose-window
ウィンドウの入れ替え(1と入れ替える)
swap-window -t 1
ペインpane操作
ペインの入れ替え
{}
pane番号表示
q
レイアウト変更
SPACE
上下左右サイズ変更
+-&amp;amp;lt;&amp;amp;gt;
ペインの入力同期 on/off
:set-window-option synchronize-panes on:set-window-option synchronize-panes off
ペインを:1ウィンドウから一枚もらってくる
:join-pane -s :1
ペインを:1ウィンドウに移す
:join-pane -dt :1※:1.</description>
    </item>
    
    <item>
      <title>rsyncのinclude,excludeで注意すること</title>
      <link>https://yaasita.github.io/2010/12/26/5031/</link>
      <pubDate>Sun, 26 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/26/5031/</guid>
      <description>とりあえず3点
1.--excludeする前に--includeしておかないと意味が無い
2.あるフォルダ配下のファイルを対象にしたかった場合はフォルダ自体もincludeする
3.include,excludeは同期元ファイルからの相対パス
で例を使って説明します
以下の場合を想定
.
|-- dst
`-- src
|-- ABC
| |-- A
| |-- B
| `-- C
|-- a
|-- b
|-- c
|-- d
|-- e
`-- f

まずsrcフォルダからdstフォルダへ同期するとします
1の注意点から
↓のようにやっても何一つ同期されません。最初に全部弾いているので駄目
rsync -av --delete-excluded --exclude=&#34;*&#34; --include=&#34;a&#34; src/ dst/
下記のようにexcludeを後に置けばすればaだけ同期できます
rsync -av --delete-excluded --include=&#34;a&#34; --exclude=&#34;*&#34; src/ dst/

2の注意点について
ABCディレクトリ配下のみ同期したい場合
こうしてもうまくいきません(excludeで全部弾かれてしまいます)
rsync -av --delete-excluded --include=&#34;ABC/*&#34; --exclude=&#34;*&#34; src/ dst/
ABC配下のみ同期したい場合はまずABCをincludeします
↓のようにやればOK
rsync -av --delete-excluded --include=&#34;</description>
    </item>
    
    <item>
      <title>multitailを調べてみる</title>
      <link>https://yaasita.github.io/2010/12/20/5092/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/20/5092/</guid>
      <description> multitail messages -I syslog.1
-I でファイルをひとつのウィンドウに混ぜて表示
multitail -l &#39;ping hoge&#39; -L &#39;ping foo&#39;
外部プログラムなら-Lで混ぜて表示
-cSオプションで組み込みのカラースキームを適用
表示している最中に
tでステータス表示
Tでログファイルを空にする
hでヘルプ
下記エラーが出たらウィンドウが小さいのが原因なので大きくすればOK
A problem occured at line 511 in function mynewwin (from file term.c):
Failed to create window with dimensions 54x9 at offset -27,-4 (terminal size: 76,24)
Binary build at Dec 10 2009 23:58:27

参考リンク
http://www.kichise.com/modules/pico/other/multitail.html
http://www.vanheusden.com/multitail/  </description>
    </item>
    
    <item>
      <title>teraterm &#43; screenだとマウスのスクロールが出来ない？</title>
      <link>https://yaasita.github.io/2010/12/20/5113/</link>
      <pubDate>Mon, 20 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/20/5113/</guid>
      <description> 解決策
Ctrlを押しながらマウスホイールをまわす TERATERM.INIのTranslateWheelToCursorをoffにする
参考リンク
http://d.hatena.ne.jp/orangeclover/20100406/1270564074 </description>
    </item>
    
    <item>
      <title>CUIでRSSを見てみる</title>
      <link>https://yaasita.github.io/2010/12/19/5135/</link>
      <pubDate>Sun, 19 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/19/5135/</guid>
      <description>下記参考リンクがすごい参考になったのでちょっとずつ試してみた
* Newsbeuter
適当にRSSへのURLを書いたテキストを用意(ex.url.txt)
url.txtは一行一URLにしておいた
newsbeuter -u url.txtで起動
RでリロードしてからENTERで適当に読める

インターフェイスはmuttに似ているなんかメールを読むようにRSSを読める既読未読とか分かるし、マーク、検索とか出来て便利前回読んだ時の状態を~/.newsbeuterに保存しているのでまた読み返すときも便利かもしれないsを押すと記事を保存できたりする
* Snownews 
squeezeにパッケージが無かったのでレビュー出来なかった・・・
lennyならある模様
* Canto (旧NRSS)
squeezeにはNRSSもcantoもあるけど公式サイト見るとCantoへ誘導されるのでこっちを使ってみる
何も考えずに下記のコマンドを打つと.cantoが出来る
canto.canto以下にconf.py.exampleが出来ているのでconf.pyへリネーム後
好きなURLへ変更すれば使える
jkで上下移動　SPACEで記事を読める

デフォルトでviキーバインドシンプルな外観gでブラウザに渡すことも出来たりするフィードを更新するときはcanto-fetchコマンドを使う
* rsstail
↓こんな感じで使ってる
rsstail -ldpcHvu http://blog.livedoor.jp/dqnplus/index.rdf-l でリンクを表示
-d　で説明
-p　で記事の日付
-c でコメント表示
-H でHTMLタグを除去
-v 冗長オプション
-u に続いてURLを与える
multitailでまとめるには
multitail -cS rsstail -l &#34;rsstail -lpcHvu http://aerial.deko8.jp/feed_ranking1d.xml&#34; -cS　rsstail -L &#34;rsstail -lpcHvu http://feeds.feedburner.com/hatena/b/hotentry&#34;
でいけると思ったけど文字化けして駄目だった
しょうがないから各RSSを追記リダイレクト(rsstail -u http://hoge.jp/rss.xml &amp;amp;gt;&amp;amp;gt; /tmp/rss.log)でそのファイルを眺めてる
* まとめ
newsbeuter →　メールを読むようにじっくり読みたい人向け</description>
    </item>
    
    <item>
      <title>bashrcが読み込まれない？</title>
      <link>https://yaasita.github.io/2010/12/11/5157/</link>
      <pubDate>Sat, 11 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/11/5157/</guid>
      <description> useraddでテスト用のアカウント作ったら読み込まれてたので
何でだろうとおもったら下のページに書いてあった
ようはprofileとかなければ呼ばれないらしい
http://blog.jojo.jp/?eid=1013034
呼ばれ方
~/.profile - ~/.bashrc </description>
    </item>
    
    <item>
      <title>CPUの温度とかを参照するには</title>
      <link>https://yaasita.github.io/2010/12/10/5198/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5198/</guid>
      <description> /proc/acpi/thermal_zone/THRM
とよい
temperatureとか・・・ </description>
    </item>
    
    <item>
      <title>CUIでmp3等を再生</title>
      <link>https://yaasita.github.io/2010/12/10/5218/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5218/</guid>
      <description> mplayer で出来た
→　←　でseek
0 9 / * で音量操作
p　で一時停止
m　でミュート
q　で抜ける
I　でタイトル表示
mplayer -playlist hoge.lst
hoge.lstにはプレイリストを記述（一行に1ファイル） </description>
    </item>
    
    <item>
      <title>screenでウィンドウ番号を入れ替える</title>
      <link>https://yaasita.github.io/2010/12/10/5177/</link>
      <pubDate>Fri, 10 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/10/5177/</guid>
      <description> Ctrl-a押してから:number [n]
で出来るらしい
参考リンク
http://d.hatena.ne.jp/riskn/20070430/1177961903 </description>
    </item>
    
    <item>
      <title>DebianのsqueezeにしたらUUIDでfstabが設定されてた</title>
      <link>https://yaasita.github.io/2010/12/04/5239/</link>
      <pubDate>Sat, 04 Dec 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/12/04/5239/</guid>
      <description> 以下UUIDの調べ方
1./devを見る
ls -l /dev/disk/by-uuid
2.blkidコマンドで見る
blkidvol_idは無くなったらしい
参考リンク
http://ankyo.blog.so-net.ne.jp/2010-01-26 </description>
    </item>
    
    <item>
      <title>Debian squeezeで音が出ない</title>
      <link>https://yaasita.github.io/2010/11/28/5283/</link>
      <pubDate>Sun, 28 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/28/5283/</guid>
      <description> alsaconfが無くなったらしい
alsactl initでできるらしい
参考リンク
http://d.hatena.ne.jp/toromoti/20100610/1276167033 </description>
    </item>
    
    <item>
      <title>Debian squeezeにtightvncをインストール</title>
      <link>https://yaasita.github.io/2010/11/28/5259/</link>
      <pubDate>Sun, 28 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/28/5259/</guid>
      <description> tightvncserver(vncserver)で起動
(XvncだけでXだけを起動することも出来るが普通は使用しない vncserverがラッパーになっている)
Xvncのオプションも使えるので
こんな感じで起動
tightvncserver :5 -geometry 1280x1024 -depth 16 -rfbport 6000ディスプレイ番号5番で画面は1280x1024、色深度16ビット、ポート6000で待機
終了はこんな感じ
tightvncserver -kill :5
パスワードはvncpasswd等で作成しておく
あとはつなげればOK 
ちなみにvncpasswdでパスワードを作る際に短すぎるとエラーになる
家で使うので1文字のパスワードでも良いというのなら
こんな感じで-fオプションを使って標準入力から受け取るようにすればOK
-fオプションで起動→aを入力後にCtrl-Dで終了
user@squeeze:~/.vnc$ vncpasswd -f  passwd a user@squeeze:~/.vnc$  </description>
    </item>
    
    <item>
      <title>smbclientで共有リストを表示させる</title>
      <link>https://yaasita.github.io/2010/11/23/5303/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/23/5303/</guid>
      <description> 192.168.0.11がsambaサーバだったとすると
smbclient -L 192.168.0.11
 </description>
    </item>
    
    <item>
      <title>XenをDebian squeezeにインストールしてみる</title>
      <link>https://yaasita.github.io/2010/11/23/5324/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/11/23/5324/</guid>
      <description>はやっている様なのでXenを使ってみた
基本的にはDebian Wikiの通りやればOK
1.必要なパッケージのインストール
amd64じゃなかったら686とか自分のPCに合わせる
bridge-utils debootstrapも忘れずに
aptitude -P install xen-hypervisor-4.0-amd64 linux-image-xen-amd64 xen-tools
2.grubの起動順位、設定の変更？
なんか知らんがこうするといいらしい
mv -i /etc/grub.d/10_linux /etc/grub.d/50_linux
update-grub2
echo &#34;&#34;  /etc/default/grub
echo &#34;# Disable OS prober to prevent virtual machines on logical volumes from appearing in the boot menu.&#34;  /etc/default/grub
echo &#34;GRUB_DISABLE_OS_PROBER=true&#34;  /etc/default/grub
update-grub2

3./etc/default/xendomainsを編集して状態保存を無効化
XENDOMAINS_RESTORE=false
XENDOMAINS_SAVE=&#34;&#34;

4.ネットワークブリッジの設定
/etc/xen/xend-config.sxpを編集
以下の行のコメントアウトを解除
(network-script network-bridge)

5.VMイメージ作成する際のデフォルト値を設定
今回はLVM上にイメージファイルを作らないのでdir を指定
ここで設定しなくても全部コマンドラインでやるのも可→参考リンク
pygrubっていうのはdom0からカーネルを一々VM上に持っていかなくても済む
仕組み　→　参考リンク
dir = /home/xen</description>
    </item>
    
    <item>
      <title>rsshでscp/sftp専用のアカウントを作る</title>
      <link>https://yaasita.github.io/2010/10/31/5405/</link>
      <pubDate>Sun, 31 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/31/5405/</guid>
      <description> rsshってソフトで実現できるらしい
基本的にはyum install rsshでインストール→/etc/rssh.confを編集でOKらしい
で、sftp,scp専用には出来たけどchroot環境を構築するためのスクリプトmkchroot.shが見つからなかった
yum whatprovides */mkchroot.shとかやっても駄目
とりあえずchrootは今回はあきらめた
他にもこんな方法があるらしい→http://d.hatena.ne.jp/hidde/20091215/1260872041
参考リンク
http://d.hatena.ne.jp/h2onda/?of=5
http://www.sdri.co.jp/rssh/faq.html </description>
    </item>
    
    <item>
      <title>apt-fileについて</title>
      <link>https://yaasita.github.io/2010/10/11/5611/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5611/</guid>
      <description> コマンドからパッケージ名を検索するときに便利なコマンド
以下manの（適当な）翻訳
書式
apt-file [ options ] [ action ] [ pattern ]
apt-fileコマンドはAPTパッケージシステム中のファイルを探すことが出来ます。
action には以下の物を使用します
update
パッケージの情報からファイルのリストを再同期します。
パッケージリストの情報はsources.listから持ってきます。
search
ファイルがどのパッケージに含まれるかを検索します。
patternを含むファイルを持っているすべてのパッケージが出力されます。
find
searchのエイリアスです。
list
patternにマッチしているパッケージの中身を出力します。
dpkg -L と違ってインストールされていなくても良いという違いはありますが、
挙動はdpkg -L に非常に近いです。
show
listのエイリアスです。
purge
キャッシュディレクトリにある全てのContents-.gzファイルを削除します。
あと
apt-file list pattern
でpatternパッケージに含まれているファイル一覧を出力することができますが、
patternを含む全パッケージが出力されてしまうため、厳密にこのパッケージの
中身が見たいという場合はdpkg -L の方が良いかもしれません。
あとオプションに-xを指定すると正規表現が使えます
例）
apt-file find nslookup | grep bin # nslookupコマンドを含むパッケージ名を検索
apt-file -x list ^bittorrent$ #bittorrentパッケージ中のファイルを出力
参考リンク
http://d.hatena.ne.jp/rx7/20080830/p1
http://d.hatena.ne.jp/kiririmode/20081119/p1
http://d.hatena.ne.jp/rubikitch/20080406/1207420372 </description>
    </item>
    
    <item>
      <title>ddclientでワーニングが出る問題</title>
      <link>https://yaasita.github.io/2010/10/11/5567/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5567/</guid>
      <description> ddclientで
WARNING: unable to determine IP addressというエラーが出ていた
use=web, if=eth0を
use=webに直したらOK
参考リンク
http://royalwin.blog.so-net.ne.jp/archive/c2300401272-1
http://ubuntuforums.org/showthread.php?t=635409 </description>
    </item>
    
    <item>
      <title>Debianのbittorrentパッケージをインストール</title>
      <link>https://yaasita.github.io/2010/10/11/5589/</link>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/11/5589/</guid>
      <description> 以下マニュアル
名前
bittorrentダウンローダー - 分散ネットワークを使用したダウンロード
概要
btdownloadheadless [ option ... ] URL
btdownloadheadless [ option ... ] filename
btdownloadcurses [ option ... ] URL
btdownloadcurses [ option ... ] filename
btdownloadgui [ option ... ] URL
btdownloadgui [ option ... ] filename
説明
このマニュアルのページは、簡単に
btdownloadheadless,
btdownloadcurses,
btdownloadgui
オリジナルプログラムがマニュアルを持たないので、
このマニュアルはDebianディストリビューション用に書かれました。
上記のプログラムはP2Pプロトコルbittorrentを使用したファイルのダウンロードを行うものです。
上記すべてのプログラムは全て同じオプションが使えます。

で、この3コマンドの違いは何かと言うと端末の制御の仕方が違うだけ
btdownloadheadless ・・・端末に延々と出力し続ける（tail -f見たいな感じ)
btdownloadcurses　・・・Cursesを使った端末制御見やすい CUIなら通常はこれ
btdownloadgui　・・・GUIで使うならこれXが必要
※ちなみにDebianの場合btdownloadcurses.bittorrentとbtdownloadcursesは同じ（シンボリックリンク） </description>
    </item>
    
    <item>
      <title>crontabに書いてあるdomとdowは何の略？</title>
      <link>https://yaasita.github.io/2010/10/03/5652/</link>
      <pubDate>Sun, 03 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/03/5652/</guid>
      <description> dow・・・Day Of Week
dom・・・Day of Month </description>
    </item>
    
    <item>
      <title>pingで生存確認してからsmbmountする</title>
      <link>https://yaasita.github.io/2010/10/02/5673/</link>
      <pubDate>Sat, 02 Oct 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/10/02/5673/</guid>
      <description> 今まではsmbmountを試して駄目だったら後続の処理を止めてたけど
pingしてからsmbmountすればもっと早くできると思う
こんな感じ
#!/bin/bash
TargetIP=192.168.0.2
ping -c 1 -w 1 $TargetIP  /dev/null || exit 0
mount //$TargetIP/hoge /var/windows/ -o sec=none  /dev/null 2&amp;amp;1
if [ $? -eq 0 ]
then
rsync -a --delete /var/windows/ /var/samba/foo/
umount /var/windows/ || exit 1
else
exit 0
fi
exit
 </description>
    </item>
    
    <item>
      <title>init.d/とか各ランレベルごとの起動スクリプトについて</title>
      <link>https://yaasita.github.io/2010/09/26/5694/</link>
      <pubDate>Sun, 26 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/26/5694/</guid>
      <description>前回rep2の話でスタートアップとシャットダウン時に行うスクリプトについて書いた
今回は/etc/init.d/rcを使わずにやる（正式な？）方法で起動時、終了時のスクリプトを実行してみる
まず、Linuxは/etc/inittabの定義に従って、/etc/init.d/rcをランレベルを引数にして実行する。
その後、/etc/rc$runlevel.dの中にあるディレクトリを順番に実行する。$runlevelは0～6の数値
（たとえばrc1.d,rc2.d,rc3.d,rc4.d,rc5.d,rc6.d）
/etc/init.d/rcの中を読めば分かるが、大まかな挙動は以下の通り。
1.現在のランレベルと前回のランレベルを取得する。
2.現在のランレベルに対応するディレクトリのKで始まるスクリプトを探し、前回のランレベルで実行されているなら（頭文字がSで始まるスクリプトが存在しているのなら）それを止める。
3.次に、Sで始まるディレクトリを探し、前回のランレベルで起動していないと判明したらstart、もしくはstopをかける。
ちなみに0,6はstopを引数にしてSから始まるスクリプトを順次実行する。
実行する順番はSもしくはKから始まる次の2桁の数値の若い順。
SとKではKが最初に実行される。
前回のスクリプトをこの方法で実現するなら
下記のようなスクリプトを用意すればOK
init.d/my_script
rc0.d/K01my_script@
rc2.d/S99my_script@
rc6.d/K01my_script@
my_scriptの中身は↓
#! /bin/sh
### BEGIN INIT INFO
#
# Default-Start: 2
# Default-Stop: 0 6
# Short-Description: rep2
### END INIT INFO
#
PATH=/bin:/usr/bin:/sbin:/usr/sbin
case &#34;$1&#34; in
start)
# rep2 HDD -&amp;amp;gt; memory
mkdir /dev/shm/rep2mem
rsync -av --delete /var/www/rep2mem_bk/ /dev/shm/rep2mem/
;;
restart|force-reload)
# nothing to do
:
;;
stop)
#rep2 memory -&amp;amp;gt; HDD</description>
    </item>
    
    <item>
      <title>こんなmanもあるんだ</title>
      <link>https://yaasita.github.io/2010/09/19/5735/</link>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/19/5735/</guid>
      <description> man ascii
アスキーコードの表示
man hier
ファイルヒエラルキーの説明
こういうTips的なもの
http://cb.vu/unixtoolbox.xhtml </description>
    </item>
    
    <item>
      <title>自宅サーバーとレンタルサーバーでメールの同期を図る</title>
      <link>https://yaasita.github.io/2010/09/19/5755/</link>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/19/5755/</guid>
      <description>私の環境は以下のようにレンタルサーバーと自宅サーバーそれぞれでメールを受信している
自宅サーバーは24時間動かしているわけではないため、自宅サーバーが電源OFFした場合はDynDNSのドメインのIPアドレスをレンタルサーバーに設定。逆に電源がONになった場合はその逆でドメインのIPを自宅サーバーへ向けるようにする。
つまりDNSを更新して現用系(自宅)と待機系(レンタルサーバー)でスイッチさせている

でその時に問題なるのはレンタルサーバーで受信したメールをどうやってこちらに移すか？
今回はsftpを使って同期する
userが対象のユーザ、hoge.netがレンタルサーバーのアドレスとする
#!/bin/bash
my_maildir=/home/user/Maildir/
{
cat /dev/null 2&amp;amp;1
cd ${my_maildir}/tmp
for i in $( ls ); do
dst=`echo $i | cut -d: -f 1`
if [ $i != $dst ] ; then
mv $i $dst
fi
chmod a+rw $dst
mv $dst ${my_maildir}/new
done

適当な解説
・sftpについて
sftpはバッチモードというのがあり、-bで指定してその後に命令の書かれたファイルを指定します。今回は標準入力から読み込むため-を指定。get rmはftpでおなじみのコマンドで、
最初に-がついてるのはエラーになっても続行すると言う意味です。（curなどにファイルが無い場合はエラーとなる）
ここら辺に具体的な説明が書かれていますが、-Pはポート指定では無いなどこちらの環境と少し違う箇所がありました。man sftpで見た方が良いかもしれません。
・Maildirのファイル名について
命名の規約は下記参考リンクを参照するとして今回はレンタルサーバーにたまっていた物を新着メールとして処理したいので、ファイル名の:（コロン）以降を取り外しています。
ファイル名は以下のような構造になっています
1234567890.ABCDEFGHI123456789.hostname:2,S
1234567890 → UNIX時間
ABCDEFGHI123456789 →　メールごとにユニークな識別文字
hostname → ホスト名</description>
    </item>
    
    <item>
      <title>rsyncで双方向同期するには</title>
      <link>https://yaasita.github.io/2010/09/18/5796/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5796/</guid>
      <description> --updateオプションで古い更新日で新しい更新日のものを上書きしないようにする
--existingですでに受信側にあるファイルのみを対象とします
これを指定してA→B,B→Aという2回rsyncすれば同期できるはず </description>
    </item>
    
    <item>
      <title>標準エラー出力のリダイレクト話</title>
      <link>https://yaasita.github.io/2010/09/18/5817/</link>
      <pubDate>Sat, 18 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/18/5817/</guid>
      <description> 標準エラー出力と標準出力を混ぜたいときに使う
この文法
command &amp;amp;gt; hoge 2&amp;amp;gt;&amp;amp;amp;1なぜ↓の様に書いては駄目なのか解説する
command 2&amp;amp;gt;&amp;amp;amp;1 &amp;amp;gt; hoge ←これはうまく出ない
まず &amp;amp;1 の意味は標準出力の出力先を指す
つまり標準出力と同じ場所に出したいときにしていする
間違った例だとなぜ標準エラー出力が標準出力に出てしまうか順番に解説
1.リダイレクトを指定しない場合
デフォルトの画面に出力される　標準出力先：画面
標準エラー出力先：画面 
command
2.標準エラー出力先を標準出力と同じに指定
標準出力先は画面なのでエラー出力を同じに指定してもまた画面になる
標準出力先：画面
標準エラー出力先：画面（現在の標準出力先と同じ） 
command 2&amp;amp;gt;&amp;amp;amp;1
3.標準出力先を指定
標準出力先をリダイレクトによって指定する
標準出力先：hoge
標準エラー出力先：画面
command 2&amp;amp;gt;&amp;amp;amp;1 &amp;amp;gt; hoge
つまり 2&amp;amp;gt;&amp;amp;amp;1 という指定はその時点の標準エラー出力を参照するため、まだ標準出力先を変更していない内に変更しても意味がないということ
参考リンク
http://www.fireproject.jp/feature/bash/basic/redirect-pipe.html </description>
    </item>
    
    <item>
      <title>aptitudeのパッケージ検討の時のコマンド</title>
      <link>https://yaasita.github.io/2010/09/12/5837/</link>
      <pubDate>Sun, 12 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/12/5837/</guid>
      <description> r　→　その提案を拒否 (rejectの意味か？)
a　→　その提案を承認 (acceptの意味か？)
Enter → 詳細に表示
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html </description>
    </item>
    
    <item>
      <title>期待のファイルシステムNILFS2</title>
      <link>https://yaasita.github.io/2010/09/12/5857/</link>
      <pubDate>Sun, 12 Sep 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/09/12/5857/</guid>
      <description> NILFS2
ざっと調べたら以下の特徴があるらしい
・NTTが作ったらしい
・スナップショットが取れる
・パフォーマンスが良い
・まだ不安定かも
Btrfsも期待できるけど当面はこっちを使おうかな
http://www.nilfs.org/ja/index.html
http://www.kotodama.jp/blog/index.php/2008/03/12/nilfs2
http://plaza18.mbn.or.jp/~moriban/linux/FileSystemBenchmarkResults-02.html </description>
    </item>
    
    <item>
      <title>usermodでグループの所属と所属の解除</title>
      <link>https://yaasita.github.io/2010/08/31/5877/</link>
      <pubDate>Tue, 31 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/31/5877/</guid>
      <description> よく勘違いするのでメモ
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser)
~#usersermod -G floppy testuser (floppyグループに所属するように変更)
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser),25(floppy)
~#usrmousermousermod -G cdrom testuser (floppyグループからの所属を解除し、cdromグループへ)
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser),24(cdrom)
~#usermod -G testuser testuser (セカンダリグループを解除)
~#id testuser
uid=1001(testuser) gid=1001(testuser) 所属グループ=1001(testuser)
~#

-Gを指定してしまうと既存のグループも削除されてしまうので-aオプションを追加すると良い
↓既存に所属しているグループはそのままでadmにも所属する
usermod -G adm -a testuser
参考リンク
http://oshiete.goo.ne.jp/qa/2390264.html </description>
    </item>
    
    <item>
      <title>古いノートにXfce4をインストール</title>
      <link>https://yaasita.github.io/2010/08/31/5897/</link>
      <pubDate>Tue, 31 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/31/5897/</guid>
      <description> aptitudeでそれらしいパッケージをインストール
x-window-system
xfce4
ウィンドマネージャにはSlimを採用した
あと追加で↓をインストールするとデスクトップ環境らしくなるらしい
xfce4-goodies
#tasksel install xfce-desktop

あとXfceから一般ユーザーが電源を切れるようにsudoをインストール
visudoでエディタを立ち上げてから
ALL ALL=(ALL) NOPASSWD: /usr/sbin/xfsm-shutdown-helper
を追加 (こことかに書いてあった)
あとは適当にフォント等をインストール
ttf-kochi-gothic
ttf-kochi-mincho
ttf-mscorefonts-installer
ttf-mscorefonts-installerはcontribパッケージなのでsources.listを編集すること
ちなみにDebian Lennyではdefomaでフォントを管理しているためxorg.confにFontPathを書く必要はない
日本語入力の設定はscim-anthyをインストールすれば
/etc/X11/xinit/xinput.d/配下に適当にインストールしてくれるのでOK
参考リンク
Xfce wiki
Xfce FAQ </description>
    </item>
    
    <item>
      <title>DTIのやってるVPS ServersManを試した</title>
      <link>https://yaasita.github.io/2010/08/30/5917/</link>
      <pubDate>Mon, 30 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/30/5917/</guid>
      <description> 使用感はとりあえずいい感じ
WebからOSの初期化とかワンボタンで出来る
とりあえずやったこと
1. sshの設定(パスワード認証の無効化）
2. yum update
3. /etc/sysconfig/i18n を修正 LANG=&#34;ja_JP.UTF-8&#34;　に変更
4. yum install man-pages-ja.noarch </description>
    </item>
    
    <item>
      <title>/etc/cron.daily/aptを使ってパッケージを自動更新</title>
      <link>https://yaasita.github.io/2010/08/25/5959/</link>
      <pubDate>Wed, 25 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/25/5959/</guid>
      <description> あれは日次でパッケージを自動更新するためのシェルスクリプトらしい
で使い方は
パッケージを自動更新したいのなら APT::Periodic::Update-Package-Lists &#34;1&#34;;という行を/etc/apt/apt.conf.d/70debconfの最後に記述すればOK
APT::Periodic::Download-Upgradeable-Packages &#34;3&#34;;を追加すれば３日おきにアップグレードできるパッケージをダウンロードだけするようになる
APT::Periodic::AutocleanInterval &#34;1&#34;;こうかけば自動的にキャッシュのクリアをしてくれる </description>
    </item>
    
    <item>
      <title>Debian でNFSを設定してみる</title>
      <link>https://yaasita.github.io/2010/08/25/5979/</link>
      <pubDate>Wed, 25 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/25/5979/</guid>
      <description> 1.nfs-kernel-serverをインストール
/etc/exportsを編集
/etc 192.168.0.0/255.255.255.0(ro)
※あとNFSのマウント側では同じUID同士でマッピングされるがrootだけはanonymousでマッピングされるため、no_root_squashをつける
詳しくは→man exports
2.リロード
exportfs -ra
showmount -e
3.クライアント側の設定
aptitudeとかでnfs-commonをインストール
4.マウント
mount 192.168.0.4:/tmp /mnt
5.アンマウント
umount /mnt
6.fstabに書く
192.168.0.4:/tmp /mnt nfs rw,user 0 0
mount -a
参考リンク
http://nawolets.blogspot.com/2009/11/debian-de-nfs.html
http://www.linux.or.jp/JF/JFdocs/NFS-HOWTO/server.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/367usenfs.html </description>
    </item>
    
    <item>
      <title>ext3の設定値を変更する</title>
      <link>https://yaasita.github.io/2010/08/23/6018/</link>
      <pubDate>Mon, 23 Aug 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/08/23/6018/</guid>
      <description> tune2fsというコマンドを使うみたいです。
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/760ext3chk.html </description>
    </item>
    
    <item>
      <title>bzrでvimdiffを使う</title>
      <link>https://yaasita.github.io/2010/07/19/6202/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6202/</guid>
      <description> 前回はWindowsで使う方法を紹介したが、Linuxで使う方法を紹介。
1.最新のリポジトリからソースを取得
bzr branch lp:bzr-vimdiff
2.ディレクトリへインストール
mkdir -p ~/.bazaar/plugins/vimdiff/
cp bzr-vimdiff/__init__.py ~/.bazaar/plugins/vimdiff/
3.使い方
例）リビジョン18から19までの差分を表示
bzr vimdiff -r18..19 cron.daily/ore_ntpdate
公式サイト
https://launchpad.net/bzr-vimdiff </description>
    </item>
    
    <item>
      <title>squid3を試してみた</title>
      <link>https://yaasita.github.io/2010/07/19/6181/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6181/</guid>
      <description> * Debian で squid3を試す
aptitudeとかでsquid3をインストール
以下squid.confの設定
1.アクセスリストlocalnetを有効化
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network 
2.cachemgr3.cgiを見るための設定と普通のアクセス設定
http_access allow manager localnethttp_access allow localnet
いずれもdenyの前に置くこと
3.ポートの変更
http_port 8080
4.各種設定
cache_mem 20 MB maximum_object_size_in_memory 256 KB
cache_dir ufs /var/spool/squid3 4000 32 256
maximum_object_size 18000 KB #icp_port 3130 #無効化
forwarded_for off
5.あとcachemgr.confも変更したポートに合わせる
localhost:8080
なんかあったらとりあえずログを見ること
/var/log/messages
/var/log/syslog
/var/log/squid3/*
※あと注意点
NetBIOS名で指定しないことcachemgr3を操作しようとしないこと
↓は駄目
http://jitaku:8000/cgi-bin/cachemgr3.cgi
↓はおｋ
http://192.168.0.11:8000/cgi-bin/cachemgr3.cgi
使った感想は特に昔と変わんないかな・・・ </description>
    </item>
    
    <item>
      <title>sshポートフォワード専用アカウントを作成したときのメモ</title>
      <link>https://yaasita.github.io/2010/07/19/6140/</link>
      <pubDate>Mon, 19 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/19/6140/</guid>
      <description>ここではそのポートフォワードだけのユーザ（制限ユーザをhoge）とする
1.ユーザの作成
useradd -s /bin/rbash -m hoge
passwd hoge
rbashを使うためには/etc/shellsに追加されていることを確認する
→参考
2.所有者,パーミッション,PATHの変更
cd /home/
chown -R root:root hoge/
chmod -R 755 hoge/
cd /home/hoge/
echo &#34;export PATH=&#39;&#39;&#34; &amp;amp;gt;&amp;amp;gt; .bashrc
3.chroot環境の構築
chroot環境のため必要なものをコピー
debian:/home/hoge# ls -l
合計 16
drwxr-xr-x 2 root root 4096 2010-07-19 17:49 bin
drwxr-xr-x 83 root root 4096 2010-07-19 17:48 etc
drwxr-xr-x 2 root root 4096 2010-07-19 17:49 lib
drwxr-xr-x 2 root root 4096 2010-07-19 17:50 lib64
4./etc/ssh/sshd_configを編集</description>
    </item>
    
    <item>
      <title>screenにウィンドウリストのタブを表示</title>
      <link>https://yaasita.github.io/2010/07/04/6244/</link>
      <pubDate>Sun, 04 Jul 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/07/04/6244/</guid>
      <description> .screenrcに以下を追記すればOKらしい
自分はcaptionよりもhardstatus alwayslastlineの方が良かったので
↓を使ってる(captionにするとバッファ毎にステータスラインができる)
hardstatus alwayslastline &#34;%{= wg} %-w%{=bu dr}%n %t%{-}%+w %= %{=b kw} %Y/%m/%d %0c&#34;

あと分割色を指定するために↓を書いておくといいかも
sorendition &#34;+rb .G&#34;

ちなみに自分の.screenrcはこんな感じ
 startup_message off
hardstatus alwayslastline &#34;%{= wg} %-w%{=bu dr}%n %t%{-}%+w %= %{=b kw} %Y/%m/%d %0c&#34;
sorendition &#34;+rb .G&#34;
vbell off

参考リンク
http://d.hatena.ne.jp/winebarrel/20070223/p4
http://www.tees.ne.jp/~sin-x/200406a.html#0102c
http://shyouhei.tumblr.com/post/313410522/screenrc </description>
    </item>
    
    <item>
      <title>モニタの電源をsettermでオフに出来ない場合</title>
      <link>https://yaasita.github.io/2010/06/18/6325/</link>
      <pubDate>Fri, 18 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/18/6325/</guid>
      <description> vbetool というのがあるらしい
https://forums.ubuntulinux.jp/viewtopic.php?id=3477
vbetool dpms offで画面消えた
普段はコンソールを使わないので/etc/init.d/rcの先頭に書いておいた
if [ &#34;$1&#34; = &#34;2&#34; ]
then
vbetool dpms off
fi

前回書いた方法でもできるけど場合によっては完全にきれないことがあるっぽい </description>
    </item>
    
    <item>
      <title>RAID1を利用してディスクコピー</title>
      <link>https://yaasita.github.io/2010/06/13/6366/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6366/</guid>
      <description> 例えば/dev/hdd1の内容を丸々/dev/hdd2にコピーしたいと思った場合
1.縮退モードでRAID1を構成する
mdadm -C /dev/md0 -l1 -n2 /dev/hdd1 missing
2.コピー先のhdd2をアレイに追加
mdadm /dev/md0 -a /dev/hdd2
3.アレイの再構築が終わるまで待つ
cat /proc/mdstat
4.アレイを停止
mdadm -S /dev/md0
5.super-blockを削除
mdadm --zero-superblock /dev/hdd[12]
ディスクコピー完了 </description>
    </item>
    
    <item>
      <title>sources.listを編集してunstableパッケージと混在させる</title>
      <link>https://yaasita.github.io/2010/06/13/6386/</link>
      <pubDate>Sun, 13 Jun 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/06/13/6386/</guid>
      <description> http://mikilab.doshisha.ac.jp/dia/research/report/2005/0811/001/report20050811001.html
↑を参考にして/etc/apt/sources.listに下記2行を追加
deb http://ftp.jp.debian.org/debian/ sid main contrib non-free
deb-src http://ftp.jp.debian.org/debian/ sid main contrib non-free/etc/apt/apt.conf.d/70debconfに下記を追加
APT::Default-Release &#34;stable&#34;;apt-getでunstableのパッケージをインストールするにはパッケージ名の後ろに
バージョンも明記するか、こんな感じで-tオプションとかあるらしい
apt-get install -s -t unstable hoge
で、aptitudeでやるには
パッケージ一覧を更新→パッケージを選択→下の方を良く見ると選べるようになってるのでそれ選択して+とか押す
↓の例だと1.5がstableで1.6がunstable  </description>
    </item>
    
    <item>
      <title>Debian LennyでSAMBAのnmbdが起動しない件</title>
      <link>https://yaasita.github.io/2010/05/22/6592/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6592/</guid>
      <description> Linuxでnmbdが起動しないときがある
でもsmbdは起動してる・・・・
/etc/init.d/sambaのスクリプトの中に
ps auxとか入れてみるとstart-stop-daemonは走ってるけどプロセスが始まらないみたい・・・
でいろいろ調べてるうちにこのフォーラムで話してたこれっぽい気がする
もうそういうことにしておこう面倒だし
Debianフォーラムでも話してるし
とりあえず
/etc/rc2.d/S99stop-bootlogd
の２０行目あたり（/etc/init.d/bootlogd stopの下）に
/etc/init.d/samba start
を追加しておいた </description>
    </item>
    
    <item>
      <title>init.dスクリプトの書き方</title>
      <link>https://yaasita.github.io/2010/05/22/6612/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6612/</guid>
      <description> http://surf.st.seikei.ac.jp/~nakano/linux/init.d.html </description>
    </item>
    
    <item>
      <title>Mercurialで変更ファイル一覧が見たいので1.5.2に上げてみた</title>
      <link>https://yaasita.github.io/2010/05/22/6572/</link>
      <pubDate>Sat, 22 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/22/6572/</guid>
      <description> ここからダウンロード
dpkg -i mercurial_1.5.2-1_amd64.debでもいいけど依存関係とかめんどくさいので今回はリポジトリの変更でやってみる
/etc/apt/sources.list
を編集し
deb http://ftp.jp.debian.org/debian/ lenny main contrib non-free
deb-src http://ftp.jp.debian.org/debian/ lenny main contrib non-free
となっているのを
deb http://ftp.jp.debian.org/debian/ sid main contrib non-free
deb-src http://ftp.jp.debian.org/debian/ sid main contrib non-free
と変更あとは
aptitudeでアップデートかければ新しいMercurialを使える
新しいバージョンだとヘルプとかが翻訳されていていい感じ
変更されたファイルの一覧を見るコマンドとかも追加されている
http://d.hatena.ne.jp/Decchi/20100213/1266078355 </description>
    </item>
    
    <item>
      <title>mdadmでメール送信メモ postfix</title>
      <link>https://yaasita.github.io/2010/05/16/6692/</link>
      <pubDate>Sun, 16 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/16/6692/</guid>
      <description> mdadmが動いているAサーバーからBサーバーに(relay)転送したい
とりあえず以下のように設定192.168.0.11が転送サーバーとする
relayhost = [192.168.0.11]:25
しかしsmtpd_helo_restrictionsが転送サーバーに設定されているため
Aサーバーのホスト名がFQDNでないため拒否されてしまう
1.↓のように設定する(中括弧を忘れずに)
mtp_helo_name = [192.168.0.5]
2.外部PGを使って動的に変更
参考リンク
milter_helo_macros
3.Bサーバーの方のsmtpd_helo_restrictionsを設定する
こことかここに書いてある
smtpd_helo_restrictions = permit_mynetworks,reject_non_fqdn_hostname
他にもcheck_helo_accessを設定する方法もある
ちなみにDebianの場合モニタモードで動いているプロセスは
ps aux | grep mdadm
で確認してみると分かる
/etc/init.d/mdadmの方を再起動すれば設定ファイルが読み込まれる
設定ができたら↓のコマンドで送信できるか試してみると良い
mdadm --monitor --scan --test -1 </description>
    </item>
    
    <item>
      <title>mdadmでRAID構築（まとめ)</title>
      <link>https://yaasita.github.io/2010/05/15/6713/</link>
      <pubDate>Sat, 15 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/15/6713/</guid>
      <description>RAIDの構築   fdisk等を用いてパーティションを作成
(このときのパーティションタイプはfd(Linux RAID)にしておくと分かりやすい)
 # mdadm -C /dev/md0 -l5 -n3 /dev/hdd[123]    -Cは新規作成時に指定するオプションで&amp;ndash;createと同じ意味
  /dev/md0は最終的に出来上がるRAIDデバイスを指定する（無くても勝手に作ってくれる）
  -l5はRAIDレベルを表す 0,1,5,6が指定可能 &amp;ndash;level=raid5と指定しても同じ意味
  -n3はデバイスの数(HDDの数) &amp;ndash;raid-devices=3と指定しても同じ
  /dev/hdd[123]はRAIDを構成するHDD この例では単一のHDDで構成しているが本当は/dev/hd[bcd]1みたいに物理的に違うデバイスを指定する
  スペアディスクの追加 # mdadm /dev/md0 --add /dev/hdd4  mdadm -D /dev/md0でスペアディスクが存在することを確認できる
RAIDの監視   procから見る
 cat /proc/mdstat (watch -n 1 cat /proc/mdstat　みたいにやると１秒ごとにこのコマンドを発行してくれるので便利)    詳細に見る
 mdadm -D /dev/md0    RAIDの再構築(HDD故障時の対処)   故障マークを付ける</description>
    </item>
    
    <item>
      <title>smbmountでWindowsの共有フォルダをマウントする</title>
      <link>https://yaasita.github.io/2010/05/09/6733/</link>
      <pubDate>Sun, 09 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/09/6733/</guid>
      <description> 想定する環境はSoukoドライブがフルアクセスで共有されている場合
コマンドラインからマウントするなら↓
smbmount //192.168.0.2/souko\ \(S\)/Linux/dump /mnt -o sec=none
/etc/fstabに書くなら↓
//192.168.0.2/souko\040(S)/Linux/dump /mnt smbfs rw,defaults,sec=none 0 0
ちなみに前回の時にはオプションに-o guestってやってたけどこれだと「Warning: mapping &#39;guest&#39; to &#39;guest,sec=none&#39;」というwarningが出るので直した
あとfstabのファイルパス中にスペースを入れる場合は\040と記述すればおｋ
man fstabより抜粋
 2 番目のフィールド (fs_file) は、ファイルシステムのマウントポイントを記
述する。スワップパーティションの場合、このフィールドは ‘none’ と明記 す
る必要がある。マウントポイントに含まれている空白は、‘\040’ のようにエス
ケープできる。

参考リンク
http://d.hatena.ne.jp/adsaria/20080114/1200328063
http://ksugita.blog62.fc2.com/blog-entry-23.html </description>
    </item>
    
    <item>
      <title>rsyncで差分バックアップ</title>
      <link>https://yaasita.github.io/2010/05/05/6794/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/05/6794/</guid>
      <description> rsyncで差分バックアップするにはcompare-dest、copy-dest、link-destのどれかを指定して前回のファイルを指定します。
たとえばしたのようにすると差分のあったファイルのみバックアップされます。
（なのでこのバックアップした時点のsorceフォルダを復元したいならdstにdst2を上書く）
rsync -av --delete-excluded --compare-dest=/root/dst/ /root/sorce/ /root/dst2/

↓のようにすると差分の無いファイルは転送を行わずに元ディレクトリdstからコピーします
ローカルコピーだとあまり意味はありません
rsync -av --delete-excluded --copy-dest=/root/dst/ /root/sorce/ /root/dst2/

↓のようにすると差分の無いファイルは前回のもののハードリンクになります
ディスク容量を節約できて便利です
rsync -av --delete-excluded --link-dest=/root/dst/ /root/sorce/ /root/dst2/

参考リンク
http://www.itmedia.co.jp/enterprise/articles/0804/25/news034.html </description>
    </item>
    
    <item>
      <title>dumpコマンドで取ったバックアップをリストア</title>
      <link>https://yaasita.github.io/2010/05/04/6836/</link>
      <pubDate>Tue, 04 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/04/6836/</guid>
      <description> バックアップしたシステムディレクトリを丸ごとリストアするには
インストールディスクでboot→レスキューモードを選択（Advanced optionsから選択できます）→「インストール環境内でシェルを実行」
/targetに選択したシステムディレクトリがあります。
fsckとかフォーマットとかやる
/targetに該当のフォルダを展開
/restoresymtableを削除しておわり
ディレクトリを移すときはcp -aを指定することcp -prだけでは不十分ハードリンク処理が不十分なので・・・詳しくはこちら
参考リンク
http://chiji.atnifty.com/server/other/ext3backuprestore.html
http://debian.fam.cx/index.php?install </description>
    </item>
    
    <item>
      <title>rsyncでバックアップしてみる</title>
      <link>https://yaasita.github.io/2010/05/04/6815/</link>
      <pubDate>Tue, 04 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/04/6815/</guid>
      <description> 想定する環境はシステムディレクトリが/として/mntに他のHDDがマウントされているときです
何も考えずに
rsync -av --delete / /mnt/201005004/みたいにしてしまうと
/mntにファイルを書き込んだものをrsyncがまたバックアップして・・・というようになりディスクが無駄になります
rsync -av --delete-excluded --exclude=&#39;/mnt/*&#39; / /mnt/201005004/このようにするとうまくいきます。
除外ファイルを/mntと指定してもできますがその場合ディレクトリが作成されないので一応このようにしました。
delete-excludedオプションは除外されたファイルを送信側で削除するオプションです。今回は意味がないですが、前回はあったが、今回は除外したファイルを削除したい！といったときに便利です。
delete-excludedオプションはdeleteオプションも含んでいます
あとこちらの方などの方法を見るとsysとprocディレクトリはバックアップしなくても大丈夫そうです。
実際にdumpで取ったフルバックアップファイルを見てもそこは空になっていました。
まとめると↓のコマンドでおｋ
# today=`date +%Y%m%d`
# mkdir $today
# echo &#34;- /sys/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# echo &#34;- /proc/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# echo &#34;- /mnt/*&#34; &amp;amp;gt;&amp;amp;gt; exc.txt
# rsync -a --delete --delete-excluded --exclude-from=/mnt/exc.txt / /mnt/20100505/※この/mntなどは第一引数で指定したディレクトリを/とみなした相対パスです。rsync -av --exclude-from=exc.txt /mnt /hogeなどとした場合は/mnt/mntが除外対象となります参考リンク
http://www.infoscience.co.jp/technical/rsync/rsync.html </description>
    </item>
    
    <item>
      <title>dumpコマンドでバックアップ</title>
      <link>https://yaasita.github.io/2010/05/03/6856/</link>
      <pubDate>Mon, 03 May 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/05/03/6856/</guid>
      <description>まず、この辺を参考にするとシングルユーザーモード→fsckをかけてからやるのが恒例みたいなので、その通りにやる
起動していないのならGRUBメニューのSingle User Modeを選ぶ
起動してないのなら↓のコマンドでランレベルを1に設定
# init 1; exit
あとは適当にumountしていくdevと/(ルート)以外をumountしたら↓のコマンドでリードオンリーで再マウント
# mount -r -n -o remount / 終わったら書き込みありで再マウント
# mount -w -n -o remount /
テープデバイスが無いのでファイルにバックアップなんか適当なディスク装置を/mntにマウントしているとして
# cd /mnt
# dump -0 -uf dump0.dat /
※-uオプションをつけることによってバックアップした日次を/var/lib/dumpdatesに記録している
※対象ディレクトリを/としているが/dev/hda1などと指定してもOK
DUMP IS DONEが出たら終わり
次に差分バックアップをする　↓のコマンドを参照
dump -1 -uf dump1.dat /
差分なのでファイルサイズも小さいし、時間も短いはずです
あと覚えておくといいオプションとして-zという圧縮オプションがあります
こんな感じで使用します
dump -z6 -0uf dump0.dat /dev/hda1
リストアにはrestoreコマンドを使います↓のコマンドで
差分ファイルを眺めることが出来ます
restore -tvf dump1.dat
リストア　※restoresymtableが必要なので必ずレベル0（フルバックアップしたものから展開して下さい）
restore -rf dump0.dat
まとめ
dumpコマンドはバックアップしてひとつのファイルにまとめてくれるというツールです。同じようなバックアップツールにrsyncがありますが、こちらと違うのはアーカイブしていくれるということ（rsync+tarのような動作）。追加されたファイルまで同期しないということです。例えばrestoreコマンドでリストアするときに既にあり、バックアップファイルには無いファイルを消すことは無いです。（フルバックアップした後にありレベル1バックアップの時点で削除されたファイルなどをリストアした場合はちゃんと消えます）
リストアはこちら
参考リンク</description>
    </item>
    
    <item>
      <title>Dovecotの認証方式をCRAM-MD5に変更する</title>
      <link>https://yaasita.github.io/2010/04/29/6938/</link>
      <pubDate>Thu, 29 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/29/6938/</guid>
      <description> dovecot.confを以下のように変更
auth default {
# Space separated list of wanted authentication mechanisms:
# plain login digest-md5 cram-md5 ntlm rpa apop anonymous gssapi
# NOTE: See also disable_plaintext_auth setting.
mechanisms = plain cram-md5
}

パスワードファイル指定
passdb passwd-file {
# Path for passwd-file
args = /etc/dovecot/cram-md5.pwd
}

あとは↑で指定した/etc/dovecot/cram-md5.pwdを作る
# dovecotpw Enter new password: password
Retype new password: password
{CRAM-MD5}26b633ec8bf9dd526293c5897400bddeef9299fad

↑で出たものを参考にし、/etc/dovecot/cram-md5.pwdを作成
usename:{CRAM-MD5}26b633ec8bf9dd526293c5897400bddeef9299fad

参考リンク
公式Wiki </description>
    </item>
    
    <item>
      <title>rep2をオンメモリーにして高速化2</title>
      <link>https://yaasita.github.io/2010/04/25/6959/</link>
      <pubDate>Sun, 25 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/25/6959/</guid>
      <description> タイトルはrep2の話ですが起動時、終了時のスクリプトの実行方法を書きます。
シャットダウンスクリプト、スタートアップスクリプトとも呼ばれます。
Linuxの起動、終了時の処理は/etc/inittabに書かれています。
例えばshutdown -r nowと再起動コマンドを実行した場合
ランレベルは6になりPCの電源が落ち、立ち上がったときに2になりますつまり
inittabの↓のが有効になり（書式についてはman inittab参照)
/etc/init.d/rc 6が実行されます(6という引数とともにrcスクリプトが実行されるという意味）
l6:6:wait:/etc/init.d/rc 6
次に2になった場合は
↓が有効になり/etc/init.d/rc 2が実行されます
l2:2:wait:/etc/init.d/rc 2
再起動の場合は6→2という遷移
停止の場合は0になって電源ボタンを押した後に2になります
停止の前にHDDにデータ（rep2）を退避し、
起動後にHDDからメモリに展開すればよさそうです
今回は/etc/init.d/rcの先頭に以下のスクリプトを仕込みました
if [ &#34;$1&#34; = &#34;0&#34; ] || [ &#34;$1&#34; = &#34;6&#34; ]
then
rsync -av --delete /dev/shm/rep2mem/ /var/www/rep2_bk/
elif [ &#34;$1&#34; = &#34;2&#34; ]
then
mkdir /dev/shm/rep2mem
rsync -av --delete /var/www/rep2_bk/ /dev/shm/rep2mem/
fi
/etc/init.d/rcに書かないでやる方法はこちら
参考リンク
http://wikiwiki.jp/disklessfun/?exec-cmd </description>
    </item>
    
    <item>
      <title>rep2をオンメモリーにして高速化</title>
      <link>https://yaasita.github.io/2010/04/24/6979/</link>
      <pubDate>Sat, 24 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/24/6979/</guid>
      <description> rep2をメモリ上に配置することによって高速化してみた (例のごとくDebian Lennyで・・・)
手順は/dev/shmにrep2をインストールする（インストール手順はこちら）
1.インストールしてdataフォルダ作る＋.htaccessを配置＋外部リンク設定
2.前回やったみたいにログ整理のスクリプトを設定
3./var/wwwがドキュメントルートなので/dev/shmにシンボリックリンクを張る（apache設定ファイルのOptionsにFollowSymLinksが設定されている必要がある）
4.rsyncでローカルディレクトリにバック日次で同期させる↓の様なスクリプトを書いた
#!/bin/bash
rsync -av --delete /dev/shm/rep2mem /var/www/rep2mem_bk5.システム終了時も行いたいので
/etc/init.d/rcの先頭にも↑の行を書いておく（参考リンク）
この起動時と終了時のメモリ退避＆戻しの話は長くなるのでこちらで話します
---
メモリに配置させるためあんまり容量がないためログ整理はやらなくてはならないので3の手順が必要
また、/dev/shmはメモリなのでPCが再起動などしてしまうと内容が消えてしまうため4からの手順が必要 </description>
    </item>
    
    <item>
      <title>重複ファイルを削除するfdupesというソフト</title>
      <link>https://yaasita.github.io/2010/04/05/6999/</link>
      <pubDate>Mon, 05 Apr 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/04/05/6999/</guid>
      <description> Debian Lennyで試した
↓で重複ファイルのリスト出力
$ fdupes -r /var/samba/tyouhuku/

↓で重複ファイルを自動削除
$ fdupes -d -N -r /var/samba/tyouhuku/

参考リンク
http://ubulog.blogspot.com/2009/01/ubuntu.html
その他重複ファイル探すソフト
http://en.wikipedia.org/wiki/List_of_duplicate_file_finders </description>
    </item>
    
    <item>
      <title>/procなどの情報ファイルを定期的に見るには</title>
      <link>https://yaasita.github.io/2010/03/14/7020/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7020/</guid>
      <description> ↓コマンドを打つと1秒毎に自動的にコマンドを発行し、フルスクリーンで実行してくれる。
watch -n 1 
たとえばこんな感じでRAID情報を見るとか
watch -n 1 cat /proc/mdstat </description>
    </item>
    
    <item>
      <title>mdadmでRAID1を構築</title>
      <link>https://yaasita.github.io/2010/03/14/7060/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/14/7060/</guid>
      <description> 基本的に↓に書いてあるとおりにやればできた
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/a060raid1.html
1.aptitudeでインストール
2.↓のコマンドでRAIDを構築（上記とは違いパーティション指定じゃなくてデバイス指定でやってみた）
mdadm --create /dev/md0 --level=raid1 --raid-devices=2 /dev/hdb /dev/hdd
3.md0は普通のデバイスなのでfdiskなりmkfsなり好きなようにする
4.↓のコマンドで停止
mdadm --misc --stop /dev/md0↓のコマンドで再構成
mdadm --assemble /dev/md0 /dev/hdb /dev/hdd
5.ここで
dd if=/tmp/crash.dat of=/dev/hdbと打ってHDDを破壊
6.下記コマンドでhdbに不良マークをつける
mdadm --manage /dev/md0 -f /dev/hdbそんでアレイから削除
mdadm --manage /dev/md0 -r /dev/hdbそんで（実際には交換して）アレイに追加
mdadm --manage /dev/md0 --add /dev/hdb
7.次回起動時も有効にするには？
なんかいろいろなサイトで/etc/mdadm/mdadm.confを手動で更新してたけど
バージョンの違いか分からないが勝手に編集されていた
今回試したバージョンは↓
mdadm - v2.6.7.2 - 14th November 2008
※watchコマンドを駆使すればcat /proc/mdstatが見やすくなる詳しくはこちら
参考リンク
http://masy.families.jp/diary/?20080815
http://hellokitty68.main.jp/wiki/Mdadm
http://www.ioss.jp/sohodiy/mdadm8-1_5.html </description>
    </item>
    
    <item>
      <title>root→一般ユーザにsuで入ったときにscreenが動かない</title>
      <link>https://yaasita.github.io/2010/03/10/7081/</link>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/10/7081/</guid>
      <description> なんでかは知らないけど
そういうものらしいです下記のエラーが出ます
Cannot open your terminal &#39;/dev/pts/0&#39; - please check.
こうやってSHLVLを上げると解決するらしい
script /dev/null
参考リンク
http://d.hatena.ne.jp/reboot66/20090612/p1 </description>
    </item>
    
    <item>
      <title>UNIXで空ファイルを作る方法いろいろ</title>
      <link>https://yaasita.github.io/2010/03/10/7101/</link>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/03/10/7101/</guid>
      <description> touch以外にもこんなにあった
http://d.hatena.ne.jp/japanrock_pg/?of=3 </description>
    </item>
    
    <item>
      <title>muttでキーバインドを変更するには？</title>
      <link>https://yaasita.github.io/2010/02/01/7369/</link>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2010/02/01/7369/</guid>
      <description> .muttrcを以下のように編集するとよい
bind &amp;amp;lt;map&amp;amp;gt; &amp;amp;lt;key&amp;amp;gt; &amp;amp;lt;function&amp;amp;gt;
&amp;amp;lt;map&amp;amp;gt; ... いつ使うかを記述 index,pagerなどを指定します。その状態の画面で？（ヘルプ）画面を出せばそこがどの画面か分かります。（ちなみにヘルプ画面はpagerです）
&amp;amp;lt;key&amp;amp;gt; ... 設定するキーを指定。指定方法はヘルプ画面と同様
&amp;amp;lt;function&amp;amp;gt; ... 実行する機能を記述。ヘルプ画面と同様。(next-line,previous-line等を指定)
で実際にはこんな感じで設定してる
vimみたいにjkで画面を上下させたいので・・・
.muttrc
 set folder=&#34;~/Maildir&#34;
set spoolfile=&#34;~/Maildir&#34;
set keep_flagged=yes
set mbox=&#34;&#34;
set postponed=&#34;/tmp/postponed&#34;
set sort=&#34;reverse-date-received&#34;
#スクロールして最後までいっても次のメッセージに飛ばない
set pager_stop=yes
#PAGERを変えたくなったらここに指定
#set pager=lv
#key bind setting
bind pager j next-line
bind pager k previous-line
bind pager J next-undeleted
bind pager K previous-undeleted
#Ctrl-Dで半ページスクロール下
bind pager &#34;\Cd&#34; half-down
#Ctrl-Uで半ページスクロール上
bind pager &#34;\Cu&#34; half-up

参考リンク
http://www12.atwiki.jp/linux2ch/pages/107.html </description>
    </item>
    
    <item>
      <title>Debian でIPアドレスを固定にする</title>
      <link>https://yaasita.github.io/2009/12/24/7531/</link>
      <pubDate>Thu, 24 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/24/7531/</guid>
      <description> /etc/network/interfacesを編集する
下みたいになっているのを
# The loopback network interface
auto lo
iface lo inet loopback
# The primary network interface
allow-hotplug eth0
iface eth0 inet dhcp
↓の様に直す（192.168.0.11）にする場合
# The loopback network interface
auto lo
iface lo inet loopback
# The primary network interface
allow-hotplug eth0
iface eth0 inet static
address 192.168.0.11
netmask 255.255.255.0
gateway 192.168.0.1
直したら
#ifdown eth0
#ifup eth0
でおｋ
# /etc/init.d/networking restart
でもいけるがその場合は↓を書いておくこと(ifup -aの対象となる)
auto eth0
※VirtualPCではallow-hotplugはコメントアウトしておいた方がよさげ
参考リンク
http://asaasa.tk/wiki/?Debian%2FSettings%2FStaticIP </description>
    </item>
    
    <item>
      <title>screenで開始するときの初期画面を表示しない</title>
      <link>https://yaasita.github.io/2009/12/23/7592/</link>
      <pubDate>Wed, 23 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/23/7592/</guid>
      <description> 免責事項とかCopyrightとかを表示しないようにするには
~/.screenrcに
startup_message offと書いておく </description>
    </item>
    
    <item>
      <title>bashで端末ロック機能を解除する</title>
      <link>https://yaasita.github.io/2009/12/20/7613/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7613/</guid>
      <description> Ctrl+Sを押すと端末がロックしてしまうのが不便だと感じたら
↓を.bashrcなどに書いておく
stty stop undef
参考リンク
http://www.mazn.net/blog/2007/12/17/42.html </description>
    </item>
    
    <item>
      <title>Debian LennyをVirtualPC2007へインストール</title>
      <link>https://yaasita.github.io/2009/12/20/7654/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7654/</guid>
      <description> 試した環境は以下の通り
VirtualPC 6.0.156.0
Debian Lenny 最小のCDイメージ　バージョンは5.0.3
↓のサイトとかを参考にするとどうやらインストール時にパラメータを追加しないといけないらしいので
http://hiro-system.blog.ocn.ne.jp/blog/2009/03/debian_lennyvir_5b2e.html
インストール時にquit を取ってから&#34;noreplace-paravirt vga=791 clock=pit&#34;を追加する
（インストール時はまだ日本語配列ではないので=イコールのタイプには注意する）
参考リンクには/boot/grub/menu.lstを編集、update-grubするようなことが書いてあるけどなんかインストール時に指定したパラメータが有効になって既にmenu.lstに反映されていたので省く。あとGUIも使わないのでそこら辺も無視した。
参考リンク
Debian Wiki </description>
    </item>
    
    <item>
      <title>rep2の過去ログをtmpreaperを使って整理</title>
      <link>https://yaasita.github.io/2009/12/20/7633/</link>
      <pubDate>Sun, 20 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/20/7633/</guid>
      <description>OpenJaneとかにはDAT落ちしたものを整理（削除）する機能があるけどrep2にはないのでtmpreaperで実装する
やり方はrep2/data直下にあるファイルはお気に入りとかなんで削除しない
それ以外は削除するっていう方法で行う
↓みたいなのをcronとかに保存しておけばいいんじゃないかな
#!/usr/bin/perl
use strict;
use warnings;
#### Initial Setting ###############
our $DAT_DIR=&#34;/var/www/rep2/data&#34;;
####################################
chdir ($DAT_DIR) or die $!;
unless ($DAT_DIR=~/\/$/){
$DAT_DIR.=&#34;/&#34;; #最後が/で終わってなかったら付け足す
}
opendir (DIR,$DAT_DIR) or die $!;
my @dir=readdir DIR;
my @fdir;
for (@dir){
push (@fdir,$_) if -f $_;
}
closedir DIR;
my $command;
$command = &amp;amp;lt;&amp;amp;lt; &#39;PRE&#39;;
nice -n10 tmpreaper --delay=30 --mtime-dir --symlinks 7d \
--showdeleted \
--mtime \
PRE
for (@fdir){
$command.=&#34;--protect &#39;$DAT_DIR&#34;.$_.&#34;&#39; \\\n&#34;</description>
    </item>
    
    <item>
      <title>DovecotのTrashフォルダはどこにあるのか？</title>
      <link>https://yaasita.github.io/2009/12/06/7759/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7759/</guid>
      <description> それぞれ~/Maildirの中のドットファイルでしたls -aしたら見つかります
/Maildir/.Sent
/Maildir/.Trash
/Maildir/.Drafts
/Maildir/.Junk </description>
    </item>
    
    <item>
      <title>メールをCUIで読むソフト mutt</title>
      <link>https://yaasita.github.io/2009/12/06/7738/</link>
      <pubDate>Sun, 06 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/06/7738/</guid>
      <description> インストールはDebian Lennyならaptitudeで簡単に入る
そんで使い方
基本的な使い方とかはこことか見れば大体分かる
Maildirを指定して
mutt -f ~/Maildirこれでとりあえず見れる
メールボックスとかは一々指定するのは面倒なので~/.muttrcを作成して
set folder=&#34;~/Maildir&#34;
set spoolfile=&#34;~/Maildir&#34;
set keep_flagged=yes
set mbox=&#34;&#34;
set postponed=&#34;/tmp/postponed&#34;
set sort=&#34;reverse-date-received&#34;
↑みたいなのを書いておく意味はここら辺を見るとわかるかも
設定ファイルを書けば以降はmuttのみで起動できる
mutt操作方法
PageUpとPageDownで次とか後のメールを選択（vim風にjkでもできるけど削除が選択できない）
?でヘルプ
mで新規メール作成
参考リンク
http://www.emaillab.org/mutt/whatis.html </description>
    </item>
    
    <item>
      <title>定期的に/tmpを掃除してくれるソフトtmpreaper</title>
      <link>https://yaasita.github.io/2009/12/05/7840/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/05/7840/</guid>
      <description> Debian Lennyで試した。
Red hat系だとtmpwatchとかあるみたいだけど無いのでこれを使う
まずはaptitudeでインストール
インストールすると/etc/cron.daily/tmpreaperが作成される
これによって毎日cronで実行される
設定はこれをいじってもできるが基本的には
/etc/tmpreaper.confをいじる
まずはワーニングが出るので13行目あたりにあるSHOWWARNINGをコメント化する
#SHOWWARNING=true

次にオプションを設定する各オプションの意味は以下の通り
TMPREAPER_TIME・・・どのくらいアクセスがないファイルを削除するか？設定値はデフォルトで7dつまり7d以上アクセスがないと削除
TMPREAPER_PROTECT_EXTRA・・・削除しては駄目な名前を指定
TMPREAPER_DIRS・・・削除の対象とするディレクトリ　デフォルトは/tmpのみ 複数指定するときはスペースで区切る　例）TMPREAPER_DIRS=&#39;/tmp/. /var/tmp/.&#39;
TMPREAPER_DELAY・・・実行するまで待つ時間　デフォルトは256秒
TMPREAPER_ADDITIONALOPTIONS・・・他に指定したいオプションがある場合はこここに入れる他のオプションはmanを参照
あと/etc/cron.daily/tmpreaper見れば分かるけど
デフォルトで
以下のオプションが設定されている。ヤバイファイルは消えないようにしているようだ
--protect &#39;/tmp/.X*-{lock,unix,unix/*}&#39; \
--protect &#39;/tmp/.ICE-{unix,unix/*}&#39; \
--protect &#39;/tmp/.iroha_{unix,unix/*}&#39; \
--protect &#39;/tmp/.ki2-{unix,unix/*}&#39; \
--protect &#39;/tmp/lost+found&#39; \
--protect &#39;/tmp/journal.dat&#39; \
--protect &#39;/tmp/quota.{user,group}&#39; \

※注意
デフォルトのシェルだと--ctimeが設定されています↓みたいに
nice -n10 tmpreaper --delay=$TMPREAPER_DELAY --mtime-dir --symlinks $TMPREAPER_TIME \
$TMPREAPER_ADDITIONALOPTIONS \
--ctime \
これだとcronでlocateのDBを作っているので、アクセスタイムが更新され
いつまで経っても削除されません。（ctimeオプションはatime+ctimeのチェックをします）
用途によってはここを--mtimeに変更してもいいと思います
 </description>
    </item>
    
    <item>
      <title>dovecotでQuota設定</title>
      <link>https://yaasita.github.io/2009/12/01/7882/</link>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/12/01/7882/</guid>
      <description> メールの容量を制限する（クォータの設定）するには？
Plugin settingsの部分に以下を追記
↓がグローバルなクォータ設定（ユーザー個別に設定すればそちらが優先される）
参考リンク→http://wiki.dovecot.org/Quota/1.0
plugin {
quota = maildir:storage=10240:messages=1000
}
上記の設定後
protocol imapに次の文を追記
参考リンク→http://wiki.dovecot.org/Quota/1.0
protocol imap {
mail_plugins = quota imap_quota
}
Thunderbirdで試すとクォータが有効なら↓のようなメッセージが出る

で、クォータ当てただけじゃ不便だから古いメッセージから自動で削除してくれるように設定するにはTrashプラグインを使う
protocol imap {
mail_plugins = quota imap_quota trash
}
plugin {
quota = maildir:storage=10240:messages=1000
trash = trash = /etc/dovecot/dovecot-trash.conf
}
さっき指定したdovecot-trash.conf　(無ければ作る）　を編集する
↓はTrashだけ削除の対象とする例
1 Trash
↑のファイルを1行つくればOK </description>
    </item>
    
    <item>
      <title>sshのポートフォワード専用アカウントを作ろう</title>
      <link>https://yaasita.github.io/2009/11/19/8067/</link>
      <pubDate>Thu, 19 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/19/8067/</guid>
      <description> まあ基本的にはrbashで制限付シェルのアカウントを作るだけ
参考リンク
http://blog.recyclebin.jp/archives/555 </description>
    </item>
    
    <item>
      <title>Linuxで電卓コマンド bc とは</title>
      <link>https://yaasita.github.io/2009/11/15/8108/</link>
      <pubDate>Sun, 15 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/15/8108/</guid>
      <description> 結構便利です
参考リンク
http://x68000.q-e-d.net/~68user/unix/pickup?bc
http://www.linux.or.jp/JM/html/GNU_bc/man1/bc.1.html </description>
    </item>
    
    <item>
      <title>起動するデーモンの調整　sysv-rc-conf</title>
      <link>https://yaasita.github.io/2009/11/11/8149/</link>
      <pubDate>Wed, 11 Nov 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/11/11/8149/</guid>
      <description> sysv-rc-confというパッケージを使えば
起動するデーモンのON/OFF切り替えがGUIで可能です
perlのライブラリに依存しているようです・・・
Debian Lennyで試した </description>
    </item>
    
    <item>
      <title>motdとmotd.tailの関係について（Debian Lenny）</title>
      <link>https://yaasita.github.io/2009/10/18/8290/</link>
      <pubDate>Sun, 18 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/18/8290/</guid>
      <description> /etc/motdは/var/run/motdへのシンボリックリンクです。
システムのboot時に/etc/init.d/bootmisc.shによって
uname -snrvm  /var/run/motd
[ -f /etc/motd.tail ] &amp;amp;&amp;amp; cat /etc/motd.tail  /var/run/motdと、上書きされます。
つまり、再起動後も有効にしたい場合は/etc/motd.tailを直しましょう
http://www.debian.org/releases/etch/hppa/release-notes/ch-information.ja.html </description>
    </item>
    
    <item>
      <title>vsftpdをinetd経由で動かす</title>
      <link>https://yaasita.github.io/2009/10/18/8269/</link>
      <pubDate>Sun, 18 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/18/8269/</guid>
      <description> なんかネット探してもみんなxinetdで動かしてるからinetdでの動かし方をメモ
１．/etc/vsftpd.confを以下のように変更
listen=NO

２．/etc/inetd.confに以下の記述を追加　※&amp;amp;lt;args&amp;amp;gt;の項は不要みたい

ftp stream tcp nowait root /usr/sbin/vsftpd

３．下記コマンドでinetdを再起動
/etc/init.d/openbsd-inetd restart
再起動／起動スクリプトの名前はopenbsd-inetdなので注意　前も書いたかも

あと最近はxinetdの方が主流みたいなので次はxinetdでやろうかな・・・
xinetdは単体でinetd + TCP wrapper(tcpd)の機能を持っているそうです
http://www.aconus.com/~oyaji/suse/vsftpd_suse.htm
http://www.express.nec.co.jp/linux/distributions/knowledge/network/xinetd.html </description>
    </item>
    
    <item>
      <title>/etc/crontabを修正したらcronデーモンの再起動は必要なの？</title>
      <link>https://yaasita.github.io/2009/10/17/8310/</link>
      <pubDate>Sat, 17 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/17/8310/</guid>
      <description> 必要ないそうです。
さらに cron は 1 分ごとにスプールディレクトリ(または /etc/crontab ファイル)の最終修正時刻(modtime)をチェックし、もし変更されていれば、すべての crontab ファイルの最終修正時刻をチェックし、変更された crontab ファイルを読み直す。よって crontab ファイルを修正するたびに cron を再起動する必要はない。 crontab(1) コマンドは、crontab ファイルが変更されたかどうかにかかわらず、スプールディレクトリの最終修正時刻を更新することに注意せよ。 
http://www.linux.or.jp/JM/html/cron/man8/cron.8.html </description>
    </item>
    
    <item>
      <title>既定のプログラムを設定するupdate-alternativesコマンド</title>
      <link>https://yaasita.github.io/2009/10/17/8330/</link>
      <pubDate>Sat, 17 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/17/8330/</guid>
      <description> 例えばデフォルトのエディターを指定するには
update-alternatives --config editor
って打ってリストから選択すればいいだけ
参考リンク
http://axela5004.blog74.fc2.com/blog-entry-298.html </description>
    </item>
    
    <item>
      <title>Linux(Debian)でログイン時に色々とメッセージを出す</title>
      <link>https://yaasita.github.io/2009/10/12/8411/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8411/</guid>
      <description> ・ログイン前の「login:」が出る時に表示されるメッセージを変更する場合→/etc/issue
・ログイン後に表示されるメッセージ（固定）を変更する場合→/etc/motd
・ログイン後に動的に表示したり設定を変更する場合→/etc/profile </description>
    </item>
    
    <item>
      <title>sambaでゴミ箱を設定する</title>
      <link>https://yaasita.github.io/2009/10/12/8370/</link>
      <pubDate>Mon, 12 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/12/8370/</guid>
      <description>http://www.atmarkit.co.jp/flinux/rensai/linuxtips/734recycle3.html
↑を見ればだいたい分かるけど
[global]
vfs objects = recycle
[hoge]
recycle:repository = /var/samba/gomibako/
recycle:keeptree = yes
recycle:touch = yes
recycle:versions = yes
recycle:maxsize = 0
hide files = /var/samba/gomibako/
※hide filesは隠しフォルダにするオプション
↑みたいに追加すればOK
後はゴミ箱のパーミッションを777にする
でも自動的に削除されないので・・・
削除できるようにする必要がある
cronとかに適当に↓とか登録しとけばいいんじゃないかな
#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
#### Initial Setting #######################
our $gomibako_dir=&#34;/var/samba/gomibako/&#34;;
############################################
say &#34;--- REMOVE GOMIBAKO (DIR = $gomibako_dir) ---&#34;;
chdir &#34;/var/samba/gomibako/&#34; or die $!;
system &#34;du -cah $gomibako_dir&#34;;
system &#34;rm -rf *&#34;</description>
    </item>
    
    <item>
      <title>Linuxのイースターエッグ</title>
      <link>https://yaasita.github.io/2009/10/10/8471/</link>
      <pubDate>Sat, 10 Oct 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/10/10/8471/</guid>
      <description> 参考記事とかみて分かった。
aptitude -v moo
aptitude -vv moo
みたいにvを足していくと変なのが出る
あとはapt-get mooとか </description>
    </item>
    
    <item>
      <title>rep2 機能拡張パックをLinux(Debian)にインストール</title>
      <link>https://yaasita.github.io/2009/09/26/8593/</link>
      <pubDate>Sat, 26 Sep 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/09/26/8593/</guid>
      <description>インストールはrep2と同じ
違うとところは「PEAR 詰め合わせ」を入れるくらい
やり方は↓
pear フォルダの中にある includes フォルダを rep2 フォルダに置く。
詳細なインストール方法はココを参照すれば分かる
その他　拡張版でのはまり所は↓
・AASを使うにはそれだけ有効にしても意味が無い　アクティブモナーも有効にすること
有効にする箇所は以下のとおり（行の順番は適当）
/var/www/rep2ex/conf/conf_admin_ex.inc.php
// AAS による AA プレビュー（off:0, on:1）
$_conf[&#39;expack.editor.with_aas&#39;] = 1; // (0)
// AAS（off:0, on:1）
$_conf[&#39;expack.aas.enabled&#39;] = 1; // (0)
// {{{ アクティブモナー
// AA 補正（off:0, on:1）
$_conf[&#39;expack.am.enabled&#39;] = 1; // (0)
// }}}
// {{{ 入力支援
// ActiveMona による AA プレビュー（off:0, on:1）
$_conf[&#39;expack.editor.with_activemona&#39;] = 1; // (0)
// AAS による AA プレビュー（off:0, on:1）</description>
    </item>
    
    <item>
      <title>Linux(Debian Lenny)で電源ボタン押下時の設定をする</title>
      <link>https://yaasita.github.io/2009/06/09/9402/</link>
      <pubDate>Tue, 09 Jun 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/06/09/9402/</guid>
      <description> ふと、Debian稼動中に電源ボタンを押したらキチンとしたシーケンスでシャットダウンされたのでそこら辺の設定ってどうなってるのよー？って思ったのでメモ
/etc/acpi/events/powerbtn
ってファイルで設定できるみたいね
詳しくは以下のサイトを参照下さい
http://www.watanet.org/~chihiro/index.cgi/linux/ubuntu/20090210_ubuntu-powerbtn-hibernate.html </description>
    </item>
    
    <item>
      <title>コンソールの設定をする setterm</title>
      <link>https://yaasita.github.io/2009/03/22/9910/</link>
      <pubDate>Sun, 22 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/22/9910/</guid>
      <description> 前回も話したけどその続き、
前回までの課題はログインしないとsettermを実行できないこと
実行前にsettermするにはDebianだと&#34;/etc/console-tools/config&#34;を修正する

BALNK_TIME=N (N:0-60: 放置してから画面を暗転させるまでの分数)
BLANK_DPMS=on (画面の省電力モードをサスペンドモードにセット *1)
POWERDOWN_TIME=N (N:0-60: 暗転してからモニタの電源を切るまでの分数)
(*1 BLANK_DPMS=powerdown とした場合サスペンドモードを経由せずBLANK_TIMEで設定した時間でモニタの電源断)

だそうです。
参考リンク
http://blogs.yahoo.co.jp/debilman01/860916.html </description>
    </item>
    
    <item>
      <title>squidを設定する時に気をつけること・・・</title>
      <link>https://yaasita.github.io/2009/03/08/10074/</link>
      <pubDate>Sun, 08 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/08/10074/</guid>
      <description> なんか色々みたけど難しくてよー分からん。
↓くらい気にしとけばいいんでないの
・メモリ領域 (cache_mem)
・メモリに置くオブジェクトサイズ　（maximum_object_size_in_memory)
・HDDに置くサイズ　（cache_dir）
・HDDに置くオブジェクトサイズ（maximum_object_size）
・オブジェクトサイズの平均値（store_avg_object_size）
・速いDNSサーバー( dns_nameservers )
あとはcachemgr.cgiとか参照してください(debianだとsquid-cgiパッケージに同梱） </description>
    </item>
    
    <item>
      <title>squidをweb経由で設定する</title>
      <link>https://yaasita.github.io/2009/03/02/10135/</link>
      <pubDate>Mon, 02 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/02/10135/</guid>
      <description> squid-cgiをaptかなんかでインストールしてください
そんでsquid.confにある
cachemgr_passwd
あたりを参照して適当に設定してください
あとは
http://自分の鯖/cgi-bin/cachemgr.cgi
あと/etc/squid/のなかにあるcachemgr.confのポート番号も直すこと
あとアクセスリストとか・・・↓参照で・・・
でおｋ
参考リンク
http://swkoji.blog63.fc2.com/blog-category-8.html
http://perltips.twinkle.cc/server/squid_cachemgr.php </description>
    </item>
    
    <item>
      <title>sambaの設定でmaskがうまくいかない</title>
      <link>https://yaasita.github.io/2009/03/01/10157/</link>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/03/01/10157/</guid>
      <description> create mask = 777
ってしても実行権限が外れてしまう・・・
でも、そういう仕様らしい
↓参考
http://roserogue.blogspot.com/2007/08/create-mask775.html </description>
    </item>
    
    <item>
      <title>debian lennyを入れたらpstreeどっかいった</title>
      <link>https://yaasita.github.io/2009/02/22/10218/</link>
      <pubDate>Sun, 22 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/22/10218/</guid>
      <description>つpsmisc</description>
    </item>
    
    <item>
      <title>ちょっとsshの鍵認証についてまとめておこうか</title>
      <link>https://yaasita.github.io/2009/02/22/10198/</link>
      <pubDate>Sun, 22 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/22/10198/</guid>
      <description> 設定は/etc/ssh/sshd_config
下は推奨設定
AllowUsers hogehoge
Port 443
PasswordAuthentication no
PermitRootLogin no
PermitEmptyPasswords no
ssh-keygen -t rsa
で作る
/home/hogehoge/.ssh/id_rsaに保存
パスフレーズも決める
id_rsa 秘密鍵
id_rsa.pub 公開鍵
公開鍵(id_rsa.pub)は
~/.ssh/authorized_keys
にリネームする
秘密鍵はクライアントに転送
クライアントがLinuxの場合は
~/.ssh/id_rsa
と置く
クライアントがWindowsの場合は
puttygen.exeを起動Loadを押して
id_rsaを読み込ませパスフレーズを入力→
変換後はprivatkeyとして保存（ppkファイル）
ログインの際は
ssh -p 2200 hogehoge@hoge.com
みたいな感じ
id_rsa（秘密鍵）を指定する場合は
ssh -p 2200 -i hoge.rsa hogehoge@hoge.com
みたいにする
参考URL
http://www.jitaku-server.net/ssh_crypto.html
http://kazmax.zpp.jp/linux/lin_sshrsa.html </description>
    </item>
    
    <item>
      <title>コンソール環境でモニタの電源を切るには</title>
      <link>https://yaasita.github.io/2009/02/22/10238/</link>
      <pubDate>Sun, 22 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/22/10238/</guid>
      <description> Debian Lennyで試した
ディスプレイを自動的にきる設定
$ setterm -powersave on -powerdown 1
とかしておくといいらしい
あと↓も必要だと思う
$ setterm -blank 1
起動時に自動的にこの設定をするにはこちら
参考リンク
http://osdir.com/ml/linux.debian.jp.user/2004-02/msg00035.html
http://www.atmarkit.co.jp/flinux/rensai/linuxtips/251stopconsuspnd.html </description>
    </item>
    
    <item>
      <title>lessとかページャーの設定メモ</title>
      <link>https://yaasita.github.io/2009/02/02/10380/</link>
      <pubDate>Mon, 02 Feb 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/02/02/10380/</guid>
      <description> lessのエンコードを指定する変数LESSCHARSET
例
export LESSCHARSET=dos
そんでデフォルトのページャーを変更する
export PAGER=less
参考サイト
http://d.hatena.ne.jp/n-kaneshige/20081202/1228194177 </description>
    </item>
    
    <item>
      <title>ubuntu8.10のsambaについて</title>
      <link>https://yaasita.github.io/2009/01/02/10564/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2009/01/02/10564/</guid>
      <description> なんか/etc/samba配下の設定漁ってもGUIで設定した箇所について書かれてないなーと思ったら
/var/lib/samba配下にあった
なんでだろうね　まあそういうことです </description>
    </item>
    
    <item>
      <title>iptablesで設定したルールを再起動後も反映したい</title>
      <link>https://yaasita.github.io/2008/12/31/10585/</link>
      <pubDate>Wed, 31 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/31/10585/</guid>
      <description>どこに書けばいいのでしょうか？　＞ Debian , Ubuntu
正解は/etc/network/if-pre-up.d
iptables-restoreコマンドをうまいこと駆使してやってください
まあ後はiptablesのメモ
最初に決めるルールINPUTは入ってくパケットOUTPUTは出て行くパケット
FORWARDは転送するパケット
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
全てのルールをクリア
iptables -F
すべてのユーザー定義もクリア
iptables -X
パケットカウンタもクリアしたいなら
iptables -Z iptables -A INPUT -p tcp --dport 4000:4999 -s ! 192.168.0.0/24 -j DROP
↑の例だと192.168.0.0/24以外のネットワークから来たパケットで4000から4999ポートを指定
しているものを削除
※注意 --dportは-p tcpが指定されていない場合は使えない（udpでも良いけど)
現在のルールを表示
iptables -L
最終的にはこんな感じで
#!/bin/bash
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -F
#iptables -A INPUT -p tcp --dport 4000:4999 -s !</description>
    </item>
    
    <item>
      <title>Drupalをubuntu8.10にインストール</title>
      <link>https://yaasita.github.io/2008/12/25/10628/</link>
      <pubDate>Thu, 25 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/25/10628/</guid>
      <description> １．環境設定
LAMP入れとけばおｋ
２．mySQLでテーブル作成
# mysql -u root -p
mysql&amp;amp;gt; create database drupal;
↑データベース名
mysql&amp;amp;gt; grant select,insert,update,delete,create,drop,index,alter,create temporary　tables,lock tables on drupal.* to root@localhost identified by &#39;drupal&#39;;
↑の例だとrootってユーザーでパスワードはdrupal
mysql&amp;amp;gt; flush privileges;
３．webからごにょごにょ設定
http://drupal.jp/drupal6/quick_start </description>
    </item>
    
    <item>
      <title>.bashrcを作っても読み込まないよー＞＜</title>
      <link>https://yaasita.github.io/2008/12/21/10753/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10753/</guid>
      <description>そんなときは.profileを作ればいいのさ
こんな感じで・・・
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.
# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022
# if running bash
if [ -n &#34;</description>
    </item>
    
    <item>
      <title>ubuntu8.10にはgnump3dパッケージが無いんだ</title>
      <link>https://yaasita.github.io/2008/12/21/10732/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10732/</guid>
      <description> やあ （´・ω・｀) ようこそ、Ubuntu8.10へ。
うん、「また」なんだ。
つーわけでgnump3dを入れるとなると自分でソースからビルドするか、debパッケージを探すかになります。
http://packages.ubuntu.com/
しょうがないので↑から適当に選ぶ「Search package directories」にgnump3dを入れて、Distributionは一個前のhardyを選択
一個前だとあるんだね・・・なんでレポジトリから消えたかは知らないけど・・・・
http://packages.ubuntu.com/hardy/gnump3d
まあダウンロードしたらGUIからでもdebファイルをインストールすると良いよ。GUI無い人はこんな感じでインストールすると良いんじゃない？
# dpkg -i gnump3d_3.0-2_all.deb
参考リンク
debパッケージをインストールする </description>
    </item>
    
    <item>
      <title>ここら辺でsquidのconfをまとめようか</title>
      <link>https://yaasita.github.io/2008/12/21/10711/</link>
      <pubDate>Sun, 21 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/21/10711/</guid>
      <description>acl all src all
acl manager proto cache_object
acl localhost src 127.0.0.1/32
acl to_localhost dst 127.0.0.0/8
acl localnet src 10.0.0.0/8 # RFC1918 possible internal network
acl localnet src 172.16.0.0/12 # RFC1918 possible internal network
acl localnet src 192.168.0.0/16 # RFC1918 possible internal network
acl SSL_ports port 443 # https
acl SSL_ports port 563 # snews
acl SSL_ports port 873 # rsync
acl Safe_ports port 80 # http
acl Safe_ports port 21 # ftp</description>
    </item>
    
    <item>
      <title>manコマンドの出力をtxtにする</title>
      <link>https://yaasita.github.io/2008/12/19/10793/</link>
      <pubDate>Fri, 19 Dec 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/12/19/10793/</guid>
      <description> man uptime | col -bfx &amp;amp;lt; uptime.txt
こんな感じでおｋ </description>
    </item>
    
    <item>
      <title>aptitudeコマンドまとめ</title>
      <link>https://yaasita.github.io/2008/09/21/11184/</link>
      <pubDate>Sun, 21 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/21/11184/</guid>
      <description> http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html </description>
    </item>
    
    <item>
      <title>postfixで設定されている環境変数を列挙する</title>
      <link>https://yaasita.github.io/2008/09/07/11349/</link>
      <pubDate>Sun, 07 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/07/11349/</guid>
      <description> postconf
でおｋ
デフォルトの設定値は↓で確認
postconf -d </description>
    </item>
    
    <item>
      <title>bashでCtrl-S押すと端末がロックされる</title>
      <link>https://yaasita.github.io/2008/09/06/11370/</link>
      <pubDate>Sat, 06 Sep 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/09/06/11370/</guid>
      <description>Ctrl-Qで解除だそうで</description>
    </item>
    
    <item>
      <title>ddclientでDynDNSのIPをアップデートしてみようか</title>
      <link>https://yaasita.github.io/2008/08/24/11411/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/24/11411/</guid>
      <description> aptでインストールして初期設定して
まだ足りないとこあるから
dpkg-reconfigure ddclient
打って再設定。デーモンで動かさないようにする。
そんで/etc/ddclient.confを編集
use=if
になってるけどこれだと自分のIPアドレス（プライベートアドレス）を通知してしまうので、
use=web
にして回避させる。
あとは普通に
ddclient
と打てばアップデートされる
cronか何かに登録しておくといいかも
参考サイト
http://tinstoy.jugem.jp/?eid=13 </description>
    </item>
    
    <item>
      <title>ファイル、ディレクトリの新規作成時のデフォルトのパーミッションを変更するには</title>
      <link>https://yaasita.github.io/2008/08/24/11433/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/08/24/11433/</guid>
      <description> umaskってコマンドを使います。
引数なしの
umask
で現在のパーミッションの確認
umask 0027
のように打つことで次回以降のファイルやディレクトリ作成時のデフォルトパーミッションの変更が出来ます
上記の例だと
ディレクトリだと下記のように
drwxr-x---
ファイルだと下記のようになります
-rw-r-----
※ファイルの場合は最初から実行権限を付与しません
参考リンク
http://linuxtips.biz/030/post_19.html </description>
    </item>
    
    <item>
      <title>lsofでどのプロセスがどのファイルシステムを使用中か調べる</title>
      <link>https://yaasita.github.io/2008/07/30/11473/</link>
      <pubDate>Wed, 30 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/30/11473/</guid>
      <description> lsof /media/cdrom
みたいに
プロセスが使用中のファイルも見れる 参考リンク
http://d.hatena.ne.jp/hogem/20070223/1172221315 </description>
    </item>
    
    <item>
      <title>x11vncのリバースコネクトについて</title>
      <link>https://yaasita.github.io/2008/07/27/11493/</link>
      <pubDate>Sun, 27 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/27/11493/</guid>
      <description>http://www.karlrunge.com/x11vnc/#faq-reverse-connect</description>
    </item>
    
    <item>
      <title>puttyで起動時の引数を指定してすぐにコンソールを開く</title>
      <link>https://yaasita.github.io/2008/07/20/11536/</link>
      <pubDate>Sun, 20 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/20/11536/</guid>
      <description> -load　オプションを起動時の引数に与えてやればいいと思います。
詳しくはこちらの 3.8.1 Starting a session from the command line
を見てもらえれば分かると思います。

参考サイト
http://p0t.jp/archives/2006/09/1.html </description>
    </item>
    
    <item>
      <title>zshを使おうか</title>
      <link>https://yaasita.github.io/2008/07/12/11579/</link>
      <pubDate>Sat, 12 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/12/11579/</guid>
      <description> まずzshの強力な補完機能を有効にする

autoload -U compinit
compinit

そんでキーバインドをvi風にする

bindkey -v

あとプロンプトを変えておく

PROMPT=&#34;%/%%&#34;

テトリスもできるらしい

zsh
autoload -U tetris
zle -N tetris
bindkey &#39;^T&#39; tetris

Control-T を押せばゲーム開始。zsh最強。 </description>
    </item>
    
    <item>
      <title>＠wikiのデータバックアップをperlで自動化してみる</title>
      <link>https://yaasita.github.io/2008/07/05/11641/</link>
      <pubDate>Sat, 05 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/05/11641/</guid>
      <description>まず、ブラウザから保存までの過程を行い、パケットをキャプチャします。
今回、対象とするサイトはこちらです。キャプチャはWiresharkなどでも良いですが、今回はTCPのフローまで見る必要はありません。HTTPのリクエストヘッダさえ分かれば大丈夫なので、Live HTTP Headersなどで見たほうが便利です。（このソフトを使えばHTTPリクエストをGUI上で自由に変更できます。どのヘッダが必要か不要かも分かるので便利です）で、キャプチャしたものが以下のものです↓
Content-Length以下にはwikiidとpassというパスワードを送っています。submitのURLエンコードは「ダウンロード」という文字列を表しています。
ちなみにwikiidの項とpassの項とCookieは適当です。
POST /_mng/backup.php HTTP/1.1
Host: www34.atwiki.jp
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.9) Gecko/2008052906 Firefox/3.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: ja,en-us;q=0.7,en;q=0.3
Accept-Encoding: gzip,deflate
Accept-Charset: Shift_JIS,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Referer: http://www34.atwiki.jp/_mng/backup2.php
Cookie: PHPSESSID=5684723debae48752efea5555565acdd
Content-Type: application/x-www-form-urlencoded
Content-Length: 93
wikiid=***********&amp;amp;amp;pass=*******&amp;amp;amp;submit=%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89


次にLive HTTP Headersのリプレイ機能を使って必要なヘッダが何かを判断します。まずCookieが必須かどうかを調べる必要があります。なぜならCookieが必要だった場合はCookie取得の処理が追加されるからです。いらなそうなヘッダを削除→リプレイで目的の結果になるかを確認　を繰り返してください。で、調べた結果、不要だということが分かりました。つまりPerlスクリプトではCookieヘッダは発行しません。ちなみにこの鯖はContent-Typeを指定しないとトップに戻されるようです。
-------------- wiki_back.pl ----------------------------------
#!/usr/bin/perl
use Net::HTTP;
### Initial Setting ###########################
$server =&#34;www34.atwiki.jp&#34;;
###############################################
$header{&#39;Host&#39;} = &#34;$server&#34;;
$header{&#39;User-Agent&#39;} = &#39;Mozilla/5.0 (Windows; U; Windows NT 5.</description>
    </item>
    
    <item>
      <title>vimだとCtrl&#43;Hでバックスペースが入るお</title>
      <link>https://yaasita.github.io/2008/07/04/11663/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/04/11663/</guid>
      <description> :h i_^Hで確認してみよう
bashのキーバインドをviにしている人も試してみてください
あと
追記：なんか世間一般的にそうなってるみたいです。なにもvimに限った事ではないのかも
Ctrl+M・・・Enter
Ctrl+H・・・BackSpace
Ctrl+I・・・Tab </description>
    </item>
    
    <item>
      <title>必要ないモジュールをアンロードしてみてはいかが？</title>
      <link>https://yaasita.github.io/2008/07/04/11684/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/07/04/11684/</guid>
      <description> 必要ないモジュールはアンロードしておくのが吉ですよ
たとえばUSBのohci_hcdはなぜだかwakeupを繰り返しカーネルのログに吐き出し
やたらリソースを食っていました。
/etc/modprobe.d/blacklistに以下を追加しました。
blacklist trident
blacklist ac97_codec
blacklist joydev
blacklist gameport
blacklist ohci_hcd
blacklist usbcore
blacklist ide_cd
blacklist cdrom
blacklist pcspkr
blacklist psmouse
blacklist parport_pc
blacklist parport
blacklist snd_ali5451
blacklist snd_ac97_codec
blacklist snd_ac97_bus
blacklist snd_pcm
blacklist snd_timer
blacklist snd
blacklist soundcore
blacklist snd_page_alloc
※注意
参考サイトに書いてあったのですが書いただけではなく
update-initramfs -u
コマンドでロードイメージを更新する必要があるようです

モジュールのロード、アンロードについては前回書きました。
参考
Debianインストール覚え書き </description>
    </item>
    
    <item>
      <title>sambaで接続が切れる問題</title>
      <link>https://yaasita.github.io/2008/06/30/11786/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11786/</guid>
      <description> socket options = IPTOS_LOWDELAY SO_RCVBUF=1000 SO_SNDBUF=1000
バッファリングが多すぎたみたい
低スペックなPCだとNODELAYは辛いようだ
socketオプションは↓を参照
http://www.linux.or.jp/JM/html/LDP_man-pages/man7/socket.7.html </description>
    </item>
    
    <item>
      <title>sysctlでカーネルパラメータのチューニング</title>
      <link>https://yaasita.github.io/2008/06/30/11745/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11745/</guid>
      <description> 前回、前々回でバッファが重要みたいなことを言いました。
個々のソフトでバッファサイズを調整するのは煩わしいので今度はカーネル側でやろうと思います。つーか本当の動機はvsftpdではバッファサイズの調整が出来ないっぽいからですけど・・・
/etc/sysctl.confを編集します
net.ipv4.tcp_rmem=500 1500 5000
net.ipv4.tcp_wmem=500 1500 5000
↑の2行を追加します。上が受信バッファ、下が送信バッファです多分
なんで3つの値を渡しているかはこちらを参照してください
そんで書いたらこんな感じでパラーメータを設定して下さい
sysctl -p
でおｋね
まあ/proc以下をechoで飛ばして設定しても良いんですが再起動すると戻ってしまうので・・・・ </description>
    </item>
    
    <item>
      <title>自宅鯖のapache2をチューニング</title>
      <link>https://yaasita.github.io/2008/06/30/11765/</link>
      <pubDate>Mon, 30 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/30/11765/</guid>
      <description> Sambaの件でバッファリングが大きすぎてサーバー側で処理できなくなる→切断となっていることに気づいたのでもしかするとapache2で大きいファイルを落とすときに切れる現象も同じなんじゃないかなと思ってチューニングしてみる。
受信バッファサイズと送信バッファサイズを調整して鯖が落ちるのを止める。
俺はhttpd.confに↓を書いた。でおｋだった。
SendBufferSize 4000
ReceiveBufferSize 1500
具体的にどうコネクションが切れるか検証してないけど多分こんな感じだと思う
クライアント「オラオラ・・・もっとパケット送るぜー！ウィンドサイズはでかいからなーｗ」
サーバー「ちょｗｗｗおまｗｗｗ待ってくれそんな処理しきれｗｗｗ」
（ただいまサーバーがシーケンシャルナンバーの整理などしておりますしばしお待ちください）
クライアント「おかしいな？返事がない・・・しかたないコネクション切るか」
サーバー「ふう・・・終わったぜ！さあパケット返そうかな・・・ってコネクション切れてるしｗｗｗｗ」
みたいなノリだと思う
まあバッファの調整はマシンのスペックを見て調整しましょってことで </description>
    </item>
    
    <item>
      <title>aptitudeでインストールすると推奨パッケージも入れてしまう</title>
      <link>https://yaasita.github.io/2008/06/29/11869/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11869/</guid>
      <description> apt-get installだとインストールしなんだよね・・・なんかお節介でヤダ
上のほうのメニューから外せるそうですよ

 </description>
    </item>
    
    <item>
      <title>aptitudeのフラグの意味</title>
      <link>https://yaasita.github.io/2008/06/29/11890/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11890/</guid>
      <description> ここに書いてあった
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s02s02.html
ちなみにAは自動的にインストールされたか動画を表すんだって </description>
    </item>
    
    <item>
      <title>LinuxでS.M.A.R.T情報を表示する</title>
      <link>https://yaasita.github.io/2008/06/29/11910/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11910/</guid>
      <description>aptかなんかでsmartmontoolsをインストール
# smartctl -a /dev/hda  これで見れるらしい↓の方が見やすいかも
# smartctl -A /dev/hda  参考サイト
項目の詳しい説明は下記のwkipedia参照
http://ja.wikipedia.org/wiki/Self-Monitoring,_Analysis_and_Reporting_Technology
Windowsだとこんなものもあるらしい
CrystalDiskInfo</description>
    </item>
    
    <item>
      <title>Linuxでログイン時に表示されるメッセージを変える</title>
      <link>https://yaasita.github.io/2008/06/29/11827/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11827/</guid>
      <description>ここ
に書いてありました
/etc/motdを編集すればいいだけです簡単ですね
CJKにしないとモナーとかズレるからどうしようかなーと思って
boxesからAAを拝借こんなのいれてみた
boxes -d mouseね
 .--, .--, ( ( \.---./ ) ) &#39;.__/o o\__.&#39; {= ^ =} &amp;amp;gt; - &amp;amp;lt; __.&amp;quot;&amp;quot;`-------`&amp;quot;&amp;quot;.__ / \ \ Debian / / \ \___________________/ ___)( )(___ (((__) (__)))  </description>
    </item>
    
    <item>
      <title>sambaを入れてみよう</title>
      <link>https://yaasita.github.io/2008/06/29/11847/</link>
      <pubDate>Sun, 29 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/29/11847/</guid>
      <description> aptかなんかでインストール
/etc/samba/smb.confを直そうか
[global]
unix charset = UTF-8
dos charset = CP932
display charset = UTF-8
まず↑の設定を確認unix charsetは環境に合わせてどうぞ
workgroup = MSHOME
次にワークグループを合わせて
security = share
セキュリティをshareにした。パスワード求められるとウザイので・・・
でもこれだとvistaとかだと問題になるそうです　XPの場合は大丈夫らしいけど
guest account = ageftp
あとはゲストアカウントを誰にするかを決める。
[upload]
path = /var/www/upload/
available = yes
browsable = yes
public = yes
writable = yes
read only = no
create mask = 0777
printable = no
guest ok = yes
あとは適当にどうぞ
ここで別にゲストアカウントを誰々って決めなくても良いんですが、
じつはこの/var/www/uploadディレクトリはftpのanonymousログインを
許可しているのでotherのパーミッションに書き込みを与える事が出来ないのです </description>
    </item>
    
    <item>
      <title>Linuxでよく使われるscreenを今更使ってみた</title>
      <link>https://yaasita.github.io/2008/06/27/11951/</link>
      <pubDate>Fri, 27 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/27/11951/</guid>
      <description> つーわけでメモ
aptかなんかでサクッとインストールしてscreenで起動します。
まずコマンドはプレフィックスキー（コマンド前に毎回入力するキー）がいります。そんでデフォルトのプレフィックスキーはCtrl+aです。
Ctrl+a ?でヘルプ見れます。
コマンド一覧　プレフィックスキーは省略
c　新しい端末を開く
&#34;　画面リストの表示
n　次の画面へ
p　前の画面へ
n nの端末へ移動(nは端末番号)
S 画面分割 大文字のSなのでshiftと共に押す！
\　バックスラッシュ　全てを破棄してscreenを終了
Ctrl＋i　ウィンド間の移動
X　ウィンドウのクローズ　大文字のX！
[　コピーモードの開始　開始地点、終了地点でエンターかスペース
]　ペースト
:resize -10　ウィンドのリサイズ。-10だと縮める10広げるみたいな感じ
d　デタッチ
screen -r でデタッチした端末をアタッチ
screen -ls　で端末一覧表示 </description>
    </item>
    
    <item>
      <title>Linuxコマンド　ログイン関連　faillog,lastlog</title>
      <link>https://yaasita.github.io/2008/06/27/11931/</link>
      <pubDate>Fri, 27 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/27/11931/</guid>
      <description> faillog・・・何回ログインをミスったか
lastlog・・・最後にログインした時間はいつか？ </description>
    </item>
    
    <item>
      <title>リダイレクトについて</title>
      <link>https://yaasita.github.io/2008/06/23/11972/</link>
      <pubDate>Mon, 23 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/23/11972/</guid>
      <description> command  hoge 2&amp;amp;amp;1
エラー出力を標準出力先と同じにするこれを使えば
$gunzip_message = qx/gunzip -f $unixtime.dat.gz 2&amp;amp;amp;1/;
↑のようにエラー出力を捕らえることも可能になる
command &amp;amp;amp; hoge
参考
http://www.fireproject.jp/feature/bash/basic/redirect-pipe.html
 </description>
    </item>
    
    <item>
      <title>aptitudeよく使うコマンドとか・・・</title>
      <link>https://yaasita.github.io/2008/06/15/12074/</link>
      <pubDate>Sun, 15 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/15/12074/</guid>
      <description> uでパッケージの一覧の更新
Uですべてのパッケージをアップグレード
あとは↓みて
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch01s01s04.html
コマンド一覧はこちら
http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/ch02s01s02.html#id2533999 </description>
    </item>
    
    <item>
      <title>Debian(etch)でcpan設定</title>
      <link>https://yaasita.github.io/2008/06/14/12155/</link>
      <pubDate>Sat, 14 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/14/12155/</guid>
      <description>まずCPANを使う上で必要なソフトは下記のとおりです。先にインストールしておきます。
gzip,tar,unzip,make,lynx,wget,ncftpget(ncftpでインストール)
#cpan
で初回起動時の設定が入る。基本的にEnterでデフォルトの設定で問題ないと思います。
The next option deals with the charset your terminal supports. In
general CPAN is English speaking territory, thus the charset does not
matter much, but some of the aliens out there who upload their
software to CPAN bear names that are outside the ASCII range. If your
terminal supports UTF-8, you say no to the next question, if it
supports ISO-8859-1 (also known as LATIN1) then you say yes, and if it</description>
    </item>
    
    <item>
      <title>シェルの環境変数で前回コマンドの終了ステータスを確認する</title>
      <link>https://yaasita.github.io/2008/06/14/12114/</link>
      <pubDate>Sat, 14 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/14/12114/</guid>
      <description> $?に入っているそうですよ
http://www.geocities.jp/geo_sunisland/exit_status.html </description>
    </item>
    
    <item>
      <title>aptitudeのよく使うコマンドとか</title>
      <link>https://yaasita.github.io/2008/06/12/12198/</link>
      <pubDate>Thu, 12 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/12/12198/</guid>
      <description> 検索時には正規表現が使えます
lで検索すると制限できていいかも・・・
~d説明
正規表現説明にパッケージ説明がマッチするパッケージにマッチします。 ~d&#34;test&#34;
みたいな感じで
検索パターン </description>
    </item>
    
    <item>
      <title>scimとgvimは相性悪いみたい</title>
      <link>https://yaasita.github.io/2008/06/08/12219/</link>
      <pubDate>Sun, 08 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/08/12219/</guid>
      <description> http://d.hatena.ne.jp/silverintegral/20071115
こんな感じでどーぞ </description>
    </item>
    
    <item>
      <title>Linux版のvim7に日本語ヘルプを入れてみる</title>
      <link>https://yaasita.github.io/2008/06/07/12261/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/07/12261/</guid>
      <description> なんかkaoriyaさんのとこに
http://www.kaoriya.net/vimdoc_j/
という日本語ヘルプがあったので落としてくるそんで解凍とかする。
解凍したものを/usr/share/vim/vim71に放り込んでも拡張子が.jaxとかなっててうまくいかない
しょうがないから拡張子を.jax→.txtにする
一括変換とかシェルスクリプトでできそうだけど分からないからPerlで書く
#!/usr/local/bin/perl
$newdir=&#34;.&#34;;
chdir $newdir or die &#34;$newdir is not found!\n&#34;;
opendir(DIR, &#34;.&#34;);
@file = readdir(DIR);
closedir(DIR);
@file = sort {(stat ($a))[8]  (stat ($b))[8]} @file;
foreach(@file){
if($_=~/^\.$|^\.\.$|^rename\.pl$/){ next;
}
if ($_=~/\.jax$/){
$moto=$_;
$_=~s/\.jax$//;
system &#34;mv $moto $_.txt&#34;;
#print &#34;$moto $_.txt\n&#34;;
}
# print $_,&#34;\n&#34;;
# `mv $moto `;
} </description>
    </item>
    
    <item>
      <title>定期的に文章をバックアップする</title>
      <link>https://yaasita.github.io/2008/06/07/12240/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/06/07/12240/</guid>
      <description> なんか大事な文章を日付順にバックアップしておきたいときに書くシェルスクリプトとか・・・
#! /bin/bash
var=`LANG=C date +&#39;%Y%m%d%a&#39;`
cp /media/taihi1/komando.txt /media/taihi1/komando-bak/$var.txt </description>
    </item>
    
    <item>
      <title>telnetのポート番号を変更したりとか・・・</title>
      <link>https://yaasita.github.io/2008/05/17/12282/</link>
      <pubDate>Sat, 17 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/17/12282/</guid>
      <description> /etc/servicesあたりかなあと
/etc/inetd.confとかも・・・ </description>
    </item>
    
    <item>
      <title>apache2にDirectoryIndexの設定項目が無い件</title>
      <link>https://yaasita.github.io/2008/05/06/12324/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12324/</guid>
      <description> /etc/apache2/mods-enabledのdir.confにあるそうです
参考リンク
http://www.maocat.jp/?p=10 </description>
    </item>
    
    <item>
      <title>expectを使って自動的にPCをシャットダウンさせる</title>
      <link>https://yaasita.github.io/2008/05/06/12303/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12303/</guid>
      <description> こんな感じで書くと良いですよ
WebからやりたいならPerlならsystem関数とかで呼べば良いんじゃないでしょうか
#!/usr/bin/expect
set timeout 10
spawn telnet 192.168.0.2
expect &#34;login:&#34;
send &#34;root\n&#34;
expect &#34;Password:&#34;
send &#34;hogehoge\n&#34;
send &#34;shutdown -h now\n&#34;
send &#34;exit\n&#34;
interact </description>
    </item>
    
    <item>
      <title>squidでユーザー認証を行う(Ubuntu8.04)</title>
      <link>https://yaasita.github.io/2008/05/06/12366/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12366/</guid>
      <description>まずhtpasswdでユーザー名とパスワードのMD5値のペアtxtを用意します。
# htpasswd -c /etc/squid/passwd hogehoge
New password:
Re-type new password: できたら↓のように指定します。
auth_param basic children は認証プロセスの為のプロセス数を指定します。
auth_param basic realm はBASIC認証時に現われるメッセージを指定します。この場合は&#34;Squid proxy-caching web server&#34;と表示されます。
auth_param basic credentialsttl はパスワードの生存時間を指定します。（HTTPアクセスヘッダに付随させるBASIC認証で生存時間があるのはよく分からないですが・・・）
auth_param basic casesensitive は大文字小文字を区別するかどうかです（多分）offなので区別します。最後にacl kusi proxy_auth REQUIREDでアクセスリストkusiを定義
ローカルネットの後にhttp_access allow kusiを入れているので
LAN内のホストなら無条件で通し、WAN側からの要求にはBASIC認証を要求します。
auth_param basic program /usr/lib/squid/ncsa_auth /etc/squid/passwd
auth_param basic children 5
auth_param basic realm Squid proxy-caching web server
auth_param basic credentialsttl 2 hours
auth_param basic casesensitive off
acl kusi proxy_auth REQUIRED
http_access allow localnet</description>
    </item>
    
    <item>
      <title>vsftpdでanonymousログインを許可させる場合の注意点</title>
      <link>https://yaasita.github.io/2008/05/06/12345/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/06/12345/</guid>
      <description> /etc/vsftpd.confを編集して
anonymous_enable=YESを追加する
↓のようにanonymousユーザーのディレクトリを決定させる
anon_root=/var/www/upload/
この時の注意点としてはパーミッションにその他ユーザが書き込めないような設定にしておくこと（これをしないとログインできない）
例：rwxr-xr-xやrwxrwxr-xなど </description>
    </item>
    
    <item>
      <title>Linuxでモジュールの確認と削除を行う</title>
      <link>https://yaasita.github.io/2008/05/04/12449/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12449/</guid>
      <description> 主にDebian系での話です
lsmod・・・ロードされているモジュールを確認（miiがNICか？）
modinfo・・・lsmodに表示されている各モジュール名を引数に取り、詳しい情報を表示する
rmmod・・・モジュールをアンロードする
insmod・・・モジュールをロードする
modprobe・・・依存関係を処理しながらロードしてくれる
/etc/modprobe.d/blacklistに項目を追加すれば再起動してもモジュールをアンロードできる
参考
http://markun.cs.shinshu-u.ac.jp/learn/linux/h_05-05.html </description>
    </item>
    
    <item>
      <title>Linuxでリッスン(Listen)してるポートの確認</title>
      <link>https://yaasita.github.io/2008/05/04/12429/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12429/</guid>
      <description> lsof -iで
でも微妙に分かりにくいので
netstat -anp | grep LISTEN | less
こんな感じで
あとは
netstat -tap
とかやって
詳しく見たい場合は
lsof -i:5900 </description>
    </item>
    
    <item>
      <title>Linux版FirefoxとWindows版Firefoxの挙動の差異</title>
      <link>https://yaasita.github.io/2008/05/04/12387/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12387/</guid>
      <description> about:configから
browser.urlbar.clickSelectsAllをtrueにすると
URLバーをクリックした際にすべて選択されます。
browser.backspace_actionを0にするとバックスペースで履歴を一つ前に辿れます。
1ならスクロールアップ。2なら何もしないです。
↓はよく設定する箇所です（Mailtoタグの無効化と検索時のbeep音の無効化）
network.protocol-handler.external.mailto
false
accessibility.typeaheadfind.soundURL
空文字列 </description>
    </item>
    
    <item>
      <title>ubuntu8.04のネットワーク設定が何かローミングモードとかなってて嫌な感じになる</title>
      <link>https://yaasita.github.io/2008/05/04/12408/</link>
      <pubDate>Sun, 04 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/04/12408/</guid>
      <description> ローミングモードを一つのNICだけ無効にしてもなんか意味ないみたい
IPアドレスも複数持てたりしちゃって嫌なので
/etc/network/interfaces
に
auto lo
iface lo inet loopback
iface eth0 inet dhcp
auto eth0
iface eth2 inet dhcp
iface eth3 inet dhcp
iface eth4 inet dhcp
と記述しておく
autoを付けなければ立ち上がらないので・・・・
前に書いたロードモジュール名をblacklistに入れる方法だと/etc/init.d/networking をリスタートかけるごとにロードされてしまうみたい </description>
    </item>
    
    <item>
      <title>Ubuntu8.04のxorg.conf設定を行う</title>
      <link>https://yaasita.github.io/2008/05/03/12469/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12469/</guid>
      <description>なんか色々自動でやってくれるのはいいけどCPU切替器を挟むと表示がおかしくなるため手動で設定する。
１.Section &#34;Screen&#34;にサブセクションを作って解像度と色深度を設定
SubSection &#34;Display&#34;
Depth 24
Modes &#34;1280x1024&#34;
EndSubSection
２.xvidtuneコマンドで位置を調整する。GUIメニューのshowボタンを押せば
&#34;1280x1024&#34; 108.00 1280 1344 1456 1688 1024 1025 1028 1066 +hsync +vsync
のようにコンソールに表示されるのでメモる。
3.Section &#34;Monitor&#34;に水平同期周波数と垂直同期周波数とさっきメモったパラメータをModeLineと共に指定する。
Section &#34;Monitor&#34;
Identifier &#34;Configured Monitor&#34;
HorizSync 31.5 - 81
VertRefresh 56 - 76
ModeLine &#34;1280x1024&#34; 108.00 1280 1344 1456 1688 1024 1025 1028 1066 +hsync +vsync
EndSection
参考リンク
http://linux.kororo.jp/cont/tips/display_tune.php
で最終的に出来上がったxorg.confが↓
Section &#34;InputDevice&#34;
Identifier &#34;Generic Keyboard&#34;
Driver &#34;kbd&#34;
Option &#34;XkbRules&#34; &#34;xorg&#34;
Option &#34;XkbModel&#34; &#34;jp106&#34;</description>
    </item>
    
    <item>
      <title>x2vncについて・・・・・</title>
      <link>https://yaasita.github.io/2008/05/03/12509/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12509/</guid>
      <description> デュアルスクリーンハック - MS-Windows と X ディスプレイをリンク
このプログラムは x2x と vncviewer の機能をマージします。 X ディスプレイを起動したマシンとメインスクリーンで VNC サーバを起動したマシン が、あたかも一つのマシンに結合された二つのディスプレイであるかのように振る舞う ことを可能にします。マウスポインタを選択した方にある画面から外すと、ポインタ がもう一つの画面に現れます。
だそうですいつか調べます </description>
    </item>
    
    <item>
      <title>Xの画面位置を調整する</title>
      <link>https://yaasita.github.io/2008/05/03/12489/</link>
      <pubDate>Sat, 03 May 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/05/03/12489/</guid>
      <description>xvidtuneコマンドからどうぞ</description>
    </item>
    
    <item>
      <title>KNOPPIXを外付けHDDなどにインストール</title>
      <link>https://yaasita.github.io/2008/04/26/12551/</link>
      <pubDate>Sat, 26 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/26/12551/</guid>
      <description> USBメモリでKNOPPIX v5.01を起動
ひろちゃん帝国　ココログ村
USB-Knoppixではじめよう
この辺を参考にどうぞ
あとfdiskでパーティションをアクティブにするのを忘れないように・・・ </description>
    </item>
    
    <item>
      <title>NTPで時刻あわせ　Linux</title>
      <link>https://yaasita.github.io/2008/04/20/12571/</link>
      <pubDate>Sun, 20 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/20/12571/</guid>
      <description> こんな感じでcronに登録しておくといいです
#!/bin/bash
ntpdate ntp.jst.mfeed.ad.jp
またハードウェアクロックとの同期も取る必要があります
ハードウェアクロックがずれていると再起動した時におかしな時間になってしまいます。
hwclock --systohc
と打てばおｋです。
hwclock
と打てば現在のハードウェアクロックを見れます
hwclock --adjust
と打てば前回の差分から進む（または遅れる）時間を計測していい感じに調整してくれます
cronとかには↓のように登録しておくといいかも
#!/bin/bash
ntpdate ntp.jst.mfeed.ad.jp  /dev/null
hwclock --adjust
hwclock --systohc </description>
    </item>
    
    <item>
      <title>squidでプロキシーサーバーを立てる</title>
      <link>https://yaasita.github.io/2008/04/13/12612/</link>
      <pubDate>Sun, 13 Apr 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/04/13/12612/</guid>
      <description> まず、
apt-get install squid
などでインストールする。
次に/etc/squid/squid.confを編集する
http_port 8080
visible_hostname 192.168.0.11
http_portで接続ポートを設定、visible_hostnameで自分自身のホスト名を設定
acl localnet src 192.168.0.0/255.255.255.0
http_access allow manager localhostの下あたりに
http_access allow localnet
forwarded_for off
アクセス元のIPを隠す
via off
viaヘッダを隠す
header_access Cache-Control deny all
キャッシュコントロールヘッダの無効化
cache_dir ufs /var/spool/squid 1500 64 1024
キャッシュディレクトリサイズの変更とか
ufs --&amp;amp;gt; なんかこれ指定しとけてきなあれ
/var/spool/squid --&amp;amp;gt; キャッシュディレクトリ
1500 --&amp;amp;gt; なんメガバイトのサイズを上限とするかこの例だと1500MB
64 --&amp;amp;gt; キャッシュディレクトリの最初の階層のフォルダ数
1024 --&amp;amp;gt; キャッシュディレクトリの2番目の階層のフォルダ数
参考
http://tech.ckme.co.jp/proxy.shtml
http://squid.robata.org/squid2.0-conf.html </description>
    </item>
    
    <item>
      <title>端末を終了しても（ログアウトしても）処理し続ける</title>
      <link>https://yaasita.github.io/2008/03/31/12653/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/31/12653/</guid>
      <description> nohupコマンドを使用します。
http://www.linux.or.jp/JM/html/gnumaniak/man1/nohup.1.html
http://itpro.nikkeibp.co.jp/article/COLUMN/20060228/231191/?ST=oss
例）
nohup nmap -sS -P0 -T2 -p 1-65000 -oN kaons.txt -r -v -sV hogehoge.info &amp;amp; nohup.txt
こんな感じで・・・&amp;amp;はエラー出力と標準出力を同じファイルに出す </description>
    </item>
    
    <item>
      <title>Linuxでスワップ頻度を調整する</title>
      <link>https://yaasita.github.io/2008/03/29/12694/</link>
      <pubDate>Sat, 29 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/29/12694/</guid>
      <description> swappinessという値を変更する。これは0～100までの値で大きいほどスワップし、
小さいほどアプリケーションに割り当てるメモリを多く取り結果スワップが減る。
現在の値を表示する（デフォルトは60）
cat /proc/sys/vm/swappiness
一時的に40に変更する（再起動後はデフォルトに戻る）
echo 40  /proc/sys/vm/swappiness
永続的に変更する
/etc/sysctl.confを編集し
vm.swappiness=40
を付け加える
その後
# sysctl -p
で適用
参考リンク
ITmediahttp://www.itmedia.co.jp/enterprise/articles/0712/10/news011_4.html

http://www.linuxmagic.org/tips02.html </description>
    </item>
    
    <item>
      <title>Apacheのautoindexモジュールが文字化けする</title>
      <link>https://yaasita.github.io/2008/03/05/12857/</link>
      <pubDate>Wed, 05 Mar 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/03/05/12857/</guid>
      <description> ApacheのautoindexはデフォルトエンコーディングでUTF-8を指定しているにも関わらず、
インデックスをリクエストしたときにレスポンスヘッダに
charset=ISO-8859-1
が付いてしまいます。
回避するためにはautoindexのconfのIndexOptionsに
Charset=UTF-8
を追加します。 </description>
    </item>
    
    <item>
      <title>Debian(etch)の日本語環境設定</title>
      <link>https://yaasita.github.io/2008/02/18/12901/</link>
      <pubDate>Mon, 18 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/18/12901/</guid>
      <description> $ sudo dpkg-reconfigure locales
こんな感じでおｋ簡単ですね
参考リンク
http://wiki.debian.org/JapaneseEnvironment </description>
    </item>
    
    <item>
      <title>x11vncよく使いそうなオプション（追加）</title>
      <link>https://yaasita.github.io/2008/02/13/12921/</link>
      <pubDate>Wed, 13 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/13/12921/</guid>
      <description> 前回の他に見つけた良く使いそうなオプション
-allow
リモートアクセスを許可するホストを設定する。
例）192.168.0.5からだけアクセスを許可する
-allow 192.168.0.5
例）192.168.0.0/24からのアクセスを許可する
-allow 192.168.0.
-nopw
パスワードファイルが無くても警告を出さない
＊その他のx11vnc関連の投稿
x11vnc端末から実行した際に出るエラー出力が邪魔
x11vncの設定を保存するには 
Ubuntu7.04 にx11vncをインストールする  </description>
    </item>
    
    <item>
      <title>x11vnc端末から実行した際に出るエラー出力が邪魔</title>
      <link>https://yaasita.github.io/2008/02/13/12942/</link>
      <pubDate>Wed, 13 Feb 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/02/13/12942/</guid>
      <description> ~$ x11vnc &amp;amp;amp; /dev/null &amp;amp;amp;
こんな感じでnullへ捨てる。最後の&amp;amp;amp;はバックグラウンドで実行するという意味。 </description>
    </item>
    
    <item>
      <title>ProxomitronをLinuxで・・・</title>
      <link>https://yaasita.github.io/2008/01/07/13004/</link>
      <pubDate>Mon, 07 Jan 2008 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2008/01/07/13004/</guid>
      <description> １．wineで動かす
２．Privoxyで頑張る </description>
    </item>
    
    <item>
      <title>Linuxでメモリの使用状況を把握する</title>
      <link>https://yaasita.github.io/2007/12/25/13066/</link>
      <pubDate>Tue, 25 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/25/13066/</guid>
      <description> free
vmstat
cat /proc/meminfo
cat /proc/swaps
などなど・・・ </description>
    </item>
    
    <item>
      <title>Linuxでパーティションのアクティブフラグをセットするには</title>
      <link>https://yaasita.github.io/2007/12/11/13086/</link>
      <pubDate>Tue, 11 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/11/13086/</guid>
      <description> # sfdisk -A1 /dev/hda
hdaのパーティション1番をアクティブにし、他のアクティブフラグを削除する。 </description>
    </item>
    
    <item>
      <title>GRUBをUSBメモリにインストールする</title>
      <link>https://yaasita.github.io/2007/12/10/13107/</link>
      <pubDate>Mon, 10 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/10/13107/</guid>
      <description>まず、パーティションを切るFATでフォーマットしアクティブフラグをセットする。
mkdir /mnt/usb/grub cp /boot/grub/stage* /boot/grub/fat_stage1_5 /mnt/usb/grub/ umount /mnt/usb  とし
grub grub&amp;gt; device (hd0) /dev/sda grub&amp;gt; root (hd0,0) grub&amp;gt; setup (hd0) grub&amp;gt; quit  と入力する。（USBメモリを/dev/sdaとする）
参考リンク
 http://opentechpress.jp/developer/article.pl?sid=07/06/18/0135208&amp;amp;amp;pagenum=3 http://d.hatena.ne.jp/kamopapa/20071118  </description>
    </item>
    
    <item>
      <title>mkfs,fdisk,parted,mkswap使い方</title>
      <link>https://yaasita.github.io/2007/12/10/13106/</link>
      <pubDate>Mon, 10 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/10/13106/</guid>
      <description>fdisk パーティションの切り直しにはfdiskを使います。
例えば、/dev/sdaのパーティションを編集するとします
fdisk /dev/sda  で起動
Command (m for help):  と表示されます。
pでパーティションテーブルの表示
dを押して次にパーティション番号を入力してパーティションの削除
nで新しいパーティションの作成
tでパーティションタイプの編集（FAT32のパーティションタイプは0b）
lでパーティションタイプ一覧表示
wで編集したパーティションを書き込み終了
aでブートフラグの設定
参考リンク  swapパーティションの作成 パーティションタイプ一覧  parted fdiskの機能に加えてパーティションのリサイズが行えます。
# parted /dev/sda  のように起動します
(parted)  と表示されます。
printでパーティションテーブルの表示
resize 番号　でパーティションのリサイズ
例）/dev/sda上のswapパーティションを縮小する
# parted /dev/sda GNU Parted 1.7.1 Using /dev/sda Welcome to GNU Parted! Type &#39;help&#39; to view a list of commands. (parted) print Disk /dev/sda: 4326MB Sector size (logical/physical): 512B/512B Partition Table: msdos Number Start End Size Type File system Flags 1 32.</description>
    </item>
    
    <item>
      <title>DebianでFNW-3600-Tを使うとインターフェイスが落ちる問題</title>
      <link>https://yaasita.github.io/2007/12/05/13168/</link>
      <pubDate>Wed, 05 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/05/13168/</guid>
      <description>PLANEXのFNW-3600-Tを使用している際にインターフェイスが勝手にリブートする問題があります。dmesgを見ると以下のようなログが確認できます。

eth0: NE2000 (DL10019 rev 05): io 0x300, irq 3, hw_addr 00:E0:98:00:BE:63
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected
eth0: no IPv6 routers present
eth0: lost link beat
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected
eth0: lost link beat
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected
eth0: lost link beat
eth0: interrupt(s) dropped!
eth0: found link beat
eth0: autonegotiation complete: 100baseT-FD selected</description>
    </item>
    
    <item>
      <title>Debianにnslookupが無い件</title>
      <link>https://yaasita.github.io/2007/12/01/13209/</link>
      <pubDate>Sat, 01 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/01/13209/</guid>
      <description>#apt-get install dnsutils</description>
    </item>
    
    <item>
      <title>Debianコマンドラインからのパッケージアップデート</title>
      <link>https://yaasita.github.io/2007/12/01/13189/</link>
      <pubDate>Sat, 01 Dec 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/12/01/13189/</guid>
      <description> # apt-get update
新しいパッケージリストの取得
# apt-get upgrade -s アップデートされるパッケージの確認
# apt-get upgrade アップグレードの適用 </description>
    </item>
    
    <item>
      <title>Debian(etch)にtelnetdをインストール</title>
      <link>https://yaasita.github.io/2007/11/30/13249/</link>
      <pubDate>Fri, 30 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/30/13249/</guid>
      <description> apt-get install telnetd
その後
/etc/init.d/openbsd-inetd start
で起動します。
telnetでのrootログインを許可したいなら
/etc/pam.d/login
にある
auth required/lib/security/pam_securetty.so
Debian Lennyの場合は
auth [success=ok ignore=ignore user_unknown=ignore default=die] pam_securetty.so
をコメントアウトしてください
また動いているプロセスは/usr/sbin/inetdです
参考
http://www.itmedia.co.jp/help/tips/linux/l0370.html </description>
    </item>
    
    <item>
      <title>rep2をLinuxにインストール</title>
      <link>https://yaasita.github.io/2007/11/25/13311/</link>
      <pubDate>Sun, 25 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/25/13311/</guid>
      <description>インストール 公式サイトからrep2をダウンロード
以下パッケージのインストール
apt-get install php5 php-http-request php5-gd php-pear php-compat  ※公式にはこう書いてある
 aptitude install apache2-mpm-prefork php5 php-pear php-compat php-http-request php-pager php-file php5-curl curl unzip
 必要なpearパッケージも
pear install Net_UserAgent_Mobile  ※なかったらpear search Net_UserAgent_Mobileとかで検索してみる
リポジトリにPHP_Compatが無かった場合は追加で以下のコマンド
pear install PHP_Compat  それ以外は公式サイト見てやる
公式サイトの説明文
  サーバを立ち上げて、PHPが動くようにする。PEARも忘れずに（下記参照） rep2ディレクトリをサーバからアクセスできる所（「~/Sites」とか）へ置く。 rep2ディレクトリの中にデータ保存用のディレクトリを作成する。（デフォルトでは「data」ディレクトリ） データ保存用ディレクトリのパーミッションを「707」（または777）にする。 必要に応じて、 conf/conf_admin.inc.php などのconfファイルをテキストエディタで開いて設定編集。 ブラウザから、
http://127.0.0.1/~(ユーザ名)/rep2/index.php
てな具合にrep2ディレクトリへアクセス。  ※PHPが確かに動いていることを確かめたい時は？
http://127.0.0.1/~(ユーザ名)/rep2/phpinfo.php
てなとこにアクセスしてみて下さい。
ずらずらーっとPHPの環境情報が表示されたならば、PHPは正常に動作しています。
（確認ができましたら、phpinfo.php はもう必要ないので削除しても構いません）
これで動くはずです。動かなかった場合はエラーを見て判断してください。
 設定 conf/conf_hostcheck.php
を編集してグローバルIP側からの接続でもrep2を利用できるようにします。
29行目付近 customを1に設定
// ユーザー設定 &#39;custom&#39; =&amp;gt; 1,  36行目付近を以下のように設定</description>
    </item>
    
    <item>
      <title>x11vncの設定を保存するには</title>
      <link>https://yaasita.github.io/2007/11/18/13354/</link>
      <pubDate>Sun, 18 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/18/13354/</guid>
      <description> 前回の設定では長いオプションをいちいち入力する必要がありましたが
rcファイルを作りオプションを保存することができます。
設定ファイルは~/.x11vncrcとして保存します。
前回の設定を保存するなら
-forever
-rfbauth /home/hogehoge/.vnc/passwd
-rfbport 5000
-display :00
のように書いて保存します。#を入れるとそれ以降の文字はコメントとして扱われます。
もし.x11vncrcを読み込みたくないなら
-norc
オプションを付けて下さい。 </description>
    </item>
    
    <item>
      <title>Linuxでビープ音を消す</title>
      <link>https://yaasita.github.io/2007/11/17/13375/</link>
      <pubDate>Sat, 17 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/17/13375/</guid>
      <description> コンソールを含めて、いかなる場合もビープ音を鳴らしたくない場合は、次のコマンドを実行します。
$ sudo rmmod pcspkr
再起動後もビープ音を鳴らしたくなければ、/etc/modprobe.d/blacklistに次の行を加えます。

blacklist pcspkr
だそうです
https://wiki.ubuntulinux.jp/UbuntuTips/Hardware/StopBeepSound </description>
    </item>
    
    <item>
      <title>中国系P2Pテレビを視聴するには？</title>
      <link>https://yaasita.github.io/2007/11/12/13395/</link>
      <pubDate>Mon, 12 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/12/13395/</guid>
      <description> https://wiki.ubuntulinux.jp/UbuntuTips/Application/P2Ptv </description>
    </item>
    
    <item>
      <title>ubuntu7.10にApache2を入れる</title>
      <link>https://yaasita.github.io/2007/11/11/13417/</link>
      <pubDate>Sun, 11 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/11/13417/</guid>
      <description> ファイル名が日本語の場合、Indexが文字化けする場合は/etc/apache2/conf.d/charset をUTF-8がデフォルトになるように書き換える。
Indexの細かい指定は/etc/apache2/mods-available/autoindex.conf で設定する。 </description>
    </item>
    
    <item>
      <title>Ubuntu7.10に制限付きドライバをインストールする</title>
      <link>https://yaasita.github.io/2007/11/04/13438/</link>
      <pubDate>Sun, 04 Nov 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/11/04/13438/</guid>
      <description> http://albertomilone.com/nvidia_scripts1.html
↑のリンクからenvy_0.9.8-0ubuntu10_all.debをダウンロード
⇒実行してインストール
Ctrl+Alt+F1を押してコンソールにする⇒envyと打ってドライバのインストール </description>
    </item>
    
    <item>
      <title>kxmameでLinuxでもアーケードゲームを遊ぶ</title>
      <link>https://yaasita.github.io/2007/10/29/13480/</link>
      <pubDate>Mon, 29 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/29/13480/</guid>
      <description> ubuntuのaptでインストールしたら
アプリケーションー＞ゲームー＞kxmameを選択して起動
その後
Settings-Directoriesを選択して
そこら辺のタブにある
/usr/lib/games/xmameを
/usr/share/games/xmameに変える
次にFileー＞Propertiesから
Controllersを選んで
ジョイスティックデバイスを/dev/input/js0にする。
ROMイメージはzipのままで解凍しないでおく。ROMイメージ場所の設定はSettings-Directories...からMame/Mess basic pathタブの Mame ROMS path:で指定する。
ゲームを起動したらTabで諸々の設定ができる。
ROMは下記サイトで探す
http://www.romnation.net/srv/roms/mame.html </description>
    </item>
    
    <item>
      <title>Linuxで動画編集</title>
      <link>https://yaasita.github.io/2007/10/13/13645/</link>
      <pubDate>Sat, 13 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/13/13645/</guid>
      <description> kino
AviDemux
FFmpeg
など。。。。
 </description>
    </item>
    
    <item>
      <title>Linuxでマイク入力から録音する</title>
      <link>https://yaasita.github.io/2007/10/05/13706/</link>
      <pubDate>Fri, 05 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/05/13706/</guid>
      <description>Audacity
http://www.xucker.jpn.org/pc/audacity/record.html
あとaumixが必要</description>
    </item>
    
    <item>
      <title>Ubuntuプリンタ共有設定</title>
      <link>https://yaasita.github.io/2007/10/02/13727/</link>
      <pubDate>Tue, 02 Oct 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/10/02/13727/</guid>
      <description> Ubuntuのメニューから
システム＞システム管理＞プリンタを選択
全般の設定＞LANプリンタの検出、共有プリンタにチェック
Windows側では
たとえばHOGEというホスト名、DeskJet_955Cだと
\\HOGE\DeskJet_955Cです
で指定してあとはドライバ設定で終わりです
/etc/cups/に設定ファイルがあります
/etc/init.d/cupsys restartでリスタートします </description>
    </item>
    
    <item>
      <title>Ubuntu7.04 にx11vncをインストールする</title>
      <link>https://yaasita.github.io/2007/09/22/13850/</link>
      <pubDate>Sat, 22 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/22/13850/</guid>
      <description> Ubuntuに標準にインストールされているvinoはGUIで設定が行えて、手軽で良いのですがポートの変更など細かい設定が出来ません。そこでx11vncを使ってみます。
まずaptでx11vncをインストールします。
インストールしたら
$ x11vnc -storepasswd を実行してパスワードファイルを作ります。実行すると ~/.vnc/passwdにパスワードファイルが作成されます。
次に、vncサーバーを起動させます。
$ x11vnc -forever -rfbauth ~/.vnc/passwd -rfbport 5000 -display :0.0各オプションの説明は以下の通りです。
-forever このオプションを付けないと誰かがVNCサーバーに接続し、切断した後に自動的にx11vncが終了してしまいます。
-rfbauth　このオプションの後に作成したpasswdファイルまでのパスを記述します。
-rfbport　VNCサーバーが待ち受けるポート番号を指定します。デフォルトは5900番です。
-display　このオプションの後に端末番号を指定します。端末番号はwhoコマンドなどで確認できます。
他にも下記のオプションがあります。
-viewonly クライアントには画面を見せるだけでキーボード、マウスによる入力を受け付けません。
x11vncは接続までの時間はvinoより長い気がしますが、ウィンドリサイズ時や処理を行っている際にマウスポインタが変形するところまで再現できるので接続した後はvinoよりも使い勝手が良いと思います。
自動起動させる場合は~/.vnc/passwdをフルパスにして（例：/home/hoge/.vnc/passwd）gnomeのシステム＞セッションのところから登録してください。 </description>
    </item>
    
    <item>
      <title>ActivePerlとLinuxのPerlで挙動が違う</title>
      <link>https://yaasita.github.io/2007/09/16/13892/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/09/16/13892/</guid>
      <description> ブロードキャストアドレスを指定したsend関数で挙動の違いがあります。
たとえばUDPパケットを送ろうと、次のようなsocketを作ります。
socket(SOCKET, PF_INET, SOCK_DGRAM, 0) ;
そして次のように送ろうとします。
send(SOCKET, $data, 0, $sock_addr) ;この時もし$sock_addrがブロードキャスアドレスだった場合
WindowsのActivePerlなら問題なくブロードキャストできます。
LinuxのPerlだった場合はSocketの生成後に
setsockopt(SOCKET, SOL_SOCKET, SO_BROADCAST,1) ;としてソケットオプションSO_BROADCASTを指定しなければエラーを返し、送信できません。
ソケットについては以下を参照して下さい。
Socket(2)
Socket(7) </description>
    </item>
    
    <item>
      <title>MACアドレスを任意のものに変える</title>
      <link>https://yaasita.github.io/2007/08/15/14036/</link>
      <pubDate>Wed, 15 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/15/14036/</guid>
      <description> WindowsXPでは
コントロールパネル→システム→ハードウェアタブのデバイスマネージャをクリック
→ネットワークアダプタの項を展開し変更するNICを選び右クリック→プロパティ
→詳細設定タブのNetworkaddressをクリックし変更する。
（NICによっては使用できないかもしれません）
Linuxでは
ifconfig LANインタフェース名 hw ether MACアドレス
例）
# ifdown eth0
# ifconfig eth1 hw ether aa:aa:aa:aa:aa:aa
# ifup eth0 </description>
    </item>
    
    <item>
      <title>Beryl,Compiz環境でGNOME付箋紙をクリックするとデスクが回ってしまう</title>
      <link>https://yaasita.github.io/2007/08/09/14100/</link>
      <pubDate>Thu, 09 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/09/14100/</guid>
      <description>
 function callback(data){ var photos = data.response.posts[0].photos; document.getElementById(&#34;tumblr-img&#34;).parentNode.href = photos[0].original_size.url; for(var i=0;i </description>
    </item>
    
    <item>
      <title>sshの認証ログの名前がFedora4とDebianだと違う</title>
      <link>https://yaasita.github.io/2007/08/04/14204/</link>
      <pubDate>Sat, 04 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/04/14204/</guid>
      <description> Fedora4→/var/log/messages
Debian→/var/log/auth.log </description>
    </item>
    
    <item>
      <title>vimの検索について</title>
      <link>https://yaasita.github.io/2007/08/03/14244/</link>
      <pubDate>Fri, 03 Aug 2007 00:00:00 +0900</pubDate>
      
      <guid>https://yaasita.github.io/2007/08/03/14244/</guid>
      <description> 対象単語の上にカーソルを置いて * を押すとその単語を前方検索します。
# は後方検索です。
最後に検索した文字列をhogeとします。ファイル中に含まれるhogeをhageに変えたい場合は
:%s//hage/gと省略できます。（意味は:%s/hoge/hage/g）
つまり:s/{pattern}/{string}/の{pattern}を省略した場合、最後に検索した
文字列になります。
検索履歴はq/で見れます。 </description>
    </item>
    
  </channel>
</rss>